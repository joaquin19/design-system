{"ast":null,"code":"import PathNode from './path-node';\nimport renderAllAttr from './utils/render-all-attributes';\nimport { htmlEncode } from '../common';\n\nclass ImageNode extends PathNode {\n  geometryChange() {\n    this.allAttr(this.mapPosition());\n    this.invalidate();\n  }\n\n  optionsChange(e) {\n    if (e.field === \"src\") {\n      this.allAttr(this.mapSource());\n    }\n\n    super.optionsChange(e);\n  }\n\n  mapPosition() {\n    const rect = this.srcElement.rect();\n    const tl = rect.topLeft();\n    return [[\"x\", tl.x], [\"y\", tl.y], [\"width\", rect.width() + \"px\"], [\"height\", rect.height() + \"px\"]];\n  }\n\n  renderPosition() {\n    return renderAllAttr(this.mapPosition());\n  }\n\n  mapSource(encode) {\n    let src = this.srcElement.src();\n\n    if (encode) {\n      src = htmlEncode(src);\n    }\n\n    return [[\"xlink:href\", src]];\n  }\n\n  renderSource() {\n    return renderAllAttr(this.mapSource(true));\n  }\n\n  template() {\n    return `<image preserveAspectRatio='none' ${this.renderId()} ${this.renderStyle()} ${this.renderTransform()} ${this.renderOpacity()}` + `${this.renderPosition()} ${this.renderSource()} ${this.renderDefinitions()}>` + `</image>`;\n  }\n\n}\n\nexport default ImageNode;","map":null,"metadata":{},"sourceType":"module"}