{"ast":null,"code":"import Matrix from '../geometry/matrix';\nconst matrixRegexp = /matrix\\((.*)\\)/;\n\nfunction parseMatrix(matrixString) {\n  const match = matrixString.match(matrixRegexp);\n\n  if (match === null || match.length !== 2) {\n    return Matrix.unit();\n  }\n\n  const members = match[1].split(',').map(x => parseFloat(x));\n  return new Matrix(...members);\n}\n\nfunction transformMatrix(element) {\n  const transform = getComputedStyle(element).transform;\n\n  if (transform === 'none') {\n    return Matrix.unit();\n  }\n\n  return parseMatrix(transform);\n}\n\nexport default function elementScale(element) {\n  if (!element) {\n    return Matrix.unit();\n  }\n\n  let matrix = transformMatrix(element);\n  let parent = element.parentElement;\n\n  while (parent) {\n    const parentMatrix = transformMatrix(parent);\n    matrix = matrix.multiplyCopy(parentMatrix);\n    parent = parent.parentElement;\n  }\n\n  matrix.b = matrix.c = matrix.e = matrix.f = 0;\n  return matrix;\n}","map":null,"metadata":{},"sourceType":"module"}