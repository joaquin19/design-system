{"ast":null,"code":"import withPoints from '../mixins/with-points';\nimport Point from '../geometry/point';\nimport Gradient from './gradient';\nimport { defined } from '../util';\n\nclass RadialGradient extends withPoints(Gradient, [\"center\"]) {\n  constructor(options = {}) {\n    super(options);\n    this.center(options.center || new Point());\n    this._radius = defined(options.radius) ? options.radius : 1;\n    this._fallbackFill = options.fallbackFill;\n  }\n\n  radius(value) {\n    if (defined(value)) {\n      this._radius = value;\n      this.geometryChange();\n      return this;\n    }\n\n    return this._radius;\n  }\n\n  fallbackFill(value) {\n    if (defined(value)) {\n      this._fallbackFill = value;\n      this.optionsChange();\n      return this;\n    }\n\n    return this._fallbackFill;\n  }\n\n}\n\nexport default RadialGradient;","map":null,"metadata":{},"sourceType":"module"}