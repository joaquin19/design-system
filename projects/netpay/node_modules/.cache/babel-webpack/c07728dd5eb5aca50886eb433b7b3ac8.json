{"ast":null,"code":"import { getZoneRules } from './get-zone';\nimport { formatMessage, NO_TZ_INFO } from '../errors';\n/**\n * @hidden\n *\n * A function that finds zone rules which become applicable after specific time.\n */\n\nexport const findZone = (timezone, utcTime = new Date().getTime()) => {\n  if (timezone === 'Etc/UTC' || timezone === 'Etc/GMT') {\n    return [0, \"-\", \"UTC\", null];\n  }\n\n  const zoneRules = getZoneRules(timezone);\n  let idx = zoneRules.length - 1;\n\n  for (; idx >= 0; idx--) {\n    const until = zoneRules[idx][3];\n\n    if (until && utcTime > until) {\n      break;\n    }\n  }\n\n  const zone = zoneRules[idx + 1];\n\n  if (!zone) {\n    throw new Error(formatMessage(NO_TZ_INFO, timezone));\n  }\n\n  return zone;\n};","map":null,"metadata":{},"sourceType":"module"}