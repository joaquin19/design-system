{"ast":null,"code":"import { timezones } from './timezones';\nimport { formatMessage, NO_TZ_INFO } from '../errors';\n/**\n * @hidden\n *\n * A function that gets all zone rules for a specific zone.\n *\n * @param timezone - The timezone name. For example, `America/Chicago`, `Europe/Sofia`.\n *\n * @return - Returns all zone rules for the specific zone name.\n *\n * @example\n * ```ts-no-run\n * findZone('Europe/Sofia'); //[[-120,\"E-Eur\",\"EE%sT\",883526400000], [-120,\"EU\",\"EE%sT\",null]]\n * ```\n */\n\nexport const getZoneRules = timezone => {\n  const zones = timezones.zones;\n\n  if (!zones) {\n    throw new Error(formatMessage(NO_TZ_INFO, timezone));\n  }\n\n  const zoneRules = zones[timezone];\n  const result = typeof zoneRules === \"string\" ? zones[zoneRules] : zoneRules;\n\n  if (!result) {\n    throw new Error(formatMessage(NO_TZ_INFO, timezone));\n  }\n\n  return result;\n};","map":null,"metadata":{},"sourceType":"module"}