{"ast":null,"code":"import { Class, logToConsole } from './common';\nimport SVGSurface from './svg/surface';\nimport CanvasSurface from './canvas/surface';\nlet instance;\nlet support;\n\nconst hasDocument = () => typeof document !== \"undefined\";\n\nconst supportsCanvas = () => hasDocument() && document.createElement(\"canvas\").getContext;\n\nconst supportsSVG = () => hasDocument() && document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\");\n\nclass SurfaceFactory extends Class {\n  static get support() {\n    if (!support) {\n      support = {\n        canvas: supportsCanvas(),\n        svg: supportsSVG()\n      };\n    }\n\n    return support;\n  }\n\n  static get current() {\n    if (!instance) {\n      instance = new SurfaceFactory();\n    }\n\n    return instance;\n  }\n\n  constructor() {\n    super();\n    this._items = [{\n      name: \"svg\",\n      type: SVGSurface\n    }, {\n      name: \"canvas\",\n      type: CanvasSurface\n    }];\n  }\n\n  create(element, options) {\n    const items = this._items;\n    let match = items[0];\n\n    if (options && options.type) {\n      const preferred = options.type.toLowerCase();\n\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].name === preferred) {\n          match = items[i];\n          break;\n        }\n      }\n    }\n\n    if (match) {\n      return new match.type(element, options);\n    }\n\n    logToConsole(\"Warning: Unable to create Kendo UI Drawing Surface. Possible causes:\\n\" + `- The browser does not support SVG and Canvas. User agent: ${navigator.userAgent}`);\n  }\n\n}\n\nexport default SurfaceFactory;","map":null,"metadata":{},"sourceType":"module"}