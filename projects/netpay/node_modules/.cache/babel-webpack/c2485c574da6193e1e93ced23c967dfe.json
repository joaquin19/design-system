{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { __decorate, __param, __metadata } from 'tslib';\nimport { Directive, Optional, TemplateRef, Input, Component, ContentChild, ElementRef, NgModule } from '@angular/core';\nimport { drawDOM, exportPDF } from '@progress/kendo-drawing';\nimport { saveAs } from '@progress/kendo-file-saver';\nimport { validatePackage } from '@progress/kendo-licensing';\n/**\n * @hidden\n */\n\nimport * as ɵngcc0 from '@angular/core';\nconst _c0 = [\"*\"];\nconst packageMetadata = {\n  name: '@progress/kendo-angular-pdf-export',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1620215018,\n  version: '',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n};\nlet PDFExportTemplateDirective = /*#__PURE__*/(() => {\n  let PDFExportTemplateDirective = class PDFExportTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  PDFExportTemplateDirective.ɵfac = function PDFExportTemplateDirective_Factory(t) {\n    return new (t || PDFExportTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  PDFExportTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: PDFExportTemplateDirective,\n    selectors: [[\"\", \"kendoPDFTemplate\", \"\"]]\n  });\n  PDFExportTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], PDFExportTemplateDirective);\n  return PDFExportTemplateDirective;\n})();\nconst FIELDS = ['bottom', 'left', 'right', 'top'];\n/**\n * Represents the Kendo UI PDFMargin component for Angular.\n */\n\nlet PDFExportMarginComponent = /*#__PURE__*/(() => {\n  let PDFExportMarginComponent = class PDFExportMarginComponent {\n    /**\n     * @hidden\n     */\n    get options() {\n      const options = {};\n\n      for (let idx = 0; idx < FIELDS.length; idx++) {\n        const field = FIELDS[idx];\n        const value = this[field];\n\n        if (typeof value !== 'undefined') {\n          options[field] = value;\n        }\n      }\n\n      return options;\n    }\n\n  };\n\n  PDFExportMarginComponent.ɵfac = function PDFExportMarginComponent_Factory(t) {\n    return new (t || PDFExportMarginComponent)();\n  };\n\n  PDFExportMarginComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PDFExportMarginComponent,\n    selectors: [[\"kendo-pdf-export-margin\"]],\n    inputs: {\n      left: \"left\",\n      top: \"top\",\n      right: \"right\",\n      bottom: \"bottom\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function PDFExportMarginComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], PDFExportMarginComponent.prototype, \"left\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], PDFExportMarginComponent.prototype, \"top\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], PDFExportMarginComponent.prototype, \"right\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], PDFExportMarginComponent.prototype, \"bottom\", void 0);\n  /**\n   * @hidden\n   */\n\n\n  return PDFExportMarginComponent;\n})();\n\nconst compileTemplate = templateRef => {\n  const context = {};\n  let embeddedView = templateRef.createEmbeddedView(context);\n\n  const result = data => {\n    Object.assign(context, data);\n    embeddedView.detectChanges();\n    const templateWrap = document.createElement('span');\n    embeddedView.rootNodes.forEach(rootNode => {\n      templateWrap.appendChild(rootNode.cloneNode(true));\n    });\n    return templateWrap;\n  };\n\n  result.destroy = () => {\n    embeddedView.destroy();\n    embeddedView = null;\n  };\n\n  return result;\n};\n/**\n * Represents the [Kendo UI PDF Export component for Angular]({% slug overview_pdfexport %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *     <div class=\"example-config\">\n *       <button class=\"k-button\" (click)=\"pdf.saveAs('document.pdf')\">\n *         Save As PDF...\n *       </button>\n *     </div>\n *\n *     <kendo-pdf-export #pdf paperSize=\"A4\" margin=\"2cm\">\n *       Content goes here\n *     </kendo-pdf-export>\n *   `\n * })\n * export class AppComponent {\n * }\n * ```\n */\n\n\nlet PDFExportComponent = /*#__PURE__*/(() => {\n  let PDFExportComponent = class PDFExportComponent {\n    constructor(element) {\n      this.element = element;\n      /**\n       * The creator of the PDF document.\n       * @default \"Kendo UI PDF Generator\"\n       */\n\n      this.creator = 'Kendo UI PDF Generator';\n      /**\n       * Specifies the name of the exported PDF file.\n       * @default \"Export.pdf\"\n       */\n\n      this.fileName = 'export.pdf';\n      validatePackage(packageMetadata);\n    }\n\n    get drawMargin() {\n      const marginComponent = this.marginComponent;\n      let margin = this.margin;\n\n      if (marginComponent) {\n        margin = Object.assign(margin || {}, marginComponent.options);\n      }\n\n      return margin;\n    }\n    /**\n     * Saves the content as a PDF file with the specified name.\n     * @param fileName - The name of the exported file.\n     */\n\n\n    saveAs(fileName = this.fileName) {\n      this.save(this.element.nativeElement, fileName);\n    }\n    /**\n     * Exports the content as a `Group` for further processing.\n     *\n     * @return - The root group of the exported scene.\n     */\n\n\n    export() {\n      return this.exportElement(this.element.nativeElement);\n    }\n\n    save(element, fileName) {\n      this.exportElement(element).then(group => this.exportGroup(group, this.pdfOptions())).then(dataUri => this.saveDataUri(dataUri, fileName, this.saveOptions()));\n    }\n\n    exportElement(element) {\n      const promise = this.drawElement(element, this.drawOptions());\n      const cleanup = this.cleanup.bind(this);\n      promise.then(cleanup, cleanup);\n      return promise;\n    }\n\n    cleanup() {\n      if (this.pageTemplate) {\n        this.pageTemplate.destroy();\n        delete this.pageTemplate;\n      }\n    }\n\n    drawOptions() {\n      if (this.pageTemplateDirective) {\n        this.pageTemplate = compileTemplate(this.pageTemplateDirective.templateRef);\n      }\n\n      return {\n        avoidLinks: this.avoidLinks,\n        forcePageBreak: this.forcePageBreak,\n        keepTogether: this.keepTogether,\n        margin: this.drawMargin,\n        paperSize: this.paperSize,\n        landscape: this.landscape,\n        repeatHeaders: this.repeatHeaders,\n        scale: this.scale,\n        template: this.pageTemplate\n      };\n    }\n\n    pdfOptions() {\n      return {\n        autoPrint: this.autoPrint,\n        author: this.author,\n        creator: this.creator,\n        date: this.date,\n        imgDPI: this.imageResolution,\n        keywords: this.keywords,\n        landscape: this.landscape,\n        margin: this.drawMargin,\n        multiPage: true,\n        paperSize: this.paperSize,\n        producer: this.producer,\n        subject: this.subject,\n        title: this.title\n      };\n    }\n\n    saveOptions() {\n      return {\n        forceProxy: this.forceProxy,\n        proxyData: this.proxyData,\n        proxyTarget: this.proxyTarget,\n        proxyURL: this.proxyURL\n      };\n    }\n\n    drawElement(element, options) {\n      return drawDOM(element, options);\n    }\n\n    exportGroup(group, options) {\n      return exportPDF(group, options);\n    }\n\n    saveDataUri(dataUri, fileName, options) {\n      saveAs(dataUri, fileName, options);\n    }\n\n  };\n\n  PDFExportComponent.ɵfac = function PDFExportComponent_Factory(t) {\n    return new (t || PDFExportComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  PDFExportComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PDFExportComponent,\n    selectors: [[\"kendo-pdf-export\"]],\n    contentQueries: function PDFExportComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, PDFExportTemplateDirective, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, PDFExportMarginComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.pageTemplateDirective = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.marginComponent = _t.first);\n      }\n    },\n    inputs: {\n      creator: \"creator\",\n      fileName: \"fileName\",\n      autoPrint: \"autoPrint\",\n      author: \"author\",\n      avoidLinks: \"avoidLinks\",\n      forcePageBreak: \"forcePageBreak\",\n      keepTogether: \"keepTogether\",\n      date: \"date\",\n      imageResolution: \"imageResolution\",\n      forceProxy: \"forceProxy\",\n      keywords: \"keywords\",\n      landscape: \"landscape\",\n      margin: \"margin\",\n      paperSize: \"paperSize\",\n      repeatHeaders: \"repeatHeaders\",\n      scale: \"scale\",\n      proxyData: \"proxyData\",\n      proxyURL: \"proxyURL\",\n      proxyTarget: \"proxyTarget\",\n      producer: \"producer\",\n      subject: \"subject\",\n      title: \"title\"\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 0,\n    template: function PDFExportComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], PDFExportComponent.prototype, \"autoPrint\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], PDFExportComponent.prototype, \"author\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], PDFExportComponent.prototype, \"avoidLinks\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], PDFExportComponent.prototype, \"forcePageBreak\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], PDFExportComponent.prototype, \"keepTogether\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], PDFExportComponent.prototype, \"creator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Date)], PDFExportComponent.prototype, \"date\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], PDFExportComponent.prototype, \"imageResolution\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], PDFExportComponent.prototype, \"fileName\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], PDFExportComponent.prototype, \"forceProxy\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], PDFExportComponent.prototype, \"keywords\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], PDFExportComponent.prototype, \"landscape\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], PDFExportComponent.prototype, \"margin\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], PDFExportComponent.prototype, \"paperSize\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], PDFExportComponent.prototype, \"repeatHeaders\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], PDFExportComponent.prototype, \"scale\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], PDFExportComponent.prototype, \"proxyData\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], PDFExportComponent.prototype, \"proxyURL\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], PDFExportComponent.prototype, \"proxyTarget\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], PDFExportComponent.prototype, \"producer\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], PDFExportComponent.prototype, \"subject\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], PDFExportComponent.prototype, \"title\", void 0);\n\n  __decorate([ContentChild(PDFExportTemplateDirective, {\n    static: false\n  }), __metadata(\"design:type\", PDFExportTemplateDirective)], PDFExportComponent.prototype, \"pageTemplateDirective\", void 0);\n\n  __decorate([ContentChild(PDFExportMarginComponent, {\n    static: false\n  }), __metadata(\"design:type\", PDFExportMarginComponent)], PDFExportComponent.prototype, \"marginComponent\", void 0);\n\n  PDFExportComponent = __decorate([__metadata(\"design:paramtypes\", [ElementRef])], PDFExportComponent);\n  return PDFExportComponent;\n})();\nconst COMPONENT_DIRECTIVES = [PDFExportComponent, PDFExportMarginComponent, PDFExportTemplateDirective];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }}) definition for the PDF Export directive.\n */\n\nlet PDFExportModule = /*#__PURE__*/(() => {\n  let PDFExportModule = class PDFExportModule {};\n\n  PDFExportModule.ɵfac = function PDFExportModule_Factory(t) {\n    return new (t || PDFExportModule)();\n  };\n\n  PDFExportModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: PDFExportModule\n  });\n  PDFExportModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return PDFExportModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PDFExportModule, {\n    declarations: [PDFExportComponent, PDFExportMarginComponent, PDFExportTemplateDirective],\n    exports: [PDFExportComponent, PDFExportMarginComponent, PDFExportTemplateDirective]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { PDFExportComponent, PDFExportModule, PDFExportMarginComponent, PDFExportTemplateDirective, compileTemplate }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7MEpBQUU7QUFDRix5Q0FJRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O3FVQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBTTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7OzZCQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBS0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7c1NBTW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IF9fZGVjb3JhdGUsIF9fcGFyYW0sIF9fbWV0YWRhdGEgfSBmcm9tICd0c2xpYic7XG5pbXBvcnQgeyBEaXJlY3RpdmUsIE9wdGlvbmFsLCBUZW1wbGF0ZVJlZiwgSW5wdXQsIENvbXBvbmVudCwgQ29udGVudENoaWxkLCBFbGVtZW50UmVmLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZHJhd0RPTSwgZXhwb3J0UERGIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWRyYXdpbmcnO1xuaW1wb3J0IHsgc2F2ZUFzIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWZpbGUtc2F2ZXInO1xuaW1wb3J0IHsgdmFsaWRhdGVQYWNrYWdlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWxpY2Vuc2luZyc7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBwYWNrYWdlTWV0YWRhdGEgPSB7XG4gICAgbmFtZTogJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLXBkZi1leHBvcnQnLFxuICAgIHByb2R1Y3ROYW1lOiAnS2VuZG8gVUkgZm9yIEFuZ3VsYXInLFxuICAgIHByb2R1Y3RDb2RlczogWydLRU5ET1VJQU5HVUxBUicsICdLRU5ET1VJQ09NUExFVEUnXSxcbiAgICBwdWJsaXNoRGF0ZTogMTYyMDIxNTAxOCxcbiAgICB2ZXJzaW9uOiAnJyxcbiAgICBsaWNlbnNpbmdEb2NzVXJsOiAnaHR0cHM6Ly93d3cudGVsZXJpay5jb20va2VuZG8tYW5ndWxhci11aS9teS1saWNlbnNlLz91dG1fbWVkaXVtPXByb2R1Y3QmdXRtX3NvdXJjZT1rZW5kb2FuZ3VsYXImdXRtX2NhbXBhaWduPWtlbmRvLXVpLWFuZ3VsYXItcHVyY2hhc2UtbGljZW5zZS1rZXlzLXdhcm5pbmcnXG59O1xuXG5sZXQgUERGRXhwb3J0VGVtcGxhdGVEaXJlY3RpdmUgPSBjbGFzcyBQREZFeHBvcnRUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IodGVtcGxhdGVSZWYpIHtcbiAgICAgICAgdGhpcy50ZW1wbGF0ZVJlZiA9IHRlbXBsYXRlUmVmO1xuICAgIH1cbn07XG5QREZFeHBvcnRUZW1wbGF0ZURpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvUERGVGVtcGxhdGVdJ1xuICAgIH0pLFxuICAgIF9fcGFyYW0oMCwgT3B0aW9uYWwoKSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtUZW1wbGF0ZVJlZl0pXG5dLCBQREZFeHBvcnRUZW1wbGF0ZURpcmVjdGl2ZSk7XG5cbmNvbnN0IEZJRUxEUyA9IFsnYm90dG9tJywgJ2xlZnQnLCAncmlnaHQnLCAndG9wJ107XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIEtlbmRvIFVJIFBERk1hcmdpbiBjb21wb25lbnQgZm9yIEFuZ3VsYXIuXG4gKi9cbmxldCBQREZFeHBvcnRNYXJnaW5Db21wb25lbnQgPSBjbGFzcyBQREZFeHBvcnRNYXJnaW5Db21wb25lbnQge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgb3B0aW9ucygpIHtcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHt9O1xuICAgICAgICBmb3IgKGxldCBpZHggPSAwOyBpZHggPCBGSUVMRFMubGVuZ3RoOyBpZHgrKykge1xuICAgICAgICAgICAgY29uc3QgZmllbGQgPSBGSUVMRFNbaWR4XTtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpc1tmaWVsZF07XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIG9wdGlvbnNbZmllbGRdID0gdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG9wdGlvbnM7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIFBERkV4cG9ydE1hcmdpbkNvbXBvbmVudC5wcm90b3R5cGUsIFwibGVmdFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgUERGRXhwb3J0TWFyZ2luQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ0b3BcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIFBERkV4cG9ydE1hcmdpbkNvbXBvbmVudC5wcm90b3R5cGUsIFwicmlnaHRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIFBERkV4cG9ydE1hcmdpbkNvbXBvbmVudC5wcm90b3R5cGUsIFwiYm90dG9tXCIsIHZvaWQgMCk7XG5QREZFeHBvcnRNYXJnaW5Db21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLXBkZi1leHBvcnQtbWFyZ2luJyxcbiAgICAgICAgdGVtcGxhdGU6IGBgXG4gICAgfSlcbl0sIFBERkV4cG9ydE1hcmdpbkNvbXBvbmVudCk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBjb21waWxlVGVtcGxhdGUgPSAodGVtcGxhdGVSZWYpID0+IHtcbiAgICBjb25zdCBjb250ZXh0ID0ge307XG4gICAgbGV0IGVtYmVkZGVkVmlldyA9IHRlbXBsYXRlUmVmLmNyZWF0ZUVtYmVkZGVkVmlldyhjb250ZXh0KTtcbiAgICBjb25zdCByZXN1bHQgPSAoZGF0YSkgPT4ge1xuICAgICAgICBPYmplY3QuYXNzaWduKGNvbnRleHQsIGRhdGEpO1xuICAgICAgICBlbWJlZGRlZFZpZXcuZGV0ZWN0Q2hhbmdlcygpO1xuICAgICAgICBjb25zdCB0ZW1wbGF0ZVdyYXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgIGVtYmVkZGVkVmlldy5yb290Tm9kZXMuZm9yRWFjaCgocm9vdE5vZGUpID0+IHtcbiAgICAgICAgICAgIHRlbXBsYXRlV3JhcC5hcHBlbmRDaGlsZChyb290Tm9kZS5jbG9uZU5vZGUodHJ1ZSkpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRlbXBsYXRlV3JhcDtcbiAgICB9O1xuICAgIHJlc3VsdC5kZXN0cm95ID0gKCkgPT4ge1xuICAgICAgICBlbWJlZGRlZFZpZXcuZGVzdHJveSgpO1xuICAgICAgICBlbWJlZGRlZFZpZXcgPSBudWxsO1xuICAgIH07XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgW0tlbmRvIFVJIFBERiBFeHBvcnQgY29tcG9uZW50IGZvciBBbmd1bGFyXSh7JSBzbHVnIG92ZXJ2aWV3X3BkZmV4cG9ydCAlfSkuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqIF9AQ29tcG9uZW50KHtcbiAqICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICB0ZW1wbGF0ZTogYFxuICogICAgIDxkaXYgY2xhc3M9XCJleGFtcGxlLWNvbmZpZ1wiPlxuICogICAgICAgPGJ1dHRvbiBjbGFzcz1cImstYnV0dG9uXCIgKGNsaWNrKT1cInBkZi5zYXZlQXMoJ2RvY3VtZW50LnBkZicpXCI+XG4gKiAgICAgICAgIFNhdmUgQXMgUERGLi4uXG4gKiAgICAgICA8L2J1dHRvbj5cbiAqICAgICA8L2Rpdj5cbiAqXG4gKiAgICAgPGtlbmRvLXBkZi1leHBvcnQgI3BkZiBwYXBlclNpemU9XCJBNFwiIG1hcmdpbj1cIjJjbVwiPlxuICogICAgICAgQ29udGVudCBnb2VzIGhlcmVcbiAqICAgICA8L2tlbmRvLXBkZi1leHBvcnQ+XG4gKiAgIGBcbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAqIH1cbiAqIGBgYFxuICovXG5sZXQgUERGRXhwb3J0Q29tcG9uZW50ID0gY2xhc3MgUERGRXhwb3J0Q29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50KSB7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgY3JlYXRvciBvZiB0aGUgUERGIGRvY3VtZW50LlxuICAgICAgICAgKiBAZGVmYXVsdCBcIktlbmRvIFVJIFBERiBHZW5lcmF0b3JcIlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jcmVhdG9yID0gJ0tlbmRvIFVJIFBERiBHZW5lcmF0b3InO1xuICAgICAgICAvKipcbiAgICAgICAgICogU3BlY2lmaWVzIHRoZSBuYW1lIG9mIHRoZSBleHBvcnRlZCBQREYgZmlsZS5cbiAgICAgICAgICogQGRlZmF1bHQgXCJFeHBvcnQucGRmXCJcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZmlsZU5hbWUgPSAnZXhwb3J0LnBkZic7XG4gICAgICAgIHZhbGlkYXRlUGFja2FnZShwYWNrYWdlTWV0YWRhdGEpO1xuICAgIH1cbiAgICBnZXQgZHJhd01hcmdpbigpIHtcbiAgICAgICAgY29uc3QgbWFyZ2luQ29tcG9uZW50ID0gdGhpcy5tYXJnaW5Db21wb25lbnQ7XG4gICAgICAgIGxldCBtYXJnaW4gPSB0aGlzLm1hcmdpbjtcbiAgICAgICAgaWYgKG1hcmdpbkNvbXBvbmVudCkge1xuICAgICAgICAgICAgbWFyZ2luID0gT2JqZWN0LmFzc2lnbihtYXJnaW4gfHwge30sIG1hcmdpbkNvbXBvbmVudC5vcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWFyZ2luO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTYXZlcyB0aGUgY29udGVudCBhcyBhIFBERiBmaWxlIHdpdGggdGhlIHNwZWNpZmllZCBuYW1lLlxuICAgICAqIEBwYXJhbSBmaWxlTmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBleHBvcnRlZCBmaWxlLlxuICAgICAqL1xuICAgIHNhdmVBcyhmaWxlTmFtZSA9IHRoaXMuZmlsZU5hbWUpIHtcbiAgICAgICAgdGhpcy5zYXZlKHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LCBmaWxlTmFtZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEV4cG9ydHMgdGhlIGNvbnRlbnQgYXMgYSBgR3JvdXBgIGZvciBmdXJ0aGVyIHByb2Nlc3NpbmcuXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIC0gVGhlIHJvb3QgZ3JvdXAgb2YgdGhlIGV4cG9ydGVkIHNjZW5lLlxuICAgICAqL1xuICAgIGV4cG9ydCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXhwb3J0RWxlbWVudCh0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCk7XG4gICAgfVxuICAgIHNhdmUoZWxlbWVudCwgZmlsZU5hbWUpIHtcbiAgICAgICAgdGhpcy5leHBvcnRFbGVtZW50KGVsZW1lbnQpXG4gICAgICAgICAgICAudGhlbihncm91cCA9PiB0aGlzLmV4cG9ydEdyb3VwKGdyb3VwLCB0aGlzLnBkZk9wdGlvbnMoKSkpXG4gICAgICAgICAgICAudGhlbihkYXRhVXJpID0+IHRoaXMuc2F2ZURhdGFVcmkoZGF0YVVyaSwgZmlsZU5hbWUsIHRoaXMuc2F2ZU9wdGlvbnMoKSkpO1xuICAgIH1cbiAgICBleHBvcnRFbGVtZW50KGVsZW1lbnQpIHtcbiAgICAgICAgY29uc3QgcHJvbWlzZSA9IHRoaXMuZHJhd0VsZW1lbnQoZWxlbWVudCwgdGhpcy5kcmF3T3B0aW9ucygpKTtcbiAgICAgICAgY29uc3QgY2xlYW51cCA9IHRoaXMuY2xlYW51cC5iaW5kKHRoaXMpO1xuICAgICAgICBwcm9taXNlLnRoZW4oY2xlYW51cCwgY2xlYW51cCk7XG4gICAgICAgIHJldHVybiBwcm9taXNlO1xuICAgIH1cbiAgICBjbGVhbnVwKCkge1xuICAgICAgICBpZiAodGhpcy5wYWdlVGVtcGxhdGUpIHtcbiAgICAgICAgICAgIHRoaXMucGFnZVRlbXBsYXRlLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLnBhZ2VUZW1wbGF0ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBkcmF3T3B0aW9ucygpIHtcbiAgICAgICAgaWYgKHRoaXMucGFnZVRlbXBsYXRlRGlyZWN0aXZlKSB7XG4gICAgICAgICAgICB0aGlzLnBhZ2VUZW1wbGF0ZSA9IGNvbXBpbGVUZW1wbGF0ZSh0aGlzLnBhZ2VUZW1wbGF0ZURpcmVjdGl2ZS50ZW1wbGF0ZVJlZik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGF2b2lkTGlua3M6IHRoaXMuYXZvaWRMaW5rcyxcbiAgICAgICAgICAgIGZvcmNlUGFnZUJyZWFrOiB0aGlzLmZvcmNlUGFnZUJyZWFrLFxuICAgICAgICAgICAga2VlcFRvZ2V0aGVyOiB0aGlzLmtlZXBUb2dldGhlcixcbiAgICAgICAgICAgIG1hcmdpbjogdGhpcy5kcmF3TWFyZ2luLFxuICAgICAgICAgICAgcGFwZXJTaXplOiB0aGlzLnBhcGVyU2l6ZSxcbiAgICAgICAgICAgIGxhbmRzY2FwZTogdGhpcy5sYW5kc2NhcGUsXG4gICAgICAgICAgICByZXBlYXRIZWFkZXJzOiB0aGlzLnJlcGVhdEhlYWRlcnMsXG4gICAgICAgICAgICBzY2FsZTogdGhpcy5zY2FsZSxcbiAgICAgICAgICAgIHRlbXBsYXRlOiB0aGlzLnBhZ2VUZW1wbGF0ZVxuICAgICAgICB9O1xuICAgIH1cbiAgICBwZGZPcHRpb25zKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYXV0b1ByaW50OiB0aGlzLmF1dG9QcmludCxcbiAgICAgICAgICAgIGF1dGhvcjogdGhpcy5hdXRob3IsXG4gICAgICAgICAgICBjcmVhdG9yOiB0aGlzLmNyZWF0b3IsXG4gICAgICAgICAgICBkYXRlOiB0aGlzLmRhdGUsXG4gICAgICAgICAgICBpbWdEUEk6IHRoaXMuaW1hZ2VSZXNvbHV0aW9uLFxuICAgICAgICAgICAga2V5d29yZHM6IHRoaXMua2V5d29yZHMsXG4gICAgICAgICAgICBsYW5kc2NhcGU6IHRoaXMubGFuZHNjYXBlLFxuICAgICAgICAgICAgbWFyZ2luOiB0aGlzLmRyYXdNYXJnaW4sXG4gICAgICAgICAgICBtdWx0aVBhZ2U6IHRydWUsXG4gICAgICAgICAgICBwYXBlclNpemU6IHRoaXMucGFwZXJTaXplLFxuICAgICAgICAgICAgcHJvZHVjZXI6IHRoaXMucHJvZHVjZXIsXG4gICAgICAgICAgICBzdWJqZWN0OiB0aGlzLnN1YmplY3QsXG4gICAgICAgICAgICB0aXRsZTogdGhpcy50aXRsZVxuICAgICAgICB9O1xuICAgIH1cbiAgICBzYXZlT3B0aW9ucygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGZvcmNlUHJveHk6IHRoaXMuZm9yY2VQcm94eSxcbiAgICAgICAgICAgIHByb3h5RGF0YTogdGhpcy5wcm94eURhdGEsXG4gICAgICAgICAgICBwcm94eVRhcmdldDogdGhpcy5wcm94eVRhcmdldCxcbiAgICAgICAgICAgIHByb3h5VVJMOiB0aGlzLnByb3h5VVJMXG4gICAgICAgIH07XG4gICAgfVxuICAgIGRyYXdFbGVtZW50KGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIGRyYXdET00oZWxlbWVudCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIGV4cG9ydEdyb3VwKGdyb3VwLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBleHBvcnRQREYoZ3JvdXAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBzYXZlRGF0YVVyaShkYXRhVXJpLCBmaWxlTmFtZSwgb3B0aW9ucykge1xuICAgICAgICBzYXZlQXMoZGF0YVVyaSwgZmlsZU5hbWUsIG9wdGlvbnMpO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgUERGRXhwb3J0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJhdXRvUHJpbnRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIFBERkV4cG9ydENvbXBvbmVudC5wcm90b3R5cGUsIFwiYXV0aG9yXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBQREZFeHBvcnRDb21wb25lbnQucHJvdG90eXBlLCBcImF2b2lkTGlua3NcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIFBERkV4cG9ydENvbXBvbmVudC5wcm90b3R5cGUsIFwiZm9yY2VQYWdlQnJlYWtcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIFBERkV4cG9ydENvbXBvbmVudC5wcm90b3R5cGUsIFwia2VlcFRvZ2V0aGVyXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBQREZFeHBvcnRDb21wb25lbnQucHJvdG90eXBlLCBcImNyZWF0b3JcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIERhdGUpXG5dLCBQREZFeHBvcnRDb21wb25lbnQucHJvdG90eXBlLCBcImRhdGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIFBERkV4cG9ydENvbXBvbmVudC5wcm90b3R5cGUsIFwiaW1hZ2VSZXNvbHV0aW9uXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBQREZFeHBvcnRDb21wb25lbnQucHJvdG90eXBlLCBcImZpbGVOYW1lXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgUERGRXhwb3J0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJmb3JjZVByb3h5XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBQREZFeHBvcnRDb21wb25lbnQucHJvdG90eXBlLCBcImtleXdvcmRzXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgUERGRXhwb3J0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJsYW5kc2NhcGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIFBERkV4cG9ydENvbXBvbmVudC5wcm90b3R5cGUsIFwibWFyZ2luXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBQREZFeHBvcnRDb21wb25lbnQucHJvdG90eXBlLCBcInBhcGVyU2l6ZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIFBERkV4cG9ydENvbXBvbmVudC5wcm90b3R5cGUsIFwicmVwZWF0SGVhZGVyc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgUERGRXhwb3J0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJzY2FsZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgUERGRXhwb3J0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJwcm94eURhdGFcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIFBERkV4cG9ydENvbXBvbmVudC5wcm90b3R5cGUsIFwicHJveHlVUkxcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIFBERkV4cG9ydENvbXBvbmVudC5wcm90b3R5cGUsIFwicHJveHlUYXJnZXRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIFBERkV4cG9ydENvbXBvbmVudC5wcm90b3R5cGUsIFwicHJvZHVjZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIFBERkV4cG9ydENvbXBvbmVudC5wcm90b3R5cGUsIFwic3ViamVjdFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgUERGRXhwb3J0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJ0aXRsZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgQ29udGVudENoaWxkKFBERkV4cG9ydFRlbXBsYXRlRGlyZWN0aXZlLCB7IHN0YXRpYzogZmFsc2UgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFBERkV4cG9ydFRlbXBsYXRlRGlyZWN0aXZlKVxuXSwgUERGRXhwb3J0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJwYWdlVGVtcGxhdGVEaXJlY3RpdmVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZChQREZFeHBvcnRNYXJnaW5Db21wb25lbnQsIHsgc3RhdGljOiBmYWxzZSB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgUERGRXhwb3J0TWFyZ2luQ29tcG9uZW50KVxuXSwgUERGRXhwb3J0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJtYXJnaW5Db21wb25lbnRcIiwgdm9pZCAwKTtcblBERkV4cG9ydENvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tcGRmLWV4cG9ydCcsXG4gICAgICAgIHRlbXBsYXRlOiBgPGRpdj48bmctY29udGVudD48L25nLWNvbnRlbnQ+PC9kaXY+YFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRWxlbWVudFJlZl0pXG5dLCBQREZFeHBvcnRDb21wb25lbnQpO1xuXG5jb25zdCBDT01QT05FTlRfRElSRUNUSVZFUyA9IFtcbiAgICBQREZFeHBvcnRDb21wb25lbnQsXG4gICAgUERGRXhwb3J0TWFyZ2luQ29tcG9uZW50LFxuICAgIFBERkV4cG9ydFRlbXBsYXRlRGlyZWN0aXZlXG5dO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBbTmdNb2R1bGVdKHt7IHNpdGUuZGF0YS51cmxzLmFuZ3VsYXJbJ25nbW9kdWxlYXBpJ10gfX0pIGRlZmluaXRpb24gZm9yIHRoZSBQREYgRXhwb3J0IGRpcmVjdGl2ZS5cbiAqL1xubGV0IFBERkV4cG9ydE1vZHVsZSA9IGNsYXNzIFBERkV4cG9ydE1vZHVsZSB7XG59O1xuUERGRXhwb3J0TW9kdWxlID0gX19kZWNvcmF0ZShbXG4gICAgTmdNb2R1bGUoe1xuICAgICAgICBkZWNsYXJhdGlvbnM6IFtDT01QT05FTlRfRElSRUNUSVZFU10sXG4gICAgICAgIGV4cG9ydHM6IFtDT01QT05FTlRfRElSRUNUSVZFU11cbiAgICB9KVxuXSwgUERGRXhwb3J0TW9kdWxlKTtcblxuLyoqXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cbiAqL1xuXG5leHBvcnQgeyBQREZFeHBvcnRDb21wb25lbnQsIFBERkV4cG9ydE1vZHVsZSwgUERGRXhwb3J0TWFyZ2luQ29tcG9uZW50LCBQREZFeHBvcnRUZW1wbGF0ZURpcmVjdGl2ZSwgY29tcGlsZVRlbXBsYXRlIH07XG4iXX0=","map":null,"metadata":{},"sourceType":"module"}