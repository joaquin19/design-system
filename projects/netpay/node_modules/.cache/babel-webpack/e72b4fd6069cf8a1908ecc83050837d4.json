{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { InjectionToken, HostBinding, Input, Component, EventEmitter, Injectable, Optional, Inject, Directive, SkipSelf, ElementRef, Renderer2, NgZone, ChangeDetectorRef, TemplateRef, QueryList, ContentChildren, ContentChild, forwardRef, Host, Output, isDevMode, SecurityContext, ViewChild, ViewChildren, ViewEncapsulation, Self, ViewContainerRef, Pipe, NgModule, ComponentFactoryResolver, HostListener, ChangeDetectionStrategy } from '@angular/core';\nimport { isDocumentAvailable, Keys, DraggableDirective, isChanged, anyChanged, hasObservers, ResizeSensorComponent, KendoInput, DraggableModule, EventsModule, ResizeSensorModule, guid } from '@progress/kendo-angular-common';\nimport { merge, of, Subject, Subscription, from, interval, fromEvent, zip, BehaviorSubject, Observable } from 'rxjs';\nimport { LocalizationService, L10N_PREFIX, ComponentMessages } from '@progress/kendo-angular-l10n';\nimport { switchMap, take, filter, takeUntil, map, switchMapTo, delay, auditTime, distinctUntilChanged, tap, throttleTime, debounceTime, bufferCount } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, FormGroup, NG_VALUE_ACCESSOR, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { orderBy, process, isCompositeFilterDescriptor, filterBy } from '@progress/kendo-data-query';\nimport { PopupService, PopupModule } from '@progress/kendo-angular-popup';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { getter } from '@progress/kendo-common';\nimport { DropDownListComponent, DropDownListModule, AutoCompleteModule, DropDownsModule } from '@progress/kendo-angular-dropdowns';\nimport { InputsModule, NumericTextBoxComponent, NumericTextBoxModule } from '@progress/kendo-angular-inputs';\nimport { DatePickerModule } from '@progress/kendo-angular-dateinputs';\nimport { IntlService } from '@progress/kendo-angular-intl';\nimport { LabelModule } from '@progress/kendo-angular-label';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Button } from '@progress/kendo-angular-buttons';\nimport { PDFExportMarginComponent, PDFExportTemplateDirective, PDFExportComponent } from '@progress/kendo-angular-pdf-export';\nimport { saveAs } from '@progress/kendo-file-saver';\nimport { workbookOptions, toDataURL, ColumnBase, ExcelExportModule } from '@progress/kendo-angular-excel-export';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@progress/kendo-angular-l10n';\nimport * as ɵngcc2 from '@progress/kendo-angular-common';\nimport * as ɵngcc3 from '@progress/kendo-angular-popup';\nimport * as ɵngcc4 from '@angular/platform-browser';\nimport * as ɵngcc5 from '@angular/common';\nimport * as ɵngcc6 from '@progress/kendo-angular-inputs';\nimport * as ɵngcc7 from '@angular/forms';\nimport * as ɵngcc8 from '@progress/kendo-angular-dropdowns';\nimport * as ɵngcc9 from '@progress/kendo-angular-dateinputs';\nimport * as ɵngcc10 from '@progress/kendo-angular-intl';\nimport * as ɵngcc11 from '@progress/kendo-angular-label';\nconst _c0 = [\"lockedHeader\"];\nconst _c1 = [\"header\"];\nconst _c2 = [\"ariaRoot\"];\nconst _c3 = [\"footer\"];\n\nfunction GridComponent_kendo_grid_toolbar_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-toolbar\", 10);\n  }\n}\n\nfunction GridComponent_kendo_pager_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-pager\", 11);\n    ɵngcc0.ɵɵlistener(\"pageChange\", function GridComponent_kendo_pager_3_Template_kendo_pager_pageChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.notifyPageChange(\"pager\", $event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"tabindex\", ctx_r1.navigable ? \"0\" : \"-1\")(\"template\", ctx_r1.pagerTemplate)(\"pageSize\", ctx_r1.pageSize)(\"total\", ctx_r1.view.total)(\"skip\", ctx_r1.skip)(\"options\", ctx_r1.pageable);\n    ɵngcc0.ɵɵattribute(\"role\", ctx_r1.navigable ? \"navigation\" : undefined);\n  }\n}\n\nfunction GridComponent_kendo_grid_group_panel_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-grid-group-panel\", 12);\n    ɵngcc0.ɵɵlistener(\"change\", function GridComponent_kendo_grid_group_panel_4_Template_kendo_grid_group_panel_change_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      const ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.groupChange.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"text\", ctx_r2.groupableEmptyText)(\"groups\", ctx_r2.group);\n  }\n}\n\nfunction GridComponent_ng_template_7_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24, 25);\n    ɵngcc0.ɵɵelementStart(2, \"table\", 26);\n    ɵngcc0.ɵɵelement(3, \"colgroup\", 21);\n    ɵngcc0.ɵɵelement(4, \"thead\", 27);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r14.lockedWidth, \"px\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r14.lockedWidth, \"px\");\n    ɵngcc0.ɵɵproperty(\"locked\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r14.lockedLeafColumns)(\"groups\", ctx_r14.group)(\"detailTemplate\", ctx_r14.detailTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"resizable\", ctx_r14.resizable)(\"scrollable\", true)(\"columns\", ctx_r14.lockedColumns)(\"totalColumnLevels\", ctx_r14.totalColumnLevels)(\"sort\", ctx_r14.sort)(\"groups\", ctx_r14.group)(\"filter\", ctx_r14.filter)(\"filterable\", ctx_r14.filterable)(\"groupable\", ctx_r14.showGroupPanel)(\"reorderable\", ctx_r14.reorderable)(\"sortable\", ctx_r14.sortable)(\"columnMenu\", ctx_r14.columnMenuOptions)(\"columnMenuTemplate\", ctx_r14.columnMenuTemplate)(\"totalColumnsCount\", ctx_r14.leafColumns.length)(\"detailTemplate\", ctx_r14.detailTemplate)(\"tabIndex\", ctx_r14.navigable ? \"-1\" : \"0\");\n  }\n}\n\nfunction GridComponent_ng_template_7_div_0_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵelement(1, \"div\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r16.columnsContainer.unlockedWidth, \"px\");\n  }\n}\n\nconst _c138 = function () {\n  return [];\n};\n\nfunction GridComponent_ng_template_7_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtemplate(1, GridComponent_ng_template_7_div_0_div_1_Template, 5, 24, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 18, 19);\n    ɵngcc0.ɵɵelementStart(4, \"table\", 20);\n    ɵngcc0.ɵɵelement(5, \"colgroup\", 21);\n    ɵngcc0.ɵɵelement(6, \"thead\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(7, GridComponent_ng_template_7_div_0_div_7_Template, 2, 2, \"div\", 23);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding\", ctx_r12.headerPadding);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.isLocked);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"kendoGridResizableContainer\", ctx_r12.lockedLeafColumns.length)(\"lockedWidth\", ctx_r12.lockedWidth + ctx_r12.scrollbarWidth + 2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r12.nonLockedWidth, \"px\");\n    ɵngcc0.ɵɵproperty(\"virtualColumns\", ctx_r12.virtualColumns);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r12.headerLeafColumns)(\"groups\", ctx_r12.isLocked ? ɵngcc0.ɵɵpureFunction0(29, _c138) : ctx_r12.group)(\"detailTemplate\", ctx_r12.detailTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"resizable\", ctx_r12.resizable)(\"scrollable\", true)(\"columns\", ctx_r12.headerColumns)(\"totalColumnLevels\", ctx_r12.totalColumnLevels)(\"sort\", ctx_r12.sort)(\"filter\", ctx_r12.filter)(\"filterable\", ctx_r12.filterable)(\"groupable\", ctx_r12.showGroupPanel)(\"reorderable\", ctx_r12.reorderable)(\"groups\", ctx_r12.isLocked ? ɵngcc0.ɵɵpureFunction0(30, _c138) : ctx_r12.group)(\"sortable\", ctx_r12.sortable)(\"columnMenu\", ctx_r12.columnMenuOptions)(\"columnMenuTemplate\", ctx_r12.columnMenuTemplate)(\"lockedColumnsCount\", ctx_r12.lockedLeafColumns.length)(\"totalColumnsCount\", ctx_r12.leafColumns.length)(\"detailTemplate\", ctx_r12.detailTemplate)(\"tabIndex\", ctx_r12.navigable ? \"-1\" : \"0\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.virtualColumns);\n  }\n}\n\nfunction GridComponent_ng_template_7_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 36);\n    ɵngcc0.ɵɵelementStart(1, \"table\", 26);\n    ɵngcc0.ɵɵelement(2, \"colgroup\", 34);\n    ɵngcc0.ɵɵelement(3, \"tfoot\", 37);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r18.lockedWidth, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r18.lockedWidth, \"px\");\n    ɵngcc0.ɵɵproperty(\"locked\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r18.lockedLeafColumns)(\"groups\", ctx_r18.group)(\"detailTemplate\", ctx_r18.detailTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"scrollable\", true)(\"groups\", ctx_r18.group)(\"columns\", ctx_r18.lockedLeafColumns)(\"detailTemplate\", ctx_r18.detailTemplate)(\"logicalRowIndex\", ctx_r18.ariaRowCount);\n  }\n}\n\nfunction GridComponent_ng_template_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 29);\n    ɵngcc0.ɵɵtemplate(1, GridComponent_ng_template_7_div_2_div_1_Template, 4, 13, \"div\", 30);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 31, 32);\n    ɵngcc0.ɵɵelementStart(4, \"table\", 33);\n    ɵngcc0.ɵɵelement(5, \"colgroup\", 34);\n    ɵngcc0.ɵɵelement(6, \"tfoot\", 35);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding\", ctx_r13.headerPadding);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.lockedLeafColumns.length);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"kendoGridResizableContainer\", ctx_r13.lockedLeafColumns.length)(\"lockedWidth\", ctx_r13.lockedWidth + ctx_r13.scrollbarWidth + 3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r13.nonLockedWidth, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r13.nonLockedLeafColumns)(\"groups\", ctx_r13.isLocked ? ɵngcc0.ɵɵpureFunction0(16, _c138) : ctx_r13.group)(\"detailTemplate\", ctx_r13.detailTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r13.ariaRowCount)(\"scrollable\", true)(\"groups\", ctx_r13.isLocked ? ɵngcc0.ɵɵpureFunction0(17, _c138) : ctx_r13.group)(\"columns\", ctx_r13.nonLockedLeafColumns)(\"lockedColumnsCount\", ctx_r13.lockedLeafColumns.length)(\"detailTemplate\", ctx_r13.detailTemplate);\n  }\n}\n\nfunction GridComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵtemplate(0, GridComponent_ng_template_7_div_0_Template, 8, 31, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"kendo-grid-list\", 14);\n    ɵngcc0.ɵɵlistener(\"pageChange\", function GridComponent_ng_template_7_Template_kendo_grid_list_pageChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r21);\n      const ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ctx_r20.notifyPageChange(\"list\", $event);\n    })(\"scrollBottom\", function GridComponent_ng_template_7_Template_kendo_grid_list_scrollBottom_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r21);\n      const ctx_r22 = ɵngcc0.ɵɵnextContext();\n      return ctx_r22.notifyScrollBottom();\n    })(\"contentScroll\", function GridComponent_ng_template_7_Template_kendo_grid_list_contentScroll_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r21);\n      const ctx_r23 = ɵngcc0.ɵɵnextContext();\n      return ctx_r23.contentScroll.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, GridComponent_ng_template_7_div_2_Template, 7, 18, \"div\", 15);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideHeader);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r4.view)(\"rowHeight\", ctx_r4.rowHeight)(\"detailRowHeight\", ctx_r4.detailRowHeight)(\"total\", ctx_r4.totalCount)(\"take\", ctx_r4.pageSize)(\"groups\", ctx_r4.group)(\"groupable\", ctx_r4.groupable)(\"skip\", ctx_r4.skip)(\"trackBy\", ctx_r4.trackBy)(\"columns\", ctx_r4.columnsContainer)(\"selectable\", ctx_r4.selectable)(\"filterable\", ctx_r4.filterable)(\"detailTemplate\", ctx_r4.detailTemplate)(\"noRecordsTemplate\", ctx_r4.noRecordsTemplate)(\"rowClass\", ctx_r4.rowClass)(\"rowSticky\", ctx_r4.rowSticky)(\"loading\", ctx_r4.loading)(\"isVirtual\", ctx_r4.isVirtual)(\"loadingTemplate\", ctx_r4.loadingTemplate == null ? null : ctx_r4.loadingTemplate.templateRef)(\"virtualColumns\", ctx_r4.virtualColumns)(\"enableDrag\", ctx_r4.marqueeSelection);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.showFooter);\n  }\n}\n\nfunction GridComponent_ng_template_8_thead_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"thead\", 42);\n  }\n\n  if (rf & 2) {\n    const ctx_r24 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"resizable\", ctx_r24.resizable)(\"scrollable\", false)(\"columns\", ctx_r24.visibleColumns)(\"totalColumnLevels\", ctx_r24.totalColumnLevels)(\"groups\", ctx_r24.group)(\"groupable\", ctx_r24.showGroupPanel)(\"reorderable\", ctx_r24.reorderable)(\"sort\", ctx_r24.sort)(\"sortable\", ctx_r24.sortable)(\"filter\", ctx_r24.filter)(\"filterable\", ctx_r24.filterable)(\"columnMenu\", ctx_r24.columnMenuOptions)(\"columnMenuTemplate\", ctx_r24.columnMenuTemplate)(\"detailTemplate\", ctx_r24.detailTemplate)(\"tabIndex\", ctx_r24.navigable ? \"-1\" : \"0\");\n  }\n}\n\nfunction GridComponent_ng_template_8_tfoot_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tfoot\", 43);\n  }\n\n  if (rf & 2) {\n    const ctx_r25 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"scrollable\", false)(\"logicalRowIndex\", ctx_r25.ariaRowCount)(\"groups\", ctx_r25.group)(\"columns\", ctx_r25.leafColumns)(\"detailTemplate\", ctx_r25.detailTemplate);\n  }\n}\n\nfunction GridComponent_ng_template_8_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 44);\n  }\n}\n\nfunction GridComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"table\");\n    ɵngcc0.ɵɵelement(1, \"colgroup\", 34);\n    ɵngcc0.ɵɵtemplate(2, GridComponent_ng_template_8_thead_2_Template, 1, 15, \"thead\", 38);\n    ɵngcc0.ɵɵelement(3, \"tbody\", 39);\n    ɵngcc0.ɵɵtemplate(4, GridComponent_ng_template_8_tfoot_4_Template, 1, 5, \"tfoot\", 40);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(5, GridComponent_ng_template_8_div_5_Template, 1, 0, \"div\", 41);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"table-layout\", ctx_r5.resizable ? \"fixed\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r5.leafColumns)(\"groups\", ctx_r5.group)(\"detailTemplate\", ctx_r5.detailTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.hideHeader);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"isLoading\", ctx_r5.loading)(\"groups\", ctx_r5.group)(\"data\", ctx_r5.view)(\"skip\", ctx_r5.skip)(\"columns\", ctx_r5.leafColumns)(\"selectable\", ctx_r5.selectable)(\"filterable\", ctx_r5.filterable)(\"noRecordsTemplate\", ctx_r5.noRecordsTemplate)(\"detailTemplate\", ctx_r5.detailTemplate)(\"showGroupFooters\", ctx_r5.showGroupFooters)(\"trackBy\", ctx_r5.trackBy)(\"rowClass\", ctx_r5.rowClass)(\"enableDrag\", ctx_r5.marqueeSelection);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.showFooter);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.loading);\n  }\n}\n\nfunction GridComponent_kendo_pager_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-pager\", 45);\n    ɵngcc0.ɵɵlistener(\"pageChange\", function GridComponent_kendo_pager_9_Template_kendo_pager_pageChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      const ctx_r27 = ɵngcc0.ɵɵnextContext();\n      return ctx_r27.notifyPageChange(\"pager\", $event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"tabindex\", ctx_r6.navigable ? \"0\" : \"-1\")(\"template\", ctx_r6.pagerTemplate)(\"pageSize\", ctx_r6.pageSize)(\"total\", ctx_r6.view.total)(\"skip\", ctx_r6.skip)(\"options\", ctx_r6.pageable);\n    ɵngcc0.ɵɵattribute(\"role\", ctx_r6.navigable ? \"navigation\" : undefined);\n  }\n}\n\nfunction GridComponent_kendo_grid_toolbar_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-toolbar\", 46);\n  }\n}\n\nconst _c139 = [\"container\"];\nconst _c140 = [\"lockedContainer\"];\nconst _c141 = [\"lockedTable\"];\nconst _c142 = [\"table\"];\n\nconst _c143 = function (a0, a1, a2, a3) {\n  return {\n    keydown: a0,\n    scroll: a1,\n    mousewheel: a2,\n    DOMMouseScroll: a3\n  };\n};\n\nfunction ListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12, 13);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"table\", 14, 15);\n    ɵngcc0.ɵɵelement(5, \"colgroup\", 6);\n    ɵngcc0.ɵɵelement(6, \"tbody\", 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(7, \"kendo-resize-sensor\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"div\", 9);\n    ɵngcc0.ɵɵelement(9, \"div\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r0.lockedWidth, \"px\");\n    ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction4(28, _c143, ctx_r0.lockedKeydown, ctx_r0.lockedScroll, ctx_r0.lockedMousewheel, ctx_r0.lockedMousewheel))(\"scope\", ctx_r0);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r0.lockedWidth, \"px\");\n    ɵngcc0.ɵɵproperty(\"locked\", true);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"groups\", ctx_r0.groups)(\"columns\", ctx_r0.lockedLeafColumns)(\"detailTemplate\", ctx_r0.detailTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"groups\", ctx_r0.groups)(\"isLocked\", true)(\"data\", ctx_r0.data)(\"noRecordsText\", \"\")(\"columns\", ctx_r0.lockedLeafColumns)(\"totalColumnsCount\", ctx_r0.leafColumns.length)(\"detailTemplate\", ctx_r0.detailTemplate)(\"showGroupFooters\", ctx_r0.showFooter)(\"skip\", ctx_r0.skip)(\"selectable\", ctx_r0.selectable)(\"trackBy\", ctx_r0.trackBy)(\"filterable\", ctx_r0.filterable)(\"rowClass\", ctx_r0.rowClass)(\"isLoading\", ctx_r0.loading)(\"isVirtual\", ctx_r0.isVirtual)(\"loadingTemplate\", ctx_r0.loadingTemplate);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r0.totalHeight, \"px\");\n  }\n}\n\nfunction ListComponent_kendo_resize_sensor_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-resize-sensor\");\n  }\n}\n\nfunction ListComponent_kendo_resize_sensor_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-resize-sensor\");\n  }\n}\n\nfunction ListComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵelement(1, \"div\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r5.totalWidth, \"px\");\n  }\n}\n\nfunction ListComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 18);\n  }\n}\n\nconst _c144 = [\"kendoGridFilterRow\", \"\"];\n\nfunction FilterRowComponent_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 3);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵclassProp(\"k-group-cell\", true);\n  }\n}\n\nfunction FilterRowComponent_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 3);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵclassProp(\"k-hierarchy-cell\", true);\n  }\n}\n\nfunction FilterRowComponent_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 4);\n  }\n\n  if (rf & 2) {\n    const column_r4 = ctx.$implicit;\n    const columnIndex_r5 = ctx.index;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"k-grid-header-sticky\", column_r4.sticky);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r2.addStickyStyles(column_r4))(\"ngClass\", column_r4.filterClass)(\"column\", column_r4)(\"filter\", ctx_r2.filter)(\"logicalRowIndex\", ctx_r2.logicalRowIndex)(\"logicalColIndex\", ctx_r2.lockedColumnsCount + columnIndex_r5);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2.filterLabel(column_r4));\n  }\n}\n\nconst _c145 = [\"kendoGridFilterCell\", \"\"];\n\nfunction FilterCellComponent_ng_template_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementContainer(1, 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"column\", ctx_r1.column)(\"filter\", ctx_r1.filter);\n  }\n}\n\nfunction FilterCellComponent_ng_template_0_ng_container_2_1_ng_template_0_Template(rf, ctx) {}\n\nfunction FilterCellComponent_ng_template_0_ng_container_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, FilterCellComponent_ng_template_0_ng_container_2_1_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.column.filterCellTemplateRef)(\"ngTemplateOutletContext\", ctx_r3.templateContext);\n  }\n}\n\nfunction FilterCellComponent_ng_template_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FilterCellComponent_ng_template_0_ng_container_2_1_Template, 1, 2, undefined, 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.column.filterCellTemplateRef);\n  }\n}\n\nfunction FilterCellComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 1);\n    ɵngcc0.ɵɵtemplate(1, FilterCellComponent_ng_template_0_ng_container_1_Template, 2, 2, \"ng-container\", 2);\n    ɵngcc0.ɵɵtemplate(2, FilterCellComponent_ng_template_0_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r0.hasTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n  }\n}\n\nconst _c146 = [\"*\"];\nconst _c147 = [\"dropdown\"];\n\nconst _c148 = function () {\n  return {\n    width: \"auto\"\n  };\n};\n\nfunction FilterCellOperatorsComponent_kendo_dropdownlist_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-dropdownlist\", 3, 4);\n    ɵngcc0.ɵɵlistener(\"valueChange\", function FilterCellOperatorsComponent_kendo_dropdownlist_0_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onChange($event);\n    })(\"keydown\", function FilterCellOperatorsComponent_kendo_dropdownlist_0_Template_kendo_dropdownlist_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.dropdownKeydown($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r0.operators)(\"value\", ctx_r0.value)(\"valuePrimitive\", true)(\"popupSettings\", ɵngcc0.ɵɵpureFunction0(4, _c148));\n  }\n}\n\nconst _c149 = function (a0) {\n  return {\n    \"k-clear-button-visible\": a0\n  };\n};\n\nconst _c150 = [\"kendoGridColGroup\", \"\"];\n\nfunction ColGroupComponent_ng_template_0_col_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"col\");\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵclassProp(\"k-group-col\", true);\n  }\n}\n\nfunction ColGroupComponent_ng_template_0_col_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"col\");\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵclassProp(\"k-hierarchy-col\", true);\n  }\n}\n\nfunction ColGroupComponent_ng_template_0_col_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"col\");\n  }\n\n  if (rf & 2) {\n    const column_r5 = ctx.$implicit;\n    ɵngcc0.ɵɵstyleProp(\"width\", column_r5.width, \"px\");\n  }\n}\n\nfunction ColGroupComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ColGroupComponent_ng_template_0_col_0_Template, 1, 2, \"col\", 1);\n    ɵngcc0.ɵɵtemplate(1, ColGroupComponent_ng_template_0_col_1_Template, 1, 2, \"col\", 2);\n    ɵngcc0.ɵɵtemplate(2, ColGroupComponent_ng_template_0_col_2_Template, 1, 2, \"col\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.groups);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.detailTemplate == null ? null : ctx_r0.detailTemplate.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.columnsToRender)(\"ngForTrackBy\", ctx_r0.trackBy);\n  }\n}\n\nconst _c151 = [\"kendoGridLoading\", \"\"];\n\nfunction PagerComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"focusin\", function PagerComponent_div_0_Template_div_focusin_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onInnerFocusIn($event, \"start\");\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"tabindex\", ctx_r0.focusTrapTabIndex);\n    ɵngcc0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\n\nfunction PagerComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.template.templateRef)(\"ngTemplateOutletContext\", ctx_r1.templateContext);\n  }\n}\n\nfunction PagerComponent_ng_container_2_kendo_pager_prev_buttons_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-pager-prev-buttons\");\n  }\n}\n\nfunction PagerComponent_ng_container_2_kendo_pager_numeric_buttons_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-pager-numeric-buttons\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"buttonCount\", ctx_r8.settings.buttonCount);\n  }\n}\n\nfunction PagerComponent_ng_container_2_kendo_pager_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-pager-input\");\n  }\n}\n\nfunction PagerComponent_ng_container_2_kendo_pager_next_buttons_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-pager-next-buttons\");\n  }\n}\n\nfunction PagerComponent_ng_container_2_kendo_pager_info_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-pager-info\");\n  }\n}\n\nfunction PagerComponent_ng_container_2_kendo_pager_page_sizes_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-pager-page-sizes\", 9, 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"pageSizes\", ctx_r12.settings.pageSizes);\n  }\n}\n\nfunction PagerComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, PagerComponent_ng_container_2_kendo_pager_prev_buttons_1_Template, 1, 0, \"kendo-pager-prev-buttons\", 2);\n    ɵngcc0.ɵɵtemplate(2, PagerComponent_ng_container_2_kendo_pager_numeric_buttons_2_Template, 1, 1, \"kendo-pager-numeric-buttons\", 6);\n    ɵngcc0.ɵɵtemplate(3, PagerComponent_ng_container_2_kendo_pager_input_3_Template, 1, 0, \"kendo-pager-input\", 2);\n    ɵngcc0.ɵɵtemplate(4, PagerComponent_ng_container_2_kendo_pager_next_buttons_4_Template, 1, 0, \"kendo-pager-next-buttons\", 2);\n    ɵngcc0.ɵɵtemplate(5, PagerComponent_ng_container_2_kendo_pager_info_5_Template, 1, 0, \"kendo-pager-info\", 2);\n    ɵngcc0.ɵɵtemplate(6, PagerComponent_ng_container_2_kendo_pager_page_sizes_6_Template, 2, 1, \"kendo-pager-page-sizes\", 7);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.settings.previousNext);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.settings.type === \"numeric\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.settings.type === \"input\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.settings.previousNext);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.settings.info);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.settings.pageSizes);\n  }\n}\n\nfunction PagerComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"focusin\", function PagerComponent_div_3_Template_div_focusin_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      const ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.onInnerFocusIn($event, \"end\");\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"tabindex\", ctx_r3.focusTrapTabIndex);\n    ɵngcc0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\n\nfunction PagerComponent_kendo_resize_sensor_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-resize-sensor\", 11);\n    ɵngcc0.ɵɵlistener(\"resize\", function PagerComponent_kendo_resize_sensor_4_Template_kendo_resize_sensor_resize_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      const ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return ctx_r16.resizeHandler();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst _c152 = function (a2) {\n  return {\n    \"k-link\": true,\n    \"k-pager-nav\": true,\n    \"k-state-disabled\": a2,\n    \"k-pager-first\": true\n  };\n};\n\nconst _c153 = function () {\n  return {\n    \"k-icon\": true,\n    \"k-i-seek-w\": true\n  };\n};\n\nconst _c154 = function (a2) {\n  return {\n    \"k-link\": true,\n    \"k-pager-nav\": true,\n    \"k-state-disabled\": a2,\n    \"\": true\n  };\n};\n\nconst _c155 = function () {\n  return {\n    \"k-icon\": true,\n    \"k-i-arrow-w\": true\n  };\n};\n\nconst _c156 = function () {\n  return {\n    \"k-icon\": true,\n    \"k-i-arrow-e\": true\n  };\n};\n\nconst _c157 = function (a2) {\n  return {\n    \"k-link\": true,\n    \"k-pager-nav\": true,\n    \"k-state-disabled\": a2,\n    \"k-pager-last\": true\n  };\n};\n\nconst _c158 = function () {\n  return {\n    \"k-icon\": true,\n    \"k-i-seek-e\": true\n  };\n};\n\nfunction PagerNumericButtonsComponent_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 7);\n    ɵngcc0.ɵɵtext(1, \"... \");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.pageLabel(ctx_r0.start - 1));\n  }\n}\n\nconst _c159 = function (a1) {\n  return {\n    \"k-link\": true,\n    \"k-state-selected\": a1\n  };\n};\n\nfunction PagerNumericButtonsComponent_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const num_r6 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", num_r6.toString())(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c159, ctx_r1.currentPage == num_r6));\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1.pageLabel(num_r6))(\"aria-current\", ctx_r1.currentPage == num_r6 ? \"page\" : undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", num_r6, \" \");\n  }\n}\n\nfunction PagerNumericButtonsComponent_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 9);\n    ɵngcc0.ɵɵtext(1, \"... \");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2.pageLabel(ctx_r2.end + 1));\n  }\n}\n\nfunction PagerNumericButtonsComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵelementStart(1, \"span\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerNumericButtonsComponent_li_5_Template_span_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.changePage(ctx_r7.start - 2);\n    })(\"keydown.enter\", function PagerNumericButtonsComponent_li_5_Template_span_keydown_enter_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.changePage(ctx_r9.start - 2);\n    });\n    ɵngcc0.ɵɵtext(2, \"...\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r3.pageLabel(ctx_r3.start - 1));\n  }\n}\n\nconst _c160 = function (a1) {\n  return {\n    \"k-link\": true,\n    \"k-state-selected\": a1,\n    \"k-pager-nav\": true\n  };\n};\n\nfunction PagerNumericButtonsComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵelementStart(1, \"span\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerNumericButtonsComponent_li_6_Template_span_click_1_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12);\n      const num_r10 = restoredCtx.$implicit;\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.changePage(num_r10 - 1);\n    })(\"keydown.enter\", function PagerNumericButtonsComponent_li_6_Template_span_keydown_enter_1_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12);\n      const num_r10 = restoredCtx.$implicit;\n      const ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.changePage(num_r10 - 1);\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const num_r10 = ctx.$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c160, ctx_r4.currentPage == num_r10));\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r4.pageLabel(num_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", num_r10, \" \");\n  }\n}\n\nfunction PagerNumericButtonsComponent_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵelementStart(1, \"span\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerNumericButtonsComponent_li_7_Template_span_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      const ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.changePage(ctx_r14.end);\n    })(\"keydown.enter\", function PagerNumericButtonsComponent_li_7_Template_span_keydown_enter_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      const ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return ctx_r16.changePage(ctx_r16.end);\n    });\n    ɵngcc0.ɵɵtext(2, \"...\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r5.pageLabel(ctx_r5.end + 1));\n  }\n}\n\nconst _c161 = function () {\n  return {\n    \"k-pager-numbers\": true,\n    \"k-reset\": true\n  };\n};\n\nconst _c162 = function () {\n  return {\n    \"k-pager-input\": true,\n    \"k-label\": true\n  };\n};\n\nconst _c163 = function (a0, a1) {\n  return {\n    keydown: a0,\n    focusout: a1\n  };\n};\n\nconst _c164 = [\"kendoGridGroupHeader\", \"\"];\n\nfunction GroupHeaderComponent_ng_template_0_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 4);\n  }\n}\n\nfunction GroupHeaderComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, GroupHeaderComponent_ng_template_0_td_0_Template, 1, 0, \"td\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.prefixGroupCell(ctx_r0.item));\n  }\n}\n\nfunction GroupHeaderComponent_td_1_ng_template_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n    ɵngcc0.ɵɵpipe(1, \"valueOf\");\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r6.groupTitle(ctx_r6.item), \": \", ɵngcc0.ɵɵpipeBind3(1, 2, ctx_r6.item.data, \"value\", ctx_r6.formatForGroup(ctx_r6.item)), \" \");\n  }\n}\n\nfunction GroupHeaderComponent_td_1_ng_template_2_ng_template_2_Template(rf, ctx) {}\n\nconst _c165 = function (a0, a1) {\n  return {\n    \"k-i-collapse\": a0,\n    \"k-i-expand\": a1\n  };\n};\n\nconst _c166 = function (a0, a1, a2, a3, a4, a5, a6, a7) {\n  return {\n    templateRef: a0,\n    group: a1,\n    aggregates: a2,\n    value: a3,\n    field: a4,\n    index: a5,\n    expanded: a6,\n    $implicit: a7\n  };\n};\n\nfunction GroupHeaderComponent_td_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function GroupHeaderComponent_td_1_ng_template_2_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r8.toggleGroup(ctx_r8.item);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(1, GroupHeaderComponent_td_1_ng_template_2_ng_template_1_Template, 2, 6, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(2, GroupHeaderComponent_td_1_ng_template_2_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c165, ctx_r5.isExpanded, !ctx_r5.isExpanded));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.groupHeaderTemplate(ctx_r5.item));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction8(6, _c166, ctx_r5.groupHeaderTemplate(ctx_r5.item), ctx_r5.item.data, ctx_r5.item.data == null ? null : ctx_r5.item.data.aggregates, ctx_r5.item.data == null ? null : ctx_r5.item.data.value, ctx_r5.item.data == null ? null : ctx_r5.item.data.field, ctx_r5.item.index, ctx_r5.isExpanded, ctx_r5.item.data));\n  }\n}\n\nfunction GroupHeaderComponent_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"p\", 6);\n    ɵngcc0.ɵɵtemplate(2, GroupHeaderComponent_td_1_ng_template_2_Template, 3, 15, \"ng-template\", 0);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r1.logicalRowIndex)(\"logicalColIndex\", 0)(\"logicalSlaveCell\", ctx_r1.skipGroupDecoration)(\"groupItem\", ctx_r1.item)(\"colSpan\", ctx_r1.logicalColSpan());\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r1.groupSpan(ctx_r1.item))(\"role\", ctx_r1.ariaRole())(\"aria-expanded\", ctx_r1.isExpanded);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.skipGroupDecoration);\n  }\n}\n\nconst _c167 = function (a0, a1, a2, a3, a4, a5) {\n  return {\n    group: a0,\n    aggregates: a1,\n    value: a2,\n    field: a3,\n    index: a4,\n    $implicit: a5\n  };\n};\n\nfunction GroupHeaderComponent_ng_container_2_td_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 12);\n  }\n\n  if (rf & 2) {\n    const column_r11 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", column_r11.groupHeaderColumnTemplateRef)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction6(2, _c167, ctx_r13.item.data, ctx_r13.item.data == null ? null : ctx_r13.item.data.aggregates, ctx_r13.item.data == null ? null : ctx_r13.item.data.value, ctx_r13.item.data == null ? null : ctx_r13.item.data.field, ctx_r13.item.index, ctx_r13.item.data));\n  }\n}\n\nfunction GroupHeaderComponent_ng_container_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 10);\n    ɵngcc0.ɵɵtemplate(1, GroupHeaderComponent_ng_container_2_td_1_ng_container_1_Template, 1, 9, \"ng-container\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r11 = ctx.$implicit;\n    const index_r12 = ctx.index;\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r10.logicalRowIndex)(\"logicalColIndex\", index_r12 + 1)(\"logicalSlaveCell\", false)(\"groupItem\", ctx_r10.item)(\"colSpan\", 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", column_r11.groupHeaderColumnTemplateRef);\n  }\n}\n\nfunction GroupHeaderComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, GroupHeaderComponent_ng_container_2_td_1_Template, 2, 6, \"td\", 9);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.groupHeaderColumns);\n  }\n}\n\nconst _c168 = function () {\n  return {\n    lastTarget: true\n  };\n};\n\nfunction GroupPanelComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"context\", ɵngcc0.ɵɵpureFunction0(2, _c168));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.text, \" \");\n  }\n}\n\nconst _c169 = function (a0) {\n  return {\n    field: a0\n  };\n};\n\nconst _c170 = function (a0, a2) {\n  return {\n    field: a0,\n    type: \"groupIndicator\",\n    hint: a2\n  };\n};\n\nfunction GroupPanelComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"directionChange\", function GroupPanelComponent_div_1_Template_div_directionChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.directionChange($event);\n    })(\"remove\", function GroupPanelComponent_div_1_Template_div_remove_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.remove($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r3 = ctx.$implicit;\n    const index_r4 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"context\", ɵngcc0.ɵɵpureFunction1(5, _c169, group_r3.field));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"enableDrag\", true)(\"context\", ɵngcc0.ɵɵpureFunction2(7, _c170, group_r3.field, ctx_r1.groupTitles[index_r4]))(\"group\", group_r3)(\"groupTitle\", ctx_r1.groupTitles[index_r4]);\n  }\n}\n\nfunction GroupPanelComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtext(1, \"\\u00A0\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵproperty(\"context\", ɵngcc0.ɵɵpureFunction0(1, _c168));\n  }\n}\n\nconst _c171 = [\"kendoGroupIndicator\", \"\"];\nconst _c172 = [\"anchor\"];\nconst _c173 = [\"template\"];\n\nfunction FilterMenuComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-menu-container\", 4);\n    ɵngcc0.ɵɵlistener(\"close\", function FilterMenuComponent_ng_template_3_Template_kendo_grid_filter_menu_container_close_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.close();\n    })(\"keydown.escape\", function FilterMenuComponent_ng_template_3_Template_kendo_grid_filter_menu_container_keydown_escape_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.close();\n    })(\"keydown.enter\", function FilterMenuComponent_ng_template_3_Template_kendo_grid_filter_menu_container_keydown_enter_0_listener($event) {\n      return $event.stopImmediatePropagation();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"column\", ctx_r2.column)(\"filter\", ctx_r2.filter);\n  }\n}\n\nconst _c174 = function (a1) {\n  return {\n    \"k-grid-filter\": true,\n    \"k-state-active\": a1\n  };\n};\n\nconst _c175 = function (a0, a1) {\n  return {\n    service: a0,\n    column: a1\n  };\n};\n\nfunction ColumnMenuComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    const _r3 = ɵngcc0.ɵɵreference(6);\n\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.column.columnMenuTemplateRef || ctx_r2.columnMenuTemplate || _r3)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c175, ctx_r2.service, ctx_r2.column));\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_sort_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-columnmenu-sort\", 10, 11);\n  }\n\n  if (rf & 2) {\n    const _r11 = ɵngcc0.ɵɵreference(1);\n\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"kendoGridColumnMenuItem\", _r11)(\"service\", ctx_r5.service);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_lock_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-columnmenu-lock\", 10, 12);\n  }\n\n  if (rf & 2) {\n    const _r12 = ɵngcc0.ɵɵreference(1);\n\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"kendoGridColumnMenuItem\", _r12)(\"service\", ctx_r6.service);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_stick_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-columnmenu-stick\", 10, 13);\n  }\n\n  if (rf & 2) {\n    const _r13 = ɵngcc0.ɵɵreference(1);\n\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"kendoGridColumnMenuItem\", _r13)(\"service\", ctx_r7.service);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_position_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-columnmenu-position\", 14, 15);\n  }\n\n  if (rf & 2) {\n    const _r14 = ɵngcc0.ɵɵreference(1);\n\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"showLock\", ctx_r8.hasLock)(\"showStick\", ctx_r8.hasStick)(\"kendoGridColumnMenuItem\", _r14)(\"service\", ctx_r8.service)(\"expanded\", ctx_r8.expandedPosition);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_chooser_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-columnmenu-chooser\", 16, 17);\n  }\n\n  if (rf & 2) {\n    const _r15 = ɵngcc0.ɵɵreference(1);\n\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"kendoGridColumnMenuItem\", _r15)(\"service\", ctx_r9.service)(\"expanded\", ctx_r9.expandedColumns);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_filter_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-columnmenu-filter\", 16, 18);\n  }\n\n  if (rf & 2) {\n    const _r16 = ɵngcc0.ɵɵreference(1);\n\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"kendoGridColumnMenuItem\", _r16)(\"service\", ctx_r10.service)(\"expanded\", ctx_r10.expandedFilter);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-container\", 6);\n    ɵngcc0.ɵɵlistener(\"keydown.escape\", function ColumnMenuComponent_ng_template_5_Template_kendo_grid_columnmenu_container_keydown_escape_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      const ctx_r17 = ɵngcc0.ɵɵnextContext();\n      return ctx_r17.close();\n    })(\"keydown.enter\", function ColumnMenuComponent_ng_template_5_Template_kendo_grid_columnmenu_container_keydown_enter_0_listener($event) {\n      return $event.stopImmediatePropagation();\n    });\n    ɵngcc0.ɵɵtemplate(1, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_sort_1_Template, 2, 2, \"kendo-grid-columnmenu-sort\", 7);\n    ɵngcc0.ɵɵtemplate(2, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_lock_2_Template, 2, 2, \"kendo-grid-columnmenu-lock\", 7);\n    ɵngcc0.ɵɵtemplate(3, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_stick_3_Template, 2, 2, \"kendo-grid-columnmenu-stick\", 7);\n    ɵngcc0.ɵɵtemplate(4, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_position_4_Template, 2, 5, \"kendo-grid-columnmenu-position\", 8);\n    ɵngcc0.ɵɵtemplate(5, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_chooser_5_Template, 2, 3, \"kendo-grid-columnmenu-chooser\", 9);\n    ɵngcc0.ɵɵtemplate(6, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_filter_6_Template, 2, 3, \"kendo-grid-columnmenu-filter\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.hasSort);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.hasLock && !ctx_r4.hasPosition);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.hasStick && !ctx_r4.hasPosition);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.hasPosition);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.hasColumnChooser);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.hasFilter);\n  }\n}\n\nconst _c176 = function (a0) {\n  return {\n    \"k-state-active\": a0\n  };\n};\n\nconst _c177 = [\"kendoGridHeader\", \"\"];\n\nfunction HeaderComponent_ng_template_0_tr_0_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"th\", 7);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"th\", 8);\n  }\n\n  if (rf & 2) {\n    const levelIndex_r4 = ɵngcc0.ɵɵnextContext().index;\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", levelIndex_r4)(\"logicalColIndex\", 0);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_1_kendo_grid_filter_menu_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-filter-menu\", 16);\n  }\n\n  if (rf & 2) {\n    const column_r10 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    const ctx_r19 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"column\", column_r10)(\"filter\", ctx_r19.filter)(\"tabIndex\", ctx_r19.tabIndex);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_1_kendo_grid_column_menu_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-column-menu\", 17);\n  }\n\n  if (rf & 2) {\n    const column_r10 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"standalone\", false)(\"settings\", ctx_r20.columnMenu)(\"column\", column_r10)(\"columnMenuTemplate\", ctx_r20.columnMenuTemplate)(\"sort\", ctx_r20.sort)(\"filter\", ctx_r20.filter)(\"sortable\", ctx_r20.sortable)(\"tabIndex\", ctx_r20.tabIndex);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_1_ng_template_2_Template(rf, ctx) {}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const column_r10 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    ɵngcc0.ɵɵtextInterpolate(column_r10.displayTitle);\n  }\n}\n\nconst _c178 = function (a0, a1, a2, a3) {\n  return {\n    templateRef: a0,\n    columnIndex: a1,\n    column: a2,\n    $implicit: a3\n  };\n};\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_1_kendo_grid_filter_menu_0_Template, 1, 3, \"kendo-grid-filter-menu\", 13);\n    ɵngcc0.ɵɵtemplate(1, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_1_kendo_grid_column_menu_1_Template, 1, 8, \"kendo-grid-column-menu\", 14);\n    ɵngcc0.ɵɵtemplate(2, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_1_ng_template_2_Template, 0, 0, \"ng-template\", 15);\n    ɵngcc0.ɵɵtemplate(3, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_1_ng_template_3_Template, 1, 1, \"ng-template\", 0);\n  }\n\n  if (rf & 2) {\n    const column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r15 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r15.showFilterMenu && ctx_r15.isFilterable(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r15.showColumnMenu(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction4(4, _c178, column_r10.headerTemplateRef, column_r10.leafIndex, column_r10, column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !column_r10.headerTemplateRef);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_2_ng_template_3_Template(rf, ctx) {}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_2_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 24);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r10 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(column_r10.displayTitle);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_2_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 25);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r10 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    const ctx_r30 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r30.sortOrder(column_r10.field));\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_2_kendo_grid_filter_menu_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-filter-menu\", 16);\n  }\n\n  if (rf & 2) {\n    const column_r10 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    const ctx_r31 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"column\", column_r10)(\"filter\", ctx_r31.filter)(\"tabIndex\", ctx_r31.tabIndex);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_2_kendo_grid_column_menu_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-column-menu\", 17);\n  }\n\n  if (rf & 2) {\n    const column_r10 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    const ctx_r32 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"standalone\", false)(\"settings\", ctx_r32.columnMenu)(\"column\", column_r10)(\"columnMenuTemplate\", ctx_r32.columnMenuTemplate)(\"sort\", ctx_r32.sort)(\"filter\", ctx_r32.filter)(\"sortable\", ctx_r32.sortable)(\"tabIndex\", ctx_r32.tabIndex);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 18);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 19, 20);\n    ɵngcc0.ɵɵlistener(\"click\", function HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_2_Template_span_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r39);\n\n      const _r27 = ɵngcc0.ɵɵreference(2);\n\n      const column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n      const ctx_r37 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r37.onSortClick(column_r10, $event, _r27);\n    });\n    ɵngcc0.ɵɵtemplate(3, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_2_ng_template_3_Template, 0, 0, \"ng-template\", 15);\n    ɵngcc0.ɵɵtemplate(4, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_2_ng_template_4_Template, 2, 1, \"ng-template\", 0);\n    ɵngcc0.ɵɵelement(5, \"span\", 21);\n    ɵngcc0.ɵɵtemplate(6, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_2_span_6_Template, 2, 1, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(7, \"span\", 23);\n    ɵngcc0.ɵɵtemplate(8, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_2_kendo_grid_filter_menu_8_Template, 1, 3, \"kendo-grid-filter-menu\", 13);\n    ɵngcc0.ɵɵtemplate(9, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_2_kendo_grid_column_menu_9_Template, 1, 8, \"kendo-grid-column-menu\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction4(8, _c178, column_r10.headerTemplateRef, column_r10.leafIndex, column_r10, column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !column_r10.headerTemplateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r16.sortIcon(column_r10.field));\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r16.sortableLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r16.showSortNumbering(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHtml\", ctx_r16.sortStatus(column_r10), ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r16.showFilterMenu && ctx_r16.isFilterable(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r16.showColumnMenu(column_r10));\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 26);\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(5);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r17.selectAllCheckboxId())(\"aria-label\", ctx_r17.selectAllCheckboxLabel);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 27);\n  }\n\n  if (rf & 2) {\n    const column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r18 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"column\", column_r10)(\"columns\", ctx_r18.columns);\n  }\n}\n\nconst _c179 = function (a0, a2, a3, a4) {\n  return {\n    field: a0,\n    type: \"column\",\n    column: a2,\n    hint: a3,\n    lastColumn: a4\n  };\n};\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"th\", 11);\n    ɵngcc0.ɵɵlistener(\"keydown\", function HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_Template_th_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r44);\n      const column_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r42 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r42.onHeaderKeydown(column_r10, $event);\n    });\n    ɵngcc0.ɵɵtemplate(1, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_1_Template, 4, 9, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(2, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_2_Template, 10, 13, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(3, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_3_Template, 1, 2, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(4, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_span_4_Template, 1, 2, \"span\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r45 = ɵngcc0.ɵɵnextContext();\n    const column_r10 = ctx_r45.$implicit;\n    const columnIndex_r11 = ctx_r45.index;\n    const last_r12 = ctx_r45.last;\n    const levelIndex_r4 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"k-filterable\", ctx_r13.showFilterMenu && ctx_r13.isFilterable(column_r10) || ctx_r13.showColumnMenu(column_r10))(\"k-first\", ctx_r13.isFirstOnRow(column_r10, columnIndex_r11))(\"k-grid-header-sticky\", column_r10.sticky);\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", levelIndex_r4)(\"logicalColIndex\", ctx_r13.logicalColumnIndex(column_r10))(\"headerLabelText\", column_r10.title || column_r10.field)(\"colSpan\", column_r10.colspan)(\"rowSpan\", column_r10.rowspan(ctx_r13.totalColumnLevels))(\"enableDrag\", ctx_r13.shouldActivate(column_r10))(\"context\", ɵngcc0.ɵɵpureFunction4(22, _c179, column_r10.field, column_r10, column_r10.title || column_r10.field, last_r12 && columnIndex_r11 === 0))(\"ngClass\", column_r10.headerClass)(\"ngStyle\", column_r10.sticky ? ctx_r13.addStickyStyles(column_r10) : column_r10.headerStyle);\n    ɵngcc0.ɵɵattribute(\"aria-sort\", ctx_r13.sortState(column_r10))(\"rowspan\", column_r10.rowspan(ctx_r13.totalColumnLevels))(\"colspan\", column_r10.colspan);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r13.isSortable(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.isSortable(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.isCheckboxColumn(column_r10) && !column_r10.headerTemplateRef && column_r10.showSelectAll);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.resizable);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_kendo_grid_column_menu_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-column-menu\", 30);\n  }\n\n  if (rf & 2) {\n    const column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r47 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"standalone\", false)(\"settings\", ctx_r47.columnMenu)(\"column\", column_r10)(\"columnMenuTemplate\", ctx_r47.columnMenuTemplate);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_ng_template_2_Template(rf, ctx) {}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵtextInterpolate(column_r10.displayTitle);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 27);\n  }\n\n  if (rf & 2) {\n    const column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r50 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"column\", column_r10)(\"columns\", ctx_r50.columns);\n  }\n}\n\nconst _c180 = function (a1, a2, a3) {\n  return {\n    type: \"columnGroup\",\n    column: a1,\n    hint: a2,\n    lastColumn: a3\n  };\n};\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 28);\n    ɵngcc0.ɵɵtemplate(1, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_kendo_grid_column_menu_1_Template, 1, 4, \"kendo-grid-column-menu\", 29);\n    ɵngcc0.ɵɵtemplate(2, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_ng_template_2_Template, 0, 0, \"ng-template\", 15);\n    ɵngcc0.ɵɵtemplate(3, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_ng_template_3_Template, 1, 1, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(4, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_span_4_Template, 1, 2, \"span\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r54 = ɵngcc0.ɵɵnextContext();\n    const column_r10 = ctx_r54.$implicit;\n    const columnIndex_r11 = ctx_r54.index;\n    const last_r12 = ctx_r54.last;\n    const levelIndex_r4 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"k-first\", ctx_r14.isFirstOnRow(column_r10, columnIndex_r11))(\"k-filterable\", ctx_r14.showColumnMenu(column_r10))(\"k-grid-content-sticky\", column_r10.sticky);\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", levelIndex_r4)(\"logicalColIndex\", ctx_r14.logicalColumnIndex(column_r10))(\"rowSpan\", column_r10.rowspan(ctx_r14.totalColumnLevels))(\"colSpan\", column_r10.colspan)(\"headerLabelText\", column_r10.title || column_r10.field)(\"enableDrag\", ctx_r14.shouldActivate(column_r10))(\"context\", ɵngcc0.ɵɵpureFunction3(21, _c180, column_r10, column_r10.title, last_r12 && columnIndex_r11 === 0))(\"ngClass\", column_r10.headerClass)(\"ngStyle\", column_r10.headerStyle);\n    ɵngcc0.ɵɵattribute(\"rowspan\", column_r10.rowspan(ctx_r14.totalColumnLevels))(\"colspan\", column_r10.colspan);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r14.showColumnMenu(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction4(25, _c178, column_r10.headerTemplateRef, ctx_r14.lockedColumnsCount + columnIndex_r11, column_r10, column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !column_r10.headerTemplateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r14.resizable);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_Template, 5, 27, \"th\", 9);\n    ɵngcc0.ɵɵtemplate(1, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_Template, 5, 30, \"th\", 10);\n  }\n\n  if (rf & 2) {\n    const column_r10 = ctx.$implicit;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r7.isColumnGroupComponent(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.isColumnGroupComponent(column_r10));\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 3);\n    ɵngcc0.ɵɵtemplate(1, HeaderComponent_ng_template_0_tr_0_th_1_Template, 1, 0, \"th\", 4);\n    ɵngcc0.ɵɵtemplate(2, HeaderComponent_ng_template_0_tr_0_th_2_Template, 1, 2, \"th\", 5);\n    ɵngcc0.ɵɵtemplate(3, HeaderComponent_ng_template_0_tr_0_ng_template_3_Template, 2, 2, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const levelIndex_r4 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", levelIndex_r4)(\"logicalSlaveRow\", ctx_r1.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r1.columns.length)(\"logicalSlaveCellsCount\", ctx_r1.unlockedColumnsCount);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.groups);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.detailTemplate == null ? null : ctx_r1.detailTemplate.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.columnsForLevel(levelIndex_r4))(\"ngForTrackBy\", ctx_r1.trackByIndex);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tr\", 31);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r2.leafColumns)(\"filter\", ctx_r2.filter)(\"groups\", ctx_r2.groups)(\"detailTemplate\", ctx_r2.detailTemplate)(\"lockedColumnsCount\", ctx_r2.lockedColumnsCount)(\"logicalRowIndex\", ctx_r2.totalColumnLevels + 1)(\"logicalSlaveRow\", ctx_r2.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r2.columns.length)(\"logicalSlaveCellsCount\", ctx_r2.unlockedColumnsCount);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, HeaderComponent_ng_template_0_tr_0_Template, 4, 8, \"tr\", 1);\n    ɵngcc0.ɵɵtemplate(1, HeaderComponent_ng_template_0_tr_1_Template, 1, 9, \"tr\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.columnLevels);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.showFilterRow);\n  }\n}\n\nconst _c181 = [\"resetButton\"];\nconst _c182 = [\"filterButton\"];\n\nfunction FilterMenuContainerComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementContainer(1, 9);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"filterService\", ctx_r0.childService)(\"column\", ctx_r0.column)(\"filter\", ctx_r0.childFilter)(\"menuTabbingService\", ctx_r0.menuTabbingService);\n  }\n}\n\nfunction FilterMenuContainerComponent_ng_container_4_1_ng_template_0_Template(rf, ctx) {}\n\nfunction FilterMenuContainerComponent_ng_container_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, FilterMenuContainerComponent_ng_container_4_1_ng_template_0_Template, 0, 0, \"ng-template\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.column.filterMenuTemplateRef)(\"ngTemplateOutletContext\", ctx_r4.templateContext);\n  }\n}\n\nfunction FilterMenuContainerComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FilterMenuContainerComponent_ng_container_4_1_Template, 1, 2, undefined, 10);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.column.filterMenuTemplateRef);\n  }\n}\n\nfunction StringFilterMenuComponent_kendo_dropdownlist_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-dropdownlist\", 3);\n    ɵngcc0.ɵɵlistener(\"valueChange\", function StringFilterMenuComponent_kendo_dropdownlist_1_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.logicChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"filterMenuDropDownLabel\", ctx_r0.filterMenuDropDownLabel)(\"data\", ctx_r0.logicOperators)(\"valuePrimitive\", true)(\"value\", ctx_r0.filter == null ? null : ctx_r0.filter.logic);\n  }\n}\n\nfunction StringFilterMenuComponent_kendo_grid_string_filter_menu_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-string-filter-menu-input\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"operators\", ctx_r1.operators)(\"currentFilter\", ctx_r1.secondFilter)(\"filterService\", ctx_r1.filterService)(\"column\", ctx_r1.column)(\"filter\", ctx_r1.filter)(\"menuTabbingService\", ctx_r1.menuTabbingService);\n  }\n}\n\nfunction NumericFilterMenuComponent_kendo_dropdownlist_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-dropdownlist\", 3);\n    ɵngcc0.ɵɵlistener(\"valueChange\", function NumericFilterMenuComponent_kendo_dropdownlist_1_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.logicChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"filterMenuDropDownLabel\", ctx_r0.filterMenuDropDownLabel)(\"data\", ctx_r0.logicOperators)(\"valuePrimitive\", true)(\"value\", ctx_r0.filter == null ? null : ctx_r0.filter.logic);\n  }\n}\n\nfunction NumericFilterMenuComponent_kendo_grid_numeric_filter_menu_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-numeric-filter-menu-input\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"operators\", ctx_r1.operators)(\"currentFilter\", ctx_r1.secondFilter)(\"filterService\", ctx_r1.filterService)(\"column\", ctx_r1.column)(\"filter\", ctx_r1.filter)(\"format\", ctx_r1.format)(\"decimals\", ctx_r1.decimals)(\"spinners\", ctx_r1.spinners)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"step\", ctx_r1.step)(\"menuTabbingService\", ctx_r1.menuTabbingService);\n  }\n}\n\nfunction DateFilterMenuComponent_kendo_dropdownlist_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-dropdownlist\", 3);\n    ɵngcc0.ɵɵlistener(\"valueChange\", function DateFilterMenuComponent_kendo_dropdownlist_1_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.logicChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"filterMenuDropDownLabel\", ctx_r0.filterMenuDropDownLabel)(\"data\", ctx_r0.logicOperators)(\"valuePrimitive\", true)(\"value\", ctx_r0.filter == null ? null : ctx_r0.filter.logic);\n  }\n}\n\nfunction DateFilterMenuComponent_kendo_grid_date_filter_menu_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-date-filter-menu-input\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"operators\", ctx_r1.operators)(\"currentFilter\", ctx_r1.secondFilter)(\"filterService\", ctx_r1.filterService)(\"column\", ctx_r1.column)(\"filter\", ctx_r1.filter)(\"activeView\", ctx_r1.activeView)(\"bottomView\", ctx_r1.bottomView)(\"topView\", ctx_r1.topView)(\"format\", ctx_r1.format)(\"formatPlaceholder\", ctx_r1.formatPlaceholder)(\"placeholder\", ctx_r1.placeholder)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"weekNumber\", ctx_r1.weekNumber)(\"menuTabbingService\", ctx_r1.menuTabbingService);\n  }\n}\n\nfunction BooleanFilterMenuComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵelementStart(1, \"input\", 2, 3);\n    ɵngcc0.ɵɵlistener(\"change\", function BooleanFilterMenuComponent_li_1_Template_input_change_1_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r4);\n      const item_r1 = restoredCtx.$implicit;\n\n      const _r2 = ɵngcc0.ɵɵreference(2);\n\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.onChange(item_r1.value, _r2);\n    })(\"keydown.shift.tab\", function BooleanFilterMenuComponent_li_1_Template_input_keydown_shift_tab_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onShiftTab($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"label\", 4);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"columnLabel\", ctx_r0.columnLabel)(\"name\", ctx_r0.idPrefix)(\"checked\", ctx_r0.isSelected(item_r1.value));\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r0.radioId(item_r1.value));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r0.radioId(item_r1.value));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(item_r1.text);\n  }\n}\n\nconst _c183 = [\"applyButton\"];\n\nfunction ColumnListComponent_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 3);\n    ɵngcc0.ɵɵelement(1, \"input\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 5);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r2 = ctx.$implicit;\n    const index_r3 = ctx.index;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"checked\", !column_r2.hidden)(\"disabled\", ctx_r0.isDisabled(column_r2));\n    ɵngcc0.ɵɵattribute(\"data-index\", index_r3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(column_r2.displayTitle);\n  }\n}\n\nfunction ColumnListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function ColumnListComponent_div_2_Template_button_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.cancelChanges();\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"button\", 8, 9);\n    ɵngcc0.ɵɵlistener(\"keydown.tab\", function ColumnListComponent_div_2_Template_button_keydown_tab_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.onTab($event);\n    })(\"click\", function ColumnListComponent_div_2_Template_button_click_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.applyChanges();\n    });\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.actionsClass);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.resetText);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.applyText);\n  }\n}\n\nfunction ColumnChooserComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"kendo-grid-columnlist\", 5);\n    ɵngcc0.ɵɵlistener(\"apply\", function ColumnChooserComponent_ng_template_3_Template_kendo_grid_columnlist_apply_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.onApply($event);\n    })(\"columnChange\", function ColumnChooserComponent_ng_template_3_Template_kendo_grid_columnlist_columnChange_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.localization.get(\"columns\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r2.columns)(\"applyText\", ctx_r2.localization.get(\"columnsApply\"))(\"resetText\", ctx_r2.localization.get(\"columnsReset\"))(\"autoSync\", ctx_r2.autoSync)(\"allowHideAll\", ctx_r2.allowHideAll);\n  }\n}\n\nfunction ColumnMenuChooserComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnlist\", 2);\n    ɵngcc0.ɵɵlistener(\"apply\", function ColumnMenuChooserComponent_ng_template_1_Template_kendo_grid_columnlist_apply_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.onApply($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"applyText\", ctx_r0.localization.get(\"columnsApply\"))(\"resetText\", ctx_r0.localization.get(\"columnsReset\"))(\"columns\", ctx_r0.columns)(\"autoSync\", false)(\"allowHideAll\", false)(\"actionsClass\", ctx_r0.actionsClass)(\"isLast\", ctx_r0.isLast)(\"isExpanded\", ctx_r0.expanded)(\"service\", ctx_r0.service);\n  }\n}\n\nfunction ColumnMenuFilterComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-menu-container\", 2);\n    ɵngcc0.ɵɵlistener(\"keydown.shift.tab\", function ColumnMenuFilterComponent_ng_template_1_Template_kendo_grid_filter_menu_container_keydown_shift_tab_0_listener($event) {\n      return $event.stopImmediatePropagation();\n    })(\"close\", function ColumnMenuFilterComponent_ng_template_1_Template_kendo_grid_filter_menu_container_close_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.close();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"column\", ctx_r0.service.column)(\"menuTabbingService\", ctx_r0.service.menuTabbingService)(\"filter\", ctx_r0.service.filter)(\"actionsClass\", ctx_r0.actionsClass)(\"isLast\", ctx_r0.isLast)(\"isExpanded\", ctx_r0.expanded);\n  }\n}\n\nfunction ColumnMenuItemComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.iconClass);\n  }\n}\n\nfunction ColumnMenuItemComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵelementContainer(1, 5);\n    ɵngcc0.ɵɵelement(2, \"div\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@state\", ctx_r1.contentState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.contentTemplate.templateRef);\n  }\n}\n\nfunction ColumnMenuPositionComponent_ng_template_1_kendo_grid_columnmenu_lock_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-lock\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown.tab\", function ColumnMenuPositionComponent_ng_template_1_kendo_grid_columnmenu_lock_0_Template_kendo_grid_columnmenu_lock_keydown_tab_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r3.onTab($event, !ctx_r3.showStick);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"service\", ctx_r1.service);\n  }\n}\n\nfunction ColumnMenuPositionComponent_ng_template_1_kendo_grid_columnmenu_stick_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-stick\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown.tab\", function ColumnMenuPositionComponent_ng_template_1_kendo_grid_columnmenu_stick_1_Template_kendo_grid_columnmenu_stick_keydown_tab_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r5.onTab($event, true);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"service\", ctx_r2.service);\n  }\n}\n\nfunction ColumnMenuPositionComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ColumnMenuPositionComponent_ng_template_1_kendo_grid_columnmenu_lock_0_Template, 1, 1, \"kendo-grid-columnmenu-lock\", 2);\n    ɵngcc0.ɵɵtemplate(1, ColumnMenuPositionComponent_ng_template_1_kendo_grid_columnmenu_stick_1_Template, 1, 1, \"kendo-grid-columnmenu-stick\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.showLock);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.showStick);\n  }\n}\n\nconst _c184 = [\"kendoGridTableBody\", \"\"];\n\nfunction TableBodyComponent_ng_template_0_ng_template_1_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 8);\n  }\n}\n\nfunction TableBodyComponent_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TableBodyComponent_ng_template_0_ng_template_1_td_0_Template, 1, 0, \"td\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r4.groups);\n  }\n}\n\nfunction TableBodyComponent_ng_template_0_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r5.addRowLogicalIndex())(\"logicalColIndex\", 0);\n  }\n}\n\nfunction TableBodyComponent_ng_template_0_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 10);\n  }\n\n  if (rf & 2) {\n    const column_r9 = ctx.$implicit;\n    const columnIndex_r10 = ctx.index;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"left\", column_r9.sticky ? \"0\" : undefined);\n    ɵngcc0.ɵɵclassProp(\"k-grid-content-sticky\", column_r9.sticky);\n    ɵngcc0.ɵɵproperty(\"rowIndex\", -1)(\"columnIndex\", ctx_r6.lockedColumnsCount + columnIndex_r10)(\"isNew\", true)(\"column\", column_r9)(\"dataItem\", ctx_r6.newDataItem)(\"ngClass\", column_r9.cssClass)(\"ngStyle\", column_r9.sticky ? ctx_r6.addStickyColumnStyles(column_r9) : column_r9.style)(\"logicalRowIndex\", ctx_r6.addRowLogicalIndex())(\"logicalColIndex\", ctx_r6.logicalColIndex(column_r9))(\"colSpan\", column_r9.colspan);\n    ɵngcc0.ɵɵattribute(\"colspan\", column_r9.colspan);\n  }\n}\n\nfunction TableBodyComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_template_0_ng_template_1_Template, 1, 1, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(2, TableBodyComponent_ng_template_0_td_2_Template, 1, 2, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(3, TableBodyComponent_ng_template_0_td_3_Template, 1, 15, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r0.addRowLogicalIndex())(\"logicalSlaveRow\", ctx_r0.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r0.columns.length)(\"logicalSlaveCellsCount\", ctx_r0.unlockedColumnsCount);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.skipGroupDecoration);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.detailTemplate == null ? null : ctx_r0.detailTemplate.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.columns)(\"ngForTrackBy\", ctx_r0.trackByColumns);\n  }\n}\n\nfunction TableBodyComponent_tr_1_ng_template_2_Template(rf, ctx) {}\n\nfunction TableBodyComponent_tr_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r12.noRecordsText, \" \");\n  }\n}\n\nconst _c185 = function (a0) {\n  return {\n    templateRef: a0\n  };\n};\n\nfunction TableBodyComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 11);\n    ɵngcc0.ɵɵelementStart(1, \"td\");\n    ɵngcc0.ɵɵtemplate(2, TableBodyComponent_tr_1_ng_template_2_Template, 0, 0, \"ng-template\", 12);\n    ɵngcc0.ɵɵtemplate(3, TableBodyComponent_tr_1_ng_container_3_Template, 2, 1, \"ng-container\", 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r1.colSpan);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.noRecordsTemplate == null ? null : ctx_r1.noRecordsTemplate.templateRef)(\"templateContext\", ɵngcc0.ɵɵpureFunction1(4, _c185, ctx_r1.noRecordsTemplate == null ? null : ctx_r1.noRecordsTemplate.templateRef));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx_r1.noRecordsTemplate == null ? null : ctx_r1.noRecordsTemplate.templateRef));\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tr\", 18);\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = ɵngcc0.ɵɵnextContext();\n    const item_r13 = ctx_r19.$implicit;\n    const rowIndex_r14 = ctx_r19.index;\n    const ctx_r15 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r15.columns)(\"groups\", ctx_r15.groups)(\"item\", item_r13)(\"hasDetails\", ctx_r15.detailTemplate == null ? null : ctx_r15.detailTemplate.templateRef)(\"skipGroupDecoration\", ctx_r15.skipGroupDecoration)(\"hasGroupHeaderColumn\", ctx_r15.hasGroupHeaderColumn)(\"groupHeaderColumns\", ctx_r15.groupHeaderColumns)(\"rowIndex\", rowIndex_r14 + 1)(\"totalColumnsCount\", ctx_r15.totalColumnsCount)(\"logicalRowIndex\", ctx_r15.logicalRowIndex(rowIndex_r14))(\"logicalSlaveRow\", ctx_r15.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r15.columns.length)(\"logicalSlaveCellsCount\", ctx_r15.groupHeaderSlaveCellsCount);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_1_ng_template_1_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 8);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TableBodyComponent_ng_template_2_tr_1_ng_template_1_td_0_Template, 1, 0, \"td\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r20.groups);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_1_td_2_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 24);\n    ɵngcc0.ɵɵlistener(\"click\", function TableBodyComponent_ng_template_2_tr_1_td_2_a_1_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      const item_r13 = ɵngcc0.ɵɵnextContext(3).$implicit;\n      const ctx_r26 = ɵngcc0.ɵɵnextContext();\n      return ctx_r26.toggleRow(item_r13.index, item_r13.data);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r13 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    const ctx_r25 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r25.detailButtonStyles(item_r13));\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r25.detailButtonTitle(item_r13));\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_1_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 22);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_template_2_tr_1_td_2_a_1_Template, 1, 2, \"a\", 23);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r30 = ɵngcc0.ɵɵnextContext(2);\n    const rowIndex_r14 = ctx_r30.index;\n    const item_r13 = ctx_r30.$implicit;\n    const ctx_r21 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r21.logicalRowIndex(rowIndex_r14))(\"logicalColIndex\", 0)(\"dataRowIndex\", item_r13.index)(\"dataItem\", item_r13.data)(\"detailExpandCell\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r21.detailTemplate.showIf(item_r13.data, item_r13.index));\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_1_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 25);\n  }\n\n  if (rf & 2) {\n    const column_r31 = ctx.$implicit;\n    const columnIndex_r32 = ctx.index;\n    const ctx_r33 = ɵngcc0.ɵɵnextContext(2);\n    const item_r13 = ctx_r33.$implicit;\n    const rowIndex_r14 = ctx_r33.index;\n    const ctx_r22 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"k-grid-content-sticky\", column_r31.sticky)(\"k-touch-action-none\", ctx_r22.isSelectable() && ctx_r22.selectable.drag)(\"k-touch-action-auto\", !(ctx_r22.isSelectable() && ctx_r22.selectable.drag))(\"k-grid-edit-cell\", ctx_r22.isEditingCell(item_r13.index, column_r31))(\"k-state-selected\", ctx_r22.isSelectable && ctx_r22.cellSelectionService.isCellSelected(item_r13, column_r31));\n    ɵngcc0.ɵɵproperty(\"rowIndex\", item_r13.index)(\"columnIndex\", ctx_r22.lockedColumnsCount + columnIndex_r32)(\"column\", column_r31)(\"dataItem\", item_r13.data)(\"isLoading\", ctx_r22.isLoading)(\"isVirtual\", ctx_r22.isVirtual)(\"loadingTemplate\", ctx_r22.loadingTemplate)(\"logicalRowIndex\", ctx_r22.logicalRowIndex(rowIndex_r14))(\"logicalColIndex\", ctx_r22.logicalColIndex(column_r31))(\"dataRowIndex\", item_r13.index)(\"dataItem\", item_r13.data)(\"colIndex\", columnIndex_r32)(\"colSpan\", column_r31.colspan)(\"ngClass\", column_r31.cssClass)(\"ngStyle\", column_r31.sticky ? ctx_r22.addStickyColumnStyles(column_r31) : column_r31.style);\n    ɵngcc0.ɵɵattribute(\"data-kendo-grid-column-index\", ctx_r22.lockedColumnsCount + columnIndex_r32)(\"aria-selected\", ctx_r22.isSelectable() ? ctx_r22.isAriaSelected(item_r13, column_r31) : undefined)(\"colspan\", column_r31.colspan);\n  }\n}\n\nconst _c186 = function (a0, a1) {\n  return {\n    dataItem: a0,\n    index: a1\n  };\n};\n\nfunction TableBodyComponent_ng_template_2_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 19);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_template_2_tr_1_ng_template_1_Template, 1, 1, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(2, TableBodyComponent_ng_template_2_tr_1_td_2_Template, 2, 6, \"td\", 20);\n    ɵngcc0.ɵɵtemplate(3, TableBodyComponent_ng_template_2_tr_1_td_3_Template, 1, 28, \"td\", 21);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r34 = ɵngcc0.ɵɵnextContext();\n    const item_r13 = ctx_r34.$implicit;\n    const rowIndex_r14 = ctx_r34.index;\n    const ctx_r16 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"k-grid-row-sticky\", ctx_r16.rowSticky ? ctx_r16.rowSticky(ɵngcc0.ɵɵpureFunction2(22, _c186, item_r13.data, item_r13.index)) : false)(\"k-alt\", ctx_r16.isOdd(item_r13))(\"k-master-row\", ctx_r16.detailTemplate == null ? null : ctx_r16.detailTemplate.templateRef)(\"k-grid-edit-row\", ctx_r16.isEditingRow(item_r13.index))(\"k-state-selected\", ctx_r16.isSelectable() && ctx_r16.isRowSelected(item_r13));\n    ɵngcc0.ɵɵproperty(\"dataRowIndex\", item_r13.index)(\"dataItem\", item_r13.data)(\"logicalRowIndex\", ctx_r16.logicalRowIndex(rowIndex_r14))(\"logicalSlaveRow\", ctx_r16.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r16.columns.length)(\"logicalSlaveCellsCount\", ctx_r16.unlockedColumnsCount)(\"ngClass\", ctx_r16.rowClass(ɵngcc0.ɵɵpureFunction2(25, _c186, item_r13.data, item_r13.index)));\n    ɵngcc0.ɵɵattribute(\"data-kendo-grid-item-index\", item_r13.index);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r16.skipGroupDecoration);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r16.detailTemplate == null ? null : ctx_r16.detailTemplate.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r16.columns)(\"ngForTrackBy\", ctx_r16.trackByColumns);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 31);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_2_ng_template_4_Template(rf, ctx) {}\n\nconst _c187 = function (a0, a1, a2) {\n  return {\n    dataItem: a0,\n    rowIndex: a1,\n    $implicit: a2\n  };\n};\n\nfunction TableBodyComponent_ng_template_2_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 26);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_template_2_tr_2_td_1_Template, 1, 0, \"td\", 27);\n    ɵngcc0.ɵɵelement(2, \"td\", 28);\n    ɵngcc0.ɵɵelementStart(3, \"td\", 29);\n    ɵngcc0.ɵɵtemplate(4, TableBodyComponent_ng_template_2_tr_2_ng_template_4_Template, 0, 0, \"ng-template\", 30);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r38 = ɵngcc0.ɵɵnextContext();\n    const item_r13 = ctx_r38.$implicit;\n    const rowIndex_r14 = ctx_r38.index;\n    const ctx_r17 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"k-alt\", ctx_r17.isOdd(item_r13));\n    ɵngcc0.ɵɵproperty(\"dataRowIndex\", item_r13.index)(\"dataItem\", item_r13.data)(\"logicalRowIndex\", ctx_r17.logicalRowIndex(rowIndex_r14) + 1)(\"logicalSlaveRow\", false)(\"logicalCellsCount\", 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r17.groups);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r17.logicalRowIndex(rowIndex_r14) + 1)(\"logicalColIndex\", 0)(\"dataRowIndex\", item_r13.index)(\"dataItem\", item_r13.data)(\"colIndex\", 0)(\"colSpan\", ctx_r17.allColumnsSpan + 1);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r17.columnsSpan);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r17.detailTemplate.templateRef)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(17, _c187, item_r13.data, item_r13.index, item_r13.data));\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_3_ng_template_1_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 31);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TableBodyComponent_ng_template_2_tr_3_ng_template_1_td_0_Template, 1, 0, \"td\", 27);\n  }\n\n  if (rf & 2) {\n    const ctx_r39 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r39.groups);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_3_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 9);\n  }\n\n  if (rf & 2) {\n    const rowIndex_r14 = ɵngcc0.ɵɵnextContext(2).index;\n    const ctx_r40 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r40.logicalRowIndex(rowIndex_r14))(\"logicalColIndex\", 0);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_3_td_3_ng_template_1_Template(rf, ctx) {}\n\nconst _c188 = function (a0, a1, a2, a3, a4, a5) {\n  return {\n    templateRef: a0,\n    group: a1,\n    field: a2,\n    column: a3,\n    aggregates: a4,\n    $implicit: a5\n  };\n};\n\nfunction TableBodyComponent_ng_template_2_tr_3_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 34);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_template_2_tr_3_td_3_ng_template_1_Template, 0, 0, \"ng-template\", 35);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r45 = ctx.$implicit;\n    const ctx_r48 = ɵngcc0.ɵɵnextContext(2);\n    const rowIndex_r14 = ctx_r48.index;\n    const item_r13 = ctx_r48.$implicit;\n    const ctx_r41 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r41.logicalRowIndex(rowIndex_r14))(\"logicalColIndex\", ctx_r41.logicalColIndex(column_r45));\n    ɵngcc0.ɵɵattribute(\"data-skip\", ctx_r41.skipGroupDecoration);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction6(4, _c188, column_r45.groupFooterTemplateRef, item_r13.data, column_r45.field, column_r45, item_r13.data == null ? null : item_r13.data.aggregates, item_r13.data == null ? null : item_r13.data.aggregates));\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 32);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_template_2_tr_3_ng_template_1_Template, 1, 1, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(2, TableBodyComponent_ng_template_2_tr_3_td_2_Template, 1, 2, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(3, TableBodyComponent_ng_template_2_tr_3_td_3_Template, 2, 11, \"td\", 33);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r14 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r18 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r18.logicalRowIndex(rowIndex_r14))(\"logicalSlaveRow\", ctx_r18.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r18.columns.length)(\"logicalSlaveCellsCount\", ctx_r18.unlockedColumnsCount);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r18.skipGroupDecoration);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r18.detailTemplate == null ? null : ctx_r18.detailTemplate.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r18.footerColumns)(\"ngForTrackBy\", ctx_r18.trackByColumns);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TableBodyComponent_ng_template_2_tr_0_Template, 1, 13, \"tr\", 14);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_template_2_tr_1_Template, 4, 28, \"tr\", 15);\n    ɵngcc0.ɵɵtemplate(2, TableBodyComponent_ng_template_2_tr_2_Template, 5, 21, \"tr\", 16);\n    ɵngcc0.ɵɵtemplate(3, TableBodyComponent_ng_template_2_tr_3_Template, 4, 8, \"tr\", 17);\n  }\n\n  if (rf & 2) {\n    const item_r13 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isGroup(item_r13) && ctx_r2.isParentGroupExpanded(item_r13) && ctx_r2.showGroupHeader(item_r13));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isDataItem(item_r13) && (!item_r13.group || ctx_r2.isDataItemInExpandedGroup(item_r13)));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isDataItem(item_r13) && (!item_r13.group || ctx_r2.isDataItemInExpandedGroup(item_r13)) && (ctx_r2.detailTemplate == null ? null : ctx_r2.detailTemplate.templateRef) && ctx_r2.detailTemplate.showIf(item_r13.data, item_r13.index) && ctx_r2.isExpanded(item_r13));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isFooter(item_r13) && item_r13.group && (ctx_r2.isFooterItemInExpandedGroup(item_r13) || ctx_r2.showGroupFooters && ctx_r2.isParentGroupExpanded(item_r13.group)) && !item_r13.data.hideFooter);\n  }\n}\n\nfunction TableBodyComponent_kendo_resize_sensor_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r51 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-resize-sensor\", 36);\n    ɵngcc0.ɵɵlistener(\"resize\", function TableBodyComponent_kendo_resize_sensor_3_Template_kendo_resize_sensor_resize_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r51);\n      const ctx_r50 = ɵngcc0.ɵɵnextContext();\n      return ctx_r50.resizeHandler();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst _c189 = [\"kendoGridCell\", \"\"];\n\nfunction CellComponent_ng_container_1_ng_container_1_ng_template_1_Template(rf, ctx) {}\n\nfunction CellComponent_ng_container_1_ng_container_1_ng_template_2_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n    ɵngcc0.ɵɵpipe(1, \"valueOf\");\n  }\n\n  if (rf & 2) {\n    const childColumn_r10 = ctx.$implicit;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind3(1, 1, ctx_r9.dataItem, childColumn_r10.field, childColumn_r10.format), \" \");\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, CellComponent_ng_container_1_ng_container_1_ng_template_2_ng_template_0_Template, 2, 5, \"ng-template\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r6.childColumns);\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_container_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n    ɵngcc0.ɵɵpipe(1, \"valueOf\");\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind3(1, 1, ctx_r7.dataItem, ctx_r7.column.field, ctx_r7.column.format));\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_container_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"kendoGridSelectionCheckbox\", ctx_r8.rowIndex);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r8.selectionCheckboxId)(\"aria-label\", ctx_r8.selectionCheckboxLabel);\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, CellComponent_ng_container_1_ng_container_1_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵtemplate(2, CellComponent_ng_container_1_ng_container_1_ng_template_2_Template, 1, 1, \"ng-template\", 5);\n    ɵngcc0.ɵɵtemplate(3, CellComponent_ng_container_1_ng_container_1_ng_template_3_Template, 2, 5, \"ng-template\", 5);\n    ɵngcc0.ɵɵtemplate(4, CellComponent_ng_container_1_ng_container_1_ng_template_4_Template, 1, 3, \"ng-template\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.column.templateRef)(\"ngTemplateOutlet\", ctx_r2.column.templateRef)(\"ngTemplateOutletContext\", ctx_r2.templateContext);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isSpanColumn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isBoundColumn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isCheckboxColumn && !ctx_r2.isNew);\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_template_2_0_ng_template_0_Template(rf, ctx) {}\n\nconst _c190 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction CellComponent_ng_container_1_ng_template_2_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, CellComponent_ng_container_1_ng_template_2_0_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.loadingTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c190, ctx_r11.column));\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_template_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 11);\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, CellComponent_ng_container_1_ng_template_2_0_Template, 1, 4, undefined, 8);\n    ɵngcc0.ɵɵtemplate(1, CellComponent_ng_container_1_ng_template_2_div_1_Template, 1, 0, \"div\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.loadingTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.loadingTemplate);\n  }\n}\n\nfunction CellComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, CellComponent_ng_container_1_ng_container_1_Template, 5, 6, \"ng-container\", 2);\n    ɵngcc0.ɵɵtemplate(2, CellComponent_ng_container_1_ng_template_2_Template, 2, 2, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r3 = ɵngcc0.ɵɵreference(3);\n\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.showLoading)(\"ngIfElse\", _r3);\n  }\n}\n\nfunction CellComponent_ng_container_2_1_ng_template_0_Template(rf, ctx) {}\n\nfunction CellComponent_ng_container_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, CellComponent_ng_container_2_1_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r14.column.editTemplateRef)(\"ngTemplateOutletContext\", ctx_r14.editTemplateContext);\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_kendo_numerictextbox_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-numerictextbox\", 16);\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"format\", ctx_r17.format)(\"formControl\", ctx_r17.formGroup.get(ctx_r17.column.field));\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_kendo_datepicker_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-datepicker\", 16);\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"format\", ctx_r18.format)(\"formControl\", ctx_r18.formGroup.get(ctx_r18.column.field));\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"formControl\", ctx_r19.formGroup.get(ctx_r19.column.field));\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 18);\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"formControl\", ctx_r20.formGroup.get(ctx_r20.column.field));\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 0);\n    ɵngcc0.ɵɵtemplate(1, CellComponent_ng_container_2_ng_container_2_kendo_numerictextbox_1_Template, 1, 2, \"kendo-numerictextbox\", 13);\n    ɵngcc0.ɵɵtemplate(2, CellComponent_ng_container_2_ng_container_2_kendo_datepicker_2_Template, 1, 2, \"kendo-datepicker\", 13);\n    ɵngcc0.ɵɵtemplate(3, CellComponent_ng_container_2_ng_container_2_input_3_Template, 1, 1, \"input\", 14);\n    ɵngcc0.ɵɵtemplate(4, CellComponent_ng_container_2_ng_container_2_input_4_Template, 1, 1, \"input\", 15);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r15.column.editor);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"numeric\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"date\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"boolean\");\n  }\n}\n\nfunction CellComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, CellComponent_ng_container_2_1_Template, 1, 2, undefined, 8);\n    ɵngcc0.ɵɵtemplate(2, CellComponent_ng_container_2_ng_container_2_Template, 5, 4, \"ng-container\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.column.editTemplateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.column.editTemplateRef);\n  }\n}\n\nconst _c191 = [\"kendoGridFooter\", \"\"];\n\nfunction FooterComponent_ng_template_0_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 5);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵclassProp(\"k-group-cell\", true);\n  }\n}\n\nfunction FooterComponent_ng_template_0_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 5);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵclassProp(\"k-hierarchy-cell\", true);\n  }\n}\n\nfunction FooterComponent_ng_template_0_td_3_ng_template_1_Template(rf, ctx) {}\n\nfunction FooterComponent_ng_template_0_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 6);\n    ɵngcc0.ɵɵtemplate(1, FooterComponent_ng_template_0_td_3_ng_template_1_Template, 0, 0, \"ng-template\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r5 = ctx.$implicit;\n    const columnIndex_r6 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"k-grid-footer-sticky\", column_r5.sticky);\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r3.logicalRowIndex)(\"logicalColIndex\", ctx_r3.logicalColumnIndex(column_r5))(\"ngClass\", column_r5.footerClass)(\"ngStyle\", column_r5.sticky ? ctx_r3.addStickyStyles(column_r5) : column_r5.footerStyle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction4(7, _c178, column_r5.footerTemplateRef, ctx_r3.lockedColumnsCount + columnIndex_r6, column_r5, column_r5));\n  }\n}\n\nfunction FooterComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 1);\n    ɵngcc0.ɵɵtemplate(1, FooterComponent_ng_template_0_td_1_Template, 1, 2, \"td\", 2);\n    ɵngcc0.ɵɵtemplate(2, FooterComponent_ng_template_0_td_2_Template, 1, 2, \"td\", 3);\n    ɵngcc0.ɵɵtemplate(3, FooterComponent_ng_template_0_td_3_Template, 2, 12, \"td\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"k-footer-template\", true);\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r0.logicalRowIndex)(\"logicalSlaveRow\", ctx_r0.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r0.columns.length)(\"logicalSlaveCellsCount\", ctx_r0.columns.length - ctx_r0.lockedColumnsCount);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.groups);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.detailTemplate == null ? null : ctx_r0.detailTemplate.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.columnsToRender);\n  }\n}\n\nfunction ToolbarComponent_0_ng_template_0_Template(rf, ctx) {}\n\nfunction ToolbarComponent_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ToolbarComponent_0_ng_template_0_Template, 0, 0, \"ng-template\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.toolbarTemplateRef)(\"ngTemplateOutletContext\", ctx_r0.context);\n  }\n}\n\nconst EMPTY_REGEX = /^\\s*$/;\n/**\n * @hidden\n */\n\nconst isPresent = value => value !== null && value !== undefined;\n/**\n * @hidden\n */\n\n\nconst isBlank = value => value === null || value === undefined;\n/**\n * @hidden\n */\n\n\nconst isArray = value => Array.isArray(value);\n/**\n * @hidden\n */\n\n\nconst isTruthy = value => !!value;\n/**\n * @hidden\n */\n\n\nconst isNullOrEmptyString = value => isBlank(value) || EMPTY_REGEX.test(value);\n/**\n * @hidden\n */\n\n\nconst observe = list => merge(of(list), list.changes);\n/**\n * @hidden\n */\n\n\nconst isUniversal = () => typeof document === 'undefined';\n/**\n * @hidden\n */\n\n\nconst isString = value => typeof value === 'string';\n/**\n * @hidden\n */\n\n\nconst isNumber = value => typeof value === \"number\" && !isNaN(value);\n/**\n * @hidden\n */\n\n\nconst extractFormat = format => {\n  if (isString(format) && !isNullOrEmptyString(format) && format.startsWith('{0:')) {\n    return format.slice(3, format.length - 1);\n  }\n\n  return format;\n};\n/**\n * @hidden\n */\n\n\nconst not = fn => (...args) => !fn.apply(null, args);\n/**\n * @hidden\n */\n\n\nconst or = (...conditions) => value => conditions.reduce((acc, x) => acc || x(value), false);\n/**\n * @hidden\n */\n\n\nconst and = (...conditions) => value => conditions.reduce((acc, x) => acc && x(value), true);\n/**\n * @hidden\n */\n\n\nconst Skip = new InjectionToken(\"Skip\"); // tslint:disable-line:variable-name\n\n/**\n * @hidden\n */\n\nconst createPromise = () => {\n  let resolveFn, rejectFn;\n  const promise = new Promise((resolve, reject) => {\n    resolveFn = data => {\n      resolve(data);\n      return promise;\n    };\n\n    rejectFn = data => {\n      reject(data);\n      return promise;\n    };\n  });\n  promise.resolve = resolveFn;\n  promise.reject = rejectFn;\n  return promise;\n};\n/** @hidden */\n\n\nconst iterator = getIterator(); // TODO: Move to kendo-common\n\nfunction getIterator() {\n  if (typeof Symbol === 'function' && Symbol.iterator) {\n    return Symbol.iterator;\n  }\n\n  const keys = Object.getOwnPropertyNames(Map.prototype);\n  const proto = Map.prototype;\n\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n\n    if (key !== 'entries' && key !== 'size' && proto[key] === proto.entries) {\n      return key;\n    }\n  }\n}\n\nconst FRAME_DURATION = 1000 / 60;\nconst wnd = typeof window !== 'undefined' ? window : {};\n/** @hidden */\n\nconst requestAnimationFrame = wnd.requestAnimationFrame || wnd.msRequestAnimationFrame || (callback => setTimeout(callback, FRAME_DURATION));\n/** @hidden */\n\n\nconst cancelAnimationFrame = wnd.cancelAnimationFrame || wnd.msCancelRequestAnimationFrame || clearTimeout;\n/**\n * @hidden\n */\n\nconst detectIE = () => {\n  if (!isDocumentAvailable()) {\n    return;\n  }\n\n  const ua = window.navigator.userAgent;\n  const msie = ua.indexOf('MSIE ');\n  const trident = ua.indexOf('Trident/');\n  return msie > 0 || trident > 0;\n};\n/**\n * @hidden\n */\n\n\nconst nodesToArray = nodes => [].slice.call(nodes);\n/**\n * @hidden\n */\n\n\nconst replaceMessagePlaceholder = (message, name, value) => message.replace(new RegExp(`\\{\\\\s*${name}\\\\s*\\}`, 'g'), value);\n/**\n * Represents the Kendo UI GridSpacer component for Angular.\n * Used to give additional white space between the Pager inner elements,\n * and provides a way for customizing the spacer width.\n * It can also be used in any flex container within the Grid.\n */\n\n\nlet GridSpacerComponent = /*#__PURE__*/(() => {\n  let GridSpacerComponent = class GridSpacerComponent {\n    /**\n     * Represents the Kendo UI GridSpacer component for Angular.\n     * Used to give additional white space between the Pager inner elements,\n     * and provides a way for customizing the spacer width.\n     * It can also be used in any flex container within the Grid.\n     */\n    constructor() {\n      this.hostClass = true;\n    }\n\n    get sizedClass() {\n      return isPresent(this.width);\n    }\n\n    get flexBasisStyle() {\n      return this.width;\n    }\n\n  };\n\n  GridSpacerComponent.ɵfac = function GridSpacerComponent_Factory(t) {\n    return new (t || GridSpacerComponent)();\n  };\n\n  GridSpacerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: GridSpacerComponent,\n    selectors: [[\"kendo-grid-spacer\"], [\"kendo-pager-spacer\"]],\n    hostVars: 6,\n    hostBindings: function GridSpacerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"flex-basis\", ctx.flexBasisStyle);\n        ɵngcc0.ɵɵclassProp(\"k-spacer\", ctx.hostClass)(\"k-spacer-sized\", ctx.sizedClass);\n      }\n    },\n    inputs: {\n      width: \"width\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function GridSpacerComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-spacer'), __metadata(\"design:type\", Boolean)], GridSpacerComponent.prototype, \"hostClass\", void 0);\n\n  __decorate([HostBinding('class.k-spacer-sized'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], GridSpacerComponent.prototype, \"sizedClass\", null);\n\n  __decorate([HostBinding('style.flexBasis'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], GridSpacerComponent.prototype, \"flexBasisStyle\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], GridSpacerComponent.prototype, \"width\", void 0);\n  /**\n   * @hidden\n   */\n\n\n  return GridSpacerComponent;\n})();\nlet DomEventsService = /*#__PURE__*/(() => {\n  let DomEventsService = class DomEventsService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.cellClick = new EventEmitter();\n      this.cellMousedown = new EventEmitter();\n      this.cellMouseup = new EventEmitter();\n      this.click = new EventEmitter();\n      this.keydown = new EventEmitter();\n      this.focus = new EventEmitter();\n      this.focusIn = new EventEmitter();\n      this.focusOut = new EventEmitter();\n      this.windowBlur = new EventEmitter();\n    }\n\n  };\n\n  DomEventsService.ɵfac = function DomEventsService_Factory(t) {\n    return new (t || DomEventsService)();\n  };\n\n  DomEventsService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: DomEventsService,\n    factory: function (t) {\n      return DomEventsService.ɵfac(t);\n    }\n  });\n  /**\n   * @hidden\n   */\n\n  return DomEventsService;\n})();\nlet LocalDataChangesService = /*#__PURE__*/(() => {\n  let LocalDataChangesService = class LocalDataChangesService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.changes = new EventEmitter();\n    }\n\n  };\n\n  LocalDataChangesService.ɵfac = function LocalDataChangesService_Factory(t) {\n    return new (t || LocalDataChangesService)();\n  };\n\n  LocalDataChangesService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: LocalDataChangesService,\n    factory: function (t) {\n      return LocalDataChangesService.ɵfac(t);\n    }\n  });\n  /**\n   * @hidden\n   */\n\n  return LocalDataChangesService;\n})();\nconst FOCUS_ROOT_ACTIVE = new InjectionToken('focus-root-initial-active-state');\n/**\n * @hidden\n */\n\nlet FocusRoot = /*#__PURE__*/(() => {\n  let FocusRoot = class FocusRoot {\n    constructor(active = false) {\n      this.active = active;\n      this.groups = new Set();\n    }\n\n    registerGroup(group) {\n      if (this.active) {\n        this.groups.add(group);\n      }\n    }\n\n    unregisterGroup(group) {\n      if (this.active) {\n        this.groups.delete(group);\n      }\n    }\n\n    activate() {\n      if (this.active) {\n        this.groups.forEach(f => f.activate());\n      }\n    }\n\n    deactivate() {\n      if (this.active) {\n        this.groups.forEach(f => f.deactivate());\n      }\n    }\n\n  };\n\n  FocusRoot.ɵfac = function FocusRoot_Factory(t) {\n    return new (t || FocusRoot)(ɵngcc0.ɵɵinject(FOCUS_ROOT_ACTIVE, 8));\n  };\n\n  FocusRoot.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: FocusRoot,\n    factory: function (t) {\n      return FocusRoot.ɵfac(t);\n    }\n  });\n  FocusRoot = __decorate([__param(0, Optional()), __param(0, Inject(FOCUS_ROOT_ACTIVE)), __metadata(\"design:paramtypes\", [Boolean])], FocusRoot);\n  return FocusRoot;\n})();\nconst focusableRegex = /^(?:a|input|select|option|textarea|button|object)$/i;\nconst NODE_NAME_PREDICATES = {};\n\nconst toClassList = classNames => String(classNames).trim().split(' ');\n/**\n * @hidden\n */\n\n\nconst hasClasses = (element, classNames) => {\n  const namesList = toClassList(classNames);\n  return Boolean(toClassList(element.className).find(className => namesList.indexOf(className) >= 0));\n};\n/**\n * @hidden\n */\n\n\nconst matchesClasses = classNames => element => hasClasses(element, classNames);\n/**\n * @hidden\n */\n\n\nconst matchesNodeName = nodeName => {\n  if (!NODE_NAME_PREDICATES[nodeName]) {\n    NODE_NAME_PREDICATES[nodeName] = element => String(element.nodeName).toLowerCase() === nodeName.toLowerCase();\n  }\n\n  return NODE_NAME_PREDICATES[nodeName];\n};\n/**\n * @hidden\n */\n\n\nconst closest = (node, predicate) => {\n  while (node && !predicate(node)) {\n    node = node.parentNode;\n  }\n\n  return node;\n};\n/**\n * @hidden\n */\n\n\nconst closestInScope = (node, predicate, scope) => {\n  while (node && node !== scope && !predicate(node)) {\n    node = node.parentNode;\n  }\n\n  if (node !== scope) {\n    return node;\n  }\n};\n/**\n * @hidden\n */\n\n\nconst contains = (parent, node, matchSelf = false) => {\n  const outside = !closest(node, child => child === parent);\n\n  if (outside) {\n    return false;\n  }\n\n  const el = closest(node, child => child === node);\n  return el && (matchSelf || el !== parent);\n};\n/**\n * @hidden\n */\n\n\nconst isVisible = element => {\n  const rect = element.getBoundingClientRect();\n  const hasSize = rect.width > 0 && rect.height > 0;\n  const hasPosition = rect.x !== 0 && rect.y !== 0; // Elements can have zero size due to styling, but they will still count as visible.\n  // For example, the selection checkbox has no size, but is made visible through styling.\n\n  return (hasSize || hasPosition) && window.getComputedStyle(element).visibility !== 'hidden';\n};\n/**\n * @hidden\n */\n\n\nconst isFocusable = element => {\n  if (!element.tagName) {\n    return false;\n  }\n\n  const tagName = element.tagName.toLowerCase();\n  const hasTabIndex = Boolean(element.getAttribute('tabIndex'));\n  const focusable = !element.disabled && focusableRegex.test(tagName);\n  return focusable || hasTabIndex;\n};\n/**\n * @hidden\n */\n\n\nconst isFocusableWithTabKey = (element, checkVisibility = true) => {\n  if (!isFocusable(element)) {\n    return false;\n  }\n\n  const visible = !checkVisibility || isVisible(element);\n  const ariaHidden = element.getAttribute('aria-hidden') === 'true';\n  const tabIndex = element.getAttribute('tabIndex');\n  return visible && !ariaHidden && tabIndex !== '-1';\n};\n/**\n * @hidden\n */\n\n\nconst findElement = (node, predicate, matchSelf = true) => {\n  if (!node) {\n    return;\n  }\n\n  if (matchSelf && predicate(node)) {\n    return node;\n  }\n\n  node = node.firstChild;\n\n  while (node) {\n    if (node.nodeType === 1) {\n      const element = findElement(node, predicate);\n\n      if (element) {\n        return element;\n      }\n    }\n\n    node = node.nextSibling;\n  }\n};\n/**\n * @hidden\n */\n\n\nconst findLastElement = (node, predicate, matchSelf = true) => {\n  let last = null;\n  findElement(node, node => {\n    if (predicate(node)) {\n      last = node;\n    }\n\n    return false;\n  }, matchSelf);\n  return last;\n};\n/**\n * @hidden\n */\n\n\nconst findFocusable = (element, checkVisibility = true) => {\n  return findElement(element, node => isFocusableWithTabKey(node, checkVisibility));\n};\n/**\n * @hidden\n */\n\n\nconst findFocusableChild = (element, checkVisibility = true) => {\n  return findElement(element, node => isFocusableWithTabKey(node, checkVisibility), false);\n};\n/**\n * @hidden\n */\n\n\nconst findLastFocusableChild = (element, checkVisibility = true) => {\n  return findLastElement(element, node => isFocusableWithTabKey(node, checkVisibility), false);\n};\n/**\n * @hidden\n */\n\n\nfunction rtlScrollPosition(position, element, initial) {\n  let result = position;\n\n  if (initial < 0) {\n    result = -position;\n  } else if (initial > 0) {\n    result = element.scrollWidth - element.offsetWidth - position;\n  }\n\n  return result;\n}\n\nconst isButton = matchesNodeName('button');\nconst isInputTag = matchesNodeName('input');\nconst navigableRegex = /(button|checkbox|color|file|radio|reset|submit)/i;\n\nconst isNavigableInput = element => isInputTag(element) && navigableRegex.test(element.type);\n\nconst isNavigable = element => !element.disabled && (isButton(element) || isNavigableInput(element));\n/**\n * @hidden\n */\n\n\nclass DefaultFocusableElement {\n  constructor(host, renderer) {\n    this.renderer = renderer;\n    this.element = host.nativeElement;\n    this.focusable = findFocusable(this.element, false) || this.element;\n  }\n\n  get enabled() {\n    return this.focusable && !this.focusable.disabled;\n  }\n\n  get visible() {\n    return this.focusable && isVisible(this.focusable);\n  }\n\n  isNavigable() {\n    return this.canFocus() && isNavigable(this.element);\n  }\n\n  toggle(active) {\n    this.renderer.setAttribute(this.focusable, 'tabIndex', active ? '0' : '-1');\n  }\n\n  focus() {\n    if (this.focusable) {\n      this.focusable.focus();\n    }\n  }\n\n  canFocus() {\n    return this.visible && this.enabled;\n  }\n\n  hasFocus() {\n    return document.activeElement !== this.element && closest(document.activeElement, e => e === this.element);\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst CELL_CONTEXT = new InjectionToken('grid-cell-context');\n/**\n * @hidden\n */\n\nconst EMPTY_CELL_CONTEXT = {};\n/**\n * A directive that controls the way focusable elements receive\n * [focus in a navigable Grid]({% slug keyboard_navigation_grid %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *      <input type=\"text\" class=\"k-textbox\" placeholder=\"Tab stop #0\" style=\"margin-bottom: 8px;\" />\n *      <kendo-grid [data]=\"data\" [navigable]=\"true\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"100\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\" width=\"150\">\n *          </kendo-grid-column>\n *          <kendo-grid-column>\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <!-- The first focusable element will be focused when pressing Enter on the cell -->\n *                  <input type=\"text\" class=\"k-textbox\" kendoGridFocusable [value]=\"dataItem.ProductName\" style=\"margin-right: 8px;\" />\n *                  <button class=\"k-button\" kendoGridFocusable>Update</button>\n *              </ng-template>\n *          </kendo-grid-column>\n *          <kendo-grid-column width=\"100\">\n *              <ng-template kendoGridCellTemplate>\n *                  <!-- A single focusable element will be focused during navigation -->\n *                  <button class=\"k-button\" kendoGridFocusable>Delete</button>\n *              </ng-template>\n *          </kendo-grid-column>\n *      </kendo-grid>\n *      <input type=\"text\" class=\"k-textbox\" placeholder=\"Tab stop #2\" style=\"margin-top: 8px;\" />\n *    `\n * })\n *\n * class AppComponent {\n *     public readonly data: any = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": true\n *     }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": false\n *     }];\n * }\n * ```\n */\n\nlet FocusableDirective = /*#__PURE__*/(() => {\n  let FocusableDirective = class FocusableDirective {\n    constructor(cellContext, hostElement, renderer) {\n      this.cellContext = cellContext;\n      this.hostElement = hostElement;\n      this.renderer = renderer;\n      this.active = true;\n      this._enabled = true;\n\n      if (this.cellContext) {\n        this.group = this.cellContext.focusGroup;\n      }\n\n      if (this.group) {\n        this.group.registerElement(this);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    set enabled(value) {\n      if (value === '') {\n        value = true;\n      } else {\n        value = Boolean(value);\n      }\n\n      if (value !== this.enabled) {\n        this._enabled = value;\n\n        if (this.element) {\n          this.element.toggle(this.active && value);\n        }\n      }\n    }\n\n    get enabled() {\n      return this._enabled;\n    }\n\n    ngAfterViewInit() {\n      if (!this.element) {\n        this.element = new DefaultFocusableElement(this.hostElement, this.renderer);\n      }\n\n      if (this.group && this.element) {\n        this.toggle(this.group.isActive);\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.group) {\n        this.group.unregisterElement(this);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    toggle(active) {\n      if (this.element && active !== this.active) {\n        this.element.toggle(this.enabled && active);\n        this.active = active;\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    canFocus() {\n      return this.enabled && this.element && this.element.canFocus();\n    }\n    /**\n     * @hidden\n     */\n\n\n    isNavigable() {\n      return this.enabled && this.element && this.element.isNavigable();\n    }\n    /**\n     * @hidden\n     */\n\n\n    focus() {\n      if (this.enabled && this.element) {\n        this.element.focus();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    hasFocus() {\n      return this.enabled && this.element && this.element.hasFocus();\n    }\n    /**\n     * @hidden\n     */\n\n\n    registerElement(element) {\n      this.element = element;\n    }\n\n  };\n\n  FocusableDirective.ɵfac = function FocusableDirective_Factory(t) {\n    return new (t || FocusableDirective)(ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  FocusableDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FocusableDirective,\n    selectors: [[\"\", \"kendoGridFocusable\", \"\"], [\"\", \"kendoGridEditCommand\", \"\"], [\"\", \"kendoGridRemoveCommand\", \"\"], [\"\", \"kendoGridSaveCommand\", \"\"], [\"\", \"kendoGridCancelCommand\", \"\"], [\"\", \"kendoGridSelectionCheckbox\", \"\"]],\n    inputs: {\n      enabled: [\"kendoGridFocusable\", \"enabled\"]\n    }\n  });\n\n  __decorate([Input('kendoGridFocusable'), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], FocusableDirective.prototype, \"enabled\", null);\n\n  FocusableDirective = __decorate([__param(0, Optional()), __param(0, Inject(CELL_CONTEXT)), __param(0, SkipSelf()), __metadata(\"design:paramtypes\", [Object, ElementRef, Renderer2])], FocusableDirective);\n  /**\n   * @hidden\n   */\n\n  return FocusableDirective;\n})();\n\nclass GridFocusableElement {\n  constructor(navigationService) {\n    this.navigationService = navigationService;\n  }\n\n  focus() {\n    this.navigationService.focusCell();\n  }\n\n  toggle(active) {\n    this.navigationService.toggle(active);\n  }\n\n  canFocus() {\n    return true;\n  }\n\n  hasFocus() {\n    return this.navigationService.hasFocus();\n  }\n\n  isNavigable() {\n    return false;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass NavigationCursor {\n  constructor(model) {\n    this.model = model;\n    this.changes = new Subject();\n    this.activeRow = 0;\n    this.activeCol = 0;\n    this.virtualCol = 0;\n    this.virtualRow = 0;\n  }\n\n  get row() {\n    return this.model.findRow(this.activeRow);\n  }\n\n  get cell() {\n    const row = this.row;\n\n    if (row) {\n      return this.model.findCell(this.activeCol, row);\n    }\n  }\n\n  get dataRowIndex() {\n    const row = this.row;\n\n    if (row) {\n      return row.dataRowIndex;\n    }\n\n    return -1;\n  }\n  /**\n   * Assumes and announces a new cursor position.\n   */\n\n\n  reset(rowIndex = this.activeRow, colIndex = this.activeCol, force = true) {\n    if (this.activate(rowIndex, colIndex, force)) {\n      this.virtualRow = rowIndex;\n      this.virtualCol = colIndex;\n    }\n  }\n\n  activate(rowIndex, colIndex, force) {\n    if (!force && this.isActiveRange(rowIndex, colIndex)) {\n      return false;\n    }\n\n    const prevColIndex = this.activeCol;\n    const prevRowIndex = this.activeRow;\n    this.activeCol = colIndex;\n    this.activeRow = rowIndex;\n    this.changes.next({\n      colIndex,\n      prevColIndex,\n      prevRowIndex,\n      rowIndex\n    });\n    return true;\n  }\n\n  isActiveRange(rowIndex, colIndex) {\n    if (this.activeRow !== rowIndex) {\n      return false;\n    }\n\n    const cell = this.cell;\n    const {\n      start,\n      end\n    } = this.model.cellRange(cell);\n    return !Boolean(cell) || start <= colIndex && colIndex <= end;\n  }\n  /**\n   * Assumes a new cursor position without announcing it.\n   */\n\n\n  assume(rowIndex = this.activeRow, colIndex = this.activeCol) {\n    this.virtualRow = rowIndex;\n    this.virtualCol = colIndex;\n    this.activeCol = colIndex;\n    this.activeRow = rowIndex;\n  }\n  /**\n   * Announces a current cursor position to subscribers.\n   */\n\n\n  announce() {\n    this.changes.next({\n      colIndex: this.activeCol,\n      prevColIndex: this.activeCol,\n      prevRowIndex: this.activeRow,\n      rowIndex: this.activeRow\n    });\n  }\n\n  activateVirtualCell(cell) {\n    const rowRange = this.model.rowRange(cell);\n    const cellRange = this.model.cellRange(cell);\n    const activeCol = this.activeCol;\n    const activeRow = this.activeRow;\n\n    if (rowRange.start <= activeRow && activeRow <= rowRange.end && cellRange.start <= activeCol && activeCol <= cellRange.end) {\n      this.activeRow = cell.rowIndex;\n      this.activeCol = cell.colIndex;\n      return true;\n    }\n  }\n\n  isActive(rowIndex, colIndex) {\n    return this.activeCol === colIndex && this.activeRow === rowIndex;\n  }\n\n  moveUp(offset = 1) {\n    return this.offsetRow(-offset);\n  }\n\n  moveDown(offset = 1) {\n    return this.offsetRow(offset);\n  }\n\n  moveLeft(offset = 1) {\n    return this.offsetCol(-offset);\n  }\n\n  moveRight(offset = 1) {\n    return this.offsetCol(offset);\n  }\n\n  lastCellIndex(row) {\n    return this.metadata.columns.leafColumnsToRender.length - 1 + (this.metadata.hasDetailTemplate && (!row || !row.groupItem) ? 1 : 0);\n  }\n\n  offsetCol(offset) {\n    const prevRow = this.model.findRow(this.virtualRow);\n    const lastIndex = this.lastCellIndex(prevRow);\n    const virtualCol = this.virtualCol;\n    this.virtualCol = Math.max(0, Math.min(virtualCol + offset, lastIndex));\n    let nextColIndex = this.virtualCol;\n    let nextRowIndex = this.virtualRow;\n    let cell = this.model.findCell(this.virtualCol, prevRow);\n\n    if (!cell && this.metadata.virtualColumns) {\n      return this.activate(nextRowIndex, nextColIndex);\n    }\n\n    if (cell.colSpan > 1 && cell.colIndex <= virtualCol && virtualCol < cell.colIndex + cell.colSpan) {\n      nextColIndex = offset > 0 ? Math.min(cell.colIndex + cell.colSpan, lastIndex) : Math.max(0, cell.colIndex + offset);\n      const nextCell = this.model.findCell(nextColIndex, prevRow);\n\n      if (cell !== nextCell) {\n        cell = nextCell;\n        this.virtualCol = cell.colIndex;\n      } else {\n        this.virtualCol = virtualCol;\n      }\n    }\n\n    return this.activate(cell.rowIndex, cell.colIndex);\n  }\n\n  offsetRow(offset) {\n    let nextColIndex = this.virtualCol;\n\n    if (this.metadata && this.metadata.isVirtual) {\n      const maxIndex = this.metadata.maxLogicalRowIndex;\n      let nextIndex = Math.max(0, Math.min(this.activeRow + offset, maxIndex));\n\n      if (this.metadata.hasDetailTemplate && !this.model.findRow(nextIndex)) {\n        nextIndex = offset > 0 ? nextIndex + 1 : nextIndex - 1;\n        nextIndex = Math.max(0, Math.min(nextIndex, maxIndex));\n      }\n\n      if (this.metadata.hasDetailTemplate && nextIndex === maxIndex) {\n        if (this.model.lastRow.index !== maxIndex) {\n          // Don't attempt to navigate past the last collapsed row.\n          nextIndex--;\n        }\n      }\n\n      const nextRow = this.model.findRow(nextIndex);\n\n      if (nextRow) {\n        // remove duplication\n        let cell = this.model.findCell(this.virtualCol, nextRow);\n\n        if (cell.rowIndex <= this.virtualRow && offset > 0 && cell.rowSpan > 1) {\n          cell = this.model.findCell(this.virtualCol, this.model.findRow(cell.rowIndex + cell.rowSpan - 1 + offset));\n        }\n\n        nextIndex = cell.rowIndex;\n        nextColIndex = cell.colIndex;\n      }\n\n      this.virtualRow = nextIndex;\n      return this.activate(nextIndex, nextColIndex);\n    }\n\n    const nextRow = this.model.findRow(this.virtualRow + offset) || this.model.nextRow(this.virtualRow, offset);\n\n    if (!nextRow) {\n      return false;\n    }\n\n    let cell = this.model.findCell(this.virtualCol, nextRow);\n\n    if (cell && cell.rowIndex <= this.virtualRow && offset > 0 && cell.rowSpan > 1) {\n      // spanned cell go to next\n      const nextPos = cell.rowIndex + cell.rowSpan - 1 + offset;\n      cell = this.model.findCell(this.virtualCol, this.model.findRow(nextPos));\n    }\n\n    if (!cell && this.metadata.virtualColumns) {\n      return this.activate(this.virtualRow + offset, this.virtualCol);\n    }\n\n    this.virtualRow = cell.rowIndex;\n    return this.activate(this.virtualRow, cell.colIndex);\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass ItemMap {\n  constructor() {\n    this.count = 0;\n    this.items = {};\n  }\n\n  get first() {\n    if (this.count > 0) {\n      let result;\n      this.forEach(item => {\n        result = item;\n        return true;\n      });\n      return result;\n    }\n  }\n\n  get last() {\n    if (this.count > 0) {\n      const keys = Object.keys(this.items);\n      return this.items[keys[keys.length - 1]];\n    }\n  }\n\n  removeItem(key) {\n    if (this.items[key]) {\n      delete this.items[key];\n      this.count--;\n    }\n  }\n\n  setItem(key, item) {\n    if (!this.items[key]) {\n      this.count++;\n    }\n\n    this.items[key] = item;\n  }\n\n  getItem(key) {\n    return this.items[key];\n  }\n\n  toArray() {\n    const result = [];\n    this.forEach(item => {\n      result.push(item);\n    });\n    return result;\n  }\n\n  forEach(callback) {\n    for (let key in this.items) {\n      if (this.items.hasOwnProperty(key) && callback(this.items[key])) {\n        return this.items[key];\n      }\n    }\n  }\n\n  find(callback) {\n    return this.forEach(callback);\n  }\n\n}\n/**\n * @hidden\n *\n * Contains information for the currently rendered rows and cells.\n */\n\n\nclass NavigationModel {\n  constructor() {\n    this.rows = new ItemMap();\n  }\n\n  get firstRow() {\n    return this.rows.first;\n  }\n\n  get lastRow() {\n    return this.rows.last;\n  }\n\n  registerCell(cell) {\n    const row = this.rows.getItem(cell.logicalRowIndex);\n\n    if (!row) {\n      return;\n    }\n\n    const colIndex = cell.logicalColIndex;\n    const modelCell = {\n      uid: cell.uid,\n      colIndex,\n      rowIndex: row.index,\n      colSpan: cell.colSpan,\n      rowSpan: cell.rowSpan,\n      detailExpandCell: cell.detailExpandCell,\n      dataItem: row.dataItem,\n      dataRowIndex: row.dataRowIndex,\n      focusGroup: cell.focusGroup\n    };\n    row.cells.setItem(colIndex, modelCell);\n\n    if (cell.groupItem) {\n      row.groupItem = cell.groupItem;\n    }\n\n    return modelCell;\n  }\n\n  unregisterCell(index, rowIndex, cell) {\n    const row = this.rows.getItem(rowIndex);\n\n    if (row) {\n      const match = row.cells.getItem(index);\n\n      if (match && match.uid === cell.uid) {\n        row.cells.removeItem(index);\n      }\n    }\n  }\n\n  registerRow(row) {\n    const modelRow = {\n      uid: row.uid,\n      index: row.logicalRowIndex,\n      dataItem: row.dataItem,\n      dataRowIndex: row.dataRowIndex,\n      cells: new ItemMap()\n    };\n    this.rows.setItem(row.logicalRowIndex, modelRow);\n  }\n\n  updateRow(row) {\n    const current = this.rows.getItem(row.logicalRowIndex);\n\n    if (current) {\n      Object.assign(current, {\n        dataItem: row.dataItem,\n        dataRowIndex: row.dataRowIndex\n      });\n    }\n  }\n\n  unregisterRow(index, row) {\n    const match = this.rows.getItem(index);\n\n    if (match && match.uid === row.uid) {\n      this.rows.removeItem(index);\n    }\n  }\n\n  cellRange(cell) {\n    if (cell) {\n      const start = cell.colIndex;\n      const end = cell.colIndex + (cell.colSpan || 1) - 1;\n      return {\n        start,\n        end\n      };\n    }\n\n    return {};\n  }\n\n  rowRange(cell) {\n    if (cell) {\n      const start = cell.rowIndex;\n      const end = cell.rowIndex + (cell.rowSpan || 1) - 1;\n      return {\n        start,\n        end\n      };\n    }\n\n    return {};\n  }\n\n  nextRow(rowIndex, offset) {\n    const rows = this.rows.toArray();\n    const row = this.rows.getItem(rowIndex);\n    const position = rows.indexOf(row);\n    const next = rows[position + offset];\n    return next;\n  }\n\n  findRow(index) {\n    return this.rows.getItem(index);\n  }\n\n  findCell(index, row) {\n    if (!row) {\n      return;\n    }\n\n    const rowIndex = row.index;\n    let cell = row.cells.getItem(index);\n    let currentIndex = rowIndex;\n\n    while (!cell && row) {\n      row = this.rows.getItem(currentIndex);\n      cell = this.rowCell(index, row);\n      currentIndex--;\n    }\n\n    if (cell && rowIndex <= row.index + (cell.rowSpan || 1) - 1) {\n      return cell;\n    }\n  }\n\n  rowCell(index, row) {\n    if (!row || !row.cells.count) {\n      return;\n    }\n\n    const firstCell = row.cells.first;\n    let cell,\n        currentIndex = index;\n\n    while (!cell && currentIndex >= firstCell.colIndex) {\n      cell = row.cells.getItem(currentIndex);\n      currentIndex--;\n    }\n\n    if (cell && index <= cell.colIndex + (cell.colSpan || 1) - 1) {\n      return cell;\n    }\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass PreventableEvent {\n  constructor() {\n    this.prevented = false;\n  }\n  /**\n   * Prevents the default action for a specified event.\n   * In this way, the source component suppresses\n   * the built-in behavior that follows the event.\n   */\n\n\n  preventDefault() {\n    this.prevented = true;\n  }\n  /**\n   * Returns `true` if the event was prevented\n   * by any of its subscribers.\n   *\n   * @returns `true` if the default action was prevented.\n   * Otherwise, returns `false`.\n   */\n\n\n  isDefaultPrevented() {\n    return this.prevented;\n  }\n\n}\n/**\n * Arguments for the `cellClose` event.\n */\n\n\nclass CellCloseEvent extends PreventableEvent {\n  constructor(options) {\n    super();\n    /**\n     * @hidden\n     */\n\n    this.action = 'cellClose';\n    Object.assign(this, options);\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst isEqual = index => item => item.index === index;\n/**\n * @hidden\n */\n\n\nconst isNotEqual = index => item => item.index !== index;\n/**\n * @hidden\n */\n\n\nconst isNewRow = index => index === -1 || index === undefined;\n/**\n * @hidden\n */\n\n\nlet EditService = /*#__PURE__*/(() => {\n  let EditService = class EditService {\n    constructor(ngZone) {\n      this.ngZone = ngZone;\n      this.changes = new EventEmitter();\n      this.editedIndices = [];\n      this.keepEditCell = false;\n      this.closingCell = false;\n      this.changedSource = new Subject();\n      this.changed = this.changedSource.asObservable().pipe(switchMap(() => this.ngZone.onStable.asObservable().pipe(take(1))));\n    }\n\n    editRow(index, group = undefined) {\n      this.editedIndices.push({\n        index,\n        group\n      });\n      this.onChanged();\n    }\n\n    addRow(group) {\n      this.newItemGroup = {\n        group\n      };\n      this.onChanged();\n    }\n\n    editCell(rowIndex, column, group) {\n      if (isNewRow(rowIndex) || column.editable === false || !(column.editTemplate || column.field)) {\n        return;\n      }\n\n      this.preventCellClose();\n\n      if (!this.closeCell()) {\n        this.editRow(rowIndex, group);\n        this.column = column;\n        this.onChanged();\n      }\n    }\n\n    isEditing() {\n      return this.editedIndices.length > 0;\n    }\n\n    isEditingCell() {\n      return this.isEditing() && this.column !== undefined;\n    }\n\n    get hasNewItem() {\n      return isPresent(this.newItemGroup);\n    }\n\n    get newDataItem() {\n      if (this.hasNewItem) {\n        return this.newItemGroup.group.value;\n      }\n\n      return {};\n    }\n\n    close(index) {\n      if (isNewRow(index)) {\n        this.newItemGroup = undefined;\n        return;\n      }\n\n      this.editedIndices = this.editedIndices.filter(isNotEqual(index));\n      delete this.column;\n      this.onChanged();\n    }\n\n    closeCell(originalEvent) {\n      if (this.column && !this.closingCell) {\n        return this.ngZone.run(() => {\n          const {\n            index,\n            group\n          } = this.editedIndices[0];\n          const args = new CellCloseEvent({\n            column: this.column,\n            formGroup: group,\n            originalEvent: originalEvent,\n            rowIndex: index\n          });\n          this.closingCell = true;\n          this.changes.emit(args);\n          this.closingCell = false;\n\n          if (!args.isDefaultPrevented()) {\n            this.cancelCell();\n          }\n\n          return args.isDefaultPrevented();\n        });\n      }\n    }\n\n    cancelCell() {\n      if (this.column) {\n        this.editedIndices = [];\n        delete this.column;\n        this.onChanged();\n      }\n    }\n\n    shouldCloseCell() {\n      return this.column && !this.keepEditCell;\n    }\n\n    preventCellClose() {\n      this.ngZone.runOutsideAngular(() => {\n        window.clearTimeout(this.keepCellTimeout);\n        this.keepEditCell = true;\n        this.keepCellTimeout = window.setTimeout(() => {\n          this.keepEditCell = false;\n        }, 0); // tslint:disable-line:align\n      });\n    }\n\n    context(index) {\n      if (isNewRow(index)) {\n        return this.newItemGroup;\n      }\n\n      return this.findByIndex(index);\n    }\n\n    columnContext(index, column) {\n      if (isNewRow(index)) {\n        return this.newItemGroup;\n      }\n\n      if (!this.column || column === this.column) {\n        return this.findByIndex(index);\n      }\n    }\n\n    isEdited(index) {\n      if (isNewRow(index) && isPresent(this.newItemGroup)) {\n        return true;\n      }\n\n      return !this.column && isPresent(this.findByIndex(index));\n    }\n\n    hasEdited(index) {\n      return isPresent(this.context(index));\n    }\n\n    isEditedColumn(index, column) {\n      if (this.column && this.column === column) {\n        return isPresent(this.findByIndex(index));\n      }\n\n      return false;\n    }\n\n    beginEdit(rowIndex) {\n      this.changes.emit({\n        action: 'edit',\n        rowIndex\n      });\n    }\n\n    beginAdd() {\n      this.changes.emit({\n        action: 'add'\n      });\n    }\n\n    endEdit(rowIndex) {\n      const {\n        group: formGroup\n      } = this.context(rowIndex);\n      this.changes.emit({\n        action: 'cancel',\n        rowIndex,\n        formGroup,\n        isNew: isNewRow(rowIndex)\n      });\n    }\n\n    save(rowIndex) {\n      const {\n        group: formGroup\n      } = this.context(rowIndex);\n      this.changes.emit({\n        action: 'save',\n        rowIndex,\n        formGroup,\n        isNew: isNewRow(rowIndex)\n      });\n    }\n\n    remove(rowIndex) {\n      this.changes.emit({\n        action: 'remove',\n        rowIndex\n      });\n    }\n\n    findByIndex(index) {\n      return this.editedIndices.find(isEqual(index));\n    }\n\n    onChanged() {\n      this.ngZone.runOutsideAngular(() => {\n        this.changedSource.next();\n      });\n    }\n\n  };\n\n  EditService.ɵfac = function EditService_Factory(t) {\n    return new (t || EditService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n\n  EditService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: EditService,\n    factory: function (t) {\n      return EditService.ɵfac(t);\n    }\n  });\n  EditService = __decorate([__metadata(\"design:paramtypes\", [NgZone])], EditService);\n  /**\n   * @hidden\n   */\n\n  return EditService;\n})();\n\nconst getGroupRowArgs = groupItem => {\n  if (!isPresent(groupItem)) {\n    return null;\n  }\n\n  return {\n    group: groupItem.data,\n    groupIndex: groupItem.index,\n    parentGroup: getGroupRowArgs(groupItem.parentGroup)\n  };\n};\n\nconst isChildIndex = (targetIndex, parentIndex) => parentIndex !== targetIndex && targetIndex.startsWith(parentIndex);\n/**\n * @hidden\n */\n\n\nlet GroupsService = /*#__PURE__*/(() => {\n  let GroupsService = class GroupsService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.changes = new Subject();\n      this.rowState = new Set();\n    }\n\n    reset() {\n      this.rowState.clear();\n    }\n\n    ngOnDestroy() {\n      this.reset();\n    }\n\n    isExpanded(groupArgs) {\n      if (this.userCallback) {\n        return this.userCallback(groupArgs);\n      }\n\n      return !this.rowState.has(groupArgs.groupIndex);\n    }\n\n    isInExpandedGroup(groupItem) {\n      let expanded = true;\n\n      while (groupItem && expanded) {\n        expanded = this.isExpanded({\n          group: groupItem.data,\n          groupIndex: groupItem.index,\n          parentGroup: getGroupRowArgs(groupItem.parentGroup)\n        });\n        groupItem = groupItem.parentGroup;\n      }\n\n      return expanded;\n    }\n\n    toggleRow(groupItem) {\n      const parentGroup = getGroupRowArgs(groupItem.parentGroup);\n      const expand = !this.isExpanded({\n        group: groupItem.data,\n        groupIndex: groupItem.index,\n        parentGroup\n      });\n      this.changes.next({\n        group: groupItem.data,\n        expand,\n        groupIndex: groupItem.index,\n        parentGroup\n      }); // if usercallback is given, the rowState should be ignored\n\n      if (this.userCallback) {\n        return;\n      }\n\n      if (expand) {\n        this.rowState.delete(groupItem.index);\n      } else {\n        this.rowState.add(groupItem.index);\n      }\n    }\n\n    expandChildren(parentIndex) {\n      this.rowState.forEach(index => isChildIndex(index, parentIndex) && this.rowState.delete(index));\n    }\n\n  };\n\n  GroupsService.ɵfac = function GroupsService_Factory(t) {\n    return new (t || GroupsService)();\n  };\n\n  GroupsService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: GroupsService,\n    factory: function (t) {\n      return GroupsService.ɵfac(t);\n    }\n  });\n  /**\n   * @hidden\n   */\n\n  return GroupsService;\n})();\nlet PagerContextService = /*#__PURE__*/(() => {\n  class PagerContextService {\n    constructor() {\n      this.changes = new Subject();\n      this.pageChange = new Subject();\n    }\n\n    get currentPage() {\n      return this.skip / this.pageSize;\n    }\n\n    notifyChanges(changes) {\n      this.total = changes.total;\n      this.pageSize = changes.pageSize;\n      this.skip = changes.skip;\n      this.changes.next(changes);\n    }\n\n    changePage(page) {\n      this.pageChange.next({\n        skip: page * this.pageSize,\n        take: this.pageSize\n      });\n    }\n\n    changePageSize(value) {\n      this.pageChange.next({\n        skip: 0,\n        take: value\n      });\n    }\n\n    nextPage() {\n      const nextPage = this.currentPage + 1;\n\n      if (nextPage * this.pageSize < this.total) {\n        this.changePage(nextPage);\n      }\n    }\n\n    prevPage() {\n      const prevPage = this.currentPage - 1;\n\n      if (prevPage * this.pageSize >= 0) {\n        this.changePage(prevPage);\n      }\n    }\n\n  }\n\n  PagerContextService.ɵfac = function PagerContextService_Factory(t) {\n    return new (t || PagerContextService)();\n  };\n\n  PagerContextService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: PagerContextService,\n    factory: PagerContextService.ɵfac\n  });\n  /**\n   * Arguments for the `detailCollapse` event.\n   */\n\n  return PagerContextService;\n})();\n\nclass DetailCollapseEvent extends PreventableEvent {\n  constructor(args) {\n    super();\n    Object.assign(this, args);\n  }\n\n}\n/**\n * Arguments for the `detailExpand` event.\n */\n\n\nclass DetailExpandEvent extends PreventableEvent {\n  constructor(args) {\n    super();\n    Object.assign(this, args);\n  }\n\n}\n/**\n * @hidden\n */\n\n\nlet DetailsService = /*#__PURE__*/(() => {\n  let DetailsService = class DetailsService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.changes = new Subject();\n      this.rowState = new Set();\n    }\n\n    ngOnDestroy() {\n      this.rowState.clear();\n    }\n\n    isExpanded(index, dataItem) {\n      if (this.userCallback) {\n        return this.userCallback({\n          index,\n          dataItem\n        });\n      }\n\n      return this.rowState.has(index);\n    }\n\n    toggleRow(index, dataItem) {\n      if (this.isExpanded(index, dataItem)) {\n        this.collapseRow(index, dataItem);\n      } else {\n        this.expandRow(index, dataItem);\n      }\n    }\n\n    expandRow(index, dataItem) {\n      const prevented = this.emitEvent({\n        dataItem,\n        index,\n        expand: true\n      });\n\n      if (!prevented && !this.userCallback) {\n        this.rowState.add(index);\n      }\n    }\n\n    collapseRow(index, dataItem) {\n      const prevented = this.emitEvent({\n        dataItem,\n        index,\n        expand: false\n      });\n\n      if (!prevented && !this.userCallback) {\n        this.rowState.delete(index);\n      }\n    }\n\n    emitEvent(args) {\n      const eventArg = new (args.expand ? DetailExpandEvent : DetailCollapseEvent)(args);\n      this.changes.next(eventArg);\n      return eventArg.isDefaultPrevented();\n    }\n\n  };\n\n  DetailsService.ɵfac = function DetailsService_Factory(t) {\n    return new (t || DetailsService)();\n  };\n\n  DetailsService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: DetailsService,\n    factory: function (t) {\n      return DetailsService.ɵfac(t);\n    }\n  });\n  /**\n   * @hidden\n   */\n\n  return DetailsService;\n})();\nlet ScrollRequestService = /*#__PURE__*/(() => {\n  let ScrollRequestService = class ScrollRequestService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.requests = new Subject();\n    }\n\n    scrollTo(request) {\n      this.requests.next(request);\n    }\n\n  };\n\n  ScrollRequestService.ɵfac = function ScrollRequestService_Factory(t) {\n    return new (t || ScrollRequestService)();\n  };\n\n  ScrollRequestService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ScrollRequestService,\n    factory: function (t) {\n      return ScrollRequestService.ɵfac(t);\n    }\n  });\n  return ScrollRequestService;\n})();\n\nconst isInSameGrid = (element, gridElement) => closest(element, matchesNodeName('kendo-grid')) === gridElement;\n\nconst matchHeaderCell = matchesNodeName('th');\nconst matchDataCell = matchesNodeName('td');\nconst matchFooterCell = matchesNodeName('.k-grid-footer td');\n\nconst matchCell = element => matchDataCell(element) || matchHeaderCell(element) || matchFooterCell(element);\n\nconst gridCell = (element, gridElement) => {\n  let target = closest(element, matchCell);\n\n  while (target && !isInSameGrid(target, gridElement)) {\n    target = closest(target.parentElement, matchCell);\n  }\n\n  return target;\n};\n\nconst targetCell = (target, gridElement) => {\n  const cell = gridCell(target, gridElement);\n  const row = closest(cell, matchesNodeName('tr'));\n\n  if (cell && row) {\n    let rowIndex = row.getAttribute('aria-rowindex');\n    rowIndex = rowIndex ? parseInt(rowIndex, 10) - 1 : null;\n    let colIndex = cell.getAttribute('aria-colindex');\n    colIndex = colIndex ? parseInt(colIndex, 10) - 1 : null;\n\n    if (rowIndex !== null && colIndex !== null) {\n      return {\n        colIndex,\n        rowIndex,\n        element: cell\n      };\n    }\n  }\n};\n\nconst isArrowKey = keyCode => keyCode === Keys.ArrowLeft || keyCode === Keys.ArrowRight || keyCode === Keys.ArrowUp || keyCode === Keys.ArrowDown;\n\nconst isNavigationKey = keyCode => isArrowKey(keyCode) || keyCode === Keys.PageUp || keyCode === Keys.PageDown || keyCode === Keys.Home || keyCode === Keys.End;\n\nconst isInput = matchesNodeName('input');\n\nconst isTextInput = element => element && isInput(element) && element.type.toLowerCase() === 'text';\n\nconst isPrintableCharacter = str => str.length === 1 && str.match(/\\S/);\n/**\n * @hidden\n */\n\n\nclass NavigationViewport {\n  constructor(firstItemIndex, lastItemIndex) {\n    this.firstItemIndex = firstItemIndex;\n    this.lastItemIndex = lastItemIndex;\n  }\n\n  containsRow(dataRowIndex) {\n    const headerRow = dataRowIndex < 0;\n    return headerRow || dataRowIndex >= this.firstItemIndex && dataRowIndex <= this.lastItemIndex;\n  }\n\n  intersects(start, end) {\n    return start <= this.firstItemIndex && this.lastItemIndex <= end || this.firstItemIndex <= start && start <= this.lastItemIndex || this.firstItemIndex <= end && end <= this.lastItemIndex;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nlet NavigationService = /*#__PURE__*/(() => {\n  let NavigationService = class NavigationService {\n    constructor(zone, domEvents, pagerContextService, scrollRequestService, groupsService, detailsService, focusRoot, editService, cd, localization, focusableParent) {\n      this.zone = zone;\n      this.domEvents = domEvents;\n      this.pagerContextService = pagerContextService;\n      this.scrollRequestService = scrollRequestService;\n      this.groupsService = groupsService;\n      this.detailsService = detailsService;\n      this.focusRoot = focusRoot;\n      this.editService = editService;\n      this.cd = cd;\n      this.localization = localization;\n      this.focusableParent = focusableParent;\n      this.cellKeydown = new EventEmitter();\n      this.activeRowIndex = 0;\n      this.alive = false;\n      this.active = true;\n      this.mode = 0\n      /* Standby */\n      ;\n      this.model = new NavigationModel();\n      this.cursor = new NavigationCursor(this.model);\n      this.changes = this.cursor.changes;\n    }\n\n    set metadata(value) {\n      this.meta = value;\n      this.cursor.metadata = value;\n    }\n\n    get metadata() {\n      return this.meta;\n    }\n\n    get enabled() {\n      return this.alive;\n    }\n\n    get activeCell() {\n      if (this.mode !== 0\n      /* Standby */\n      ) {\n        return this.cursor.cell;\n      }\n    }\n\n    get activeRow() {\n      if (this.mode !== 0\n      /* Standby */\n      ) {\n        return Object.assign({}, this.cursor.row, {\n          cells: this.cursor.row.cells.toArray()\n        });\n      }\n    }\n\n    get activeDataRow() {\n      return Math.max(0, this.activeRowIndex - this.meta.headerRows);\n    }\n\n    init(meta) {\n      this.alive = true;\n      this.focusRoot.active = true;\n      this.metadata = meta;\n\n      const onStableSubscriber = (...operators) => args => this.zone.isStable ? from([true]).pipe(map(() => args)) : this.zone.onStable.pipe(take(1), map(() => args), ...operators);\n\n      const onStable = onStableSubscriber();\n      this.subs = new Subscription();\n      this.subs.add(this.cursor.changes.subscribe(args => this.onCursorChanges(args)));\n      this.subs.add(this.domEvents.focus.pipe(switchMap(onStable)).subscribe(args => this.navigateTo(args.target)));\n      this.subs.add(this.domEvents.focusOut.pipe(filter(() => this.mode !== 0\n      /* Standby */\n      ), switchMap(onStableSubscriber(takeUntil(this.domEvents.focus)))).subscribe(args => this.onFocusOut(args)));\n      this.subs.add(this.domEvents.windowBlur.pipe(filter(() => this.mode !== 0\n      /* Standby */\n      )).subscribe(() => this.onWindowBlur()));\n      this.subs.add( // Closing the editor will not always trigger focusout in Firefox.\n      // To get around this, we ensure that the cell is closed after editing.\n      this.editService.changes.pipe(filter(e => e.action !== 'edit' && this.mode === 2\n      /* Content */\n      ), filter(e => e.action === 'cellClose' && !e.prevented), switchMap(onStable)).subscribe(() => this.leaveCell()));\n      this.subs.add(this.pagerContextService.pageChange.subscribe(() => this.cursor.reset(0, 0)));\n      this.subs.add(this.domEvents.keydown.subscribe(args => this.onKeydown(args)));\n      this.subs.add(this.domEvents.keydown.pipe(filter(args => args.keyCode === Keys.Tab && this.mode === 2\n      /* Content */\n      ), switchMapTo(this.domEvents.focusOut.pipe(takeUntil( // Timeout if focusOut doesn't fire very soon\n      interval(0).pipe(take(1)))))).subscribe(() => this.onTabout()));\n\n      if (this.focusableParent) {\n        const element = new GridFocusableElement(this);\n        this.focusableParent.registerElement(element);\n      }\n\n      this.deactivateElements();\n    }\n\n    ngOnDestroy() {\n      if (this.subs) {\n        this.subs.unsubscribe();\n      }\n\n      this.alive = false;\n    }\n\n    registerCell(cell) {\n      if (cell.logicalRowIndex !== this.pendingRowIndex) {\n        const modelCell = this.model.registerCell(cell);\n\n        if (this.virtualCell && this.cursor.activateVirtualCell(modelCell)) {\n          this.virtualCell = false;\n        }\n      }\n    }\n\n    registerCellOnCurrentRow(cell) {\n      if (cell.logicalRowIndex === this.pendingRowIndex) {\n        this.model.registerCell(cell);\n      }\n    }\n\n    unregisterCell(index, rowIndex, cell) {\n      this.model.unregisterCell(index, rowIndex, cell);\n    }\n\n    registerRow(row) {\n      this.model.registerRow(row);\n      this.pendingRowIndex = row.logicalRowIndex;\n    }\n\n    updateRow(row) {\n      this.model.updateRow(row);\n    }\n\n    unregisterRow(index, row) {\n      this.model.unregisterRow(index, row);\n      const lastRow = this.model.lastRow;\n\n      if (lastRow && this.mode === 0\n      /* Standby */\n      ) {\n        const maxIndex = this.needsViewport() && this.viewport ? this.viewport.lastItemIndex : lastRow.index;\n\n        if (this.activeRowIndex > maxIndex) {\n          this.cursor.reset(0, 0);\n        }\n      }\n    }\n\n    isCellFocusable(cell) {\n      return this.alive && this.active && this.mode !== 2\n      /* Content */\n      && this.cursor.isActive(cell.logicalRowIndex, cell.logicalColIndex);\n    }\n\n    isCellFocused(cell) {\n      return this.mode === 1\n      /* Cursor */\n      && this.isCellFocusable(cell);\n    }\n\n    navigateTo(el) {\n      if (!this.alive) {\n        return;\n      }\n\n      const cell = targetCell(el, this.meta.gridElement.nativeElement);\n\n      if (!cell) {\n        return;\n      }\n\n      const oldMode = this.mode;\n      const focusInCell = contains(cell.element, document.activeElement);\n      const focusInActiveRowContent = this.mode === 2\n      /* Content */\n      && this.activeRowIndex === cell.rowIndex && el !== cell.element;\n\n      if (focusInCell) {\n        this.mode = 2\n        /* Content */\n        ;\n        this.cursor.reset(cell.rowIndex, cell.colIndex);\n        this.activateRow();\n      } else if (!focusInActiveRowContent) {\n        this.mode = 1\n        /* Cursor */\n        ;\n        this.deactivateElements();\n        const alreadyActive = this.cursor.isActive(cell.rowIndex, cell.colIndex);\n        const isCursor = oldMode === 1\n        /* Cursor */\n        && alreadyActive;\n\n        if (!isCursor) {\n          this.cursor.reset(cell.rowIndex, cell.colIndex);\n        }\n      }\n    }\n\n    tryFocus(el) {\n      this.activateElements();\n      const focusable = findFocusableChild(el);\n\n      if (focusable) {\n        const cell = targetCell(focusable, this.meta.gridElement.nativeElement);\n\n        if (cell) {\n          this.cursor.reset(cell.rowIndex, cell.colIndex);\n          this.deactivateElements();\n          this.enterCell();\n        }\n\n        focusable.focus();\n      } else {\n        this.deactivateElements();\n      }\n\n      return !!focusable;\n    }\n\n    needsViewport() {\n      return this.meta && this.meta.isVirtual;\n    }\n\n    setViewport(firstItemIndex, lastItemIndex) {\n      this.viewport = new NavigationViewport(firstItemIndex, lastItemIndex);\n\n      if (this.meta && this.meta.isVirtual && this.activeDataRow > -1) {\n        const dataRowIndex = this.activeDataRow;\n        const ahead = firstItemIndex - dataRowIndex;\n        const behind = dataRowIndex - lastItemIndex;\n\n        if (ahead > 0) {\n          this.cursor.reset(firstItemIndex + this.meta.headerRows);\n        } else if (behind > 0) {\n          this.cursor.reset(lastItemIndex - this.meta.headerRows);\n        }\n      }\n    }\n\n    setColumnViewport(firstItemIndex, lastItemIndex) {\n      this.columnViewport = new NavigationViewport(firstItemIndex, lastItemIndex);\n    }\n\n    focusCell(rowIndex = undefined, colIndex = undefined) {\n      this.mode = 1\n      /* Cursor */\n      ;\n      this.cursor.reset(rowIndex, colIndex);\n      return this.activeCell;\n    }\n\n    focusCellByElement(el) {\n      const cell = targetCell(el, this.meta.gridElement.nativeElement);\n\n      if (cell) {\n        return this.focusCell(cell.rowIndex, cell.colIndex);\n      }\n    }\n\n    focusNextCell(wrap = true) {\n      return this.focusAdjacentCell(true, wrap);\n    }\n\n    focusPrevCell(wrap = true) {\n      return this.focusAdjacentCell(false, wrap);\n    }\n\n    toggle(active) {\n      this.active = active;\n      this.cursor.announce();\n    }\n\n    hasFocus() {\n      return this.mode === 1\n      /* Cursor */\n      || this.mode === 2\n      /* Content */\n      ;\n    }\n\n    autoFocusCell(start, end) {\n      return !this.meta.virtualColumns || end < this.meta.columns.lockedLeafColumns.length || this.columnViewport.intersects(start, end);\n    }\n\n    focusAdjacentCell(fwd, wrap) {\n      this.focusCell();\n      let success = fwd ? this.moveCursorFwd() : this.moveCursorBwd();\n\n      if (wrap && !success) {\n        success = fwd ? this.cursor.moveDown(1) : this.cursor.moveUp(1);\n\n        if (success) {\n          const row = this.cursor.row;\n          const colIdx = fwd ? 0 : this.cursor.lastCellIndex(row);\n          this.cursor.reset(row.index, colIdx);\n        }\n      }\n\n      if (success) {\n        return this.activeCell;\n      } else {\n        this.mode = 0\n        /* Standby */\n        ;\n        this.cursor.announce();\n      }\n\n      return null;\n    }\n\n    enterCell() {\n      const cell = this.cursor.cell;\n\n      if (!cell) {\n        return;\n      }\n\n      const group = cell.focusGroup;\n      const focusable = group && group.canFocus();\n      this.mode = focusable ? 2\n      /* Content */\n      : 1\n      /* Cursor */\n      ;\n      this.cursor.announce();\n\n      if (focusable) {\n        this.activateRow();\n        group.focus();\n      }\n    }\n\n    leaveCell() {\n      const cell = this.cursor.cell;\n\n      if (!cell) {\n        return;\n      }\n\n      const group = cell.focusGroup;\n      const focusable = group && group.canFocus();\n\n      if (!focusable) {\n        this.deactivateElements();\n      }\n\n      this.mode = 1\n      /* Cursor */\n      ;\n      this.cursor.announce();\n    }\n\n    activateElements() {\n      this.focusRoot.activate();\n    }\n\n    deactivateElements() {\n      this.focusRoot.deactivate();\n    }\n\n    activateRow() {\n      this.cursor.row.cells.forEach(cell => cell.focusGroup && cell.focusGroup.activate());\n    }\n\n    moveCursorFwd() {\n      return this.localization.rtl ? this.cursor.moveLeft() : this.cursor.moveRight();\n    }\n\n    moveCursorBwd() {\n      return this.localization.rtl ? this.cursor.moveRight() : this.cursor.moveLeft();\n    }\n\n    onCursorKeydown(args) {\n      let preventDefault = false;\n      const modifier = args.ctrlKey || args.metaKey;\n      const step = modifier ? 5 : 1;\n\n      if (!this.onCellKeydown(args)) {\n        return;\n      }\n\n      const row = this.cursor.row;\n\n      switch (args.keyCode) {\n        case Keys.ArrowDown:\n          preventDefault = this.cursor.moveDown(step);\n          break;\n\n        case Keys.ArrowUp:\n          preventDefault = this.cursor.moveUp(step);\n          break;\n\n        case Keys.ArrowRight:\n          preventDefault = this.moveCursorFwd();\n          break;\n\n        case Keys.ArrowLeft:\n          preventDefault = this.moveCursorBwd();\n          break;\n\n        case Keys.PageDown:\n          if (this.metadata.isVirtual && this.viewport) {\n            let nextItemIndex = this.meta.headerRows + this.viewport.lastItemIndex + 1;\n\n            if (this.metadata.hasDetailTemplate) {\n              nextItemIndex++;\n            }\n\n            nextItemIndex = Math.min(this.meta.maxLogicalRowIndex, nextItemIndex);\n            this.cursor.reset(nextItemIndex);\n            preventDefault = true;\n          } else if (this.metadata.hasPager) {\n            this.zone.run(() => this.pagerContextService.nextPage());\n            preventDefault = true;\n          }\n\n          break;\n\n        case Keys.PageUp:\n          if (this.metadata.isVirtual && this.viewport) {\n            let viewportSize = this.viewport.lastItemIndex - this.viewport.firstItemIndex;\n            let firstItemIndex = this.viewport.firstItemIndex;\n            let nextItemIndex = Math.max(this.meta.headerRows, firstItemIndex - viewportSize - 1);\n            this.cursor.reset(nextItemIndex);\n            preventDefault = true;\n          } else if (this.metadata.hasPager) {\n            this.zone.run(() => this.pagerContextService.prevPage());\n            preventDefault = true;\n          }\n\n          break;\n\n        case Keys.Home:\n          if (modifier) {\n            if (this.meta.isVirtual) {\n              this.cursor.reset(this.meta.headerRows, 0, false);\n            } else {\n              this.cursor.reset(this.model.firstRow.index, 0, false);\n            }\n          } else {\n            this.cursor.reset(row.index, 0, false);\n          }\n\n          preventDefault = true;\n          break;\n\n        case Keys.End:\n          if (modifier) {\n            if (this.meta.isVirtual) {\n              let lastRowIndex = this.meta.maxLogicalRowIndex;\n\n              if (this.meta.hasDetailTemplate) {\n                lastRowIndex--;\n              }\n\n              this.cursor.reset(lastRowIndex, this.cursor.lastCellIndex(), false);\n            } else {\n              this.cursor.reset(this.model.lastRow.index, this.cursor.lastCellIndex(this.model.lastRow), false);\n            }\n          } else {\n            const lastIndex = this.cursor.lastCellIndex(row);\n            const cell = this.model.findCell(lastIndex, row);\n\n            if (cell) {\n              this.cursor.reset(cell.rowIndex, cell.colIndex);\n            } else {\n              this.cursor.reset(row.index, lastIndex);\n            }\n          }\n\n          preventDefault = true;\n          break;\n\n        case Keys.Enter:\n        case Keys.F2:\n          const groupItem = row.groupItem;\n\n          if (groupItem) {\n            this.zone.run(() => this.groupsService.toggleRow(groupItem));\n          } else if (this.cursor.cell.detailExpandCell) {\n            this.zone.run(() => this.detailsService.toggleRow(row.dataRowIndex, row.dataItem));\n          } else {\n            this.enterCell();\n\n            if (!this.cursor.cell.focusGroup.isNavigable()) {\n              preventDefault = true;\n            }\n          }\n\n          break;\n\n        default:\n          if (!args.ctrlKey && !args.altKey && isPrintableCharacter(args.key)) {\n            this.enterCell();\n          }\n\n      }\n\n      if (preventDefault) {\n        args.preventDefault();\n      }\n    }\n\n    onContentKeydown(args) {\n      if (!this.onCellKeydown(args)) {\n        return;\n      }\n\n      const confirm = !args.defaultPrevented && args.keyCode === Keys.Enter && isTextInput(args.srcElement);\n\n      if (args.keyCode === Keys.Escape || args.keyCode === Keys.F2 || confirm) {\n        this.leaveCell();\n        this.cursor.reset();\n        args.stopPropagation();\n      } else if (isNavigationKey(args.keyCode) && this.cursor.cell.focusGroup.isNavigable()) {\n        this.onCursorKeydown(args);\n\n        if (args.defaultPrevented) {\n          this.leaveCell();\n        }\n      }\n    }\n\n    onCellKeydown(args) {\n      if (this.editService.isEditingCell()) {\n        const confirm = args.keyCode === Keys.Enter;\n        const cancel = args.keyCode === Keys.Escape;\n        const navigate = isNavigationKey(args.keyCode);\n\n        if (confirm) {\n          this.editService.closeCell(args);\n        } else if (cancel) {\n          this.editService.cancelCell();\n          this.cd.detectChanges();\n        } else if (navigate) {\n          return false;\n        }\n      }\n\n      this.cellKeydown.emit(args);\n      return true;\n    }\n\n    onCursorChanges(args) {\n      this.activeRowIndex = args.rowIndex;\n      const dataRowIndex = this.activeDataRow;\n\n      if (this.meta && this.meta.isVirtual && args.rowIndex >= this.meta.headerRows && this.viewport && !this.viewport.containsRow(dataRowIndex) && dataRowIndex > -1) {\n        this.scrollRequestService.scrollTo({\n          row: dataRowIndex\n        });\n      }\n\n      if (this.meta.virtualColumns && args.colIndex >= this.meta.columns.lockedLeafColumns.length) {\n        const cell = this.activeCell;\n        const {\n          start,\n          end\n        } = this.model.cellRange(cell);\n\n        if (!cell) {\n          this.virtualCell = true;\n        }\n\n        if (!cell && this.mode !== 0\n        /* Standby */\n        || cell && !this.columnViewport.intersects(start, end)) {\n          this.scrollRequestService.scrollTo({\n            column: args.colIndex - (this.metadata.hasDetailTemplate ? 1 : 0)\n          });\n        }\n      }\n    }\n\n    onFocusOut(args) {\n      if (isVisible(args.target)) {\n        this.mode = 0\n        /* Standby */\n        ;\n      } else {\n        // Focused target is no longer visible,\n        // reset to cursor mode and recapture focus.\n        this.mode = 1\n        /* Cursor */\n        ;\n      }\n\n      this.deactivateElements();\n      this.cursor.announce();\n    }\n\n    onWindowBlur() {\n      this.mode = 0\n      /* Standby */\n      ;\n      this.deactivateElements();\n      this.cursor.announce();\n    }\n\n    onKeydown(args) {\n      if (this.mode === 1\n      /* Cursor */\n      ) {\n        this.onCursorKeydown(args);\n      } else if (this.mode === 2\n      /* Content */\n      ) {\n        this.onContentKeydown(args);\n      }\n    }\n\n    onTabout() {\n      // Tabbed out of the last focusable content element\n      // reset to cursor mode and recapture focus.\n      if (this.cursor.cell.focusGroup.isNavigable()) {\n        // Unless the cell has a single focusable element,\n        // otherwise we'd return to Content mode and enter an endless loop\n        return;\n      }\n\n      this.leaveCell();\n      this.cursor.reset();\n    }\n\n  };\n\n  NavigationService.ɵfac = function NavigationService_Factory(t) {\n    return new (t || NavigationService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DomEventsService), ɵngcc0.ɵɵinject(PagerContextService), ɵngcc0.ɵɵinject(ScrollRequestService), ɵngcc0.ɵɵinject(GroupsService), ɵngcc0.ɵɵinject(DetailsService), ɵngcc0.ɵɵinject(FocusRoot), ɵngcc0.ɵɵinject(EditService), ɵngcc0.ɵɵinject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵinject(FocusableDirective, 8));\n  };\n\n  NavigationService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NavigationService,\n    factory: function (t) {\n      return NavigationService.ɵfac(t);\n    }\n  });\n  NavigationService = __decorate([__param(10, Optional()), __metadata(\"design:paramtypes\", [NgZone, DomEventsService, PagerContextService, ScrollRequestService, GroupsService, DetailsService, FocusRoot, EditService, ChangeDetectorRef, LocalizationService, FocusableDirective])], NavigationService);\n  /**\n   * @hidden\n   */\n\n  return NavigationService;\n})();\nlet SelectionService = /*#__PURE__*/(() => {\n  let SelectionService = class SelectionService {\n    constructor(domEvents, localDataChangesService, navigationService) {\n      this.domEvents = domEvents;\n      this.localDataChangesService = localDataChangesService;\n      this.navigationService = navigationService;\n      this.changes = new EventEmitter();\n      this.lastSelectionStartIndex = 0;\n      this.currentSelection = [];\n      this.selectAllChecked = false;\n      this.active = false;\n      this.dragging = false;\n      this.addSubscriptions();\n    }\n\n    get enableMarquee() {\n      const checkboxOnly = this.settings && typeof this.settings === 'object' && this.settings.checkboxOnly;\n\n      if (!this.settings || checkboxOnly) {\n        return false;\n      }\n\n      const selectableSettings = this.settings.selectable;\n      const dragAndMultiple = typeof selectableSettings === 'object' && isPresent(selectableSettings) && selectableSettings.mode === 'multiple' && selectableSettings.enabled !== false && !selectableSettings.checkboxOnly && selectableSettings.drag;\n      return this.active && dragAndMultiple;\n    }\n\n    init(settings) {\n      this.settings = settings;\n      this.currentSelection = [];\n\n      if (settings.selectable && settings.selectable.enabled !== false) {\n        const iterator$$1 = this.getIterator();\n        this._selectAllState = true;\n        let item = iterator$$1.next();\n\n        while (!item.done) {\n          if (item.value && item.value.type === \"data\") {\n            const rowArgs = {\n              dataItem: item.value.data,\n              index: item.value.index\n            };\n\n            if (settings.rowSelected(rowArgs)) {\n              this.currentSelection[item.value.index] = rowArgs;\n            } else {\n              this._selectAllState = undefined;\n            }\n          }\n\n          item = iterator$$1.next();\n        }\n\n        if (this.currentSelection.length === 0) {\n          this._selectAllState = false;\n        }\n      }\n    }\n\n    isSelected(index) {\n      if (this.settings && this.active) {\n        return this.options.enabled && isPresent(this.currentSelection[index]);\n      }\n    }\n\n    handleClick(item, event) {\n      if (this.dragging) {\n        this.dragging = false;\n        return;\n      }\n\n      let ev;\n      const ctrlKey = event.ctrlKey || event.metaKey;\n\n      if (this.options.mode === \"single\" && ctrlKey && this.isSelected(item.index)) {\n        ev = this.toggle(item);\n      } else if (this.options.mode === \"multiple\") {\n        if (ctrlKey && !event.shiftKey) {\n          ev = this.toggle(item);\n        } else if (event.shiftKey) {\n          ev = this.addAllTo(item, ctrlKey);\n        }\n      }\n\n      if (!isPresent(ev)) {\n        ev = this.select(item);\n        this.currentSelection[item.index] = {\n          dataItem: item.data,\n          index: item.index\n        };\n      }\n\n      if (!ev.selectedRows.length && !ev.deselectedRows.length) {\n        return;\n      }\n\n      ev.ctrlKey = ctrlKey;\n      ev.shiftKey = event.shiftKey;\n      this.changes.emit(ev);\n    }\n\n    toggle(item) {\n      let selectedRows = [];\n      let deselectedRows = [];\n      this.lastSelectionStartIndex = item.index;\n      const rowArgs = {\n        dataItem: item.data,\n        index: item.index\n      };\n\n      if (this.isSelected(item.index)) {\n        deselectedRows.push(rowArgs);\n      } else {\n        selectedRows.push(rowArgs);\n      }\n\n      return {\n        deselectedRows: deselectedRows,\n        selectedRows: selectedRows\n      };\n    }\n\n    toggleByIndex(index) {\n      const iterator$$1 = this.getIterator();\n\n      if (this.selectAllChecked && this.isSelected(index)) {\n        this.selectAllChecked = false;\n      }\n\n      let item = iterator$$1.next();\n\n      while (!item.done) {\n        if (item.value && item.value.type === \"data\" && item.value.index === index) {\n          const itemToToggle = {\n            data: item.value.data,\n            index: item.value.index\n          };\n\n          if (this.isSelected(index) || this.options.mode === \"multiple\") {\n            return this.toggle(itemToToggle);\n          } else {\n            return this.select(itemToToggle);\n          }\n        }\n\n        item = iterator$$1.next();\n      }\n    }\n\n    select(item) {\n      let deselectedRows = [];\n      let selectedRows = [];\n      this.lastSelectionStartIndex = item.index;\n\n      if (!this.isSelected(item.index)) {\n        selectedRows.push({\n          dataItem: item.data,\n          index: item.index\n        });\n      }\n\n      this.currentSelection.forEach(row => {\n        if (row.index !== item.index) {\n          deselectedRows.push(row);\n        }\n      });\n      return {\n        deselectedRows: deselectedRows,\n        selectedRows: selectedRows\n      };\n    } //Used to manually deselect removed items\n\n\n    deselect(removedItem) {\n      const iterator$$1 = this.getIterator();\n      let item = iterator$$1.next();\n\n      while (!item.done) {\n        if (item.value && item.value.type === \"data\" && item.value.data === removedItem) {\n          const rowArgs = {\n            dataItem: item.value.data,\n            index: item.value.index\n          };\n\n          if (this.isSelected(rowArgs.index)) {\n            let ev = {\n              ctrlKey: false,\n              deselectedRows: [rowArgs],\n              selectedRows: []\n            };\n            this.changes.emit(ev);\n          }\n        }\n\n        item = iterator$$1.next();\n      }\n    }\n\n    addAllTo(item, ctrlKey) {\n      let selectedRows = [];\n      let deselectedRows = [];\n      const start = Math.min(this.lastSelectionStartIndex, item.index);\n      const end = Math.max(this.lastSelectionStartIndex, item.index);\n      const iterator$$1 = this.getIterator();\n      let next = iterator$$1.next();\n\n      while (!next.done) {\n        if (next.value && next.value.type === \"data\") {\n          const idx = next.value.index;\n          const rowArgs = {\n            dataItem: next.value.data,\n            index: idx\n          };\n\n          if ((idx < start || idx > end) && this.isSelected(idx) && !ctrlKey) {\n            deselectedRows.push(rowArgs);\n          }\n\n          if (idx >= start && idx <= end && !this.isSelected(idx)) {\n            selectedRows.push(rowArgs);\n          }\n        }\n\n        next = iterator$$1.next();\n      }\n\n      return {\n        deselectedRows: deselectedRows,\n        selectedRows: selectedRows\n      };\n    }\n\n    updateAll(selectAllChecked) {\n      this.selectAllChecked = selectAllChecked;\n      let selectedRows = [];\n      let deselectedRows = [];\n      const iterator$$1 = this.getIterator();\n      let next = iterator$$1.next();\n\n      while (!next.done) {\n        if (next.value && next.value.type === \"data\") {\n          const idx = next.value.index;\n          const rowArgs = {\n            dataItem: next.value.data,\n            index: idx\n          };\n\n          if (this.isSelected(idx) && !selectAllChecked) {\n            deselectedRows.push(rowArgs);\n          }\n\n          if (!this.isSelected(idx) && selectAllChecked) {\n            selectedRows.push(rowArgs);\n          }\n        }\n\n        next = iterator$$1.next();\n      }\n\n      if (!selectedRows.length && !deselectedRows.length) {\n        return;\n      }\n\n      let ev = {\n        ctrlKey: true,\n        deselectedRows: deselectedRows,\n        selectedRows: selectedRows,\n        shiftKey: true\n      };\n      this.changes.emit(ev);\n    }\n\n    selectRange(startIndex, endIndex) {\n      let selectedRows = [];\n      let deselectedRows = [];\n      const start = Math.min(startIndex, endIndex);\n      const end = Math.max(startIndex, endIndex);\n      const iterator$$1 = this.getIterator();\n      let next = iterator$$1.next();\n\n      while (!next.done) {\n        if (next.value && next.value.type === \"data\") {\n          const idx = next.value.index;\n          const rowArgs = {\n            dataItem: next.value.data,\n            index: idx\n          };\n\n          if ((idx < start || idx > end) && this.isSelected(idx)) {\n            deselectedRows.push(rowArgs);\n          }\n\n          if (idx >= start && idx <= end && !this.isSelected(idx)) {\n            selectedRows.push(rowArgs);\n          }\n        }\n\n        next = iterator$$1.next();\n      }\n\n      return {\n        deselectedRows: deselectedRows,\n        selectedRows: selectedRows\n      };\n    }\n\n    get selectAllState() {\n      return this._selectAllState;\n    }\n\n    get selected() {\n      return this.currentSelection.map(item => {\n        return item.index;\n      }).filter(n => typeof n === \"number\");\n    }\n\n    get options() {\n      const defaultOptions = {\n        checkboxOnly: false,\n        enabled: true,\n        mode: \"multiple\"\n      };\n\n      if (!isPresent(this.settings)) {\n        return defaultOptions;\n      }\n\n      if (typeof this.settings.selectable === 'boolean') {\n        return {\n          checkboxOnly: false,\n          enabled: this.settings.selectable,\n          mode: \"multiple\"\n        };\n      } else {\n        return Object.assign(defaultOptions, this.settings.selectable);\n      }\n    }\n\n    ngOnDestroy() {\n      this.removeSubscriptions();\n    }\n\n    targetArgs() {\n      return {\n        index: this.mouseDownEventArgs.rowIndex,\n        dataItem: this.mouseDownEventArgs.dataItem\n      };\n    }\n\n    addSubscriptions() {\n      if (!this.cellClickSubscription) {\n        this.cellClickSubscription = this.domEvents.cellClick.subscribe(args => {\n          if (this.options.enabled && !this.options.checkboxOnly && args.type !== 'contextmenu') {\n            if (this.active) {\n              this.handleClick({\n                index: args.rowIndex,\n                data: args.dataItem\n              }, args.originalEvent);\n            }\n          }\n        });\n      }\n\n      if (!this.mousedownSubscription) {\n        this.mousedownSubscription = this.domEvents.cellMousedown.subscribe(args => {\n          this.mouseDownEventArgs = args;\n\n          if (this.options.enabled && (!this.options.mode || this.options.mode === \"multiple\") && !this.options.checkboxOnly && args.originalEvent.shiftKey) {\n            if (this.active) {\n              args.originalEvent.preventDefault();\n              this.navigationService.focusCellByElement(args.originalEvent.target);\n            }\n          }\n        });\n      }\n\n      if (this.localDataChangesService && !this.dataChangedSubscription) {\n        this.dataChangedSubscription = this.localDataChangesService.changes.subscribe(args => {\n          if (this.active) {\n            if (isPresent(args.action) && args.action === 'remove') {\n              this.deselect(args.item);\n            }\n          }\n        });\n      }\n    }\n\n    getIterator() {\n      const accessor = this.settings.view.accessor();\n\n      if (!accessor) {\n        return;\n      }\n\n      return accessor[iterator]();\n    }\n\n    removeSubscriptions() {\n      if (this.cellClickSubscription) {\n        this.cellClickSubscription.unsubscribe();\n        this.cellClickSubscription = null;\n      }\n\n      if (this.mousedownSubscription) {\n        this.mousedownSubscription.unsubscribe();\n        this.mousedownSubscription = null;\n      }\n\n      if (this.dataChangedSubscription) {\n        this.dataChangedSubscription.unsubscribe();\n        this.dataChangedSubscription = null;\n      }\n    }\n\n  };\n\n  SelectionService.ɵfac = function SelectionService_Factory(t) {\n    return new (t || SelectionService)(ɵngcc0.ɵɵinject(DomEventsService), ɵngcc0.ɵɵinject(LocalDataChangesService), ɵngcc0.ɵɵinject(NavigationService));\n  };\n\n  SelectionService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: SelectionService,\n    factory: function (t) {\n      return SelectionService.ɵfac(t);\n    }\n  });\n  SelectionService = __decorate([__metadata(\"design:paramtypes\", [DomEventsService, LocalDataChangesService, NavigationService])], SelectionService);\n  /**\n   * @hidden\n   */\n\n  return SelectionService;\n})();\nlet CellSelectionService = /*#__PURE__*/(() => {\n  let CellSelectionService = class CellSelectionService {\n    constructor(domEvents, localDataChangesService, navigationService) {\n      this.domEvents = domEvents;\n      this.localDataChangesService = localDataChangesService;\n      this.navigationService = navigationService;\n      this.changes = new EventEmitter();\n      this.mouseUpEvent = new EventEmitter();\n      this.currentSelection = [];\n      this.active = false;\n      this.dragging = false;\n      this.dragSelectDeselect = false;\n      this.lastSelectionItem = {\n        itemKey: 0,\n        columnKey: 0\n      };\n      this.lastSelectionItemRowIndex = 0;\n      this.lastSelectionItemColIndex = 0;\n      this.addSubscriptions();\n    }\n\n    get enableMarquee() {\n      const checkboxOnly = this.settings && typeof this.settings === 'object' && this.settings.checkboxOnly;\n\n      if (!this.settings || checkboxOnly) {\n        return false;\n      }\n\n      const selectableSettings = this.settings.selectable;\n      const dragAndMultiple = typeof selectableSettings === 'object' && isPresent(selectableSettings) && selectableSettings.mode === 'multiple' && selectableSettings.cell && selectableSettings.enabled !== false && selectableSettings.drag;\n      return this.active && dragAndMultiple;\n    }\n\n    init(settings) {\n      this.settings = settings;\n      this.currentSelection = [];\n\n      if (settings.selectable && settings.selectable.enabled !== false) {\n        const iterator$$1 = this.getIterator();\n        let item = iterator$$1.next();\n\n        while (!item.done) {\n          if (item.value && item.value.type === \"data\") {\n            const rowArgs = {\n              dataItem: item.value.data,\n              index: item.value.index\n            };\n            settings.columns.forEach(col => {\n              const selectedCellArgs = settings.cellSelected(rowArgs, col, col.leafIndex);\n\n              if (selectedCellArgs.selected) {\n                this.currentSelection.push(selectedCellArgs.item);\n              }\n            });\n          }\n\n          item = iterator$$1.next();\n        }\n      }\n    }\n\n    isCellSelected(item, col) {\n      if (this.settings && this.active) {\n        const selectedCellArgs = this.settings.cellSelected({\n          dataItem: item.data,\n          index: item.index\n        }, col, col.leafIndex);\n        return this.options.enabled && selectedCellArgs.selected;\n      }\n\n      return false;\n    }\n\n    handleClick(item, event) {\n      if (this.dragging) {\n        this.dragging = false;\n        return;\n      }\n\n      let ev;\n      const ctrlKey = event.ctrlKey || event.metaKey;\n\n      if (this.options.mode === \"single\" && ctrlKey && this.isCellSelected(item, item.column)) {\n        ev = this.toggle(item);\n      } else if (this.options.mode === \"multiple\") {\n        if (ctrlKey && !event.shiftKey) {\n          ev = this.toggle(item);\n        } else if (event.shiftKey) {\n          const startRowIndex = Math.min(this.lastSelectionItemRowIndex, item.index);\n          const startColIndex = Math.min(this.lastSelectionItemColIndex, item.column.leafIndex);\n          const endRowIndex = Math.max(this.lastSelectionItemRowIndex, item.index);\n          const endColIndex = Math.max(this.lastSelectionItemColIndex, item.column.leafIndex);\n          ev = this.selectRange(startRowIndex, startColIndex, endRowIndex, endColIndex);\n        }\n      }\n\n      if (!isPresent(ev)) {\n        ev = this.select(item);\n        this.currentSelection = [this.lastSelectionItem];\n      }\n\n      if (!ev.selectedCells.length && !ev.deselectedCells.length) {\n        return;\n      }\n\n      ev.ctrlKey = ctrlKey;\n      ev.shiftKey = event.shiftKey;\n      this.changes.emit(ev);\n    }\n\n    toggle(item) {\n      let selectedCells = [];\n      let deselectedCells = [];\n      this.lastSelectionItem = this.settings.cellSelected({\n        dataItem: item.data,\n        index: item.index\n      }, item.column, item.column.leafIndex).item;\n      this.lastSelectionItemRowIndex = item.index;\n      this.lastSelectionItemColIndex = item.column.leafIndex;\n\n      if (this.isCellSelected(item, item.column)) {\n        deselectedCells.push(this.lastSelectionItem);\n      } else {\n        selectedCells.push(this.lastSelectionItem);\n      }\n\n      return {\n        deselectedCells,\n        selectedCells\n      };\n    }\n\n    select(item) {\n      const selectedCells = [];\n      const deselectedCells = [];\n      this.lastSelectionItem = this.settings.cellSelected({\n        dataItem: item.data,\n        index: item.index\n      }, item.column, item.column.leafIndex).item;\n      this.lastSelectionItemRowIndex = item.index;\n      this.lastSelectionItemColIndex = item.column.leafIndex;\n\n      if (!this.isCellSelected(item, item.column)) {\n        selectedCells.push(this.lastSelectionItem);\n      }\n\n      this.currentSelection.forEach(selectedItem => {\n        if (selectedItem.itemKey !== this.lastSelectionItem.itemKey || selectedItem.columnKey !== this.lastSelectionItem.columnKey) {\n          deselectedCells.push(selectedItem);\n        }\n      });\n      return {\n        deselectedCells,\n        selectedCells\n      };\n    } //Used to manually deselect removed items\n\n\n    deselect(removedItem) {\n      const iterator$$1 = this.getIterator();\n      let item = iterator$$1.next();\n      let rowArgs;\n\n      while (!item.done) {\n        if (item.value && item.value.type === \"data\" && item.value.data === removedItem) {\n          rowArgs = {\n            dataItem: item.value.data,\n            index: item.value.index\n          };\n          break;\n        }\n\n        item = iterator$$1.next();\n      }\n\n      if (rowArgs) {\n        const cellsToRemove = this.currentSelection.filter(selectedItem => {\n          const contender = this.settings.cellSelected(rowArgs, null, null).item;\n          return selectedItem.itemKey === contender.itemKey;\n        });\n\n        if (cellsToRemove.length) {\n          let ev = {\n            ctrlKey: false,\n            deselectedCells: cellsToRemove,\n            selectedCells: []\n          };\n          this.changes.emit(ev);\n        }\n      }\n    }\n\n    selectRange(startRowIndex, startColIndex, endRowIndex, endColIndex) {\n      const selectedCells = [];\n      const deselectedCells = [];\n      const selectionStartRow = Math.min(startRowIndex, endRowIndex);\n      const selectionStartCol = Math.min(startColIndex, endColIndex);\n      const selectionEndRow = Math.max(startRowIndex, endRowIndex);\n      const selectionEndCol = Math.max(startColIndex, endColIndex);\n      const iterator$$1 = this.getIterator();\n      let next = iterator$$1.next();\n\n      while (!next.done) {\n        if (next.value && next.value.type === \"data\") {\n          const idx = next.value.index;\n          const data = next.value.data;\n          const rowArgs = {\n            dataItem: data,\n            index: idx\n          };\n          this.settings.columns.forEach(col => {\n            const {\n              item\n            } = this.settings.cellSelected(rowArgs, col, col.leafIndex);\n            const selected = this.isCellSelected(next.value, col);\n            const isInRowRange = selectionStartRow <= idx && idx <= selectionEndRow;\n            const isInColRange = selectionStartCol <= col.leafIndex && col.leafIndex <= selectionEndCol;\n            const isInSelectionRect = isInRowRange && isInColRange;\n\n            if (!isInSelectionRect && selected) {\n              deselectedCells.push(item);\n            }\n\n            if (isInSelectionRect && !selected) {\n              selectedCells.push(item);\n            }\n          });\n        }\n\n        next = iterator$$1.next();\n      }\n\n      return {\n        deselectedCells,\n        selectedCells\n      };\n    }\n\n    get options() {\n      const defaultOptions = {\n        checkboxOnly: false,\n        enabled: true,\n        mode: \"multiple\"\n      };\n\n      if (!isPresent(this.settings)) {\n        return defaultOptions;\n      }\n\n      if (typeof this.settings.selectable === 'boolean') {\n        return {\n          checkboxOnly: false,\n          enabled: this.settings.selectable,\n          mode: \"multiple\"\n        };\n      } else {\n        return Object.assign(defaultOptions, this.settings.selectable);\n      }\n    }\n\n    ngOnDestroy() {\n      this.removeSubscriptions();\n    }\n\n    addSubscriptions() {\n      if (!this.cellClickSubscription) {\n        this.cellClickSubscription = this.domEvents.cellClick.subscribe(args => {\n          if (this.options.enabled && !this.options.checkboxOnly && args.type !== 'contextmenu') {\n            if (this.active) {\n              this.handleClick({\n                index: args.rowIndex,\n                data: args.dataItem,\n                column: args.column\n              }, args.originalEvent);\n            }\n          }\n        });\n      }\n\n      if (!this.mousedownSubscription) {\n        this.mousedownSubscription = this.domEvents.cellMousedown.subscribe(args => {\n          this.mouseDownEventArgs = args;\n\n          if (this.options.enabled && (!this.options.mode || this.options.mode === \"multiple\") && !this.options.checkboxOnly && args.originalEvent.shiftKey) {\n            if (this.active) {\n              args.originalEvent.preventDefault();\n              this.navigationService.focusCellByElement(args.originalEvent.target);\n            }\n          }\n        });\n      }\n\n      if (this.localDataChangesService && !this.dataChangedSubscription) {\n        this.dataChangedSubscription = this.localDataChangesService.changes.subscribe(args => {\n          if (this.active) {\n            if (isPresent(args.action) && args.action === 'remove') {\n              this.deselect(args.item);\n            }\n          }\n        });\n      }\n    }\n\n    getIterator() {\n      const accessor = this.settings.view.accessor();\n\n      if (!accessor) {\n        return;\n      }\n\n      return accessor[iterator]();\n    }\n\n    removeSubscriptions() {\n      if (this.cellClickSubscription) {\n        this.cellClickSubscription.unsubscribe();\n        this.cellClickSubscription = null;\n      }\n\n      if (this.mousedownSubscription) {\n        this.mousedownSubscription.unsubscribe();\n        this.mousedownSubscription = null;\n      }\n\n      if (this.dataChangedSubscription) {\n        this.dataChangedSubscription.unsubscribe();\n        this.dataChangedSubscription = null;\n      }\n    }\n\n  };\n\n  CellSelectionService.ɵfac = function CellSelectionService_Factory(t) {\n    return new (t || CellSelectionService)(ɵngcc0.ɵɵinject(DomEventsService), ɵngcc0.ɵɵinject(LocalDataChangesService), ɵngcc0.ɵɵinject(NavigationService));\n  };\n\n  CellSelectionService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: CellSelectionService,\n    factory: function (t) {\n      return CellSelectionService.ɵfac(t);\n    }\n  });\n  CellSelectionService = __decorate([__metadata(\"design:paramtypes\", [DomEventsService, LocalDataChangesService, NavigationService])], CellSelectionService);\n  return CellSelectionService;\n})();\n\nconst createElement = () => {\n  const marquee = document.createElement(\"div\");\n  marquee.className = \"k-marquee\";\n  const marqueeColor = document.createElement(\"div\");\n  marqueeColor.className = \"k-marquee-color\";\n  marquee.appendChild(marqueeColor);\n  return marquee;\n};\n\nconst POINTER_OFFSET = 2;\nconst MINIMAL_DRAG_DISTANCE = 5;\nconst offsets = {\n  topLeft: {\n    x: POINTER_OFFSET,\n    y: POINTER_OFFSET\n  },\n  topRight: {\n    x: -POINTER_OFFSET,\n    y: POINTER_OFFSET\n  },\n  bottomLeft: {\n    x: POINTER_OFFSET,\n    y: -POINTER_OFFSET\n  },\n  bottomRight: {\n    x: -POINTER_OFFSET,\n    y: -POINTER_OFFSET\n  }\n};\n/**\n * @hidden\n */\n\nlet GridMarqueeDirective = /*#__PURE__*/(() => {\n  let GridMarqueeDirective = class GridMarqueeDirective {\n    constructor(draggable, selection, cellSelection, domEvents) {\n      this.draggable = draggable;\n      this.selection = selection;\n      this.cellSelection = cellSelection;\n      this.domEvents = domEvents;\n      this.selectionStarted = false;\n    }\n\n    get webkitUserSelection() {\n      return this.cellSelection.enableMarquee || this.selection.enableMarquee ? 'none' : null;\n    }\n\n    get userSelection() {\n      return this.cellSelection.enableMarquee || this.selection.enableMarquee;\n    }\n\n    ngOnInit() {\n      this.subscriptions = this.draggable.kendoPress.subscribe(this.start.bind(this));\n      this.subscriptions.add(this.draggable.kendoDrag.subscribe(this.moveMarquee.bind(this)));\n    }\n\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n      this.clean();\n    }\n\n    start(args) {\n      if (args.originalEvent.target.classList.contains('k-checkbox')) {\n        this.pressArgs = null;\n        return;\n      }\n\n      this.pressArgs = args;\n      this.pressTarget = null;\n    }\n\n    moveMarquee(args) {\n      if (!this.pressTarget) {\n        this.pressTarget = this.cellSelection.active ? this.cellSelection.mouseDownEventArgs : this.selection.mouseDownEventArgs;\n      }\n\n      const press = this.pressArgs;\n\n      if (!press) {\n        return;\n      }\n\n      if (!this.selectionStarted) {\n        const distance = Math.sqrt(Math.pow(args.pageX - press.pageX, 2) + Math.pow(args.pageY - press.pageY, 2));\n\n        if (distance > MINIMAL_DRAG_DISTANCE) {\n          this.selectionStarted = true;\n          this.dragEndSubscription = merge(this.domEvents.cellMouseup.pipe(take(1)), this.draggable.kendoRelease.pipe(delay(1), take(1))).subscribe(this.endSelection.bind(this));\n        } else {\n          return;\n        }\n      }\n\n      this.initMarquee();\n      const element = this.marqueeElement;\n      const marqueeQuadrant = this.getMarqueeQuadrant(args.pageX, args.pageY, press.pageX, press.pageY);\n      let left = Math.min(args.pageX, press.pageX);\n      let top = Math.min(args.pageY, press.pageY);\n      const width = Math.abs(args.pageX - press.pageX);\n      const height = Math.abs(args.pageY - press.pageY);\n\n      if (marqueeQuadrant) {\n        left += offsets[marqueeQuadrant].x;\n        top += offsets[marqueeQuadrant].y;\n      }\n\n      element.style.left = `${left}px`;\n      element.style.top = `${top}px`;\n      element.style.width = `${width}px`;\n      element.style.height = `${height}px`;\n    }\n\n    endSelection(args) {\n      if (args.type === 'mouseup' || args.type === 'touchend') {\n        if (this.cellSelection.active) {\n          this.cellSelection.dragging = true;\n          this.cellSelection.changes.emit(this.cellSelection.selectRange(this.pressTarget.rowIndex, this.pressTarget.column.leafIndex, args.rowIndex, args.column.leafIndex));\n        } else if (this.selection.active) {\n          this.selection.dragging = true;\n          this.selection.changes.emit(this.selection.selectRange(this.pressTarget.rowIndex, args.rowIndex));\n        }\n      }\n\n      this.clean();\n    }\n\n    clean() {\n      if (this.marqueeElement) {\n        document.body.removeChild(this.marqueeElement);\n        this.marqueeElement = null;\n      }\n\n      if (this.dragEndSubscription) {\n        this.dragEndSubscription.unsubscribe();\n      }\n\n      this.dragEndSubscription = null;\n      this.pressTarget = null;\n      this.pressArgs = null;\n      this.selectionStarted = false;\n      this.cellSelection.active ? this.cellSelection.dragging = false : this.selection.dragging = false;\n    }\n\n    initMarquee() {\n      if (!this.marqueeElement) {\n        this.marqueeElement = createElement();\n        document.body.appendChild(this.marqueeElement);\n      }\n    }\n\n    getMarqueeQuadrant(pointerX, pointerY, startX, startY) {\n      const leftHalf = pointerX < startX;\n      const rightHalf = pointerX > startX;\n      const topHalf = pointerY < startY;\n      const bottomHalf = pointerY > startY;\n\n      if (leftHalf && topHalf) {\n        return 'topLeft';\n      }\n\n      if (leftHalf && bottomHalf) {\n        return 'bottomLeft';\n      }\n\n      if (rightHalf && topHalf) {\n        return 'topRight';\n      }\n\n      if (rightHalf && bottomHalf) {\n        return 'bottomRight';\n      }\n\n      return null;\n    }\n\n  };\n\n  GridMarqueeDirective.ɵfac = function GridMarqueeDirective_Factory(t) {\n    return new (t || GridMarqueeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DraggableDirective), ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(CellSelectionService), ɵngcc0.ɵɵdirectiveInject(DomEventsService));\n  };\n\n  GridMarqueeDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: GridMarqueeDirective,\n    selectors: [[\"\", \"kendoGridSelectionMarquee\", \"\"]],\n    hostVars: 4,\n    hostBindings: function GridMarqueeDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"-webkit-user-select\", ctx.webkitUserSelection);\n        ɵngcc0.ɵɵclassProp(\"user-select-none\", ctx.userSelection);\n      }\n    }\n  });\n\n  __decorate([HostBinding('style.-webkit-user-select'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], GridMarqueeDirective.prototype, \"webkitUserSelection\", null);\n\n  __decorate([HostBinding('class.user-select-none'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], GridMarqueeDirective.prototype, \"userSelection\", null);\n\n  GridMarqueeDirective = __decorate([__metadata(\"design:paramtypes\", [DraggableDirective, SelectionService, CellSelectionService, DomEventsService])], GridMarqueeDirective);\n  /**\n   * @hidden\n   */\n\n  return GridMarqueeDirective;\n})();\n\nclass ZoneAwareEventEmitter extends EventEmitter {\n  constructor(ngZone, isAsync = false) {\n    super(isAsync);\n    this.ngZone = ngZone;\n  }\n\n  subscribe(generatorOrNext, error, complete) {\n    let schedulerFn;\n\n    let errorFn = _ => null;\n\n    let completeFn = () => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = value => {\n        this.ngZone.run(() => generatorOrNext.next(value));\n      };\n\n      if (generatorOrNext.error) {\n        errorFn = err => {\n          this.ngZone.run(() => generatorOrNext.error(err));\n        };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = () => {\n          this.ngZone.run(() => generatorOrNext.complete());\n        };\n      }\n    } else {\n      schedulerFn = value => {\n        this.ngZone.run(() => generatorOrNext(value));\n      };\n\n      if (error) {\n        errorFn = err => {\n          this.ngZone.run(() => error(err));\n        };\n      }\n\n      if (complete) {\n        completeFn = () => {\n          this.ngZone.run(() => complete());\n        };\n      }\n    }\n\n    return super.subscribe(schedulerFn, errorFn, completeFn);\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst packageMetadata = {\n  name: '@progress/kendo-angular-grid',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1632904003,\n  version: '',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n};\n/**\n * Represents the column cell template of the Grid ([more information and example]({% slug templates_columns_grid %}#toc-cell-template)).\n * Helps to customize the content of the cells. To define the cell template, nest an `<ng-template>` tag\n * with the `kendoGridCellTemplate` directive inside a `<kendo-grid-column>` tag.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `columnIndex`&mdash;The current column index. Use it as an alias for a template variable by utilizing the `let-columnIndex=\"columnIndex\"` syntax.\n * - `rowIndex`&mdash;The current data row index. Use it as an alias for a template variable by utilizing the `let-rowIndex=\"rowIndex\"` syntax.\n * - `dataItem`&mdash;The current data item. Represents the default context that will be assigned to any template variable which utilizes the `let-x` syntax&mdash;for example, `let-dataItem`.\n * - `column`&mdash;The current column instance. Use it as an alias for a template variable by utilizing the `let-column=\"column\"` syntax.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\n *                     Data Row #: {{rowIndex}} /\n *                     <strong>{{dataItem.ProductName}}</strong>\n *                     ({{dataItem.Discontinued ? \"discontinued\" : \"active\"}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\n\nlet CellTemplateDirective = /*#__PURE__*/(() => {\n  let CellTemplateDirective = class CellTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  CellTemplateDirective.ɵfac = function CellTemplateDirective_Factory(t) {\n    return new (t || CellTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  CellTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: CellTemplateDirective,\n    selectors: [[\"\", \"kendoGridCellTemplate\", \"\"]]\n  });\n  CellTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], CellTemplateDirective);\n  /**\n   * Represents the group-header cell template of the Grid which helps to customize the content of the group header item.\n   * To define the group header template, nest an `<ng-template>` tag with the `kendoGridGroupHeaderTemplate`\n   * directive inside `<kendo-grid-column>`.\n   *\n   * The template context is set to the current data item and the following additional fields are passed:\n   * - `group`&mdash;The current group item.\n   * - `field`&mdash;The name of the field by which data is grouped.\n   * - `value`&mdash;The current group value.\n   * - `aggregates`&mdash;All aggregate values for the current group.\n   * - `index`&mdash;The index of the current group.\n   * - `expanded`&mdash;A boolean value indicating if the group is currently expanded.\n   * ([see example]({% slug groupable_grid_with_aggregates %})).\n   *\n   * @example\n   * ```ts\n   * import { process } from '@progress/kendo-data-query';\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *         <kendo-grid [data]=\"gridData\" [group]=\"groups\">\n   *             <kendo-grid-column field=\"ProductName\">\n   *                 <ng-template kendoGridGroupHeaderTemplate let-group let-field=\"field\" let-value=\"value\">\n   *                    <strong>{{field}}</strong>: {{value}}\n   *                 </ng-template>\n   *             </kendo-grid-column>\n   *         </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *     public groups = [{ field: \"ProductName\" }];\n   *\n   *     public gridData = process([{\n   *         \"ProductID\": 1,\n   *         \"ProductName\": \"Chai\",\n   *         \"UnitPrice\": 18.0000,\n   *         \"Discontinued\": false\n   *       }, {\n   *         \"ProductID\": 2,\n   *         \"ProductName\": \"Chang\",\n   *         \"UnitPrice\": 19.0000,\n   *         \"Discontinued\": true\n   *       }\n   *     ], {\n   *      group: this.groups\n   *     });\n   * }\n   *\n   * ```\n   */\n\n  return CellTemplateDirective;\n})();\nlet GroupHeaderTemplateDirective = /*#__PURE__*/(() => {\n  let GroupHeaderTemplateDirective = class GroupHeaderTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  GroupHeaderTemplateDirective.ɵfac = function GroupHeaderTemplateDirective_Factory(t) {\n    return new (t || GroupHeaderTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  GroupHeaderTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: GroupHeaderTemplateDirective,\n    selectors: [[\"\", \"kendoGridGroupHeaderTemplate\", \"\"]]\n  });\n  GroupHeaderTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], GroupHeaderTemplateDirective);\n  /**\n   * Represents the group-header column template of the Grid which helps to customize the content of the group headers.\n   * To define the group header template, nest an `<ng-template>` tag with the `kendoGridGroupHeaderColumnTemplate`\n   * directive inside `<kendo-grid-column>`. ([See example]({% slug groupable_grid_with_aggregates %})).\n   *\n   * The template context is set to the current data item and the following additional fields are passed:\n   * - `group`&mdash;The current group item.\n   * - `field`&mdash;The name of the field by which data is grouped.\n   * - `value`&mdash;The current group value.\n   * - `aggregates`&mdash;All aggregate values for the current group.\n   *\n   * @example\n   * ```ts\n   * <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n   *     <ng-template kendoGridGroupHeaderColumnTemplate let-group=\"group\" let-aggregates=\"aggregates\">\n   *         <span title=\"Group Header Column Template for ProductName\">\n   *             Count: {{ aggregates.Discontinued.count }}\n   *         </span>\n   *     </ng-template>\n   * </kendo-grid-column>\n   * ```\n   */\n\n  return GroupHeaderTemplateDirective;\n})();\nlet GroupHeaderColumnTemplateDirective = /*#__PURE__*/(() => {\n  let GroupHeaderColumnTemplateDirective = class GroupHeaderColumnTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  GroupHeaderColumnTemplateDirective.ɵfac = function GroupHeaderColumnTemplateDirective_Factory(t) {\n    return new (t || GroupHeaderColumnTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  GroupHeaderColumnTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: GroupHeaderColumnTemplateDirective,\n    selectors: [[\"\", \"kendoGridGroupHeaderColumnTemplate\", \"\"]]\n  });\n  GroupHeaderColumnTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], GroupHeaderColumnTemplateDirective);\n  /**\n   * Represents the column edit-cell template of the Grid ([see example]({% slug editing_template_forms_grid %})).\n   * Helps to customize the content of the edited cells. To define the cell template, nest an `<ng-template>`\n   * tag with the `kendoGridEditTemplate` directive inside a `<kendo-grid-column>` tag.\n   *\n   * The template context contains the following fields:\n   * - `formGroup`&mdash;The current [FormGroup]({{ site.data.urls.angular['formgroupapi'] }}).\n   * If you use the Grid inside [Template-Driven Forms]({{ site.data.urls.angular['forms'] }}), it will be `undefined`.\n   * - `rowIndex`&mdash;The current data row index. If inside a new item row, `rowIndex` is `-1`.\n   * - `dataItem`&mdash;The current data item.\n   * - `column`&mdash;The current column instance.\n   * - `isNew`&mdash;The state of the current item.\n   */\n\n  return GroupHeaderColumnTemplateDirective;\n})();\nlet EditTemplateDirective = /*#__PURE__*/(() => {\n  let EditTemplateDirective = class EditTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  EditTemplateDirective.ɵfac = function EditTemplateDirective_Factory(t) {\n    return new (t || EditTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  EditTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: EditTemplateDirective,\n    selectors: [[\"\", \"kendoGridEditTemplate\", \"\"]]\n  });\n  EditTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], EditTemplateDirective);\n  /**\n   * Represents the column group footer cell template of the Grid which helps to customize the group footer cell for the column.\n   * To define the group footer template, nest an `<ng-template>` tag with the `kendoGridGroupFooterTemplate` directive\n   * inside `<kendo-grid-column>`.\n   *\n   * The template context is set to the current aggregates and the following additional fields are passed:\n   * - `column`&mdash;Defines an instance of the `ColumnComponent` option.\n   * - `field`&mdash;The current column field name.\n   * - `group`&mdash;The current group data item.\n   * - `aggregates`&mdash;All aggregate values for the current group.\n   *\n   * @example\n   * ```ts-preview\n   * import { process } from '@progress/kendo-data-query';\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *         <kendo-grid [data]=\"gridData\" [group]=\"groups\">\n   *             <kendo-grid-column field=\"ProductName\">\n   *                 <ng-template kendoGridGroupFooterTemplate let-aggregates let-field=\"field\">\n   *                    Count: {{aggregates[field].count}}\n   *                 </ng-template>\n   *             </kendo-grid-column>\n   *         </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *     public groups = [{ field: \"ProductName\", aggregates: [{ field: \"ProductName\", aggregate: \"count\" }] }];\n   *\n   *     public gridData = process([{\n   *         \"ProductID\": 1,\n   *         \"ProductName\": \"Chai\",\n   *         \"UnitPrice\": 18.0000,\n   *         \"Discontinued\": false\n   *       }, {\n   *         \"ProductID\": 2,\n   *         \"ProductName\": \"Chang\",\n   *         \"UnitPrice\": 19.0000,\n   *         \"Discontinued\": true\n   *       }\n   *     ], {\n   *      group: this.groups\n   *     });\n   * }\n   * ```\n   */\n\n  return EditTemplateDirective;\n})();\nlet GroupFooterTemplateDirective = /*#__PURE__*/(() => {\n  let GroupFooterTemplateDirective = class GroupFooterTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  GroupFooterTemplateDirective.ɵfac = function GroupFooterTemplateDirective_Factory(t) {\n    return new (t || GroupFooterTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  GroupFooterTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: GroupFooterTemplateDirective,\n    selectors: [[\"\", \"kendoGridGroupFooterTemplate\", \"\"]]\n  });\n  GroupFooterTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], GroupFooterTemplateDirective);\n  /**\n   * Represents the column header cell template of the Grid\n   * ([more information and example]({% slug templates_columns_grid %}#toc-header-template)).\n   * Helps to customize the table header cell for the column.\n   * To define a header template, nest an `<ng-template>` tag with the\n   * [kendoGridHeaderTemplate]({% slug api_grid_headertemplatedirective %}) directive inside the `<kendo-grid-column>` tag.\n   *\n   *  The template context is set to the current column and then the following additional fields are passed:\n   * * `column`&mdash;Defines an instance of the [ColumnComponent]({% slug api_grid_columncomponent %}) option.\n   * * `columnIndex`&mdash;Defines the current column index.\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *         <kendo-grid [data]=\"gridData\">\n   *             <kendo-grid-column field=\"ProductName\">\n   *                 <ng-template kendoGridHeaderTemplate let-column let-columnIndex=\"columnIndex\">\n   *                   {{column.field}}({{columnIndex}})\n   *                 </ng-template>\n   *             </kendo-grid-column>\n   *              <kendo-grid-column field=\"UnitPrice\">\n   *                 <ng-template kendoGridHeaderTemplate let-column let-columnIndex=\"columnIndex\">\n   *                   {{column.field}}({{columnIndex}})\n   *                 </ng-template>\n   *             </kendo-grid-column>\n   *         </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *     public gridData = [{\n   *         \"ProductID\": 1,\n   *         \"ProductName\": \"Chai\",\n   *         \"UnitPrice\": 18.0000,\n   *         \"Discontinued\": false\n   *       }, {\n   *         \"ProductID\": 2,\n   *         \"ProductName\": \"Chang\",\n   *         \"UnitPrice\": 19.0000,\n   *         \"Discontinued\": true\n   *       }\n   *     ];\n   * }\n   *\n   * ```\n   */\n\n  return GroupFooterTemplateDirective;\n})();\nlet HeaderTemplateDirective = /*#__PURE__*/(() => {\n  let HeaderTemplateDirective = class HeaderTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  HeaderTemplateDirective.ɵfac = function HeaderTemplateDirective_Factory(t) {\n    return new (t || HeaderTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  HeaderTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: HeaderTemplateDirective,\n    selectors: [[\"\", \"kendoGridHeaderTemplate\", \"\"]]\n  });\n  HeaderTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], HeaderTemplateDirective);\n  /**\n   * Represents the column footer cell template of the Grid\n   * ([more information and example]({% slug templates_columns_grid %}#toc-footer-template)).\n   * Helps to customize the table footer cell for the column.\n   * To define a footer template, nest an `<ng-template>` tag with the\n   * [kendoGridFooterTemplate]({% slug api_grid_footertemplatedirective %}) directive inside the `<kendo-grid-column>` tag.\n   *\n   * The template context is set to the current column and the following additional fields are passed:\n   * * `column`&mdash;Defines an instance of the [ColumnComponent]({% slug api_grid_columncomponent %}) option.\n   * * `columnIndex`&mdash;Defines the current column index.\n   *\n   * For more information on how to display aggregates in the footer of the Grid,\n   * refer to the article on [aggregates]({% slug groupable_grid_with_aggregates %}).\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *         <kendo-grid [data]=\"gridData\" scrollable=\"none\">\n   *             <kendo-grid-column field=\"ProductName\">\n   *                 <ng-template kendoGridFooterTemplate let-column let-columnIndex=\"columnIndex\">\n   *                   {{column.field}}({{columnIndex}})\n   *                 </ng-template>\n   *             </kendo-grid-column>\n   *              <kendo-grid-column field=\"UnitPrice\">\n   *                 <ng-template kendoGridFooterTemplate let-column let-columnIndex=\"columnIndex\">\n   *                   {{column.field}}({{columnIndex}})\n   *                 </ng-template>\n   *             </kendo-grid-column>\n   *         </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *     public gridData = [{\n   *         \"ProductID\": 1,\n   *         \"ProductName\": \"Chai\",\n   *         \"UnitPrice\": 18.0000,\n   *         \"Discontinued\": false\n   *       }, {\n   *         \"ProductID\": 2,\n   *         \"ProductName\": \"Chang\",\n   *         \"UnitPrice\": 19.0000,\n   *         \"Discontinued\": true\n   *       }\n   *     ];\n   * }\n   *\n   * ```\n   */\n\n  return HeaderTemplateDirective;\n})();\nlet FooterTemplateDirective = /*#__PURE__*/(() => {\n  let FooterTemplateDirective = class FooterTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  FooterTemplateDirective.ɵfac = function FooterTemplateDirective_Factory(t) {\n    return new (t || FooterTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  FooterTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FooterTemplateDirective,\n    selectors: [[\"\", \"kendoGridFooterTemplate\", \"\"]]\n  });\n  FooterTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], FooterTemplateDirective);\n  /* tslint:disable:max-line-length */\n\n  /**\n   * Represents the template for the column menu in the Grid. Provides an option for\n   * customizing the content of the column menu for all or for specific columns.\n   * To define the content template, nest an `<ng-template>` tag with the\n   * `kendoGridColumnMenuTemplate` directive inside the `kendo-grid` or the `<kendo-grid-column>` component.\n   *\n   * The template context is passes through the following fields:\n   * - `service`&mdash;Represents the [ColumnMenuService]({% slug api_grid_columnmenuservice %}).\n   * - `column`&mdash;Represents the Grid column.\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *       <kendo-grid [kendoGridBinding]=\"data\" [sortable]=\"true\" [columnMenu]=\"true\">\n   *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n   *              <kendo-grid-columnmenu-sort [service]=\"service\">\n   *              </kendo-grid-columnmenu-sort>\n   *          </ng-template>\n   *          <kendo-grid-column field=\"Field1\" [width]=\"100\">\n   *              <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n   *                  <kendo-grid-columnmenu-lock [service]=\"service\">\n   *                  </kendo-grid-columnmenu-lock>\n   *                  <kendo-grid-columnmenu-sort [service]=\"service\">\n   *                  </kendo-grid-columnmenu-sort>\n   *              </ng-template>\n   *          </kendo-grid-column>\n   *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n   *       </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }, { Field1: 'Foo1', Field2: 'Bar1' }];\n   * }\n   *\n   * ```\n   */\n\n  return FooterTemplateDirective;\n})();\nlet ColumnMenuTemplateDirective = /*#__PURE__*/(() => {\n  let ColumnMenuTemplateDirective = class ColumnMenuTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  ColumnMenuTemplateDirective.ɵfac = function ColumnMenuTemplateDirective_Factory(t) {\n    return new (t || ColumnMenuTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  ColumnMenuTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ColumnMenuTemplateDirective,\n    selectors: [[\"\", \"kendoGridColumnMenuTemplate\", \"\"]]\n  });\n  ColumnMenuTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], ColumnMenuTemplateDirective);\n  /**\n   * @hidden\n   */\n\n  return ColumnMenuTemplateDirective;\n})();\n\nconst isSpanColumn = column => column.isSpanColumn;\n/**\n * @hidden\n */\n\n\nconst isCheckboxColumn = column => column.isCheckboxColumn;\n\nconst isColumnContainer = column => column.isColumnGroup || isSpanColumn(column);\n/**\n * The base class for the column components of the Grid.\n */\n\n\nlet ColumnBase$1 = /*#__PURE__*/(() => {\n  class ColumnBase$1 {\n    constructor(parent) {\n      this.parent = parent;\n      /**\n       * @hidden\n       */\n\n      this.matchesMedia = true;\n      /**\n       * The column index after reordering.\n       *\n       * > `orderIndex` is a read-only property. Setting this field does not affect column order.\n       */\n\n      this.orderIndex = 0;\n      /**\n       * @hidden\n       */\n\n      this.isColumnGroup = false;\n      /**\n       * @hidden\n       */\n\n      this.isSpanColumn = false;\n      /**\n       * Indicates whether the column is resizable.\n       * @default true\n       */\n\n      this.resizable = true;\n      /**\n       * Indicates whether the column is reorderable.\n       * @default true\n       */\n\n      this.reorderable = true;\n      /**\n       * The width (in pixels) below which the user is not able to resize the column by using the UI.\n       */\n\n      this.minResizableWidth = 10;\n      /**\n       * Toggles the locked (frozen) state of the columns ([more information and example]({% slug locked_columns_grid %})).\n       *\n       * @default false\n       *\n       * @example\n       * ```ts\n       * _@Component({\n       *    selector: 'my-app',\n       *    template: `\n       *        <kendo-grid [data]=\"gridData\" [scrollable]=\"scrollable\" style=\"height: 200px\">\n       *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\" [locked]=\"true\">\n       *          </kendo-grid-column>\n       *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\" width=\"200\">\n       *          </kendo-grid-column>\n       *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n       *          </kendo-grid-column>\n       *        </kendo-grid>\n       *    `\n       * })\n       *\n       * class AppComponent {\n       *    public gridData: any[];\n       *\n       *    constructor() {\n       *        this.gridData = products;\n       *    }\n       * }\n       *\n       * const products = [{\n       *    \"ProductID\": 1,\n       *    \"ProductName\": \"Chai\",\n       *    \"UnitPrice\": 18.0000,\n       *    \"Discontinued\": true\n       *  }, {\n       *    \"ProductID\": 2,\n       *    \"ProductName\": \"Chang\",\n       *    \"UnitPrice\": 19.0000,\n       *    \"Discontinued\": false\n       *  }\n       * ];\n       *\n       * ```\n       */\n\n      this.locked = false;\n      /**\n       * Determines whether the column will be always visible when scrolling the Grid horizontally.\n       *\n       * @default false\n       */\n\n      this.sticky = false;\n      /**\n       * Specifies if the column can be locked or unlocked from the column menu or by reordering the columns.\n       */\n\n      this.lockable = true;\n      /**\n       * Specifies if the column can be stuck or unstuck from the column menu.\n       */\n\n      this.stickable = true;\n      /**\n       * Specifies if the column menu will be shown for the column.\n       */\n\n      this.columnMenu = true;\n      /**\n       * Specifies if the column will be included in the column-chooser list.\n       */\n\n      this.includeInChooser = true;\n      /**\n       * @hidden\n       */\n\n      this.headerTemplates = new QueryList();\n      /**\n       * @hidden\n       */\n\n      this.columnMenuTemplates = new QueryList();\n\n      if (parent && !isColumnContainer(parent)) {\n        throw new Error('Columns can be nested only inside ColumnGroupComponent');\n      }\n    }\n    /**\n     * The width of the column (in pixels).\n     */\n\n\n    set width(value) {\n      this._width = parseInt(value, 10);\n    }\n\n    get width() {\n      return this._width;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get level() {\n      if (this.parent && isSpanColumn(this.parent)) {\n        return this.parent.level;\n      }\n\n      return this.parent ? this.parent.level + 1 : 0;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get isLocked() {\n      return this.parent ? this.parent.isLocked : this.locked;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get colspan() {\n      return 1;\n    }\n    /**\n     * @hidden\n     */\n\n\n    rowspan(totalColumnLevels) {\n      return this.level < totalColumnLevels ? totalColumnLevels - this.level + 1 : 1;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get headerTemplateRef() {\n      const template = this.headerTemplates.first;\n      return template ? template.templateRef : undefined;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get footerTemplateRef() {\n      return this.footerTemplate ? this.footerTemplate.templateRef : undefined;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get columnMenuTemplateRef() {\n      const template = this.columnMenuTemplates.first;\n      return template ? template.templateRef : null;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get displayTitle() {\n      return this.title;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get isVisible() {\n      return !this.hidden && this.matchesMedia;\n    }\n\n  }\n\n  ColumnBase$1.ɵfac = function ColumnBase$1_Factory(t) {\n    ɵngcc0.ɵɵinvalidFactory();\n  };\n\n  ColumnBase$1.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ColumnBase$1,\n    contentQueries: function ColumnBase$1_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnMenuTemplateDirective, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTemplates = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnMenuTemplates = _t);\n      }\n    },\n    inputs: {\n      resizable: \"resizable\",\n      reorderable: \"reorderable\",\n      minResizableWidth: \"minResizableWidth\",\n      locked: \"locked\",\n      sticky: \"sticky\",\n      lockable: \"lockable\",\n      stickable: \"stickable\",\n      columnMenu: \"columnMenu\",\n      includeInChooser: \"includeInChooser\",\n      width: \"width\",\n      title: \"title\",\n      autoSize: \"autoSize\",\n      hidden: \"hidden\",\n      media: \"media\",\n      style: \"style\",\n      headerStyle: \"headerStyle\",\n      filterStyle: \"filterStyle\",\n      footerStyle: \"footerStyle\",\n      cssClass: [\"class\", \"cssClass\"],\n      headerClass: \"headerClass\",\n      filterClass: \"filterClass\",\n      footerClass: \"footerClass\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnBase$1.prototype, \"resizable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnBase$1.prototype, \"reorderable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], ColumnBase$1.prototype, \"minResizableWidth\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ColumnBase$1.prototype, \"title\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], ColumnBase$1.prototype, \"width\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnBase$1.prototype, \"autoSize\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnBase$1.prototype, \"locked\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnBase$1.prototype, \"sticky\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnBase$1.prototype, \"hidden\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ColumnBase$1.prototype, \"media\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnBase$1.prototype, \"lockable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnBase$1.prototype, \"stickable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnBase$1.prototype, \"columnMenu\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnBase$1.prototype, \"includeInChooser\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ColumnBase$1.prototype, \"style\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ColumnBase$1.prototype, \"headerStyle\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ColumnBase$1.prototype, \"filterStyle\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ColumnBase$1.prototype, \"footerStyle\", void 0);\n\n  __decorate([Input('class'), __metadata(\"design:type\", Object)], ColumnBase$1.prototype, \"cssClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ColumnBase$1.prototype, \"headerClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ColumnBase$1.prototype, \"filterClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ColumnBase$1.prototype, \"footerClass\", void 0);\n\n  __decorate([ContentChildren(HeaderTemplateDirective, {\n    descendants: false\n  }), __metadata(\"design:type\", QueryList)], ColumnBase$1.prototype, \"headerTemplates\", void 0);\n\n  __decorate([ContentChild(FooterTemplateDirective, {\n    static: false\n  }), __metadata(\"design:type\", FooterTemplateDirective)], ColumnBase$1.prototype, \"footerTemplate\", void 0);\n\n  __decorate([ContentChildren(ColumnMenuTemplateDirective), __metadata(\"design:type\", QueryList)], ColumnBase$1.prototype, \"columnMenuTemplates\", void 0);\n  /**\n   * Represents the filter-cell template ([see example]({% slug builtinfiltertemplate_grid %}#toc-customizing-filter-rows)).\n   */\n\n\n  return ColumnBase$1;\n})();\nlet FilterCellTemplateDirective = /*#__PURE__*/(() => {\n  let FilterCellTemplateDirective = class FilterCellTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  FilterCellTemplateDirective.ɵfac = function FilterCellTemplateDirective_Factory(t) {\n    return new (t || FilterCellTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  FilterCellTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FilterCellTemplateDirective,\n    selectors: [[\"\", \"kendoGridFilterCellTemplate\", \"\"]]\n  });\n  FilterCellTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], FilterCellTemplateDirective);\n  /**\n   * Represents the filter-menu template\n   * ([see example]({% slug builtinfiltertemplate_grid %}#toc-customizing-filter-menus)).\n   */\n\n  return FilterCellTemplateDirective;\n})();\nlet FilterMenuTemplateDirective = /*#__PURE__*/(() => {\n  let FilterMenuTemplateDirective = class FilterMenuTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  FilterMenuTemplateDirective.ɵfac = function FilterMenuTemplateDirective_Factory(t) {\n    return new (t || FilterMenuTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  FilterMenuTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FilterMenuTemplateDirective,\n    selectors: [[\"\", \"kendoGridFilterMenuTemplate\", \"\"]]\n  });\n  FilterMenuTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], FilterMenuTemplateDirective);\n  return FilterMenuTemplateDirective;\n})();\nvar ColumnComponent_1;\n/**\n * @hidden\n */\n\nfunction isColumnComponent(column) {\n  return isPresent(column.field);\n}\n/**\n * Represents the columns of the [Angular Data Grid]({% slug overview_grid %}).\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"Discontinued\" width=\"120\">\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *              </ng-template>\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\n\nlet ColumnComponent = ColumnComponent_1 = class ColumnComponent extends ColumnBase$1 {\n  constructor(parent) {\n    super(parent);\n    /**\n     * Allows the column headers to be clicked and the `sortChange` event emitted.\n     * You have to handle the `sortChange` event yourself and sort the data.\n     */\n\n    this.sortable = true;\n    /**\n     * Determines if the column can be dragged to the group panel. The default value is `true`.\n     * If set to `false`, you can group the columns by the column field by using the API of the Grid.\n     */\n\n    this.groupable = true;\n    /**\n     * Defines the editor type ([see example]({% slug editing_reactive_forms_grid %}#toc-setup)).\n     * Used when the column enters the edit mode. The default value is `text`.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-column field=\"UnitPrice\" editor=\"numeric\">\n     *    </kendo-grid-column>\n     * </kendo-grid>\n     * ```\n     */\n\n    this.editor = 'text';\n    /**\n     * Defines the filter type that is displayed inside the filter row. The default value is `text`.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-column field=\"UnitPrice\" filter=\"numeric\">\n     *    </kendo-grid-column>\n     * </kendo-grid>\n     * ```\n     */\n\n    this.filter = 'text';\n    /**\n     * Defines if a filter UI will be displayed for this column. The default value is `true`.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-column field=\"UnitPrice\" [filterable]=\"false\">\n     *    </kendo-grid-column>\n     * </kendo-grid>\n     * ```\n     */\n\n    this.filterable = true;\n    /**\n     * Defines whether the column is editable. The default value is `true`.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-column field=\"UnitPrice\" [editable]=\"false\">\n     *    </kendo-grid-column>\n     * </kendo-grid>\n     * ```\n     */\n\n    this.editable = true;\n  }\n\n  get templateRef() {\n    return this.template ? this.template.templateRef : undefined;\n  }\n\n  get groupHeaderTemplateRef() {\n    return this.groupHeaderTemplate ? this.groupHeaderTemplate.templateRef : undefined;\n  }\n\n  get groupHeaderColumnTemplateRef() {\n    return this.groupHeaderColumnTemplate ? this.groupHeaderColumnTemplate.templateRef : undefined;\n  }\n\n  get groupFooterTemplateRef() {\n    return this.groupFooterTemplate ? this.groupFooterTemplate.templateRef : undefined;\n  }\n\n  get editTemplateRef() {\n    return this.editTemplate ? this.editTemplate.templateRef : undefined;\n  }\n\n  get filterCellTemplateRef() {\n    return this.filterCellTemplate ? this.filterCellTemplate.templateRef : undefined;\n  }\n\n  get filterMenuTemplateRef() {\n    return this.filterMenuTemplate ? this.filterMenuTemplate.templateRef : undefined;\n  }\n\n  get displayTitle() {\n    return this.title === undefined ? this.field : this.title;\n  }\n\n};\n\nColumnComponent.ɵfac = function ColumnComponent_Factory(t) {\n  return new (t || ColumnComponent)(ɵngcc0.ɵɵdirectiveInject(ColumnBase$1, 13));\n};\n\nColumnComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: ColumnComponent,\n  selectors: [[\"kendo-grid-column\"]],\n  contentQueries: function ColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, GroupHeaderTemplateDirective, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, GroupHeaderColumnTemplateDirective, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, GroupFooterTemplateDirective, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, EditTemplateDirective, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FilterCellTemplateDirective, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FilterMenuTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupHeaderTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupHeaderColumnTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupFooterTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.editTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.filterCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.filterMenuTemplate = _t.first);\n    }\n  },\n  inputs: {\n    sortable: \"sortable\",\n    groupable: \"groupable\",\n    editor: \"editor\",\n    filter: \"filter\",\n    filterable: \"filterable\",\n    editable: \"editable\",\n    field: \"field\",\n    format: \"format\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: ColumnBase$1,\n    useExisting: forwardRef(() => ColumnComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([Input(), __metadata(\"design:type\", String)], ColumnComponent.prototype, \"field\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], ColumnComponent.prototype, \"format\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], ColumnComponent.prototype, \"sortable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnComponent.prototype, \"groupable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], ColumnComponent.prototype, \"editor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], ColumnComponent.prototype, \"filter\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnComponent.prototype, \"filterable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnComponent.prototype, \"editable\", void 0);\n\n__decorate([ContentChild(CellTemplateDirective, {\n  static: false\n}), __metadata(\"design:type\", CellTemplateDirective)], ColumnComponent.prototype, \"template\", void 0);\n\n__decorate([ContentChild(GroupHeaderTemplateDirective, {\n  static: false\n}), __metadata(\"design:type\", GroupHeaderTemplateDirective)], ColumnComponent.prototype, \"groupHeaderTemplate\", void 0);\n\n__decorate([ContentChild(GroupHeaderColumnTemplateDirective, {\n  static: false\n}), __metadata(\"design:type\", GroupHeaderColumnTemplateDirective)], ColumnComponent.prototype, \"groupHeaderColumnTemplate\", void 0);\n\n__decorate([ContentChild(GroupFooterTemplateDirective, {\n  static: false\n}), __metadata(\"design:type\", GroupFooterTemplateDirective)], ColumnComponent.prototype, \"groupFooterTemplate\", void 0);\n\n__decorate([ContentChild(EditTemplateDirective, {\n  static: false\n}), __metadata(\"design:type\", EditTemplateDirective)], ColumnComponent.prototype, \"editTemplate\", void 0);\n\n__decorate([ContentChild(FilterCellTemplateDirective, {\n  static: false\n}), __metadata(\"design:type\", FilterCellTemplateDirective)], ColumnComponent.prototype, \"filterCellTemplate\", void 0);\n\n__decorate([ContentChild(FilterMenuTemplateDirective, {\n  static: false\n}), __metadata(\"design:type\", FilterMenuTemplateDirective)], ColumnComponent.prototype, \"filterMenuTemplate\", void 0);\n\nColumnComponent = ColumnComponent_1 = __decorate([__param(0, SkipSelf()), __param(0, Host()), __param(0, Optional()), __metadata(\"design:paramtypes\", [ColumnBase$1])], ColumnComponent);\nvar SpanColumnComponent_1;\n/**\n * @hidden\n */\n\nfunction isSpanColumnComponent(column) {\n  return column.isSpanColumn;\n}\n/**\n * Represents a column which can be spanned over multiple data cells while the individual\n * header and footer cells are retained ([see example]({% slug spanned_columns_grid %})).\n * Enables you to achieve more flexible layout while keeping the built-in UI element for\n * [sorting]({% slug sorting_grid %}), [filtering]({% slug filtering_grid %}), and\n * [grouping]({% slug groupingbasics_grid %}). Wrap the columns that will be\n * merged inside the `<kendo-grid-span-column>` tag.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid\n *              [sortable]=\"true\"\n *              [filterable]=\"true\"\n *              [kendoGridBinding]=\"products\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-span-column>\n *              <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *              </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" filter=\"numeric\" width=\"180\" format=\"{0:c}\">\n *              </kendo-grid-column>\n *          </kendo-grid-span-column>\n *          <kendo-grid-column field=\"Discontinued\" width=\"120\" filter=\"boolean\">\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *              </ng-template>\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *   public products = [{\n *      \"ProductID\": 1,\n *      \"ProductName\": \"Chai\",\n *      \"UnitPrice\": 18.0000,\n *      \"Discontinued\": true\n *    }, {\n *      \"ProductID\": 2,\n *      \"ProductName\": \"Chang\",\n *      \"UnitPrice\": 19.0000,\n *      \"Discontinued\": false\n *    }\n *   ];\n * }\n *\n * ```\n *\n * By default, the data cell displays the data for the specified fields. To further customize\n * the span-column functionality, use a [cell template]({% slug api_grid_celltemplatedirective %}).\n *\n * ```html-no-run\n * <kendo-grid-span-column>\n *  <kendo-grid-column field=\"field1\" title=\"Field 1\"></kendo-grid-column>\n *  <kendo-grid-column field=\"field2\" title=\"Field 2\"></kendo-grid-column>\n *    <ng-template kendoGridCellTemplate let-dataItem>\n *        <h5>{{ dataItem.field1 }}</h5>\n *        <p>{{ dataItem.field2 }}</p>\n *    </ng-template>\n *  </kendo-grid-span-column>\n * ```\n */\n\n\nlet SpanColumnComponent = SpanColumnComponent_1 = class SpanColumnComponent extends ColumnBase$1 {\n  constructor(parent) {\n    super(parent);\n    /*\n     * @hidden\n     */\n\n    this.isSpanColumn = true;\n    this.template = new QueryList();\n    this.editTemplate = new QueryList();\n    /**\n     * @hidden\n     */\n\n    this.childColumns = new QueryList();\n    /**\n     * @hidden\n     */\n\n    this.includeInChooser = false;\n    this._editable = true;\n    this._locked = false;\n\n    if (parent && parent.isSpanColumn) {\n      throw new Error('SpanColumn cannot be nested inside another SpanColumn');\n    }\n  }\n  /**\n   * Defines whether the edit template of the column will be rendered. The default value is `false`.\n   *\n   * > To enable the editing functionality for a spanned column, set an edit template for it.\n   *\n   * @example\n   * ```html-no-run\n   * <kendo-grid>\n   *    <kendo-grid-span-column [editable]=\"false\">\n   *      <kendo-grid-column field=\"UnitPrice\">\n   *      </kendo-grid-column>\n   *      <kendo-grid-column field=\"ProductName\">\n   *      </kendo-grid-column>\n   *      <ng-template kendoGridEditTemplate>\n   *         .....\n   *      </ng-template>\n   *    </kendo-grid-span-column>\n   * </kendo-grid>\n   * ```\n   */\n\n\n  set editable(value) {\n    this._editable = value;\n  }\n\n  get editable() {\n    return isPresent(this.editTemplateRef) && this._editable;\n  }\n  /**\n   * @hidden\n   * added for backwards compitability\n   */\n\n\n  set width(_value) {}\n\n  get width() {\n    return this.childColumns.reduce((total, column) => total + column.width, 0);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get leafIndex() {\n    return this.childColumns.first.leafIndex;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get templateRef() {\n    const template = this.template.first;\n    return template ? template.templateRef : undefined;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get editTemplateRef() {\n    const editTemplate = this.editTemplate.first;\n    return editTemplate ? editTemplate.templateRef : undefined;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get colspan() {\n    return this.childColumns.filter(c => c.isVisible).length;\n  }\n  /**\n   * Toggles the locked (frozen) state of the columns. Locked columns are visible\n   * at all times during the horizontal scrolling of the Grid.\n   *\n   * For the option to work properly, make sure that:\n   * - Scrolling is enabled.\n   * - The `height` option of the Grid is set.\n   * - The widths of all Grid columns are explicitly set in pixels. In this way,\n   * the Grid adjusts the layout of the locked and unlocked columns.\n   *\n   * @default false\n   *\n   * @example\n   * ```ts\n   * _@Component({\n   *    selector: 'my-app',\n   *    template: `\n   *        <kendo-grid [data]=\"gridData\" [scrollable]=\"scrollable\" style=\"height: 200px\">\n   *          <kendo-grid-span-column [locked]=\"true\">\n   *             <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n   *             </kendo-grid-column>\n   *             <kendo-grid-column field=\"ProductName\" title=\"Product Name\" width=\"200\">\n   *             </kendo-grid-column>\n   *          </kendo-grid-span-column>\n   *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n   *          </kendo-grid-column>\n   *        </kendo-grid>\n   *    `\n   * })\n   *\n   * class AppComponent {\n   *    public gridData: any[];\n   *\n   *    constructor() {\n   *        this.gridData = products;\n   *    }\n   * }\n   *\n   * const products = [{\n   *    \"ProductID\": 1,\n   *    \"ProductName\": \"Chai\",\n   *    \"UnitPrice\": 18.0000,\n   *    \"Discontinued\": true\n   *  }, {\n   *    \"ProductID\": 2,\n   *    \"ProductName\": \"Chang\",\n   *    \"UnitPrice\": 19.0000,\n   *    \"Discontinued\": false\n   *  }\n   * ];\n   *\n   * ```\n   */\n\n\n  set locked(value) {\n    this._locked = value;\n  }\n\n  get locked() {\n    return this._locked || this.childColumns.some(c => c.locked);\n  }\n\n  get childrenArray() {\n    return this.childColumns.toArray();\n  }\n\n  get hasChildren() {\n    return this.childColumns.length > 0;\n  }\n\n};\n\nSpanColumnComponent.ɵfac = function SpanColumnComponent_Factory(t) {\n  return new (t || SpanColumnComponent)(ɵngcc0.ɵɵdirectiveInject(ColumnBase$1, 13));\n};\n\nSpanColumnComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: SpanColumnComponent,\n  selectors: [[\"kendo-grid-span-column\"]],\n  contentQueries: function SpanColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, 4);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, EditTemplateDirective, 4);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnComponent, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.editTemplate = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.childColumns = _t);\n    }\n  },\n  inputs: {\n    editable: \"editable\",\n    locked: \"locked\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: ColumnBase$1,\n    useExisting: forwardRef(() => SpanColumnComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function SpanColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([ContentChildren(CellTemplateDirective, {\n  descendants: false\n}), __metadata(\"design:type\", QueryList)], SpanColumnComponent.prototype, \"template\", void 0);\n\n__decorate([ContentChildren(EditTemplateDirective, {\n  descendants: false\n}), __metadata(\"design:type\", QueryList)], SpanColumnComponent.prototype, \"editTemplate\", void 0);\n\n__decorate([ContentChildren(ColumnComponent), __metadata(\"design:type\", QueryList)], SpanColumnComponent.prototype, \"childColumns\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], SpanColumnComponent.prototype, \"editable\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], SpanColumnComponent.prototype, \"locked\", null);\n\nSpanColumnComponent = SpanColumnComponent_1 = __decorate([__param(0, SkipSelf()), __param(0, Host()), __param(0, Optional()), __metadata(\"design:paramtypes\", [ColumnBase$1])], SpanColumnComponent);\n/**\n * @hidden\n */\n\nconst expandColumns = columns => columns.reduce((acc, column) => acc.concat(isSpanColumnComponent(column) ? column.childrenArray : [column]), []) // tslint:disable-line:align\n;\n/**\n * @hidden\n */\n\n\nconst expandColumnsWithSpan = columns => columns.reduce((acc, column) => acc.concat(isSpanColumnComponent(column) ? [column].concat(column.childrenArray) : [column]), []) // tslint:disable-line:align\n;\n/**\n * @hidden\n */\n\n\nconst columnsToRender = columns => expandColumns(columns).filter(x => x.isVisible);\n\nconst sumProp = prop => array => (array || []).reduce((prev, curr) => prev + (curr[prop] || 0), 0);\n/**\n * @hidden\n */\n\n\nconst sumColumnWidths = sumProp('width');\n/**\n * @hidden\n */\n\nconst columnsSpan = sumProp('colspan'); // tslint:disable-next-line:max-line-length\n\nconst validField = new RegExp(`^[$A-Z\\_a-z][$A-Z\\_a-z0-9\\\\.]*$`);\n/**\n * @hidden\n */\n\nconst isValidFieldName = fieldName => !isNullOrEmptyString(fieldName) && validField.test(fieldName) && fieldName[0] !== \".\" && fieldName[fieldName.length - 1] !== \".\";\n/**\n * @hidden\n */\n\n\nconst children = column => column.children.filter(child => child !== column);\n/**\n * @hidden\n */\n\n\nconst leafColumns = columns => {\n  return columns.reduce((acc, column) => {\n    if (column.isColumnGroup) {\n      acc = acc.concat(leafColumns(children(column)));\n    } else if (column.isSpanColumn) {\n      acc = acc.concat(column.childrenArray);\n    } else {\n      acc.push(column);\n    }\n\n    return acc;\n  }, []).filter(x => x.isVisible); // tslint:disable-line:align\n};\n/**\n * @hidden\n */\n\n\nconst someLeafColumn = (callback, ...columns) => leafColumns(columns).some(callback);\n/**\n * @hidden\n */\n\n\nconst resizableColumns = columns => columns.filter(column => isTruthy(column.resizable) && column.isVisible);\n/**\n * @hidden\n */\n\n\nconst sortColumns = columns => orderBy(columns, [{\n  field: 'orderIndex',\n  dir: 'asc'\n}]);\n/**\n * @hidden\n */\n\n\nconst isInSpanColumn = column => isTruthy(column.parent) && isSpanColumnComponent(column.parent);\n\nvar ColumnGroupComponent_1;\n/**\n * @hidden\n */\n\nfunction isColumnGroupComponent(column) {\n  return column.isColumnGroup;\n}\n/**\n * Represents the column group header of the Grid\n * ([more information and examples]({% slug multicolumnheaders_columns_grid %})).\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *     <kendo-grid [data]=\"gridData\">\n *       <kendo-grid-column-group title=\"Product Info\">\n *         <ng-template kendoGridHeaderTemplate let-columnIndex=\"columnIndex\" let-column=\"column\">\n *               Column index: {{columnIndex}} / column title: {{column.title}}\n *         </ng-template>\n *         <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *         </kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *         </kendo-grid-column>\n *       </kendo-grid-column-group>\n *       <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"Discontinued\" width=\"120\">\n *           <ng-template kendoGridCellTemplate let-dataItem>\n *               <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *           </ng-template>\n *       </kendo-grid-column>\n *     </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\n\nlet ColumnGroupComponent = ColumnGroupComponent_1 = class ColumnGroupComponent extends ColumnBase$1 {\n  constructor(parent) {\n    super(parent);\n    this.parent = parent;\n    /**\n     * @hidden\n     */\n\n    this.includeInChooser = false;\n    /**\n     * @hidden\n     */\n\n    this.isColumnGroup = true;\n    /**\n     * @hidden\n     */\n\n    this.minResizableWidth = 10;\n\n    if (parent && parent.isSpanColumn) {\n      throw new Error('ColumnGroupComponent cannot be nested inside SpanColumnComponent');\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  rowspan() {\n    return 1;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get colspan() {\n    if (!this.children || this.children.length === 1) {\n      return 1;\n    }\n\n    return columnsSpan(this.children.filter(child => child !== this && child.isVisible));\n  }\n  /**\n   * @hidden\n   */\n\n\n  get leafIndex() {\n    return this.children ? (this.firstChild || {}).leafIndex : -1;\n  }\n\n  get childrenArray() {\n    return this.children.filter(c => c !== this);\n  }\n\n  get hasChildren() {\n    return Boolean(this.firstChild);\n  }\n\n  get firstChild() {\n    return this.children.find(column => column !== this);\n  }\n\n};\n\nColumnGroupComponent.ɵfac = function ColumnGroupComponent_Factory(t) {\n  return new (t || ColumnGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ColumnBase$1, 13));\n};\n\nColumnGroupComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: ColumnGroupComponent,\n  selectors: [[\"kendo-grid-column-group\"]],\n  contentQueries: function ColumnGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnBase$1, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.children = _t);\n    }\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: ColumnBase$1,\n    useExisting: forwardRef(() => ColumnGroupComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ColumnGroupComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([ContentChildren(ColumnBase$1), __metadata(\"design:type\", QueryList)], ColumnGroupComponent.prototype, \"children\", void 0);\n\nColumnGroupComponent = ColumnGroupComponent_1 = __decorate([__param(0, SkipSelf()), __param(0, Host()), __param(0, Optional()), __metadata(\"design:paramtypes\", [ColumnBase$1])], ColumnGroupComponent);\n/**\n * Represents the detail template of the Grid ([more information and examples]({% slug detailrowtemplate_grid %})).\n * To define the detail template, nest an `<ng-template>` tag with the `kendoGridDetailTemplate` directive inside a `<kendo-grid>` tag.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *       <kendo-grid\n *         [data]=\"data\"\n *         selectable=\"true\"\n *         style=\"height: 160px\"\n *         >\n *         <kendo-grid-column field=\"ProductID\"></kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\"></kendo-grid-column>\n *         <kendo-grid-column field=\"UnitPrice\"></kendo-grid-column>\n *         <ng-template kendoGridDetailTemplate let-dataItem>\n *           <div *ngIf=\"dataItem.Category\">\n *             <header>{{dataItem.Category?.CategoryName}}</header>\n *             <span>{{dataItem.Category?.Description}}</span>\n *           </div>\n *         </ng-template>\n *       </kendo-grid>\n *   `\n * })\n *\n * class AppComponent {\n *     public data = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 1,\n *             \"CategoryName\": \"Beverages\",\n *             \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *         }\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 1,\n *             \"CategoryName\": \"Beverages\",\n *             \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *         }\n *       }, {\n *         \"ProductID\": 3,\n *         \"ProductName\": \"Aniseed Syrup\",\n *         \"UnitPrice\": 10.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 2,\n *             \"CategoryName\": \"Condiments\",\n *             \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n *         }\n *     }];\n *\n * }\n *\n * ```\n *\n */\n\nlet DetailTemplateDirective = /*#__PURE__*/(() => {\n  let DetailTemplateDirective = class DetailTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n\n      this._condition = () => true;\n    }\n    /**\n     * Defines the function that indicates if a given detail row and the associated **Expand** or **Collapse** button will be displayed.\n     */\n\n\n    set showIf(fn) {\n      if (typeof fn !== 'function') {\n        throw new Error(`showIf must be a function, but received ${JSON.stringify(fn)}.`);\n      }\n\n      this._condition = fn;\n    }\n\n    get showIf() {\n      return this._condition;\n    }\n\n  };\n\n  DetailTemplateDirective.ɵfac = function DetailTemplateDirective_Factory(t) {\n    return new (t || DetailTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  DetailTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: DetailTemplateDirective,\n    selectors: [[\"\", \"kendoGridDetailTemplate\", \"\"]],\n    inputs: {\n      showIf: [\"kendoGridDetailTemplateShowIf\", \"showIf\"]\n    }\n  });\n\n  __decorate([Input(\"kendoGridDetailTemplateShowIf\"), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Function])], DetailTemplateDirective.prototype, \"showIf\", null);\n\n  DetailTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], DetailTemplateDirective);\n  return DetailTemplateDirective;\n})();\n\nconst canCreateElement = () => isDocumentAvailable() && document.createElement;\n\nlet cachedScrollbarWidth = null;\nlet cachedPixelRatio;\nlet cachedRtlScrollLeft = null;\n\nfunction scrollbarWidth() {\n  if (cachedScrollbarWidth === null && canCreateElement()) {\n    cachedPixelRatio = window.devicePixelRatio || 1;\n    const div = document.createElement(\"div\");\n    div.style.cssText = \"overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block\";\n    div.innerHTML = \"&nbsp;\";\n    document.body.appendChild(div);\n    cachedScrollbarWidth = div.offsetWidth - div.scrollWidth;\n    document.body.removeChild(div);\n  }\n\n  return cachedScrollbarWidth;\n}\n\nfunction rtlScrollLeft() {\n  if (cachedRtlScrollLeft === null && canCreateElement()) {\n    const div = document.createElement(\"div\");\n    div.style.cssText = \"overflow:scroll;zoom:1;clear:both;display:block;width:100px;visibility:hidden;position:absolute;left:-10000px;direction:rtl;\";\n    div.innerHTML = \"<div style='width:200px;height:1px;'</div>\";\n    document.body.appendChild(div);\n    const initial = div.scrollLeft;\n    div.scrollLeft = -1;\n    cachedRtlScrollLeft = div.scrollLeft < 0 ? div.scrollLeft : initial;\n    document.body.removeChild(div);\n  }\n\n  return cachedRtlScrollLeft;\n}\n/**\n * @hidden\n * move to kendo-common\n */\n\n\nlet BrowserSupportService = /*#__PURE__*/(() => {\n  let BrowserSupportService = class BrowserSupportService {\n    constructor(zone, changeDetector) {\n      this.zone = zone;\n      this.changeDetector = changeDetector;\n      this.changes = new EventEmitter();\n\n      if (typeof window === 'undefined') {\n        return;\n      }\n\n      this.zone.runOutsideAngular(() => {\n        this.subscriptions = fromEvent(window, 'resize').pipe(auditTime(100)).subscribe(() => {\n          if (cachedPixelRatio !== window.devicePixelRatio) {\n            zone.run(() => {\n              cachedScrollbarWidth = null;\n              this.changes.emit();\n              this.changeDetector.markForCheck();\n            });\n          }\n        });\n      });\n    }\n\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n        this.subscriptions = null;\n      }\n    }\n\n    get scrollbarWidth() {\n      return scrollbarWidth();\n    }\n\n    get rtlScrollLeft() {\n      return rtlScrollLeft();\n    }\n\n  };\n\n  BrowserSupportService.ɵfac = function BrowserSupportService_Factory(t) {\n    return new (t || BrowserSupportService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  BrowserSupportService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: BrowserSupportService,\n    factory: function (t) {\n      return BrowserSupportService.ɵfac(t);\n    }\n  });\n  BrowserSupportService = __decorate([__metadata(\"design:paramtypes\", [NgZone, ChangeDetectorRef])], BrowserSupportService);\n  /* tslint:disable:use-life-cycle-interface */\n\n  return BrowserSupportService;\n})();\n\nconst isGroupItem = source => {\n  return source.items !== undefined && source.field !== undefined;\n};\n\nconst isVirtualGroupItem = source => {\n  return source.offset !== undefined && source.skipHeader !== undefined;\n};\n\nconst flattenGroups = groups => groups.reduce((acc, curr) => {\n  if (isGroupItem(curr)) {\n    return acc.concat(flattenGroups(curr.items));\n  }\n\n  return acc.concat([curr]);\n}, []) // tslint:disable-line:align\n;\n/**\n * @hidden\n */\n\n\nconst itemAt = (data, index) => {\n  const first = data[0];\n\n  if (isPresent(first) && isGroupItem(first)) {\n    return flattenGroups(data)[index];\n  }\n\n  return data[index];\n};\n/**\n * @hidden\n */\n\n\nconst getIterator$1 = (data, {\n  footers,\n  level,\n  dataIndex,\n  parentGroupIndex,\n  groupIndex,\n  parentGroup\n}) => {\n  const first = data[0];\n\n  if (isPresent(first) && isGroupItem(first)) {\n    if (isVirtualGroupItem(first)) {\n      groupIndex = isPresent(first.offset) ? first.offset : groupIndex;\n    } //tslint:disable-next-line:no-use-before-declare\n\n\n    return new GroupIterator(data, footers, level, dataIndex, parentGroupIndex, groupIndex, parentGroup);\n  } //tslint:disable-next-line:no-use-before-declare\n\n\n  return new ItemIterator(data, dataIndex, parentGroupIndex, parentGroup);\n};\n\nclass ArrayIterator {\n  constructor(arr, idx = 0) {\n    this.arr = arr;\n    this.idx = idx;\n    this.arr = arr || [];\n  }\n\n  [iterator]() {\n    return this;\n  }\n\n  next() {\n    return this.idx < this.arr.length ? {\n      done: false,\n      value: this.arr[this.idx++]\n    } : {\n      done: true,\n      value: undefined\n    };\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass Iterator {\n  constructor(arr, dataIndex = 0, resultMap = x => x) {\n    this.dataIndex = dataIndex;\n    this.resultMap = resultMap;\n    const iter = arr[iterator];\n    this._innerIterator = iter ? arr[iterator]() : new ArrayIterator(arr);\n  }\n\n  [iterator]() {\n    return this;\n  }\n\n  next() {\n    return this.resultMap(this._innerIterator.next(), this.dataIndex++);\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass ItemIterator extends Iterator {\n  constructor(arr, dataIndex, groupIndex, group) {\n    super(arr, dataIndex, (x, idx) => ({\n      done: x.done,\n      value: {\n        data: x.value,\n        groupIndex: groupIndex,\n        index: idx,\n        type: 'data',\n        group\n      }\n    }));\n  }\n  /**\n   * The index of the next record.\n   * @readonly\n   * @type {number}\n   */\n\n\n  get index() {\n    return this.dataIndex;\n  }\n\n}\n\nconst prefix = (s, n) => {\n  const p = s ? s + \"_\" : s;\n  return `${p}${n}`;\n};\n/**\n * @hidden\n */\n\n\nclass GroupIterator {\n  constructor(arr, outputFooters = false, level = 0, dataIndex = 0, parentIndex = \"\", groupIndex = 0, parentGroup = undefined) {\n    this.arr = arr;\n    this.outputFooters = outputFooters;\n    this.level = level;\n    this.dataIndex = dataIndex;\n    this.parentIndex = parentIndex;\n    this.groupIndex = groupIndex;\n    this.parentGroup = parentGroup;\n    this.currentGroupIndex = \"\";\n    this.arr = arr || [];\n    this._iterator = new Iterator(this.arr, this.dataIndex);\n  }\n\n  [iterator]() {\n    return this;\n  }\n\n  nextGroupItem() {\n    this.current = this._iterator.next().value;\n    this._innerIterator = null;\n\n    if (this.current) {\n      this.currentGroupIndex = prefix(this.parentIndex, this.groupIndex++);\n      return {\n        done: false,\n        value: {\n          data: this.current,\n          index: this.currentGroupIndex,\n          level: this.level,\n          type: 'group',\n          parentGroup: this.parentGroup\n        }\n      };\n    } else {\n      this.current = null;\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n  }\n\n  footerItem() {\n    if (this.current) {\n      const group = this.current;\n      this.current = null;\n      return {\n        done: false,\n        value: {\n          data: group,\n          groupIndex: this.currentGroupIndex,\n          level: this.level,\n          type: 'footer',\n          group: {\n            data: group,\n            index: this.currentGroupIndex,\n            level: this.level,\n            type: 'group',\n            parentGroup: this.parentGroup\n          }\n        }\n      };\n    } else {\n      this.current = null;\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n  }\n\n  innerIterator(group) {\n    if (!this._innerIterator) {\n      this._innerIterator = getIterator$1(group.items, {\n        dataIndex: this.dataIndex,\n        footers: this.outputFooters,\n        level: this.level + 1,\n        parentGroupIndex: this.currentGroupIndex,\n        parentGroup: {\n          data: this.current,\n          index: this.currentGroupIndex,\n          level: this.level,\n          type: 'group',\n          parentGroup: this.parentGroup\n        }\n      });\n    }\n\n    return this._innerIterator;\n  }\n\n  nextDataItem(group) {\n    const iterator$$1 = this.innerIterator(group);\n    const result = iterator$$1.next();\n\n    if (isPresent(result.value) && !result.done && result.value.type === \"data\") {\n      this.dataIndex = result.value.index + 1;\n    }\n\n    return !result.done ? result : undefined;\n  }\n\n  next() {\n    if (!isPresent(this.current)) {\n      return this.nextGroupItem();\n    }\n\n    const item = this.nextDataItem(this.current);\n    return item ? item : this.outputFooters ? this.footerItem() : this.nextGroupItem();\n  }\n  /**\n   * The index of the last iterated data record.\n   * @readonly\n   * @type {number}\n   */\n\n\n  get index() {\n    return this.dataIndex + 1;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass DataResultIterator {\n  constructor(source, skip = 0, groupFooters = false) {\n    this.source = source;\n    this.skip = skip;\n    this.groupFooters = groupFooters;\n    this.source = this.source ? this.source : [];\n    this.isObject = this.isGridDataResult(this.source);\n  }\n\n  isGridDataResult(source) {\n    return source.total !== undefined && source.data !== undefined;\n  }\n\n  get total() {\n    return this.isObject ? this.source.total : this.source.length;\n  }\n\n  get data() {\n    return this.isObject ? this.source.data : this.source;\n  }\n\n  map(fn) {\n    return this.data.map(fn);\n  }\n\n  filter(fn) {\n    return this.data.filter(fn);\n  }\n\n  reduce(fn, init) {\n    return this.data.reduce(fn, init);\n  }\n\n  forEach(fn) {\n    this.data.forEach(fn);\n  }\n\n  some(fn) {\n    return this.data.some(fn);\n  }\n\n  [iterator]() {\n    return getIterator$1(this.data, {\n      dataIndex: this.skip,\n      footers: this.groupFooters,\n      groupIndex: this.skip\n    });\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass DataCollection {\n  constructor(accessor) {\n    this.accessor = accessor;\n  }\n\n  get total() {\n    return this.accessor().total;\n  }\n\n  get length() {\n    return this.accessor().data.length;\n  }\n\n  get first() {\n    return this.accessor().data[0];\n  }\n\n  get last() {\n    return this.accessor().data[this.length - 1];\n  }\n\n  at(index) {\n    return itemAt(this.accessor().data, index);\n  }\n\n  map(fn) {\n    return this.accessor().map(fn);\n  }\n\n  filter(fn) {\n    return this.accessor().filter(fn);\n  }\n\n  reduce(fn, init) {\n    return this.accessor().reduce(fn, init);\n  }\n\n  forEach(fn) {\n    this.accessor().forEach(fn);\n  }\n\n  some(fn) {\n    return this.accessor().some(fn);\n  }\n\n  [iterator]() {\n    return this.accessor()[iterator]();\n  }\n\n  toString() {\n    return this.accessor().toString();\n  }\n\n}\n/**\n * @hidden\n */\n\n\nlet Selection = /*#__PURE__*/(() => {\n  class Selection {\n    constructor(grid, cd) {\n      this.grid = grid;\n      this.cd = cd;\n      /**\n       * Defines the collection that will store the selected item keys.\n       */\n\n      this.selectedKeys = [];\n      /**\n       * Fires when the `selectedKeys` collection has been updated.\n       */\n\n      this.selectedKeysChange = new EventEmitter();\n      this.init();\n    }\n\n    init() {\n      if (!isPresent(this.grid.rowSelected)) {\n        this.grid.rowSelected = row => {\n          return this.selectedKeys.indexOf(this.getItemKey(row)) >= 0;\n        };\n      }\n\n      if (!isPresent(this.grid.cellSelected)) {\n        this.grid.cellSelected = (row, column, colIndex) => {\n          const contender = this.getSelectionItem(row, column, colIndex);\n          return {\n            selected: this.selectedKeys.some(item => item.columnKey === contender.columnKey && item.itemKey === contender.itemKey),\n            item: contender\n          };\n        };\n      }\n\n      this.selectionChangeSubscription = this.grid.selectionChange.subscribe(this.onSelectionChange.bind(this));\n    }\n    /**\n     * @hidden\n     */\n\n\n    destroy() {\n      this.selectionChangeSubscription.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n\n\n    reset() {\n      this.selectedKeys = [];\n    }\n\n    getItemKey(row) {\n      if (this.selectionKey) {\n        if (typeof this.selectionKey === \"string\") {\n          return row.dataItem[this.selectionKey];\n        }\n\n        if (typeof this.selectionKey === \"function\") {\n          return this.selectionKey(row);\n        }\n      }\n\n      return row.index;\n    }\n\n    getSelectionItem(row, col, colIndex) {\n      const itemIdentifiers = {};\n      itemIdentifiers.itemKey = this.getItemKey(row);\n\n      if (!isPresent(col) && !isPresent(colIndex)) {\n        return itemIdentifiers;\n      }\n\n      if (this.columnKey) {\n        if (typeof this.columnKey === \"string\") {\n          itemIdentifiers.columnKey = row.dataItem[this.columnKey];\n        }\n\n        if (typeof this.columnKey === \"function\") {\n          itemIdentifiers.columnKey = this.columnKey(col, colIndex);\n        }\n      }\n\n      return {\n        itemKey: itemIdentifiers.itemKey,\n        columnKey: itemIdentifiers.columnKey ? itemIdentifiers.columnKey : colIndex\n      };\n    }\n\n    onSelectionChange(selection) {\n      if (selection.selectedRows) {\n        selection.deselectedRows.forEach(item => {\n          const itemKey = this.getItemKey(item);\n          const itemIndex = this.selectedKeys.indexOf(itemKey);\n\n          if (itemIndex >= 0) {\n            this.selectedKeys.splice(itemIndex, 1);\n          }\n        });\n\n        if (this.grid.selectableSettings.mode === \"single\" && this.selectedKeys.length > 0) {\n          this.reset();\n        }\n\n        selection.selectedRows.forEach(item => {\n          const itemKey = this.getItemKey(item);\n\n          if (this.selectedKeys.indexOf(itemKey) < 0) {\n            this.selectedKeys.push(itemKey);\n          }\n        });\n      } else {\n        selection.deselectedCells.forEach(item => {\n          const itemIndex = this.getCellSelectionItemIndex(item);\n\n          if (itemIndex >= 0) {\n            this.selectedKeys.splice(itemIndex, 1);\n          }\n        });\n\n        if (this.grid.selectableSettings.mode === \"single\" && this.selectedKeys.length > 0) {\n          this.reset();\n        }\n\n        selection.selectedCells.forEach(item => {\n          const itemIndex = this.getCellSelectionItemIndex(item);\n\n          if (itemIndex < 0) {\n            this.selectedKeys.push(item);\n          }\n        });\n      }\n\n      this.cd.markForCheck();\n      this.selectedKeysChange.emit(this.selectedKeys);\n    }\n\n    getCellSelectionItemIndex(item) {\n      return this.selectedKeys.findIndex(selectedItem => selectedItem.itemKey === item.itemKey && selectedItem.columnKey === item.columnKey);\n    }\n\n  }\n\n  Selection.ɵfac = function Selection_Factory(t) {\n    ɵngcc0.ɵɵinvalidFactory();\n  };\n\n  Selection.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: Selection,\n    inputs: {\n      selectedKeys: \"selectedKeys\",\n      selectionKey: [\"kendoGridSelectBy\", \"selectionKey\"],\n      columnKey: \"columnKey\"\n    },\n    outputs: {\n      selectedKeysChange: \"selectedKeysChange\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], Selection.prototype, \"selectedKeys\", void 0);\n\n  __decorate([Input(\"kendoGridSelectBy\"), __metadata(\"design:type\", Object)], Selection.prototype, \"selectionKey\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], Selection.prototype, \"columnKey\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], Selection.prototype, \"selectedKeysChange\", void 0);\n\n  return Selection;\n})();\n\nconst reset = (...lists) => {\n  let diff = false;\n\n  for (let idx = 0; idx < lists.length; idx++) {\n    const [list, columns] = lists[idx];\n    diff = diff || list.length !== columns.length;\n    list.reset(columns);\n  }\n\n  return diff;\n};\n/**\n * @hidden\n */\n\n\nclass ColumnsContainer {\n  constructor(columns) {\n    this.columns = columns;\n    this.allColumns = new QueryList();\n    this.leafColumns = new QueryList();\n    this.lockedColumns = new QueryList();\n    this.nonLockedColumns = new QueryList();\n    this.lockedLeafColumns = new QueryList();\n    this.nonLockedLeafColumns = new QueryList();\n    this.totalLevels = 0;\n    this.changes = new EventEmitter();\n    this.leafColumnsToRender = [];\n    this.lockedColumnsToRender = [];\n    this.nonLockedColumnsToRender = [];\n    this.hasGroupHeaderColumn = false;\n    this.hasGroupFooter = false;\n    this.hasFooter = false;\n    this.unlockedWidth = 0;\n  }\n\n  refresh() {\n    const currentLevels = this.totalLevels;\n    const leafColumns$$1 = new Array();\n    const lockedLeafColumns = new Array();\n    const nonLockedLeafColumns = new Array();\n    const lockedColumns = new Array();\n    const nonLockedColumns = new Array();\n    const allColumns = new Array();\n    const leafColumnsToRender = new Array();\n    const lockedColumnsToRender = new Array();\n    const nonLockedColumnsToRender = new Array();\n    let hasGroupHeaderColumn = false;\n    let hasGroupFooter = false;\n    let hasFooter = false;\n    let unlockedWidth = 0;\n    let leafIndex = 0;\n    this.totalLevels = 0;\n    this.columns().forEach(column => {\n      const containerLeafColumns = column.isLocked === true ? lockedLeafColumns : nonLockedLeafColumns;\n      const containerColumns = column.isLocked === true ? lockedColumns : nonLockedColumns;\n      const toRenderContainer = column.isLocked === true ? lockedColumnsToRender : nonLockedColumnsToRender;\n\n      if (!isColumnGroupComponent(column)) {\n        containerLeafColumns.push(column);\n        leafColumns$$1.push(column);\n        leafColumnsToRender.push.apply(leafColumnsToRender, columnsToRender([column]));\n        toRenderContainer.push.apply(toRenderContainer, columnsToRender([column]));\n        hasGroupHeaderColumn = hasGroupHeaderColumn || someLeafColumn(leaf => Boolean(leaf.groupHeaderColumnTemplateRef), column);\n        hasGroupFooter = hasGroupFooter || someLeafColumn(leaf => Boolean(leaf.groupFooterTemplateRef), column);\n        hasFooter = hasFooter || someLeafColumn(leaf => Boolean(leaf.footerTemplateRef), column);\n\n        if (!column.isLocked) {\n          unlockedWidth += column.width || 0;\n        }\n\n        if (column.isSpanColumn) {\n          column.childColumns.forEach(c => {\n            c.leafIndex = leafIndex++;\n          });\n        } else {\n          column.leafIndex = leafIndex++;\n        }\n      }\n\n      containerColumns.push(column);\n      allColumns.push(column);\n      this.totalLevels = column.level > this.totalLevels ? column.level : this.totalLevels;\n    });\n    this.hasGroupHeaderColumn = hasGroupHeaderColumn;\n    this.hasGroupFooter = hasGroupFooter;\n    this.hasFooter = hasFooter;\n    this.leafColumnsToRender = leafColumnsToRender;\n    this.lockedColumnsToRender = lockedColumnsToRender;\n    this.nonLockedColumnsToRender = nonLockedColumnsToRender;\n    this.unlockedWidth = unlockedWidth;\n    const changes = reset([this.leafColumns, leafColumns$$1], [this.lockedLeafColumns, lockedLeafColumns], [this.nonLockedLeafColumns, nonLockedLeafColumns], [this.lockedColumns, lockedColumns], [this.allColumns, allColumns], [this.nonLockedColumns, nonLockedColumns]) || currentLevels !== this.totalLevels;\n\n    if (changes) {\n      this.changes.emit();\n    }\n\n    return changes;\n  }\n\n}\n\nconst forEachColumn = (list, callback) => {\n  list.forEach(column => {\n    callback(column);\n\n    if (column.isColumnGroup && column.hasChildren) {\n      forEachColumn(column.childrenArray, callback);\n    }\n  });\n};\n\nconst forEachLevel = (list, callback) => {\n  sortColumns(list).forEach(column => {\n    callback(column);\n\n    if (column.isColumnGroup && column.hasChildren) {\n      forEachLevel(column.childrenArray, callback);\n    }\n  });\n};\n\nconst filterHierarchy = (list, predicate) => {\n  const result = [];\n  sortColumns(list).forEach(column => {\n    if (predicate(column)) {\n      if (column.isColumnGroup) {\n        const children$$1 = filterHierarchy(column.childrenArray, predicate);\n\n        if (children$$1.length) {\n          result.push(column, ...children$$1);\n        }\n      } else if (!column.isSpanColumn || filterHierarchy(column.childrenArray, predicate).length) {\n        result.push(column);\n      }\n    }\n  });\n  return result;\n};\n/**\n * @hidden\n */\n\n\nclass ColumnList {\n  constructor(columns) {\n    this.columns = columns;\n  }\n\n  static empty() {\n    return new ColumnList(new QueryList());\n  }\n\n  forEach(callback) {\n    forEachColumn(this.columns, callback);\n  }\n\n  filter(callback) {\n    const result = [];\n    forEachColumn(this.columns, column => {\n      if (callback(column)) {\n        result.push(column);\n      }\n    });\n    return result;\n  }\n\n  filterHierarchy(predicate) {\n    return filterHierarchy(this.columns.toArray(), predicate);\n  }\n\n  filterSort(callback) {\n    const result = [];\n    forEachLevel(this.columns.toArray(), column => {\n      if (callback(column)) {\n        result.push(column);\n      }\n    });\n    return result;\n  }\n\n  toArray() {\n    const result = [];\n    forEachColumn(this.columns, column => {\n      result.push(column);\n    });\n    return result;\n  }\n\n  rootColumns() {\n    return this.columns.toArray();\n  }\n\n  totalColumnLevels() {\n    let totalLevels = 0;\n    this.forEach(column => {\n      totalLevels = Math.max(column.level, totalLevels);\n    });\n    return totalLevels;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nlet GroupInfoService = /*#__PURE__*/(() => {\n  class GroupInfoService {\n    constructor() {\n      this._columnList = ColumnList.empty;\n    }\n\n    get columns() {\n      return expandColumns(this._columnList().toArray()).filter(isColumnComponent);\n    }\n\n    registerColumnsContainer(columns) {\n      this._columnList = columns;\n    }\n\n    formatForGroup(item) {\n      const column = this.columnForGroup(item);\n      return column ? column.format : \"\";\n    }\n\n    isGroupable(groupField) {\n      const [column] = this.columns.filter(x => x.field === groupField);\n      return column ? column.groupable : true;\n    }\n\n    groupTitle(item) {\n      const column = this.columnForGroup(item);\n      return column ? column.title || column.field : this.groupField(item);\n    }\n\n    groupHeaderTemplate(item) {\n      const column = this.columnForGroup(item);\n      return column ? column.groupHeaderTemplateRef || column.groupHeaderColumnTemplateRef : undefined;\n    }\n\n    groupField(group) {\n      return group.data ? group.data.field : group.field;\n    }\n\n    columnForGroup(group) {\n      const field = this.groupField(group);\n      const [column] = this.columns.filter(x => x.field === field);\n      return column;\n    }\n\n  }\n\n  GroupInfoService.ɵfac = function GroupInfoService_Factory(t) {\n    return new (t || GroupInfoService)();\n  };\n\n  GroupInfoService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: GroupInfoService,\n    factory: GroupInfoService.ɵfac\n  });\n  /**\n   * @hidden\n   */\n\n  return GroupInfoService;\n})();\nlet ChangeNotificationService = /*#__PURE__*/(() => {\n  let ChangeNotificationService = class ChangeNotificationService {\n    constructor(ngZone) {\n      this.ngZone = ngZone;\n      this.changes = new EventEmitter();\n    }\n\n    notify() {\n      if (!this.subscription || this.subscription.closed) {\n        this.subscription = this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => this.changes.emit());\n      }\n    }\n\n  };\n\n  ChangeNotificationService.ɵfac = function ChangeNotificationService_Factory(t) {\n    return new (t || ChangeNotificationService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n\n  ChangeNotificationService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ChangeNotificationService,\n    factory: function (t) {\n      return ChangeNotificationService.ɵfac(t);\n    }\n  });\n  ChangeNotificationService = __decorate([__metadata(\"design:paramtypes\", [NgZone])], ChangeNotificationService);\n  /**\n   * Represents the no-records template of the Grid. Provides an option to customize the\n   * appearance of the item that is displayed when no data is present. To define the no-records template,\n   * nest an `<ng-template>` tag with the `kendoGridNoRecordsTemplate` directive inside `<kendo-grid>`.\n   *\n   * > When the locked columns of the Grid are in use, the template is displayed in the non-locked part of the content.\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *   selector: 'my-app',\n   *   template: `\n   *       <kendo-grid [data]=\"data\">\n   *         <kendo-grid-column field=\"ProductID\"></kendo-grid-column>\n   *         <kendo-grid-column field=\"ProductName\"></kendo-grid-column>\n   *         <kendo-grid-column field=\"UnitPrice\"></kendo-grid-column>\n   *         <ng-template kendoGridNoRecordsTemplate>\n   *            There are not products. <a href=\"#\" (click)=\"refresh()\">Click here to refresh</a>.\n   *         </ng-template>\n   *       </kendo-grid>\n   *   `\n   * })\n   *\n   * class AppComponent {\n   *     public data = [];\n   *     public refresh() {\n   *       this.data = [{\n   *            \"ProductID\": 1,\n   *            \"ProductName\": \"Chai\",\n   *            \"UnitPrice\": 18.0000,\n   *            \"Discontinued\": false,\n   *            \"Category\": {\n   *                \"CategoryID\": 1,\n   *                \"CategoryName\": \"Beverages\",\n   *                \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n   *            }\n   *          }, {\n   *            \"ProductID\": 2,\n   *            \"ProductName\": \"Chang\",\n   *            \"UnitPrice\": 19.0000,\n   *            \"Discontinued\": false,\n   *            \"Category\": {\n   *                \"CategoryID\": 1,\n   *                \"CategoryName\": \"Beverages\",\n   *                \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n   *            }\n   *          }, {\n   *            \"ProductID\": 3,\n   *            \"ProductName\": \"Aniseed Syrup\",\n   *            \"UnitPrice\": 10.0000,\n   *            \"Discontinued\": false,\n   *            \"Category\": {\n   *                \"CategoryID\": 2,\n   *                \"CategoryName\": \"Condiments\",\n   *                \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n   *            }\n   *        }];\n   *\n   *     }\n   * }\n   *\n   * ```\n   */\n\n  return ChangeNotificationService;\n})();\nlet NoRecordsTemplateDirective = /*#__PURE__*/(() => {\n  let NoRecordsTemplateDirective = class NoRecordsTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  NoRecordsTemplateDirective.ɵfac = function NoRecordsTemplateDirective_Factory(t) {\n    return new (t || NoRecordsTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  NoRecordsTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NoRecordsTemplateDirective,\n    selectors: [[\"\", \"kendoGridNoRecordsTemplate\", \"\"]]\n  });\n  NoRecordsTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], NoRecordsTemplateDirective);\n  return NoRecordsTemplateDirective;\n})();\n\nconst set = value => pair => pair.forEach(x => x.style.height = value);\n\nconst clearHeight = pairs => pairs.filter(([left, right]) => left.style.height || right.style.height).forEach(set(\"\"));\n\nconst zip$1 = (arr1, arr2) => {\n  const result = [];\n\n  for (let idx = 0, len = arr1.length; idx < len; idx++) {\n    if (!arr2[idx]) {\n      break;\n    }\n\n    result.push([arr1[idx], arr2[idx]]);\n  }\n\n  return result;\n};\n\nconst setHeight = heights => (row, idx) => set(`${heights[idx] + 1}px`)(row);\n\nconst getHeights = rows => rows.map(([left, right]) => {\n  const height = left.offsetHeight;\n  const offsetHeight2 = right.offsetHeight;\n\n  if (height < offsetHeight2) {\n    return offsetHeight2;\n  }\n\n  return height;\n});\n/**\n * @hidden\n */\n\n\nconst syncRowsHeight = (table1, table2) => {\n  const activeElement = document.activeElement;\n  const rows = zip$1(table1.rows, table2.rows);\n  clearHeight(rows);\n  const heights = getHeights(rows);\n  [table1, table2].forEach(x => x.style.display = 'none');\n  rows.forEach(setHeight(heights));\n  [table1, table2].forEach(x => x.style.display = '');\n\n  if (document.activeElement !== activeElement && (table1.contains(activeElement) || table2.contains(activeElement))) {\n    activeElement.focus();\n  }\n};\n/**\n * @hidden\n */\n\n\nlet MenuTabbingService = /*#__PURE__*/(() => {\n  let MenuTabbingService = class MenuTabbingService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.isColumnMenu = false;\n      this.isPopupOpen = false;\n    }\n\n  };\n\n  MenuTabbingService.ɵfac = function MenuTabbingService_Factory(t) {\n    return new (t || MenuTabbingService)();\n  };\n\n  MenuTabbingService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: MenuTabbingService,\n    factory: function (t) {\n      return MenuTabbingService.ɵfac(t);\n    }\n  });\n  /**\n   * Represents a service to set the filter descriptor\n   * ([see example]({% slug reusablecustomfilters_grid %})).\n   */\n\n  return MenuTabbingService;\n})();\nlet FilterService = /*#__PURE__*/(() => {\n  let FilterService = class FilterService {\n    /**\n     * @hidden\n     */\n    constructor(menuTabbingService) {\n      /**\n       * Fires when the filter descriptors is set.\n       */\n      this.changes = new Subject();\n      this.menuTabbingService = menuTabbingService;\n    }\n    /**\n     * Sets the filter descriptor.\n     *\n     * @param {CompositeFilterDescriptor} value - The filter descriptor that will be set.\n     */\n\n\n    filter(value) {\n      this.changes.next(value);\n    }\n\n  };\n\n  FilterService.ɵfac = function FilterService_Factory(t) {\n    return new (t || FilterService)(ɵngcc0.ɵɵinject(MenuTabbingService, 8));\n  };\n\n  FilterService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: FilterService,\n    factory: function (t) {\n      return FilterService.ɵfac(t);\n    }\n  });\n  FilterService = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [MenuTabbingService])], FilterService);\n  /**\n   * Represents the pager template which helps to customize the pager appearance in the Grid. To define a pager\n   * template, nest an `<ng-template>` tag with the `kendoPagerTemplate` directive inside `<kendo-grid>`.\n   *\n   * The template context provides the following fields:\n   * * `currentPage`&mdash;The index of the displayed page.\n   * * `pageSize`&mdash;The value of the current `pageSize`.\n   * * `skip`&mdash;The current skip value.\n   * * `total`&mdash;The total number of records.\n   * * `totalPages`&mdash;The total number of available pages.\n   * *  Needs to be provided as an input to inner pager components used within the template when the Grid is navigable.\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *      <kendo-grid\n   *        [kendoGridBinding]=\"gridData\"\n   *        [pageSize]=\"1\"\n   *        [pageable]=\"true\"\n   *      >\n   *       <kendo-grid-column field=\"ProductID\" title=\"ID\" width=\"40\">\n   *       </kendo-grid-column>\n   *       <kendo-grid-column field=\"ProductName\" title=\"Name\" width=\"250\">\n   *       </kendo-grid-column>\n   *       <kendo-grid-column field=\"UnitPrice\" title=\"Price\" width=\"80\" format=\"{0:c}\">\n   *       </kendo-grid-column>\n   *\n   *       <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n   *          <kendo-pager-prev-buttons></kendo-pager-prev-buttons>\n   *          <kendo-pager-numeric-buttons [buttonCount]=\"10\"></kendo-pager-numeric-buttons>\n   *          <kendo-pager-next-buttons></kendo-pager-next-buttons>\n   *          <kendo-pager-info></kendo-pager-info>\n   *          Current page: {{currentPage}}\n   *       </ng-template>\n   *\n   *    </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *     public gridData = [{\n   *         \"ProductID\": 1,\n   *         \"ProductName\": \"Chai\",\n   *         \"UnitPrice\": 18.0000,\n   *         \"Discontinued\": false\n   *       }, {\n   *         \"ProductID\": 2,\n   *         \"ProductName\": \"Chang\",\n   *         \"UnitPrice\": 19.0000,\n   *         \"Discontinued\": true\n   *       }\n   *     ];\n   * }\n   *\n   * ```\n   */\n\n  return FilterService;\n})();\nlet PagerTemplateDirective = /*#__PURE__*/(() => {\n  let PagerTemplateDirective = class PagerTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  PagerTemplateDirective.ɵfac = function PagerTemplateDirective_Factory(t) {\n    return new (t || PagerTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  PagerTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: PagerTemplateDirective,\n    selectors: [[\"\", \"kendoPagerTemplate\", \"\"]]\n  });\n  PagerTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], PagerTemplateDirective);\n  /**\n   * @hidden\n   */\n\n  return PagerTemplateDirective;\n})();\nlet PDFService = /*#__PURE__*/(() => {\n  let PDFService = class PDFService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.savePDF = new EventEmitter();\n      this.drawPDF = new EventEmitter();\n      this.exportClick = new EventEmitter();\n      this.dataChanged = new EventEmitter();\n    }\n\n    save(component) {\n      this.emitEvent(this.savePDF, component);\n    }\n\n    draw(component, promise) {\n      this.emitEvent(this.drawPDF, {\n        component,\n        promise\n      });\n    }\n\n    emitEvent(emitter, args) {\n      if (emitter.observers.length === 0) {\n        if (isDevMode()) {\n          throw new Error('Creating PDF requires including the PDFModule and adding the <kendo-grid-pdf> component.');\n        }\n      } else {\n        emitter.emit(args);\n      }\n    }\n\n  };\n\n  PDFService.ɵfac = function PDFService_Factory(t) {\n    return new (t || PDFService)();\n  };\n\n  PDFService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: PDFService,\n    factory: function (t) {\n      return PDFService.ɵfac(t);\n    }\n  });\n  /**\n   * Arguments for the `pdfExport` event.\n   */\n\n  return PDFService;\n})();\n\nclass PDFExportEvent extends PreventableEvent {}\n/**\n * @hidden\n */\n\n\nlet SuspendService = /*#__PURE__*/(() => {\n  let SuspendService = class SuspendService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.scroll = false;\n    }\n\n  };\n\n  SuspendService.ɵfac = function SuspendService_Factory(t) {\n    return new (t || SuspendService)();\n  };\n\n  SuspendService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: SuspendService,\n    factory: function (t) {\n      return SuspendService.ɵfac(t);\n    }\n  });\n  /* tslint:disable: object-literal-sort-keys */\n\n  return SuspendService;\n})();\n\nconst bootstrapToMedia = media => ({\n  \"xs\": \"(max-width: 576px)\",\n  \"sm\": \"(min-width: 576px)\",\n  \"md\": \"(min-width: 768px)\",\n  \"lg\": \"(min-width: 992px)\",\n  \"xl\": \"(min-width: 1200px)\"\n})[media] || media;\n/* tslint:enable: object-literal-sort-keys */\n\n\nconst browserMatchMedia = media => window.matchMedia(media).matches;\n/**\n * @hidden\n */\n\n\nlet ResponsiveService = /*#__PURE__*/(() => {\n  let ResponsiveService = class ResponsiveService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      /**\n       * @hidden\n       */\n      this.matchMedia = browserMatchMedia;\n    }\n    /**\n     * @hidden\n     */\n\n\n    matchesMedia(media) {\n      return !media || this.matchMedia(bootstrapToMedia(media));\n    }\n\n  };\n\n  ResponsiveService.ɵfac = function ResponsiveService_Factory(t) {\n    return new (t || ResponsiveService)();\n  };\n\n  ResponsiveService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ResponsiveService,\n    factory: function (t) {\n      return ResponsiveService.ɵfac(t);\n    }\n  });\n  /**\n   * @hidden\n   */\n\n  return ResponsiveService;\n})();\nlet ExcelService = /*#__PURE__*/(() => {\n  let ExcelService = class ExcelService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.saveToExcel = new EventEmitter();\n      this.exportClick = new EventEmitter();\n    }\n\n    save(component) {\n      if (this.saveToExcel.observers.length === 0) {\n        if (isDevMode()) {\n          throw new Error('Saving excel requires including the ExcelModule and adding the <kendo-grid-excel> component.');\n        }\n      } else {\n        this.saveToExcel.emit(component);\n      }\n    }\n\n  };\n\n  ExcelService.ɵfac = function ExcelService_Factory(t) {\n    return new (t || ExcelService)();\n  };\n\n  ExcelService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ExcelService,\n    factory: function (t) {\n      return ExcelService.ɵfac(t);\n    }\n  });\n  /**\n   * Represents the toolbar template of the Grid.\n   *\n   * The template context has the following field:\n   * - `position`&mdash;The position at which the toolbar template is rendered. The possible values are \"top\" and \"bottom\".\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *       <div class=\"example-config\">\n   *         <input type=\"radio\" id=\"top\" name=\"position\" class=\"k-radio\" value=\"top\" checked (click)=\"positionChange($event)\"/>\n   *         <label class=\"k-radio-label\" for=\"top\">Top</label><br/>\n   *         <input type=\"radio\" id=\"bottom\" name=\"position\" class=\"k-radio\" value=\"bottom\" (click)=\"positionChange($event)\"/>\n   *         <label class=\"k-radio-label\" for=\"bottom\">Bottom</label><br/>\n   *         <input type=\"radio\" id=\"both\" name=\"position\" value=\"both\" class=\"k-radio\" (click)=\"positionChange($event)\"/>\n   *         <label class=\"k-radio-label\" for=\"both\">Both</label><br/>\n   *       </div>\n   *       <kendo-grid [data]=\"gridData\" style=\"height: 200px\">\n   *            <ng-template kendoGridToolbarTemplate [position]=\"position\" let-position=\"position\">\n   *                <button (click)=\"onClick()\" class=\"k-button\">Custom action</button>\n   *            </ng-template>\n   *            <kendo-grid-column field=\"ProductName\">\n   *            </kendo-grid-column>\n   *            <kendo-grid-column field=\"UnitPrice\">\n   *            </kendo-grid-column>\n   *        </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *     public position: 'top' | 'bottom' | 'both' = 'top';\n   *\n   *     public gridData = [{\n   *         \"ProductID\": 1,\n   *         \"ProductName\": \"Chai\",\n   *         \"UnitPrice\": 18.0000,\n   *         \"Discontinued\": false\n   *       }, {\n   *         \"ProductID\": 2,\n   *         \"ProductName\": \"Chang\",\n   *         \"UnitPrice\": 19.0000,\n   *         \"Discontinued\": true\n   *       }\n   *     ];\n   *\n   *     public onClick(): void {\n   *         console.log(\"button was clicked\");\n   *     }\n   *\n   *     public positionChange({ target }): void {\n   *        this.position = target.value;\n   *     }\n   * }\n   *\n   * ```\n   */\n\n  return ExcelService;\n})();\nlet ToolbarTemplateDirective = /*#__PURE__*/(() => {\n  let ToolbarTemplateDirective = class ToolbarTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n      this._position = \"top\";\n    }\n    /**\n     * The position of the toolbar ([see example]({% slug toolbartemplate_grid %})).\n     *\n     * The possible values are:\n     * - `top`&mdash;Positions the toolbar above the group panel or header.\n     * - `bottom`&mdash;Positions the toolbar below the pager.\n     * - `both`&mdash;Displays two toolbar instances. Positions the first one above\n     * the group panel or header and the second one below the pager.\n     */\n\n\n    set position(position) {\n      this._position = position;\n    }\n\n    get position() {\n      return this._position;\n    }\n\n  };\n\n  ToolbarTemplateDirective.ɵfac = function ToolbarTemplateDirective_Factory(t) {\n    return new (t || ToolbarTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  ToolbarTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ToolbarTemplateDirective,\n    selectors: [[\"\", \"kendoGridToolbarTemplate\", \"\"]],\n    inputs: {\n      position: \"position\"\n    }\n  });\n\n  __decorate([Input(\"position\"), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], ToolbarTemplateDirective.prototype, \"position\", null);\n\n  ToolbarTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], ToolbarTemplateDirective);\n  /**\n   * @hidden\n   */\n\n  return ToolbarTemplateDirective;\n})();\nlet ScrollSyncService = /*#__PURE__*/(() => {\n  let ScrollSyncService = class ScrollSyncService {\n    constructor(ngZone) {\n      this.ngZone = ngZone;\n      this.changes = new Subject();\n      this.elements = [];\n      this.subscriptions = new Subscription();\n      this.headerSubscription = new Subscription();\n      this.bodySubscription = new Subscription();\n      this.subscriptions.add(this.changes.subscribe(args => this.scrollLeft(args)));\n    }\n\n    registerEmitter(el, sourceType) {\n      this.unregister(sourceType);\n      this.elements.push({\n        element: el,\n        sourceType\n      });\n\n      if (sourceType === \"body\" || sourceType === \"header\") {\n        this.ngZone.runOutsideAngular(() => {\n          const obs = fromEvent(el, \"scroll\").pipe(map(({\n            target: {\n              scrollLeft\n            }\n          }) => ({\n            scrollLeft,\n            sourceType\n          })));\n          const subscription = obs.pipe(distinctUntilChanged((x, y) => x.scrollLeft === y.scrollLeft), filter(x => !this.source || this.source === x.sourceType), tap(x => this.source = x.sourceType)).subscribe(x => this.changes.next(x));\n          subscription.add(obs.pipe(filter(x => this.source && this.source !== x.sourceType)).subscribe(() => this.source = undefined));\n\n          if (sourceType === \"body\") {\n            this.bodySubscription.add(subscription);\n          } else {\n            this.headerSubscription.add(subscription);\n          }\n        });\n      }\n    }\n    /**\n     * destroy\n     */\n\n\n    destroy() {\n      this.subscriptions.unsubscribe();\n      this.headerSubscription.unsubscribe();\n      this.bodySubscription.unsubscribe();\n    }\n\n    scrollLeft({\n      scrollLeft,\n      sourceType\n    }) {\n      this.ngZone.runOutsideAngular(() => {\n        this.elements.filter(x => sourceType !== x.sourceType).forEach(({\n          element\n        }) => element.scrollLeft = scrollLeft);\n      });\n    }\n\n    unregister(sourceType) {\n      const index = this.elements.findIndex(x => x.sourceType === sourceType);\n\n      if (index > -1) {\n        if (sourceType === \"header\") {\n          this.headerSubscription.unsubscribe();\n          this.headerSubscription = new Subscription();\n        } else if (sourceType === \"body\") {\n          this.bodySubscription.unsubscribe();\n          this.bodySubscription = new Subscription();\n        }\n\n        this.elements.splice(index, 1);\n      }\n    }\n\n  };\n\n  ScrollSyncService.ɵfac = function ScrollSyncService_Factory(t) {\n    return new (t || ScrollSyncService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n\n  ScrollSyncService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ScrollSyncService,\n    factory: function (t) {\n      return ScrollSyncService.ɵfac(t);\n    }\n  });\n  ScrollSyncService = __decorate([__metadata(\"design:paramtypes\", [NgZone])], ScrollSyncService);\n  /**\n   * @hidden\n   */\n\n  return ScrollSyncService;\n})();\nlet ResizeService = /*#__PURE__*/(() => {\n  let ResizeService = class ResizeService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.resizeSubscription = new Subscription(() => {});\n      this.dispatcher = new Subject(); // tslint:disable-next-line:member-ordering\n\n      this.changes = this.dispatcher.asObservable().pipe(throttleTime(100));\n    }\n\n    connect(resizes) {\n      this.resizeSubscription.add(resizes.subscribe(this.dispatcher));\n    }\n\n    destroy() {\n      if (this.resizeSubscription) {\n        this.resizeSubscription.unsubscribe();\n      }\n    }\n\n  };\n\n  ResizeService.ɵfac = function ResizeService_Factory(t) {\n    return new (t || ResizeService)();\n  };\n\n  ResizeService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ResizeService,\n    factory: function (t) {\n      return ResizeService.ɵfac(t);\n    }\n  });\n  /**\n   * @hidden\n   */\n\n  return ResizeService;\n})();\n\nconst isLocked = column => column.parent ? isLocked(column.parent) : !!column.locked;\n/**\n * @hidden\n */\n\n\nconst resizeArgs = (column, extra) => Object.assign({\n  columns: leafColumns([column]),\n  locked: isLocked(column)\n}, extra); // tslint:disable-line:align\n\n/**\n * @hidden\n */\n\n\nlet ColumnResizingService = /*#__PURE__*/(() => {\n  let ColumnResizingService = class ColumnResizingService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.changes = new EventEmitter();\n      this.tables = [];\n      this.batch = null;\n    }\n\n    start(column) {\n      this.trackColumns(column);\n      const columns = (this.column.isColumnGroup ? [column] : []).concat(leafColumns([column]));\n      this.changes.emit({\n        columns: columns,\n        locked: isLocked(this.column),\n        type: 'start'\n      });\n    }\n\n    resizeColumns(deltaPercent) {\n      const action = resizeArgs(this.column, {\n        deltaPercent,\n        type: 'resizeColumn'\n      });\n      this.changes.emit(action);\n    }\n\n    resizeTable(column, delta) {\n      const action = resizeArgs(column, {\n        delta,\n        type: 'resizeTable'\n      });\n      this.changes.emit(action);\n    }\n\n    resizedColumn(state$$1) {\n      this.resizedColumns.push(state$$1);\n    }\n\n    end() {\n      this.changes.emit({\n        columns: [],\n        resizedColumns: this.resizedColumns,\n        type: 'end'\n      });\n    }\n\n    registerTable(tableMetadata) {\n      this.tables.push(tableMetadata);\n\n      const unregisterTable = () => {\n        this.tables.splice(this.tables.indexOf(tableMetadata), 1);\n      };\n\n      return unregisterTable;\n    }\n\n    measureColumns(info) {\n      if (this.batch !== null) {\n        this.batch.push(...info);\n      } else {\n        this.autoFitBatch(info, () => this.end());\n      }\n    }\n\n    autoFit(...columns) {\n      const nonLockedColumns = columns.filter(column => !column.isLocked);\n      this.autoFitStart(nonLockedColumns);\n      this.autoFitBatch(this.batch, () => {\n        if (nonLockedColumns.length < columns.length) {\n          const lockedColumns = columns.filter(column => column.isLocked);\n          this.autoFitStart(lockedColumns);\n          this.autoFitBatch(this.batch, () => this.end());\n        } else {\n          this.end();\n        }\n      });\n    }\n\n    trackColumns(column) {\n      this.resizedColumns = [];\n      this.column = column;\n    }\n\n    autoFitStart(columns) {\n      this.batch = [];\n      this.resizedColumns = [];\n\n      if (columns.length === 0) {\n        return;\n      }\n\n      const locked = columns[0].isLocked;\n      this.changes.emit({\n        type: 'start',\n        columns,\n        locked\n      });\n      this.changes.emit({\n        type: 'triggerAutoFit',\n        columns,\n        locked\n      });\n    }\n\n    autoFitBatch(info, onComplete) {\n      const locked = info.length > 0 ? info[0].column.isLocked : false;\n      const observables = this.tables.filter(table => table.locked === locked).map(table => table.autoFit(info));\n      zip(...observables).pipe(take(1)).subscribe(widths => {\n        this.changes.emit({\n          columns: info.map(i => i.column),\n          type: 'autoFitComplete',\n          widths,\n          locked\n        });\n\n        if (onComplete) {\n          onComplete();\n        }\n      });\n      this.batch = null;\n    }\n\n  };\n\n  ColumnResizingService.ɵfac = function ColumnResizingService_Factory(t) {\n    return new (t || ColumnResizingService)();\n  };\n\n  ColumnResizingService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ColumnResizingService,\n    factory: function (t) {\n      return ColumnResizingService.ɵfac(t);\n    }\n  });\n  /**\n   * @hidden\n   */\n\n  /**\n   * @hidden\n   */\n\n  return ColumnResizingService;\n})();\n\nconst hasFilterMenu = settings => typeof settings === 'string' && settings.indexOf('menu') > -1;\n/**\n * @hidden\n */\n\n\nconst hasFilterRow = settings => settings === true || typeof settings === 'string' && settings.indexOf('row') > -1;\n\nconst contains$1 = (node, predicate) => {\n  while (node) {\n    if (predicate(node)) {\n      return true;\n    }\n\n    node = node.parentNode;\n  }\n\n  return false;\n};\n/**\n * Arguments for the `close` event of the filter and column-menu popup.\n */\n\n\nclass PopupCloseEvent extends PreventableEvent {\n  constructor(e) {\n    super();\n    this.originalEvent = e;\n  }\n\n}\n\nconst DEFAULT_POPUP_CLASS = 'k-grid-filter-popup';\n/**\n * The service that is used for the popups of the filter and column menus\n * ([see example]({% slug reusablecustomfilters_grid %}#toc-filter-menu-with-popup)).\n */\n\nlet SinglePopupService = /*#__PURE__*/(() => {\n  let SinglePopupService = class SinglePopupService {\n    constructor(popupService, renderer, ngZone, scrollSyncService, localization) {\n      this.popupService = popupService;\n      this.renderer = renderer;\n      this.ngZone = ngZone;\n      this.localization = localization;\n      /**\n       * Fires when the filter or column menus are about to close because the user clicked outside their popups.\n       * Used to prevent the popup from closing.\n       */\n\n      this.onClose = new Subject();\n      this.scrollSubscription = scrollSyncService.changes.subscribe(() => this.destroy());\n    }\n    /**\n     * @hidden\n     */\n\n\n    open(anchor, template, popupRef, popupClass = DEFAULT_POPUP_CLASS) {\n      const toggle = isPresent(popupRef) && this.popupRef === popupRef;\n      this.destroy();\n\n      if (!toggle) {\n        const direction = this.localization.rtl ? 'right' : 'left';\n        this.popupRef = this.popupService.open({\n          anchorAlign: {\n            vertical: 'bottom',\n            horizontal: direction\n          },\n          popupAlign: {\n            vertical: 'top',\n            horizontal: direction\n          },\n          anchor: anchor,\n          popupClass: popupClass,\n          content: template,\n          positionMode: \"absolute\"\n        });\n        this.renderer.setAttribute(this.popupRef.popupElement, 'dir', this.localization.rtl ? 'rtl' : 'ltr');\n        this.attachClose(anchor);\n      }\n\n      return this.popupRef;\n    }\n    /**\n     * @hidden\n     */\n\n\n    destroy() {\n      if (this.popupRef) {\n        this.detachClose();\n        this.popupRef.close();\n        this.popupRef = null;\n      }\n    }\n\n    ngOnDestroy() {\n      this.destroy();\n      this.scrollSubscription.unsubscribe();\n    }\n\n    detachClose() {\n      if (this.removeClick) {\n        this.removeClick();\n      }\n    }\n\n    attachClose(skipElement) {\n      this.detachClose();\n      this.ngZone.runOutsideAngular(() => this.removeClick = this.renderer.listen(\"document\", \"click\", e => {\n        if (!contains$1(e.target, x => this.popupRef.popupElement === x || x === skipElement)) {\n          const args = new PopupCloseEvent(e);\n          this.onClose.next(args);\n\n          if (!args.isDefaultPrevented()) {\n            this.destroy();\n          }\n        }\n      }));\n    }\n\n  };\n\n  SinglePopupService.ɵfac = function SinglePopupService_Factory(t) {\n    return new (t || SinglePopupService)(ɵngcc0.ɵɵinject(ɵngcc3.PopupService), ɵngcc0.ɵɵinject(ɵngcc0.Renderer2), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ScrollSyncService), ɵngcc0.ɵɵinject(ɵngcc1.LocalizationService));\n  };\n\n  SinglePopupService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: SinglePopupService,\n    factory: function (t) {\n      return SinglePopupService.ɵfac(t);\n    }\n  });\n  SinglePopupService = __decorate([__metadata(\"design:paramtypes\", [PopupService, Renderer2, NgZone, ScrollSyncService, LocalizationService])], SinglePopupService);\n  /* tslint:disable: no-bitwise */\n\n  /**\n   * @hidden\n   */\n\n  return SinglePopupService;\n})();\n\nconst append = element => {\n  let appended = false;\n  return () => {\n    if (!appended) {\n      document.body.appendChild(element);\n      appended = true;\n    }\n\n    return element;\n  };\n};\n/**\n * @hidden\n */\n\n\nconst getDocument = element => element.ownerDocument.documentElement;\n/**\n * @hidden\n */\n\n\nconst getWindow = element => element.ownerDocument.defaultView;\n/**\n * @hidden\n */\n\n\nconst offset = element => {\n  const {\n    clientTop,\n    clientLeft\n  } = getDocument(element);\n  const {\n    pageYOffset,\n    pageXOffset\n  } = getWindow(element);\n  const {\n    top,\n    left\n  } = element.getBoundingClientRect();\n  return {\n    top: top + pageYOffset - clientTop,\n    left: left + pageXOffset - clientLeft\n  };\n};\n/**\n * @hidden\n * If the target is before the draggable element, returns `true`.\n *\n * DOCUMENT_POSITION_FOLLOWING = 4\n */\n\n\nconst isTargetBefore = (draggable, target) => (target.compareDocumentPosition(draggable) & 4) !== 0;\n/**\n * @hidden\n * If the container and the element are the same\n * or if the container holds (contains) the element, returns `true`.\n *\n * DOCUMENT_POSITION_CONTAINED_BY = 16\n */\n\n\nconst contains$2 = (element, container) => element === container || (container.compareDocumentPosition(element) & 16) !== 0;\n/**\n * @hidden\n */\n\n\nconst position = (target, before) => {\n  const targetRect = offset(target);\n  const {\n    offsetWidth,\n    offsetHeight\n  } = target;\n  const left = targetRect.left + (before ? 0 : offsetWidth);\n  const top = targetRect.top;\n  const height = offsetHeight;\n  return {\n    left,\n    top,\n    height\n  };\n};\n/**\n * @hidden\n */\n\n\nlet DragAndDropService = /*#__PURE__*/(() => {\n  let DragAndDropService = class DragAndDropService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.changes = new EventEmitter();\n      this.register = [];\n      this.lastTarget = null;\n    }\n\n    add(target) {\n      this.register.push(target);\n    }\n\n    remove(target) {\n      this.register = this.register.filter(current => current !== target);\n    }\n\n    notifyDrag(draggable, element, mouseEvent) {\n      const target = this.targetFor(element);\n\n      if (this.lastTarget === target) {\n        return;\n      }\n\n      this.changes.next({\n        draggable,\n        mouseEvent,\n        target: this.lastTarget,\n        type: 'leave'\n      });\n\n      if (target) {\n        this.changes.next({\n          draggable,\n          mouseEvent,\n          target,\n          type: 'enter'\n        });\n      }\n\n      this.lastTarget = target;\n    }\n\n    notifyDrop(draggable, mouseEvent) {\n      this.changes.next({\n        draggable,\n        mouseEvent,\n        target: this.lastTarget,\n        type: 'drop'\n      });\n      this.lastTarget = null;\n    }\n\n    targetFor(element) {\n      const comparer = contains$2.bind(null, element);\n      return this.register.find(({\n        element: {\n          nativeElement\n        }\n      }) => comparer(nativeElement));\n    }\n\n  };\n\n  DragAndDropService.ɵfac = function DragAndDropService_Factory(t) {\n    return new (t || DragAndDropService)();\n  };\n\n  DragAndDropService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: DragAndDropService,\n    factory: function (t) {\n      return DragAndDropService.ɵfac(t);\n    }\n  });\n  return DragAndDropService;\n})();\n\nconst updateClass = (element, valid) => {\n  const icon = element.querySelector('.k-icon');\n  icon.className = icon.className.replace(/(plus|cancel)/, valid ? 'plus' : 'cancel');\n};\n\nconst updateLock = (element, locked = null) => {\n  const icon = element.querySelectorAll('.k-icon')[1];\n  const value = locked == null ? '' : locked ? 'k-i-lock' : 'k-i-unlock';\n  icon.className = icon.className.replace(/(k-i-unlock|k-i-lock)/, '') + ` ${value}`;\n};\n\nconst decorate = element => {\n  element.className = 'k-header k-drag-clue';\n  element.style.position = 'absolute';\n  element.style.zIndex = '20000';\n};\n/**\n * @hidden\n */\n\n\nlet DragHintService = /*#__PURE__*/(() => {\n  let DragHintService = class DragHintService {\n    constructor(santizer) {\n      this.santizer = santizer;\n    }\n\n    create(title) {\n      this.dom = document.createElement(\"div\");\n      decorate(this.dom);\n      const safeTitle = this.santizer.sanitize(SecurityContext.HTML, title);\n      this.dom.innerHTML = `\n            <span class=\"k-icon k-drag-status k-i-cancel k-icon-with-modifier\">\n                <span class=\"k-icon k-icon-modifier\"></span>\n            </span>\n            ${safeTitle}\n        `;\n    }\n\n    attach() {\n      return append(this.dom);\n    }\n\n    remove() {\n      if (this.dom && this.dom.parentNode) {\n        (function (el) {\n          setTimeout(() => document.body.removeChild(el));\n        })(this.dom); // hack for IE + pointer events!\n\n\n        this.dom = null;\n      }\n    }\n\n    show() {\n      this.dom.style.display = \"\";\n    }\n\n    hide() {\n      this.dom.style.display = \"none\";\n    }\n\n    enable() {\n      updateClass(this.dom, true);\n    }\n\n    disable() {\n      updateClass(this.dom, false);\n    }\n\n    removeLock() {\n      updateLock(this.dom);\n    }\n\n    toggleLock(locked) {\n      updateLock(this.dom, locked);\n    }\n\n    move(move) {\n      this.dom.style.top = move.pageY + 'px';\n      this.dom.style.left = move.pageX + 'px';\n    }\n\n  };\n\n  DragHintService.ɵfac = function DragHintService_Factory(t) {\n    return new (t || DragHintService)(ɵngcc0.ɵɵinject(ɵngcc4.DomSanitizer));\n  };\n\n  DragHintService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: DragHintService,\n    factory: function (t) {\n      return DragHintService.ɵfac(t);\n    }\n  });\n  DragHintService = __decorate([__metadata(\"design:paramtypes\", [DomSanitizer])], DragHintService);\n  /**\n   * @hidden\n   */\n\n  return DragHintService;\n})();\nlet DropCueService = /*#__PURE__*/(() => {\n  let DropCueService = class DropCueService {\n    create() {\n      this.dom = document.createElement(\"div\");\n      this.dom.className = 'k-grouping-dropclue';\n      this.hide();\n    }\n\n    attach() {\n      return append(this.dom);\n    }\n\n    remove() {\n      if (this.dom && this.dom.parentElement) {\n        document.body.removeChild(this.dom);\n        this.dom = null;\n      }\n    }\n\n    hide() {\n      this.dom.style.display = \"none\";\n    }\n\n    position({\n      left,\n      top,\n      height\n    }) {\n      this.dom.style.display = 'block';\n      this.dom.style.height = height + 'px';\n      this.dom.style.top = top + 'px';\n      const width = this.dom.offsetWidth / 2;\n      this.dom.style.left = left - width + 'px';\n    }\n\n  };\n\n  DropCueService.ɵfac = function DropCueService_Factory(t) {\n    return new (t || DropCueService)();\n  };\n\n  DropCueService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: DropCueService,\n    factory: function (t) {\n      return DropCueService.ɵfac(t);\n    }\n  });\n  /**\n   * @hidden\n   */\n\n  return DropCueService;\n})();\nlet ColumnReorderService = /*#__PURE__*/(() => {\n  let ColumnReorderService = class ColumnReorderService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.changes = new EventEmitter();\n    }\n\n    reorder(e) {\n      this.changes.emit(e);\n    }\n\n  };\n\n  ColumnReorderService.ɵfac = function ColumnReorderService_Factory(t) {\n    return new (t || ColumnReorderService)();\n  };\n\n  ColumnReorderService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ColumnReorderService,\n    factory: function (t) {\n      return ColumnReorderService.ɵfac(t);\n    }\n  });\n  /**\n   * Arguments for the `columnReorder` event.\n   */\n\n  return ColumnReorderService;\n})();\n\nclass ColumnReorderEvent extends PreventableEvent {\n  /**\n   * @hidden\n   */\n  constructor({\n    column,\n    newIndex,\n    oldIndex\n  }) {\n    super();\n    this.column = column;\n    this.newIndex = newIndex;\n    this.oldIndex = oldIndex;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass NavigationMetadata {\n  constructor(dataRows, headerRows, isVirtual, hasPager, hasDetailTemplate, gridElement, virtualColumns, columns) {\n    this.dataRows = dataRows;\n    this.headerRows = headerRows;\n    this.isVirtual = isVirtual;\n    this.hasPager = hasPager;\n    this.hasDetailTemplate = hasDetailTemplate;\n    this.gridElement = gridElement;\n    this.virtualColumns = virtualColumns;\n    this.columns = columns;\n  }\n\n  get maxLogicalRowIndex() {\n    const dataRows = this.hasDetailTemplate ? this.dataRows * 2 : this.dataRows;\n    return this.headerRows + dataRows - 1;\n  }\n\n} // Incremented each time the service is instantiated.\n\n\nlet sequence = 0;\n/**\n * @hidden\n */\n\nlet IdService = /*#__PURE__*/(() => {\n  let IdService = class IdService {\n    constructor() {\n      this.prefix = `k-grid${sequence++}`;\n    }\n\n    cellId(rowIndex, colIndex) {\n      return `${this.prefix}-r${rowIndex}c${colIndex}`;\n    }\n\n    selectionCheckboxId(itemIndex) {\n      return `${this.prefix}-checkbox${itemIndex}`;\n    }\n\n    selectAllCheckboxId() {\n      return `${this.prefix}-select-all`;\n    }\n\n  };\n\n  IdService.ɵfac = function IdService_Factory(t) {\n    return new (t || IdService)();\n  };\n\n  IdService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: IdService,\n    factory: function (t) {\n      return IdService.ɵfac(t);\n    }\n  });\n  IdService = __decorate([__metadata(\"design:paramtypes\", [])], IdService);\n  return IdService;\n})();\nconst NO_STICKY = {\n  left: '0px',\n  right: '0px'\n};\n/**\n * @hidden\n */\n\nlet ColumnInfoService = /*#__PURE__*/(() => {\n  let ColumnInfoService = class ColumnInfoService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.visibilityChange = new EventEmitter();\n      this.lockedChange = new EventEmitter();\n      this.stickyChange = new EventEmitter();\n      this.columnRangeChange = new EventEmitter();\n      this.columnsContainer = new ColumnsContainer(() => []);\n    }\n\n    get lockedLeafColumns() {\n      return this.columnsContainer.lockedLeafColumns;\n    }\n\n    get nonLockedLeafColumns() {\n      return this.columnsContainer.nonLockedLeafColumns;\n    }\n\n    get isLocked() {\n      return this.lockedLeafColumns.length > 0;\n    }\n\n    get totalLevels() {\n      return this.columnsContainer.totalLevels;\n    }\n\n    get leafNamedColumns() {\n      const columns = expandColumns(this.list().filterSort(column => !column.isColumnGroup)).filter(column => column.matchesMedia && column.displayTitle);\n      return orderBy(columns, [{\n        field: 'locked',\n        dir: 'desc'\n      }]);\n    }\n\n    get unlockedRootCount() {\n      return this.list().rootColumns().filter(column => !column.locked && column.isVisible).length;\n    }\n\n    stickyColumnsStyles(column) {\n      if (!this.stickyColumns) {\n        this.stickyColumns = this.list().rootColumns().filter(column => column.sticky && !column.locked && column.isVisible);\n      }\n\n      if (this.stickyColumns.length === 0) {\n        return NO_STICKY;\n      }\n\n      const result = this.stickyColumns.reduce((acc, curr) => {\n        if (curr.leafIndex < column.leafIndex) {\n          acc.left += curr.width;\n        } else if (curr.leafIndex > column.leafIndex) {\n          acc.right += curr.width;\n        }\n\n        return acc;\n      }, {\n        left: 0,\n        right: 0\n      });\n      return {\n        left: `${result.left}px`,\n        right: `${result.right}px`\n      };\n    }\n\n    init(columns, list) {\n      this.columnsContainer = columns;\n      this.list = list;\n      this.stickyColumns = null;\n    }\n\n    changeVisibility(columns) {\n      this.stickyColumns = null;\n      this.visibilityChange.emit(columns);\n    }\n\n    changeLocked(columns) {\n      this.stickyColumns = null;\n      this.lockedChange.emit(columns);\n    }\n\n    changeStuck(columns) {\n      this.stickyColumns = null;\n      this.stickyChange.emit(columns);\n    }\n\n  };\n\n  ColumnInfoService.ɵfac = function ColumnInfoService_Factory(t) {\n    return new (t || ColumnInfoService)();\n  };\n\n  ColumnInfoService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ColumnInfoService,\n    factory: function (t) {\n      return ColumnInfoService.ɵfac(t);\n    }\n  });\n  /**\n   * @hidden\n   */\n\n  return ColumnInfoService;\n})();\nlet SortService = /*#__PURE__*/(() => {\n  class SortService {\n    constructor() {\n      this.changes = new Subject();\n    }\n\n    sort(value) {\n      this.changes.next(value);\n    }\n\n  }\n\n  SortService.ɵfac = function SortService_Factory(t) {\n    return new (t || SortService)();\n  };\n\n  SortService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: SortService,\n    factory: SortService.ɵfac\n  });\n  /**\n   * Arguments for the `columnVisibilityChange` event.\n   */\n\n  return SortService;\n})();\n\nclass ColumnVisibilityChangeEvent {\n  /**\n   * @hidden\n   */\n  constructor(columns) {\n    this.columns = columns;\n  }\n\n}\n/**\n * Arguments for the `columnLockedChange` event.\n */\n\n\nclass ColumnLockedChangeEvent {\n  /**\n   * @hidden\n   */\n  constructor(columns) {\n    this.columns = columns;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst GROUP_CELL_WIDTH = 32; // this should be the value of group-cell inside the theme!\n\n/**\n * @hidden\n */\n\nconst RESPONSIVE_BREAKPOINT_MEDIUM = 600;\n/**\n * @hidden\n */\n\nconst RESPONSIVE_BREAKPOINT_LARGE = 768;\n/**\n * @hidden\n */\n\nfunction defaultTrackBy(index, item) {\n  if (item.type === 'data' && item.isEditing) {\n    return item.data;\n  }\n\n  return index;\n}\n/**\n * Arguments for the `columnStickyChange` event.\n */\n\n\nclass ColumnStickyChangeEvent {\n  /**\n   * @hidden\n   */\n  constructor(columns) {\n    this.columns = columns;\n  }\n\n}\n/**\n * Represents the virtual scrolling cell template of the Grid while loading new data. Provides an option to customize the\n * appearance of the indicator that is displayed while new data is loading. To define the loading cell template,\n * nest an `<ng-template>` tag with the `kendoGridCellLoadingTemplate` directive inside `<kendo-grid>` ([see example]({% slug virtualscrolling_grid %}#toc-custom-loading-skeleton)).\n *\n * The template context is set to the current column, and utilizes the `let-x` syntax&mdash;for example, `let-column`.\n *\n * @example\n * ```ts-no-run\n *       <kendo-grid [data]=\"data\" scrollable=\"virtual\" [rowHeight]=\"36\">\n *         <ng-template kendoGridCellLoadingTemplate let-column>\n *             ...\n *         </ng-template>\n *       </kendo-grid>\n * ```\n */\n\n\nlet CellLoadingTemplateDirective = /*#__PURE__*/(() => {\n  let CellLoadingTemplateDirective = class CellLoadingTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  CellLoadingTemplateDirective.ɵfac = function CellLoadingTemplateDirective_Factory(t) {\n    return new (t || CellLoadingTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  CellLoadingTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: CellLoadingTemplateDirective,\n    selectors: [[\"\", \"kendoGridCellLoadingTemplate\", \"\"]]\n  });\n  CellLoadingTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], CellLoadingTemplateDirective);\n  return CellLoadingTemplateDirective;\n})();\n\nconst createControl = source => (acc, key) => {\n  acc[key] = new FormControl(source[key]);\n  return acc;\n};\n\nconst validateColumnsField = columns => expandColumns(columns.toArray()).filter(isColumnComponent).filter(({\n  field\n}) => !isValidFieldName(field)).forEach(({\n  field\n}) => console.warn(`\n                Grid column field name '${field}' does not look like a valid JavaScript identifier.\n                Identifiers can contain only alphanumeric characters (including \"$\" or \"_\"), and may not start with a digit.\n                Please use only valid identifier names to ensure error-free operation.\n            `));\n\nconst handleExpandCollapseGroupsService = (service, expandEmitter, collapseEmitter, map$$1) => service.changes.pipe(filter(({\n  group\n}) => isPresent(group))).subscribe(x => x.expand ? expandEmitter.emit(map$$1(x)) : collapseEmitter.emit(map$$1(x)));\n\nconst handleExpandCollapseDetailsService = (service, expandEmitter, collapseEmitter, map$$1) => service.changes.pipe(filter(({\n  dataItem\n}) => isPresent(dataItem))).subscribe(x => x.expand ? expandEmitter.emit(map$$1(x)) : collapseEmitter.emit(map$$1(x)));\n\nconst isInEditedCell = (element, gridElement) => closest(element, matchesClasses('k-grid-edit-cell')) && closest(element, matchesNodeName('kendo-grid')) === gridElement;\n\nconst ɵ5$1 = EMPTY_CELL_CONTEXT;\n/**\n * Represents the Kendo UI Grid component for Angular.\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *        </kendo-grid>\n *    `\n * })\n * class AppComponent {\n *    public gridData: any[] = products;\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n * ```\n */\n\nlet GridComponent = /*#__PURE__*/(() => {\n  let GridComponent = class GridComponent {\n    constructor(supportService, selectionService, cellSelectionService, wrapper, groupInfoService, groupsService, changeNotification, detailsService, editService, filterService, pdfService, responsiveService, renderer, excelService, ngZone, scrollSyncService, domEvents, columnResizingService, changeDetectorRef, columnReorderService, columnInfoService, navigationService, sortService, scrollRequestService, localization) {\n      this.supportService = supportService;\n      this.selectionService = selectionService;\n      this.cellSelectionService = cellSelectionService;\n      this.wrapper = wrapper;\n      this.groupInfoService = groupInfoService;\n      this.groupsService = groupsService;\n      this.changeNotification = changeNotification;\n      this.detailsService = detailsService;\n      this.editService = editService;\n      this.filterService = filterService;\n      this.pdfService = pdfService;\n      this.responsiveService = responsiveService;\n      this.renderer = renderer;\n      this.excelService = excelService;\n      this.ngZone = ngZone;\n      this.scrollSyncService = scrollSyncService;\n      this.domEvents = domEvents;\n      this.columnResizingService = columnResizingService;\n      this.changeDetectorRef = changeDetectorRef;\n      this.columnReorderService = columnReorderService;\n      this.columnInfoService = columnInfoService;\n      this.navigationService = navigationService;\n      this.sortService = sortService;\n      this.scrollRequestService = scrollRequestService;\n      this.localization = localization;\n      /**\n       * Sets the data of the Grid. If an array is provided, the Grid automatically gets the total count\n       * ([more information and example]({% slug databinding_grid %})).\n       */\n\n      this.data = [];\n      /**\n       * Defines the scroll mode used by the Grid.\n       *\n       * The available options are:\n       *  - `none`&mdash;Renders no scrollbar.\n       *  - `scrollable`&mdash;The default scroll mode. It requires the setting of the `height` option.\n       *  - `virtual`&mdash;Displays no pager and renders a portion of the data (optimized rendering) while the user is scrolling the content.\n       */\n\n      this.scrollable = 'scrollable';\n      /**\n       * Enables the single-row [selection]({% slug selection_grid %}) of the Grid.\n       */\n\n      this.selectable = false;\n      /**\n       * A function that defines how to track changes for the data rows.\n       *\n       * By default, the Grid tracks changes by the index of the data item.\n       * Edited rows are tracked by reference.\n       * In some cases, you might need to override the default behavior,\n       * for example, when you implement editing with immutable data items.\n       *\n       * The following example demonstrates how to track items only by index.\n       *\n       * @example\n       * ```ts\n       * import { Component } from '@angular/core';\n       * import { GridItem } from '@progress/kendo-angular-grid';\n       *\n       * _@Component({\n       *    selector: 'my-app',\n       *    template: `\n       *        <kendo-grid [data]=\"gridData\" [trackBy]=\"trackBy\">\n       *        </kendo-grid>\n       *    `\n       * })\n       * class AppComponent {\n       *    public gridData: any[] = products;\n       *\n       *    public trackBy(index: number, item: GridItem): any {\n       *        console.log(item);\n       *        return index;\n       *    }\n       * }\n       *\n       * const products = [{\n       *    \"ProductID\": 1,\n       *    \"ProductName\": \"Chai\",\n       *    \"UnitPrice\": 18.0000,\n       *    \"Discontinued\": true\n       *  }, {\n       *    \"ProductID\": 2,\n       *    \"ProductName\": \"Chang\",\n       *    \"UnitPrice\": 19.0000,\n       *    \"Discontinued\": false\n       *  }\n       * ];\n       * ```\n       */\n\n      this.trackBy = defaultTrackBy;\n      /**\n       * If set to `true`, the grid will render only the columns in the current viewport.\n       */\n\n      this.virtualColumns = false;\n      /**\n       * Enables the [filtering]({% slug filtering_grid %}) of the Grid columns that have their `field` option set.\n       */\n\n      this.filterable = false;\n      /**\n       * Enables the [sorting]({% slug sorting_grid %}) of the Grid columns that have their `field` option set.\n       */\n\n      this.sortable = false;\n      /**\n       * Configures the pager of the Grid ([see example]({% slug paging_grid %})).\n       *\n       * The available options are:\n       * - `buttonCount: Number`&mdash;Sets the maximum numeric buttons count before the buttons are collapsed. Defaults to `10`.\n       * - `info: Boolean`&mdash;Toggles the information about the current page and the total number of records. Defaults to `true`.\n       * - `type: PagerType`&mdash;Accepts the `numeric` (buttons with numbers) and `input` (input for typing the page number) values. Defaults to `'numeric'`.\n       * - `pageSizes: Boolean` or `Array<number>`&mdash;Shows a menu for selecting the page size. Defaults to `false`.\n       * - `previousNext: Boolean`&mdash;Toggles the **Previous** and **Next** buttons. Defaults to `true`.\n       * - `responsive: Boolean`&mdash;Toggles the built-in responsive behavior of the Pager. Defaults to `true`.\n       */\n\n      this.pageable = false;\n      /**\n       * If set to `true`, the user can group the Grid by dragging the column header cells.\n       * By default, grouping is disabled ([see example]({% slug groupingbasics_grid %})).\n       */\n\n      this.groupable = false;\n      /**\n       * If set to `true`, the user can use dedicated shortcuts to interact with the Grid.\n       * By default, navigation is disabled and the Grid content is accessible in the normal tab sequence.\n       */\n\n      this.navigable = false;\n      /**\n       * Indicates whether the Grid columns will be resized during initialization so that\n       * they fit their headers and row content. Defaults to `false`.\n       * Columns with `autoSize` set to `false` are excluded.\n       * To dynamically update the column width to match the new content,\n       * refer to [this example]({% slug resizing_columns_grid %}).\n       */\n\n      this.autoSize = false;\n      /**\n       * If set to `true`, the user can resize columns by dragging the edges (resize handles) of their header cells\n       * ([see example]({% slug resizing_columns_grid %})).\n       *\n       * @default false\n       */\n\n      this.resizable = false;\n      /**\n       * If set to `true`, the user can reorder columns by dragging their header cells\n       * ([see example]({% slug reordering_columns_grid %})).\n       *\n       * @default false\n       */\n\n      this.reorderable = false;\n      /**\n       * Specifies if the loading indicator of the Grid will be displayed ([see example]({% slug databinding_grid %})).\n       *\n       * @default false\n       */\n\n      this.loading = false;\n      /**\n       * Specifies if the column menu of the columns will be displayed ([see example]({% slug columnmenu_grid %})).\n       *\n       * @default false\n       */\n\n      this.columnMenu = false;\n      /**\n       * Specifies if the header of the grid will be hidden. The header is visible by default.\n       *\n       * > The header includes column headers and the [filter row]({% slug filtering_grid %}#toc-filter-row).\n       */\n\n      this.hideHeader = false;\n      /**\n       * Fires when the Grid filter is modified through the UI.\n       * You have to handle the event yourself and filter the data.\n       */\n\n      this.filterChange = new EventEmitter();\n      /**\n       * Fires when the page of the Grid is changed ([see example]({% slug paging_grid %})).\n       * You have to handle the event yourself and page the data.\n       */\n\n      this.pageChange = new EventEmitter();\n      /**\n       * Fires when the grouping of the Grid is changed.\n       * You have to handle the event yourself and group the data ([see example]({% slug groupingbasics_grid %})).\n       */\n\n      this.groupChange = new ZoneAwareEventEmitter(this.ngZone);\n      /**\n       * Fires when the sorting of the Grid is changed ([see example]({% slug sorting_grid %})).\n       * You have to handle the event yourself and sort the data.\n       */\n\n      this.sortChange = new EventEmitter();\n      /**\n       * Fires when the user selects a Grid row.\n       * Emits the [SelectionEvent]({% slug api_grid_selectionevent %}#toc-selectionchange).\n       */\n\n      this.selectionChange = new EventEmitter();\n      /**\n       * Fires when the data state of the Grid is changed.\n       */\n\n      this.dataStateChange = new EventEmitter();\n      /**\n       * Fires when the user expands a group header.\n       */\n\n      this.groupExpand = new EventEmitter();\n      /**\n       * Fires when the user collapses a group header.\n       */\n\n      this.groupCollapse = new EventEmitter();\n      /**\n       * Fires when the user expands a master row.\n       */\n\n      this.detailExpand = new EventEmitter();\n      /**\n       * Fires when the user collapses a master row.\n       */\n\n      this.detailCollapse = new EventEmitter();\n      /**\n       * Fires when the user clicks the **Edit** command button to edit a row\n       * ([see example]({% slug editing_template_forms_grid %}#toc-editing-records)).\n       */\n\n      this.edit = new EventEmitter();\n      /**\n       * Fires when the user clicks the **Cancel** command button to close a row\n       * ([see example]({% slug editing_template_forms_grid %}#toc-cancelling-editing)).\n       */\n\n      this.cancel = new EventEmitter();\n      /**\n       * Fires when the user clicks the **Save** command button to save changes in a row\n       * ([see example]({% slug editing_template_forms_grid %}#toc-saving-records)).\n       */\n\n      this.save = new EventEmitter();\n      /**\n       * Fires when the user clicks the **Remove** command button to remove a row\n       * ([see example]({% slug editing_template_forms_grid %}#toc-removing-records)).\n       */\n\n      this.remove = new EventEmitter();\n      /**\n       * Fires when the user clicks the **Add** command button to add a new row\n       * ([see example]({% slug editing_template_forms_grid %}#toc-adding-records)).\n       */\n\n      this.add = new EventEmitter();\n      /**\n       * Fires when the user leaves an edited cell ([see example]({% slug editing_incell_grid %}#toc-basic-concepts)).\n       */\n\n      this.cellClose = new EventEmitter();\n      /**\n       * Fires when the user clicks a cell ([see example]({% slug editing_incell_grid %}#toc-basic-concepts)).\n       */\n\n      this.cellClick = new ZoneAwareEventEmitter(this.ngZone);\n      /**\n       * Fires when the user clicks the **Export to PDF** command button.\n       */\n\n      this.pdfExport = new EventEmitter();\n      /**\n       * Fires when the user clicks the **Export to Excel** command button.\n       */\n\n      this.excelExport = new EventEmitter();\n      /**\n       * Fires when the user completes the resizing of the column.\n       */\n\n      this.columnResize = new ZoneAwareEventEmitter(this.ngZone);\n      /**\n       * Fires when the user completes the reordering of the column.\n       */\n\n      this.columnReorder = new EventEmitter();\n      /**\n       * Fires when the user changes the visibility of the columns from the column menu or column chooser.\n       */\n\n      this.columnVisibilityChange = new EventEmitter();\n      /**\n       * Fires when the user changes the locked state of the columns from the column menu or by reordering the columns.\n       */\n\n      this.columnLockedChange = new EventEmitter();\n      /**\n       * Fires when the user changes the sticky state of the columns from the column menu.\n       */\n\n      this.columnStickyChange = new EventEmitter();\n      /**\n       * Fires when the user scrolls to the last record on the page and enables endless scrolling\n       * ([see example]({% slug scrollmmodes_grid %}#toc-endless-scrolling)).\n       * You have to handle the event yourself and page the data.\n       */\n\n      this.scrollBottom = new EventEmitter();\n      /**\n       * Fires when the grid content is scrolled.\n       * For performance reasons, the event is triggered outside the Angular zone. Enter the Angular zone if you make any changes that require change detection.\n       */\n\n      this.contentScroll = new EventEmitter();\n      /**\n       * A query list of all declared columns.\n       */\n\n      this.columns = new QueryList();\n      this.footer = new QueryList();\n      this.selectionDirective = false;\n      this.columnsContainer = new ColumnsContainer(() => this.columnList.filterHierarchy(column => {\n        column.matchesMedia = this.matchesMedia(column);\n        return column.isVisible;\n      }));\n      this.view = new DataCollection(() => new DataResultIterator(this.data, this.skip, this.hasGroupFooters));\n      this.shouldGenerateColumns = true;\n      this._sort = new Array();\n      this._group = new Array();\n      this._skip = 0;\n      this.cachedWindowWidth = 0;\n      this._rowSelected = null;\n      this._cellSelected = null;\n      this.rtl = false;\n\n      this._rowClass = () => null;\n\n      validatePackage(packageMetadata);\n      this.localizationSubscription = this.localization.changes.subscribe(({\n        rtl\n      }) => {\n        this.rtl = rtl;\n        this.direction = this.rtl ? 'rtl' : 'ltr';\n      });\n      this.groupInfoService.registerColumnsContainer(() => this.columnList);\n      this.columnInfoService.init(this.columnsContainer, () => this.columnList);\n      this.columnVisibilityChangeSubscription = this.columnInfoService.visibilityChange.subscribe(changed => {\n        this.columnVisibilityChange.emit(new ColumnVisibilityChangeEvent(changed));\n      });\n      this.columnLockedChangeSubscription = this.columnInfoService.lockedChange.subscribe(changed => {\n        this.columnLockedChange.emit(new ColumnLockedChangeEvent(changed));\n      });\n      this.columnStickyChangeSubscription = this.columnInfoService.stickyChange.subscribe(changed => {\n        this.columnStickyChange.emit(new ColumnStickyChangeEvent(changed));\n      });\n      this.groupExpandCollapseSubscription = handleExpandCollapseGroupsService(groupsService, this.groupExpand, this.groupCollapse, ({\n        group,\n        groupIndex,\n        parentGroup\n      }) => ({\n        group,\n        groupIndex,\n        parentGroup\n      }));\n      this.detailsServiceSubscription = handleExpandCollapseDetailsService(detailsService, this.detailExpand, this.detailCollapse, args => args);\n      this.filterSubscription = this.filterService.changes.subscribe(x => {\n        this.filterChange.emit(x);\n      });\n      this.sortSubscription = this.sortService.changes.subscribe(x => {\n        this.sortChange.emit(x);\n      });\n      this.attachStateChangesEmitter();\n      this.attachEditHandlers();\n      this.attachDomEventHandlers();\n      this.pdfSubscription = this.pdfService.exportClick.subscribe(this.emitPDFExportEvent.bind(this));\n      this.excelSubscription = this.excelService.exportClick.subscribe(this.saveAsExcel.bind(this));\n      this.columnsContainerChange();\n      this.handleColumnResize();\n      this.columnList = new ColumnList(this.columns);\n      this.columnReorderSubscription = this.columnReorderService.changes.subscribe(this.reorder.bind(this));\n      this.columnRangeChangeSubscription = this.columnInfoService.columnRangeChange.subscribe(this.onColumnRangeChange.bind(this));\n    }\n    /**\n     * Defines the number of records to be skipped by the pager.\n     * Required by the [paging]({% slug paging_grid %}) functionality.\n     */\n\n\n    get skip() {\n      return this._skip;\n    }\n\n    set skip(value) {\n      if (value >= 0) {\n        this._skip = value;\n      }\n    }\n    /**\n     * The descriptors by which the data will be sorted ([see example]({% slug sorting_grid %})).\n     */\n\n\n    set sort(value) {\n      if (isArray(value)) {\n        this._sort = value;\n      }\n    }\n\n    get sort() {\n      return this._sort;\n    }\n    /**\n     * The descriptors by which the data will be grouped ([see example]({% slug groupingbasics_grid %})).\n     */\n\n\n    set group(value) {\n      if (isArray(value)) {\n        this._group = value;\n      }\n    }\n    /**\n     */\n\n\n    get group() {\n      return this._group;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get showTopToolbar() {\n      return this.toolbarTemplate && ['top', 'both'].indexOf(this.toolbarTemplate.position) > -1;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get showBottomToolbar() {\n      return this.toolbarTemplate && ['bottom', 'both'].indexOf(this.toolbarTemplate.position) > -1;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get isLocked() {\n      return this.lockedLeafColumns.length > 0;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get showTopPager() {\n      const position = this.pageable.position;\n      return !this.isVirtual && this.pageable !== false && ['top', 'both'].indexOf(position) > -1;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get showBottomPager() {\n      const position = this.pageable.position;\n      return !this.isVirtual && this.pageable !== false && position !== 'top';\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hasPager() {\n      return this.showTopPager || this.showBottomPager;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get showGroupPanel() {\n      return this.groupable && this.groupable.enabled !== false;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get groupableEmptyText() {\n      return this.groupable.emptyText;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get marqueeSelection() {\n      return this.selectionService.enableMarquee || this.cellSelectionService.enableMarquee;\n    }\n    /**\n     * @hidden\n     *\n     * An alias for `navigable` for users who migrate from Kendo UI for jQuery.\n     */\n\n\n    set navigatable(value) {\n      this.navigable = value;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get navigatable() {\n      return this.navigable;\n    }\n    /**\n     * Defines a function that is executed for every data row in the component.\n     *\n     * @example\n     * ```ts\n     * import { Component, ViewEncapsulation } from '@angular/core';\n     * import { RowClassArgs } from '@progress/kendo-angular-grid';\n     *\n     * _@Component({\n     *    selector: 'my-app',\n     *    encapsulation: ViewEncapsulation.None,\n     *    styles: [`\n     *        .k-grid tr.even { background-color: #f45c42; }\n     *        .k-grid tr.odd { background-color: #41f4df; }\n     *    `],\n     *    template: `\n     *        <kendo-grid [data]=\"gridData\" [rowClass]=\"rowCallback\">\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     *\n     *    public rowCallback(context: RowClassArgs) {\n     *        const isEven = context.index % 2 == 0;\n     *        return {\n     *            even: isEven,\n     *            odd: !isEven\n     *        };\n     *    }\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n\n\n    set rowClass(fn) {\n      if (isDevMode && typeof fn !== 'function') {\n        throw new Error(`rowClass must be a function, but received ${JSON.stringify(fn)}.`);\n      }\n\n      this._rowClass = fn;\n    }\n\n    get rowClass() {\n      return this._rowClass;\n    }\n    /**\n     * Defines a function that is executed for every data row in the component,\n     * and determines whether the row will be sticky, i.e. always visible after scrolling.\n     */\n\n\n    set rowSticky(fn) {\n      if (isDevMode && isPresent(fn) && typeof fn !== 'function') {\n        throw new Error(`rowSticky must be a function, but received ${JSON.stringify(fn)}.`);\n      }\n\n      if (isPresent(fn)) {\n        this._rowSticky = fn;\n      }\n    }\n\n    get rowSticky() {\n      return this._rowSticky;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data row in the component\n     * ([see example]({% slug grid_selection_custom %}#toc-setting-the-selected-rows)).\n     * Determines whether the row will be selected.\n     */\n\n\n    set rowSelected(fn) {\n      if (isDevMode && typeof fn !== 'function') {\n        throw new Error(`rowSelected must be a function, but received ${JSON.stringify(fn)}.`);\n      }\n\n      this._rowSelected = fn;\n    }\n\n    get rowSelected() {\n      return this._rowSelected;\n    }\n    /**\n     * Defines a function that determines the selected state of a data cell.\n     * Returns an object with `selected` and `item` properties.\n     * The cell is marked as selected only if the `selected` property equals `true`.\n     *\n     * The function is executed for each data cell and may be called more than once\n     * as part of a change detection cycle. ([see example]({% slug grid_selection_custom %}#toc-setting-the-selected-cells))\n     */\n\n\n    set cellSelected(fn) {\n      if (isDevMode && typeof fn !== 'function') {\n        throw new Error(`cellSelected must be a function, but received ${JSON.stringify(fn)}.`);\n      }\n\n      this._cellSelected = fn;\n    }\n\n    get cellSelected() {\n      return this._cellSelected;\n    }\n    /**\n     * Returns the currently focused cell (if any).\n     */\n\n\n    get activeCell() {\n      return this.navigationService.activeCell;\n    }\n    /**\n     * Returns the currently focused row (if any).\n     */\n\n\n    get activeRow() {\n      return this.navigationService.activeRow;\n    }\n\n    get dir() {\n      return this.direction;\n    }\n\n    get hostClasses() {\n      return true;\n    }\n\n    get lockedClasses() {\n      return this.lockedLeafColumns.length > 0;\n    }\n\n    get virtualClasses() {\n      return this.isVirtual;\n    }\n\n    get noScrollbarClass() {\n      return this.scrollbarWidth === 0;\n    }\n\n    get detailTemplate() {\n      if (this._customDetailTemplate) {\n        return this._customDetailTemplate;\n      }\n\n      return this.detailTemplateChildren ? this.detailTemplateChildren.first : undefined;\n    }\n\n    set detailTemplate(detailTemplate) {\n      this._customDetailTemplate = detailTemplate;\n    }\n\n    get loadingTemplate() {\n      if (this._customLoadingTemplate) {\n        return this._customDetailTemplate;\n      }\n\n      return this.loadingTemplateChildren ? this.loadingTemplateChildren.first : undefined;\n    }\n\n    set loadingTemplate(loadingTemplate) {\n      this._customLoadingTemplate = loadingTemplate;\n    }\n\n    get noRecordsTemplate() {\n      if (this._customNoRecordsTemplate) {\n        return this._customNoRecordsTemplate;\n      }\n\n      return this.noRecordsTemplateChildren ? this.noRecordsTemplateChildren.first : undefined;\n    }\n\n    set noRecordsTemplate(customNoRecordsTemplate) {\n      this._customNoRecordsTemplate = customNoRecordsTemplate;\n    }\n\n    get pagerTemplate() {\n      if (this._customPagerTemplate) {\n        return this._customPagerTemplate;\n      }\n\n      return this.pagerTemplateChildren ? this.pagerTemplateChildren.first : undefined;\n    }\n\n    set pagerTemplate(customPagerTemplate) {\n      this._customPagerTemplate = customPagerTemplate;\n    }\n\n    get toolbarTemplate() {\n      if (this._customToolbarTemplate) {\n        return this._customToolbarTemplate;\n      }\n\n      return this.toolbarTemplateChildren ? this.toolbarTemplateChildren.first : undefined;\n    }\n\n    set toolbarTemplate(customToolbarTemplate) {\n      this._customToolbarTemplate = customToolbarTemplate;\n    }\n\n    get scrollbarWidth() {\n      return this.supportService.scrollbarWidth;\n    }\n\n    get headerPadding() {\n      if (isUniversal()) {\n        return \"\";\n      }\n\n      const padding = Math.max(0, this.scrollbarWidth - 1) + 'px';\n      const right = this.rtl ? 0 : padding;\n      const left = this.rtl ? padding : 0;\n      return `0 ${right} 0 ${left}`;\n    }\n\n    get hasGroupFooters() {\n      return this.columnsContainer.hasGroupFooter;\n    }\n\n    get showFooter() {\n      return this.columnsContainer.hasFooter;\n    }\n\n    get showGroupFooters() {\n      return this.groupable && this.groupable.showFooter;\n    }\n\n    get ariaRowCount() {\n      return this.totalColumnLevels + 1 + this.view.total;\n    }\n\n    get ariaColCount() {\n      return this.columnsContainer.leafColumnsToRender.length;\n    }\n\n    get isVirtual() {\n      return this.scrollable === 'virtual';\n    }\n\n    get isScrollable() {\n      return this.scrollable !== 'none';\n    }\n\n    get visibleColumns() {\n      return this.columnsContainer.allColumns;\n    }\n\n    get lockedColumns() {\n      return this.columnsContainer.lockedColumns;\n    }\n\n    get nonLockedColumns() {\n      return this.columnsContainer.nonLockedColumns;\n    }\n\n    get lockedLeafColumns() {\n      return this.columnsContainer.lockedLeafColumns;\n    }\n\n    get stickyColumns() {\n      return this.columns.filter(column => column.sticky);\n    }\n\n    get nonLockedLeafColumns() {\n      return this.columnsContainer.nonLockedLeafColumns;\n    }\n\n    get leafColumns() {\n      return this.columnsContainer.leafColumns;\n    }\n\n    get totalColumnLevels() {\n      return this.columnsContainer.totalLevels;\n    }\n\n    get headerColumns() {\n      if (this.virtualColumns && !this.pdfService.exporting) {\n        return this.viewportColumns;\n      }\n\n      return this.nonLockedColumns;\n    }\n\n    get headerLeafColumns() {\n      if (this.virtualColumns && !this.pdfService.exporting) {\n        return this.leafViewportColumns;\n      }\n\n      return this.nonLockedLeafColumns;\n    }\n\n    get lockedWidth() {\n      const groupCellsWidth = this.group.length * GROUP_CELL_WIDTH;\n      return expandColumns(this.lockedLeafColumns.toArray()).reduce((prev, curr) => prev + (curr.width || 0), groupCellsWidth);\n    }\n\n    get nonLockedWidth() {\n      if (!this.rtl && this.lockedLeafColumns.length || this.virtualColumns) {\n        return !this.virtualColumns ? this.columnsContainer.unlockedWidth : this.leafViewportColumns.reduce((acc, column) => acc + (column.width || 0), 0);\n      }\n\n      return undefined;\n    }\n\n    get selectableSettings() {\n      if (this.selectionService) {\n        return this.selectionService.options;\n      }\n\n      return undefined;\n    }\n\n    get columnMenuTemplate() {\n      const template = this.columnMenuTemplates.first;\n      return template ? template.templateRef : null;\n    }\n\n    get totalCount() {\n      if (this.isVirtual || !isPresent(this.pageSize)) {\n        return this.view.total;\n      }\n\n      return this.pageSize;\n    }\n    /**\n     * Expands the specified master row ([see example]({% slug hierarchy_grid %})).\n     *\n     * This method is provided only for backwards-compatibility with legacy versions.\n     * These versions tracked the expanded state internally using the data row index.\n     *\n     * For new development, use the [kendoGridDetailsExpandBy directive]({% slug api_grid_expanddetailsdirective %})\n     * or provide an isDetailExpanded callback. See [Controlling the Expanded State]({% slug master_detail_expanded_state_grid %})\n     * for examples on how to control the expanded state.\n     *\n     * @param index - The data row index of the master row.\n     */\n\n\n    expandRow(index) {\n      this.toggleDetailRowLegacy(index, true);\n    }\n    /**\n     * Collapses the specified master row ([see example]({% slug hierarchy_grid %})).\n     *\n     * This method is provided only for backwards-compatibility with legacy versions.\n     * These versions tracked the expanded state internally using the data row index.\n     *\n     * For new development, use the [kendoGridDetailsExpandBy directive]({% slug api_grid_expanddetailsdirective %})\n     * or provide an isDetailExpanded callback. See [Controlling the Expanded State]({% slug master_detail_expanded_state_grid %})\n     * for examples on how to control the expanded state.\n     *\n     * @param index - The data row index of the master row.\n     */\n\n\n    collapseRow(index) {\n      this.toggleDetailRowLegacy(index, false);\n    }\n    /**\n     * Expands a group header item for the given index. For example,\n     * `0_1` expands the second inner group of the first master group.\n     *\n     * This method is provided only for backwards-compatibility with legacy versions.\n     * These versions tracked the expanded group state internally using the hierarchical group index.\n     *\n     * > * When you use the [kendoGridGroupBinding]({% slug api_grid_groupbindingdirective %}) directive,\n     * > the `expandGroup` method is not supported.\n     * > * When a Grid is pageable, the indexes of the groups are offset by the current Grid [skip]({% slug api_grid_gridcomponent %}#toc-skip).\n     *\n     * @param {string} index - The underscore separated hierarchical index of the group.\n     */\n\n\n    expandGroup(index) {\n      this.toggleGroupRowLegacy(index, true);\n    }\n    /**\n     * Collapses a group header item for the given index. For example,\n     * `0_1` collapses the second inner group of the first master group.\n     *\n     * This method is provided only for backwards-compatibility with legacy versions.\n     * These versions tracked the expanded group state internally using the hierarchical group index.\n     *\n     * > * When you use the [kendoGridGroupBinding]({% slug api_grid_groupbindingdirective %}) directive,\n     * > the `collapseGroup` method is not supported.\n     * > * When a Grid is pageable, the indexes of the groups are offset by the current Grid [skip]({% slug api_grid_gridcomponent %}#toc-skip).\n     *\n     * @param {string} index - The underscore separated hierarchical index of the group.\n     */\n\n\n    collapseGroup(index) {\n      this.toggleGroupRowLegacy(index, false);\n    }\n    /**\n     * @hidden\n     */\n\n\n    resetGroupsState() {\n      this.groupsService.reset();\n    }\n    /**\n     * @hidden\n     */\n\n\n    expandGroupChildren(groupIndex) {\n      this.groupsService.expandChildren(groupIndex);\n    }\n    /**\n     * @hidden\n     */\n\n\n    onDataChange() {\n      this.autoGenerateColumns();\n      this.changeNotification.notify();\n      this.pdfService.dataChanged.emit();\n\n      if (isPresent(this.defaultSelection)) {\n        this.defaultSelection.reset();\n      }\n\n      this.initSelectionService();\n      this.updateNavigationMetadata();\n    }\n\n    ngOnChanges(changes) {\n      if (isChanged(\"data\", changes)) {\n        this.onDataChange();\n      }\n\n      if (this.lockedLeafColumns.length && anyChanged([\"pageSize\", \"skip\", \"sort\", \"group\"], changes)) {\n        this.changeNotification.notify();\n      }\n\n      if (anyChanged([\"pageSize\", \"scrollable\", 'virtualColumns'], changes)) {\n        this.updateNavigationMetadata();\n      }\n\n      if (isChanged(\"virtualColumns\", changes)) {\n        this.viewportColumns = this.leafViewportColumns = null;\n      }\n\n      if (isChanged(\"height\", changes, false)) {\n        this.renderer.setStyle(this.wrapper.nativeElement, 'height', `${this.height}px`);\n      }\n\n      if (isChanged(\"filterable\", changes) && this.lockedColumns.length) {\n        this.syncHeaderHeight(this.ngZone.onStable.asObservable().pipe(take(1)));\n      }\n\n      if (anyChanged([\"columnMenu\", \"sortable\", \"filterable\"], changes, false)) {\n        this.columnMenuOptions = this.columnMenu && Object.assign({\n          filter: Boolean(this.filterable),\n          sort: Boolean(this.sortable)\n        }, this.columnMenu); // tslint:disable-line:align\n      }\n\n      if (isChanged(\"scrollable\", changes) && this.isScrollable) {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.attachScrollSync());\n      }\n\n      if (isChanged(\"selectable\", changes) && this.shouldResetSelection(changes.selectable)) {\n        if (this.defaultSelection) {\n          this.defaultSelection.reset();\n        } else if (this.selectionDirective) {\n          this.selectionDirective.reset();\n        }\n      }\n\n      if (isChanged('groupable', changes, true)) {\n        this.groupable = changes.groupable.currentValue;\n      }\n    }\n\n    ngAfterViewInit() {\n      this.attachScrollSync();\n      this.attachElementEventHandlers();\n      this.updateNavigationMetadata();\n      this.applyAutoSize();\n    }\n\n    ngAfterContentChecked() {\n      this.columnsContainer.refresh();\n      this.verifySettings();\n      this.initSelectionService();\n    }\n\n    ngAfterContentInit() {\n      this.shouldGenerateColumns = !this.columns.length;\n      this.autoGenerateColumns();\n      this.columnList = new ColumnList(this.columns);\n      this.columnsChangeSubscription = this.columns.changes.subscribe(() => this.verifySettings());\n    }\n\n    ngOnInit() {\n      if (this.navigable) {\n        this.navigationService.init(this.navigationMetadata());\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.selectionSubscription) {\n        this.selectionSubscription.unsubscribe();\n      }\n\n      if (this.stateChangeSubscription) {\n        this.stateChangeSubscription.unsubscribe();\n      }\n\n      if (this.groupExpandCollapseSubscription) {\n        this.groupExpandCollapseSubscription.unsubscribe();\n      }\n\n      if (this.detailsServiceSubscription) {\n        this.detailsServiceSubscription.unsubscribe();\n      }\n\n      if (this.editServiceSubscription) {\n        this.editServiceSubscription.unsubscribe();\n      }\n\n      if (this.pdfSubscription) {\n        this.pdfSubscription.unsubscribe();\n      }\n\n      if (this.filterSubscription) {\n        this.filterSubscription.unsubscribe();\n      }\n\n      if (this.sortSubscription) {\n        this.sortSubscription.unsubscribe();\n      }\n\n      if (this.columnsChangeSubscription) {\n        this.columnsChangeSubscription.unsubscribe();\n      }\n\n      if (this.excelSubscription) {\n        this.excelSubscription.unsubscribe();\n      }\n\n      if (this.columnsContainerChangeSubscription) {\n        this.columnsContainerChangeSubscription.unsubscribe();\n      }\n\n      if (this.scrollSyncService) {\n        this.scrollSyncService.destroy();\n      }\n\n      if (this.detachElementEventHandlers) {\n        this.detachElementEventHandlers();\n      }\n\n      if (this.defaultSelection) {\n        this.defaultSelection.destroy();\n      }\n\n      if (this.cellClickSubscription) {\n        this.cellClickSubscription.unsubscribe();\n      }\n\n      if (this.footerChangeSubscription) {\n        this.footerChangeSubscription.unsubscribe();\n      }\n\n      this.ngZone = null;\n\n      if (this.columnResizingSubscription) {\n        this.columnResizingSubscription.unsubscribe();\n      }\n\n      if (this.columnReorderSubscription) {\n        this.columnReorderSubscription.unsubscribe();\n      }\n\n      if (this.localizationSubscription) {\n        this.localizationSubscription.unsubscribe();\n      }\n\n      if (this.columnVisibilityChangeSubscription) {\n        this.columnVisibilityChangeSubscription.unsubscribe();\n      }\n\n      if (this.columnLockedChangeSubscription) {\n        this.columnLockedChangeSubscription.unsubscribe();\n      }\n\n      if (this.columnStickyChangeSubscription) {\n        this.columnStickyChangeSubscription.unsubscribe();\n      }\n\n      if (this.focusElementSubscription) {\n        this.focusElementSubscription.unsubscribe();\n      }\n\n      this.columnRangeChangeSubscription.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n\n\n    attachScrollSync() {\n      if (isUniversal()) {\n        return;\n      }\n\n      if (this.header) {\n        this.scrollSyncService.registerEmitter(this.header.nativeElement, \"header\");\n      }\n\n      if (this.footer) {\n        this.footerChangeSubscription = observe(this.footer).subscribe(footers => footers.map(footer => footer.nativeElement).filter(isPresent).forEach(element => this.scrollSyncService.registerEmitter(element, \"footer\")));\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    get ariaLabel() {\n      return this.localization.get('gridLabel');\n    }\n    /**\n     * Switches the specified table row in the edit mode ([see example]({% slug editing_template_forms_grid %}#toc-editing-records)).\n     *\n     * @param rowIndex - The data row index that will be switched in the edit mode.\n     * @param group - The [FormGroup]({{ site.data.urls.angular['formgroupapi'] }})\n     * that describes the edit form.\n     * @param options - Additional options configuring the focus target once the editor opens.\n     */\n\n\n    editRow(rowIndex, group, options) {\n      this.editService.editRow(rowIndex, group);\n\n      if (isPresent(options) && options.skipFocus) {\n        return;\n      }\n\n      const row = `tr[data-kendo-grid-item-index=\"${rowIndex}\"]`;\n      const columnIndex = options && options.columnIndex;\n      const target = isNaN(columnIndex) ? row : `${row} td[data-kendo-grid-column-index=\"${columnIndex}\"]`;\n      this.focusEditElement(target);\n    }\n    /**\n     * Closes the editor for a given row ([see example]({% slug editing_template_forms_grid %}#toc-cancelling-editing)).\n     *\n     * @param {number} index - The row index that will be switched out of the edit mode. If no index is provided, it is assumed\n     * that the new item editor will be closed.\n     */\n\n\n    closeRow(index) {\n      this.editService.close(index);\n    }\n    /**\n     * Creates a new row editor ([see example]({% slug editing_template_forms_grid %}#toc-adding-records)).\n     *\n     * @param {FormGroup} group - The [FormGroup]({{ site.data.urls.angular['formgroupapi'] }}) that describes\n     * the edit form. If called with a data item, it will build the `FormGroup` from the data item fields.\n     */\n\n\n    addRow(group) {\n      const isFormGroup = group instanceof FormGroup;\n\n      if (!isFormGroup) {\n        const fields = Object.keys(group).reduce(createControl(group), {}); // FormBuilder?\n\n        group = new FormGroup(fields);\n      }\n\n      this.editService.addRow(group);\n      this.focusEditElement('.k-grid-add-row');\n    }\n    /**\n     * Puts the cell that is specified by the table row and column in edit mode.\n     *\n     * @param {number} rowIndex - The data row index that will be switched in the edit mode.\n     * @param {number|string|any} column - The leaf column index, or the field name or the column instance that should be edited.\n     * @param {FormGroup} group - The [FormGroup]({{ site.data.urls.angular['formgroupapi'] }})\n     * that describes the edit form.\n     */\n\n\n    editCell(rowIndex, column, group) {\n      const instance = this.columnInstance(column);\n      this.editService.editCell(rowIndex, instance, group);\n      this.focusEditElement('.k-grid-edit-cell');\n    }\n    /**\n     * Closes the current cell in edit mode and fires\n     * the [cellClose]({% slug api_grid_gridcomponent %}#toc-cellclose) event.\n     *\n     * @return {boolean} Indicates whether the edited cell was closed.\n     * A `false` value indicates that the\n     * [cellClose]({% slug api_grid_gridcomponent %}#toc-cellclose) event was prevented.\n     */\n\n\n    closeCell() {\n      return !this.editService.closeCell();\n    }\n    /**\n     * Closes the current cell in edit mode.\n     */\n\n\n    cancelCell() {\n      this.editService.cancelCell();\n    }\n    /**\n     * Returns a flag which indicates if a row or a cell is currently edited.\n     *\n     * @return {boolean} A flag which indicates if a row or a cell is currently edited.\n     */\n\n\n    isEditing() {\n      return this.editService.isEditing();\n    }\n    /**\n     * Returns a flag which indicates if a cell is currently edited.\n     *\n     * @return {boolean} A flag which indicates if a cell is currently being edited.\n     */\n\n\n    isEditingCell() {\n      return this.editService.isEditingCell();\n    }\n    /**\n     * Initiates the PDF export ([see example]({% slug pdfexport_grid %})).\n     */\n\n\n    saveAsPDF() {\n      this.pdfService.save(this);\n    }\n    /**\n     * Exports the Grid element to a Drawing [Group]({% slug api_kendo-drawing_group %}) by using the `kendo-grid-pdf` component options.\n     * ([see example]({% slug pdfexport_grid %}#toc-exporting-multiple-grids-to-the-same-pdf)).\n     *\n     * @return {Promise} - A promise that will be resolved with the Drawing `Group`.\n     */\n\n\n    drawPDF() {\n      const promise = createPromise();\n      this.pdfService.draw(this, promise);\n      return promise;\n    }\n    /**\n     * Initiates the Excel export ([see example]({% slug excelexport_grid %})).\n     */\n\n\n    saveAsExcel() {\n      this.excelService.save(this);\n    }\n    /**\n     * Applies the minimum possible width for the specified column,\n     * so that the whole text fits without wrapping. This method expects the Grid\n     * to be resizable (set `resizable` to `true`).\n     * Makes sense to execute this method only\n     * after the Grid is already populated with data.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid\n     *            #grid\n     *            [data]=\"gridData\"\n     *            [resizable]=\"true\"\n     *            style=\"height: 300px\">\n     *            <ng-template kendoGridToolbarTemplate>\n     *                 <button class=\"k-button\" (click)=\"grid.autoFitColumn(groupColumn)\">\n     *                     Auto-fit the group column\n     *                 </button>\n     *            </ng-template>\n     *            <kendo-grid-column-group #groupColumn title=\"Product Info\">\n     *                <kendo-grid-column\n     *                    field=\"ProductID\"\n     *                    [width]=\"50\"\n     *                    [minResizableWidth]=\"30\"\n     *                    title=\"ID\">\n     *                </kendo-grid-column>\n     *\n     *                <kendo-grid-column\n     *                    field=\"ProductName\"\n     *                    title=\"Product Name\">\n     *                </kendo-grid-column>\n     *            </kendo-grid-column-group>\n     *\n     *            <kendo-grid-column\n     *                field=\"UnitPrice\"\n     *                title=\"Unit Price\"\n     *                [width]=\"180\"\n     *                filter=\"numeric\"\n     *                format=\"{0:c}\">\n     *            </kendo-grid-column>\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n\n\n    autoFitColumn(column) {\n      this.columnResizingService.autoFit(column);\n    }\n    /**\n     * Adjusts the width of the specified columns to fit the entire content, including headers, without wrapping.\n     * If no columns are specified, `autoFitColumns` is applied to all columns.\n     *\n     * This method requires the Grid to be resizable (set `resizable` to `true`).\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *      <kendo-grid\n     *          #grid\n     *          [data]=\"gridData\"\n     *          [resizable]=\"true\"\n     *          style=\"height: 300px\">\n     *          <ng-template kendoGridToolbarTemplate>\n     *              <button class=\"k-button\" (click)=\"grid.autoFitColumns([firstColumn, lastColumn])\">\n     *                  Auto-fit the first and last column\n     *              </button>\n     *              <button class=\"k-button\" (click)=\"grid.autoFitColumns()\">\n     *                  Auto-fit all columns\n     *              </button>\n     *          </ng-template>\n     *          <kendo-grid-column-group title=\"Product Info\">\n     *              <kendo-grid-column\n     *                  #firstColumn\n     *                  field=\"ProductID\"\n     *                  [width]=\"50\"\n     *                  [minResizableWidth]=\"30\"\n     *                  title=\"ID\">\n     *              </kendo-grid-column>\n     *\n     *              <kendo-grid-column\n     *                  field=\"ProductName\"\n     *                  title=\"Product Name\"\n     *                  >\n     *              </kendo-grid-column>\n     *          </kendo-grid-column-group>\n     *\n     *          <kendo-grid-column\n     *              #lastColumn\n     *              field=\"UnitPrice\"\n     *              title=\"Unit Price\"\n     *              [width]=\"180\"\n     *              filter=\"numeric\"\n     *              format=\"{0:c}\">\n     *          </kendo-grid-column>\n     *      </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n\n\n    autoFitColumns(columns = this.columns) {\n      let cols;\n\n      if (columns instanceof QueryList) {\n        cols = columns.toArray();\n      } else {\n        cols = columns;\n      }\n\n      this.columnResizingService.autoFit(...cols);\n    }\n    /**\n     * @hidden\n     */\n\n\n    notifyPageChange(source, event) {\n      if (source === \"list\" && !this.isVirtual) {\n        return;\n      }\n\n      this.pageChange.emit(event);\n    }\n    /**\n     * @hidden\n     */\n\n\n    notifyScrollBottom() {\n      if (this.scrollable === 'none') {\n        return;\n      }\n\n      if (hasObservers(this.scrollBottom)) {\n        this.ngZone.run(() => this.scrollBottom.emit({\n          sender: this\n        }));\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    focusEditElement(containerSelector) {\n      if (this.focusElementSubscription) {\n        this.focusElementSubscription.unsubscribe();\n      }\n\n      this.ngZone.runOutsideAngular(() => {\n        this.focusElementSubscription = this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n          const wrapper = this.wrapper.nativeElement;\n\n          if (!this.setEditFocus(wrapper.querySelector(containerSelector)) && this.isLocked) {\n            this.setEditFocus(wrapper.querySelector(`.k-grid-content ${containerSelector}`));\n          }\n\n          this.focusElementSubscription = null;\n        });\n      });\n    }\n    /**\n     * Focuses the last active or the first cell of the Grid.\n     *\n     * @returns {NavigationCell} The focused cell.\n     */\n\n\n    focus() {\n      this.assertNavigable();\n      return this.navigationService.focusCell();\n    }\n    /**\n     * Focuses the cell with the specified row and column index.\n     *\n     * The row index is based on the logical structure of the Grid and does not correspond to the data item index:\n     * * Header rows are included, starting at index 0.\n     * * Group headers and footers are included.\n     * * The row indexing is absolute and does not change with paging.\n     *\n     * If the Grid is configured for scrolling, including virtual scrolling, the scroll position will be updated.\n     * If the row is not present on the current page, the method will have no effect.\n     *\n     * @param rowIndex - The logical row index to focus. The top header row has an index 0.\n     * @param colIndex - The column index to focus.\n     * @returns {NavigationCell} The focused cell.\n     *\n     */\n\n\n    focusCell(rowIndex, colIndex) {\n      this.assertNavigable();\n      return this.navigationService.focusCell(rowIndex, colIndex);\n    }\n    /**\n     * Focuses the next cell, optionally wrapping to the next row.\n     *\n     * @param wrap - A Boolean value which indicates if the focus will move to the next row. Defaults to `true`.\n     * @returns {NavigationCell} The focused cell. If the focus is already on the last cell, returns `null`.\n     */\n\n\n    focusNextCell(wrap = true) {\n      this.assertNavigable();\n      return this.navigationService.focusNextCell(wrap);\n    }\n    /**\n     * Focuses the previous cell. Optionally wraps to the previous row.\n     *\n     * @param wrap - A Boolean value which indicates if the focus will move to the next row. Defaults to `true`.\n     * @returns {NavigationCell} The focused cell. If the focus is already on the first cell, returns `null`.\n     */\n\n\n    focusPrevCell(wrap = true) {\n      this.assertNavigable();\n      return this.navigationService.focusPrevCell(wrap);\n    }\n    /**\n     * Scrolls to the specified row and column ([see example]({% slug scrollmmodes_grid %}#toc-scrolling-to-a-specific-row-and-column-index)).\n     */\n\n\n    scrollTo(request) {\n      this.scrollRequestService.scrollTo(request);\n    }\n    /**\n     * Changes the position of the specified column.\n     * The reordering of columns operates only on the level\n     * which is inferred by the source column.\n     * For the `reorderColumn` method to work properly,\n     * the `source` column has to be visible.\n     *\n     * @param {ColumnBase} source - The column whose position will be changed.\n     * @param {number} destIndex - The new position of the column.\n     * @param {ColumnReorderConfig} options - Additional options.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid\n     *            #grid\n     *            [data]=\"gridData\"\n     *            [reorderable]=\"true\"\n     *            style=\"height: 300px\">\n     *            <ng-template kendoGridToolbarTemplate>\n     *                 <button class=\"k-button\"\n     *                     (click)=\"grid.reorderColumn(groupColumn, 2, { before: true })\">\n     *                     Move the group column before the last one.\n     *                 </button>\n     *            </ng-template>\n     *            <kendo-grid-column-group #groupColumn title=\"Product Info\">\n     *                <kendo-grid-column\n     *                    field=\"ProductID\"\n     *                    [width]=\"50\"\n     *                    title=\"ID\">\n     *                </kendo-grid-column>\n     *\n     *                <kendo-grid-column\n     *                    field=\"ProductName\"\n     *                    title=\"Product Name\">\n     *                </kendo-grid-column>\n     *            </kendo-grid-column-group>\n     *\n     *            <kendo-grid-column\n     *                field=\"UnitPrice\"\n     *                title=\"Unit Price\"\n     *                [width]=\"180\"\n     *                format=\"{0:c}\">\n     *            </kendo-grid-column>\n     *\n     *            <kendo-grid-column\n     *                field=\"Discontinued\"\n     *                title=\"Discontinued\"\n     *                [width]=\"100\">\n     *            </kendo-grid-column>\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n\n\n    reorderColumn(source, destIndex, options = {\n      before: false\n    }) {\n      const columnsForLevel = sortColumns(this.allColumnsForLevel(source.level));\n      let target = columnsForLevel[destIndex];\n\n      if (!target) {\n        return;\n      }\n\n      const lastNonLocked = target.isLocked && !source.isLocked && this.columnsContainer.nonLockedColumns.length === 1;\n\n      if (lastNonLocked) {\n        return;\n      }\n\n      if (isSpanColumnComponent(target) && !options.before) {\n        target = target.childColumns.last;\n      }\n\n      this.reorder({\n        before: options.before,\n        source: source,\n        target: target\n      });\n    }\n    /**\n     * A function which determines if a specific row is expanded.\n     */\n\n\n    set isDetailExpanded(callback) {\n      this.detailsService.userCallback = callback;\n    }\n\n    get isDetailExpanded() {\n      return this.detailsService.userCallback;\n    }\n    /**\n     * A function which determines if a specific group row is expanded.\n     */\n\n\n    set isGroupExpanded(callback) {\n      this.groupsService.userCallback = callback;\n      this.groupable = isPresent(callback);\n    }\n\n    get isGroupExpanded() {\n      return this.groupsService.userCallback;\n    }\n    /**\n     * @hidden\n     */\n\n\n    reorder({\n      target,\n      source,\n      before,\n      changeContainer\n    }) {\n      this.ngZone.run(() => {\n        const columnsForLevel = sortColumns(this.allColumnsForLevel(source.level));\n        let newIndex = columnsForLevel.indexOf(target);\n\n        if (target.parent && target.parent.isSpanColumn) {\n          newIndex = columnsForLevel.indexOf(target.parent);\n\n          if (before) {\n            target = target.parent;\n          }\n        }\n\n        let oldIndex = columnsForLevel.indexOf(source);\n\n        if (changeContainer) {\n          if (before && 0 < newIndex && oldIndex < newIndex) {\n            // dropped before the first not locked column\n            newIndex--;\n          } else if (!before && oldIndex > newIndex) {\n            // dropped after the last locked column\n            newIndex++;\n          }\n        }\n\n        const args = new ColumnReorderEvent({\n          column: source,\n          oldIndex: oldIndex,\n          newIndex: newIndex\n        });\n        this.columnReorder.emit(args);\n\n        if (args.isDefaultPrevented()) {\n          return;\n        }\n\n        if (changeContainer) {\n          this.columnLockedChange.emit(new ColumnLockedChangeEvent([source]));\n        }\n\n        this.updateColumnIndices({\n          columnsForLevel,\n          source,\n          target,\n          before\n        });\n\n        if (source.locked !== target.locked) {\n          source.locked = target.locked;\n        }\n\n        this.columnsContainer.refresh();\n        this.changeDetectorRef.markForCheck();\n      });\n    }\n\n    updateColumnIndices({\n      columnsForLevel,\n      source,\n      target,\n      before\n    }) {\n      const expandedColumns = expandColumnsWithSpan(columnsForLevel);\n      const sourceColumnIndex = expandedColumns.indexOf(source);\n      let nextSourceIndex = 0;\n      let nextIndex = 0;\n      let toSkip = 1; // Possible only when called from the API.\n\n      if (source.isSpanColumn) {\n        toSkip += source.childColumns.length;\n      }\n\n      let i = 0;\n\n      while (i < expandedColumns.length) {\n        let column = expandedColumns[i];\n\n        if (column === target) {\n          nextSourceIndex = before ? nextIndex : nextIndex + 1;\n          nextIndex = before ? nextIndex + toSkip : nextIndex;\n          column.orderIndex = nextIndex;\n\n          if (nextSourceIndex === nextIndex + 1) {\n            nextIndex += toSkip;\n          }\n        } else if (column === source) {\n          i += toSkip;\n          continue;\n        } else {\n          column.orderIndex = nextIndex;\n        }\n\n        nextIndex++;\n        i++;\n      }\n\n      for (i = sourceColumnIndex; i < sourceColumnIndex + toSkip; i++) {\n        expandedColumns[i].orderIndex = nextSourceIndex++;\n      }\n\n      this.updateIndicesForLevel(source.level + 1);\n    }\n\n    updateIndicesForLevel(level) {\n      const colsForParentLevel = this.allColumnsForLevel(level - 1);\n      const colsForLevel = [];\n      sortColumns(colsForParentLevel).forEach(c => {\n        if (c.isColumnGroup) {\n          colsForLevel.push(...c.childrenArray.sort((a, b) => a.orderIndex - b.orderIndex));\n        }\n      });\n      expandColumnsWithSpan(colsForLevel).map((c, i) => c.orderIndex = i);\n\n      if (level < this.columnList.totalColumnLevels()) {\n        this.updateIndicesForLevel(level + 1);\n      }\n    }\n\n    allColumnsForLevel(level) {\n      return this.columnList.toArray().filter(column => column.level === level);\n    }\n\n    initSelectionService() {\n      if (!this.selectable) {\n        this.selectionService.ngOnDestroy();\n        this.cellSelectionService.ngOnDestroy();\n        return;\n      }\n\n      if (!this.selectionDirective && !isPresent(this.defaultSelection)) {\n        this.defaultSelection = new Selection(this, this.changeDetectorRef);\n      }\n\n      const cellSelectionMode = this.selectable['cell'];\n      const activeService = cellSelectionMode ? this.cellSelectionService : this.selectionService;\n      const inactiveService = cellSelectionMode ? this.selectionService : this.cellSelectionService;\n\n      if (inactiveService.active) {\n        inactiveService.ngOnDestroy();\n        activeService.addSubscriptions();\n        inactiveService.active = false;\n      }\n\n      activeService.active = true;\n      activeService.init({\n        cellSelected: cellSelectionMode ? this.cellSelected : undefined,\n        rowSelected: cellSelectionMode ? undefined : this.rowSelected,\n        selectable: this.selectable,\n        view: this.view,\n        columns: cellSelectionMode ? this.columnList.toArray() : undefined\n      });\n\n      if (!this.selectionDirective && !this.selectableSettings.enabled) {\n        this.defaultSelection.reset();\n      }\n\n      if (this.selectionSubscription) {\n        this.selectionSubscription.unsubscribe();\n      }\n\n      if (cellSelectionMode) {\n        this.selectionSubscription = this.cellSelectionService.changes.subscribe(event => {\n          this.ngZone.run(() => this.selectionChange.emit(event));\n        });\n      } else {\n        this.selectionSubscription = this.selectionService.changes.subscribe(event => {\n          this.ngZone.run(() => this.selectionChange.emit(event));\n        });\n      }\n    }\n\n    setEditFocus(element) {\n      if (element) {\n        return this.navigationService.tryFocus(element);\n      }\n    }\n\n    columnInstance(column) {\n      let instance;\n\n      if (typeof column === 'number') {\n        instance = this.columnsContainer.lockedLeafColumns.toArray().concat(this.columnsContainer.nonLockedLeafColumns.toArray())[column];\n      } else if (typeof column === 'string') {\n        instance = this.columnList.filter(item => item.field === column)[0];\n      } else {\n        instance = column;\n      }\n\n      if (!instance && isDevMode()) {\n        throw new Error(`Invalid column ${column}`);\n      }\n\n      return instance;\n    }\n\n    verifySettings() {\n      if (isDevMode()) {\n        const locked = this.lockedLeafColumns.length || this.columnMenu && this.columnMenu.lock;\n        const stickyColumns = this.stickyColumns.length || this.columnMenu && this.columnMenu.stick;\n\n        if (locked && this.detailTemplate) {\n          throw new Error('Having both detail template and locked columns is not supported.');\n        }\n\n        if (this.lockedLeafColumns.length && !this.nonLockedLeafColumns.length) {\n          throw new Error('There should be at least one non-locked column');\n        }\n\n        if ((locked || this.virtualColumns) && expandColumns(this.columnList.toArray()).filter(column => !column.width && !isColumnGroupComponent(column)).length) {\n          throw new Error((locked ? 'Locked' : 'Virtual') + ' columns feature requires all columns to have set width.');\n        }\n\n        if (locked && !this.isScrollable) {\n          throw new Error('Locked columns are only supported when scrolling is enabled.');\n        }\n\n        if (this.columnList.filter(isColumnGroupComponent).filter(x => !x.hasChildren).length) {\n          throw new Error('ColumnGroupComponent should contain ColumnComponent or CommandColumnComponent.');\n        }\n\n        if (this.columnList.filter(x => x.locked && x.parent && !x.parent.isLocked).length) {\n          throw new Error('Locked child columns require their parent columns to be locked.');\n        }\n\n        if ((this.rowHeight || this.detailRowHeight) && !this.isVirtual) {\n          throw new Error('Row height and detail row height settings require virtual scrolling mode to be enabled.');\n        }\n\n        if (stickyColumns && expandColumns(this.columnList.toArray()).filter(column => !column.width && !isColumnGroupComponent(column)).length) {\n          throw new Error('Sticky columns feature requires all columns to have set width.');\n        }\n\n        if (stickyColumns && !this.isScrollable) {\n          throw new Error('Sticky columns are only supported when scrolling is enabled.');\n        }\n\n        if (stickyColumns && this.virtualColumns) {\n          throw new Error('Having both sticky columns and column virtualization is not supported.');\n        }\n\n        if (this.rowSticky && this.scrollable === 'virtual') {\n          throw new Error('Having both sticky rows and row virtualization (scrollable=\"virtual\") is not supported.');\n        }\n\n        if (this.rowSticky && this.groupable) {\n          throw new Error('Having both sticky rows and grouping is not supported.');\n        }\n\n        validateColumnsField(this.columnList);\n      }\n    }\n\n    autoGenerateColumns() {\n      if (this.shouldGenerateColumns && !this.columns.length && this.view.length) {\n        this.columns.reset(Object.keys(this.view.at(0)).map(field => {\n          let column = new ColumnComponent();\n          column.field = field;\n          return column;\n        }));\n      }\n    }\n\n    attachStateChangesEmitter() {\n      this.stateChangeSubscription = merge(this.pageChange.pipe(map(x => ({\n        filter: this.filter,\n        group: this.group,\n        skip: x.skip,\n        sort: this.sort,\n        take: x.take\n      }))), this.sortChange.pipe(map(sort => ({\n        filter: this.filter,\n        group: this.group,\n        skip: this.skip,\n        sort: sort,\n        take: this.pageSize\n      }))), this.groupChange.pipe(map(group => ({\n        filter: this.filter,\n        group: group,\n        skip: this.skip,\n        sort: this.sort,\n        take: this.pageSize\n      }))), this.filterChange.pipe(map(filter$$1 => ({\n        filter: filter$$1,\n        group: this.group,\n        skip: 0,\n        sort: this.sort,\n        take: this.pageSize\n      })))).subscribe(x => {\n        this.closeCell();\n        this.cancelCell();\n        this.dataStateChange.emit(x);\n      });\n    }\n\n    attachEditHandlers() {\n      if (!this.editService) {\n        return;\n      }\n\n      this.editServiceSubscription = this.editService.changes.subscribe(this.emitCRUDEvent.bind(this));\n    }\n\n    emitCRUDEvent(args) {\n      const {\n        action,\n        rowIndex,\n        formGroup\n      } = args;\n      let dataItem = this.view.at(rowIndex - this.skip);\n\n      if (action !== 'add' && !dataItem) {\n        dataItem = formGroup.value;\n      }\n\n      this.closeCell();\n      Object.assign(args, {\n        dataItem: dataItem,\n        sender: this\n      });\n\n      switch (action) {\n        case 'add':\n          this.add.emit(args);\n          break;\n\n        case 'cancel':\n          this.cancel.emit(args);\n          break;\n\n        case 'edit':\n          this.edit.emit(args);\n          break;\n\n        case 'remove':\n          this.remove.emit(args);\n          break;\n\n        case 'save':\n          this.save.emit(args);\n          break;\n\n        case 'cellClose':\n          this.cellClose.emit(args);\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    attachDomEventHandlers() {\n      this.cellClickSubscription = this.domEvents.cellClick.subscribe(args => {\n        this.cellClick.emit(Object.assign({\n          sender: this\n        }, args));\n      });\n    }\n\n    attachElementEventHandlers() {\n      if (isUniversal()) {\n        return;\n      }\n\n      const wrapper = this.wrapper.nativeElement;\n      const ariaRoot = this.ariaRoot.nativeElement;\n      this.ngZone.runOutsideAngular(() => {\n        const resizeCheck = this.resizeCheck.bind(this);\n        const resizeSubscription = this.renderer.listen('window', 'resize', resizeCheck);\n        const orientationSubscription = this.renderer.listen('window', 'orientationchange', resizeCheck);\n        const documentClickSubscription = this.renderer.listen('document', 'click', args => {\n          const activeElement = document.activeElement;\n\n          if (this.editService.shouldCloseCell() && !closest(args.target, matchesClasses('k-animation-container k-grid-ignore-click')) && !(activeElement && (closest(activeElement, matchesClasses('k-animation-container')) || isInEditedCell(activeElement, this.wrapper.nativeElement)))) {\n            this.editService.closeCell(args);\n          }\n        });\n        const windowBlurSubscription = this.renderer.listen('window', 'blur', args => {\n          const activeElement = document.activeElement;\n\n          if (activeElement && !(matchesNodeName('input')(activeElement) && activeElement.type === 'file' && isInEditedCell(activeElement, this.wrapper.nativeElement))) {\n            this.editService.closeCell(args);\n          }\n\n          this.domEvents.windowBlur.emit(args);\n        });\n        const clickSubscription = this.renderer.listen(wrapper, 'click', args => {\n          this.domEvents.click.emit(args);\n        });\n        const keydownSubscription = this.renderer.listen(wrapper, 'keydown', args => {\n          this.domEvents.keydown.emit(args);\n        }); // focusIn and focusOut are relative to the element with ARIA role \"grid\"\n\n        let focused = false;\n        const focusInSubscription = this.renderer.listen(ariaRoot, 'focusin', args => {\n          this.domEvents.focus.emit(args);\n\n          if (!focused) {\n            this.domEvents.focusIn.emit(args);\n            focused = true;\n          }\n        });\n        const focusOutSubscription = this.renderer.listen(ariaRoot, 'focusout', args => {\n          const next = args.relatedTarget || document.activeElement;\n          const outside = !closest(next, node => node === ariaRoot);\n\n          if (outside) {\n            this.domEvents.focusOut.emit(args);\n            focused = false;\n          }\n        });\n\n        this.detachElementEventHandlers = () => {\n          resizeSubscription();\n          orientationSubscription();\n          documentClickSubscription();\n          windowBlurSubscription();\n          clickSubscription();\n          keydownSubscription();\n          focusInSubscription();\n          focusOutSubscription();\n        };\n      });\n    }\n\n    matchesMedia(c) {\n      return this.responsiveService.matchesMedia(c.media);\n    }\n\n    resizeCheck() {\n      if (window.innerWidth !== this.cachedWindowWidth) {\n        this.cachedWindowWidth = window.innerWidth;\n        let hasChanges = false;\n        this.columnList.filterHierarchy(column => {\n          const matchesMedia = this.matchesMedia(column);\n\n          if (column.matchesMedia !== matchesMedia) {\n            hasChanges = true;\n            column.matchesMedia = matchesMedia;\n          }\n\n          return column.isVisible;\n        });\n\n        if (hasChanges) {\n          this.ngZone.run(() => {\n            this.changeDetectorRef.markForCheck();\n          });\n        }\n      }\n    }\n\n    emitPDFExportEvent() {\n      const args = new PDFExportEvent();\n      this.pdfExport.emit(args);\n\n      if (!args.isDefaultPrevented()) {\n        this.saveAsPDF();\n      }\n    }\n\n    syncHeaderHeight(observable) {\n      return observable.pipe(filter(() => isPresent(this.lockedHeader))).subscribe(() => syncRowsHeight(this.lockedHeader.nativeElement.children[0], this.header.nativeElement.children[0]));\n    }\n\n    columnsContainerChange() {\n      this.columnsContainerChangeSubscription = this.syncHeaderHeight(this.columnsContainer.changes.pipe(filter(() => this.lockedColumns.length > 0), switchMap(() => this.ngZone.onStable.asObservable().pipe(take(1)))));\n    }\n\n    handleColumnResize() {\n      const resizes = this.columnResizingService.changes;\n      this.columnResizingSubscription = resizes.pipe(tap(e => {\n        if (e.type === 'start') {\n          this.renderer.addClass(this.wrapper.nativeElement, 'k-grid-column-resizing');\n        } else if (e.type === 'end') {\n          this.renderer.removeClass(this.wrapper.nativeElement, 'k-grid-column-resizing');\n        }\n      }), filter(e => e.type === 'start'), switchMap(() => resizes.pipe( // tslint:disable-next-line: rxjs-no-unsafe-takeuntil\n      takeUntil(resizes.pipe(filter(e => e.type === 'triggerAutoFit'))), filter(e => e.type === 'end')))).subscribe(this.notifyResize.bind(this));\n    }\n\n    notifyResize(e) {\n      const args = e.resizedColumns.filter(item => isTruthy(item.column.resizable) && !item.column.isColumnGroup).map(item => ({\n        column: item.column,\n        newWidth: item.column.width,\n        oldWidth: item.oldWidth\n      }));\n      this.columnResize.emit(args);\n    }\n\n    assertNavigable() {\n      if (isDevMode() && !this.navigable) {\n        throw new Error('The Grid should be configured as [navigable]=\"true\" to control focus');\n      }\n    }\n\n    navigationMetadata() {\n      const isVirtual = this.isVirtual;\n      const pageSize = this.pageSize;\n      const dataRows = isVirtual ? this.view.total : pageSize;\n      const addRowOffset = this.editService.hasNewItem ? 1 : 0;\n      const filterRowOffset = hasFilterRow(this.filterable) ? 1 : 0;\n      const headerRows = this.totalColumnLevels + 1 + filterRowOffset + addRowOffset;\n      return new NavigationMetadata(dataRows, headerRows, isVirtual, this.hasPager, isPresent(this.detailTemplate), this.wrapper, this.virtualColumns, this.columnsContainer);\n    }\n\n    updateNavigationMetadata() {\n      this.navigationService.metadata = this.navigationMetadata();\n    }\n\n    applyAutoSize() {\n      const cols = this.columns.filter(c => this.autoSize ? c.autoSize !== false : c.autoSize);\n\n      if (cols.length > 0) {\n        this.ngZone.onStable.pipe(take(1)).subscribe(_ => this.autoFitColumns(cols));\n      }\n    }\n\n    onColumnRangeChange(range) {\n      const viewportColumns = this.viewportColumns = [];\n      const leafViewportColumns = this.columnsContainer.nonLockedLeafColumns.toArray().slice(range.start, range.end + 1);\n\n      for (let idx = 0; idx < leafViewportColumns.length; idx++) {\n        let column = leafViewportColumns[idx];\n\n        while (column.parent) {\n          column = column.parent;\n        }\n\n        const toAdd = [column];\n\n        while (toAdd.length) {\n          column = toAdd.shift();\n          viewportColumns.push(column);\n\n          if (column.isColumnGroup) {\n            toAdd.unshift.apply(toAdd, column.childrenArray);\n          }\n        }\n\n        const lastFromGroup = viewportColumns[viewportColumns.length - 1];\n        column = leafViewportColumns[idx];\n\n        while (column !== lastFromGroup && idx < leafViewportColumns.length) {\n          idx++;\n          column = leafViewportColumns[idx];\n        }\n      }\n\n      if (range.start > 0) {\n        const first = leafViewportColumns[0];\n        let offset = range.offset;\n        let current = viewportColumns[0];\n        let index = 0;\n\n        while (current !== first) {\n          offset -= current.isColumnGroup ? 0 : current.width;\n          index++;\n          current = viewportColumns[index];\n        }\n\n        if (offset > 0) {\n          const totalLevels = this.columnsContainer.totalLevels;\n          let previous;\n\n          for (let idx = 0; idx <= totalLevels; idx++) {\n            const offsetColumn = idx < totalLevels ? new ColumnGroupComponent(previous) : new ColumnBase$1(previous);\n            previous = offsetColumn;\n            offsetColumn.title = \"\\u00A0\";\n            offsetColumn.width = offset;\n            viewportColumns.unshift(offsetColumn);\n          }\n        }\n      }\n\n      this.leafViewportColumns = viewportColumns.filter(c => !c.isColumnGroup);\n    }\n\n    toggleDetailRowLegacy(index, expand) {\n      const hasCallback = typeof this.isDetailExpanded === 'function';\n\n      if (isDevMode() && hasCallback) {\n        throw new Error('The expandRow and collapseRow methods should not be called when using the ' + 'kendoGridDetailsExpandBy directive or the isDetailExpanded callback. ' + 'These methods are provided only for backwards compatibility with legacy versions.');\n      }\n\n      if (!isDevMode() && hasCallback) {\n        return;\n      }\n\n      if (this.detailsService.isExpanded(index, null) !== expand) {\n        this.detailsService.toggleRow(index, null);\n      }\n    }\n\n    toggleGroupRowLegacy(index, expand) {\n      const hasCallback = typeof this.isGroupExpanded === 'function';\n\n      if (isDevMode() && hasCallback) {\n        throw new Error('The expandGroup and collapseGroup methods should not be called when using the ' + 'kendoGridExpandGroupBy directive or the isGroupExpanded callback. ' + 'These methods are provided only for backwards compatibility with legacy versions.');\n      }\n\n      if (!isDevMode() && hasCallback) {\n        return;\n      }\n\n      if (this.groupsService.isExpanded({\n        groupIndex: index\n      }) !== expand) {\n        this.groupsService.toggleRow({\n          index\n        });\n      }\n    }\n\n    shouldResetSelection(selectableChanges) {\n      const previousValue = selectableChanges.previousValue;\n\n      if (!previousValue) {\n        // Selection was disabled, no need to reset.\n        return false;\n      }\n\n      const currentValue = selectableChanges.currentValue;\n\n      if (!currentValue || currentValue.enabled === false) {\n        // Selection disabled, reset.\n        return true;\n      }\n\n      return previousValue.cell !== currentValue.cell;\n    }\n\n  };\n\n  GridComponent.ɵfac = function GridComponent_Factory(t) {\n    return new (t || GridComponent)(ɵngcc0.ɵɵdirectiveInject(BrowserSupportService), ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(CellSelectionService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GroupInfoService), ɵngcc0.ɵɵdirectiveInject(GroupsService), ɵngcc0.ɵɵdirectiveInject(ChangeNotificationService), ɵngcc0.ɵɵdirectiveInject(DetailsService), ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(PDFService), ɵngcc0.ɵɵdirectiveInject(ResponsiveService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ExcelService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ScrollSyncService), ɵngcc0.ɵɵdirectiveInject(DomEventsService), ɵngcc0.ɵɵdirectiveInject(ColumnResizingService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ColumnReorderService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(SortService), ɵngcc0.ɵɵdirectiveInject(ScrollRequestService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  GridComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: GridComponent,\n    selectors: [[\"kendo-grid\"]],\n    contentQueries: function GridComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnBase$1, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DetailTemplateDirective, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CellLoadingTemplateDirective, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NoRecordsTemplateDirective, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, PagerTemplateDirective, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, ToolbarTemplateDirective, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnMenuTemplateDirective, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columns = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.detailTemplateChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.loadingTemplateChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.noRecordsTemplateChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.pagerTemplateChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toolbarTemplateChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnMenuTemplates = _t);\n      }\n    },\n    viewQuery: function GridComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(_c2, 7);\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lockedHeader = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.header = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ariaRoot = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footer = _t);\n      }\n    },\n    hostVars: 11,\n    hostBindings: function GridComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx.dir);\n        ɵngcc0.ɵɵclassProp(\"k-widget\", ctx.hostClasses)(\"k-grid\", ctx.hostClasses)(\"k-grid-lockedcolumns\", ctx.lockedClasses)(\"k-grid-virtual\", ctx.virtualClasses)(\"k-grid-no-scrollbar\", ctx.noScrollbarClass);\n      }\n    },\n    inputs: {\n      data: \"data\",\n      scrollable: \"scrollable\",\n      selectable: \"selectable\",\n      trackBy: \"trackBy\",\n      virtualColumns: \"virtualColumns\",\n      filterable: \"filterable\",\n      sortable: \"sortable\",\n      pageable: \"pageable\",\n      groupable: \"groupable\",\n      navigable: \"navigable\",\n      autoSize: \"autoSize\",\n      resizable: \"resizable\",\n      reorderable: \"reorderable\",\n      loading: \"loading\",\n      columnMenu: \"columnMenu\",\n      hideHeader: \"hideHeader\",\n      skip: \"skip\",\n      sort: \"sort\",\n      group: \"group\",\n      navigatable: \"navigatable\",\n      rowClass: \"rowClass\",\n      rowSticky: \"rowSticky\",\n      rowSelected: \"rowSelected\",\n      cellSelected: \"cellSelected\",\n      isDetailExpanded: \"isDetailExpanded\",\n      isGroupExpanded: \"isGroupExpanded\",\n      pageSize: \"pageSize\",\n      height: \"height\",\n      rowHeight: \"rowHeight\",\n      detailRowHeight: \"detailRowHeight\",\n      filter: \"filter\"\n    },\n    outputs: {\n      filterChange: \"filterChange\",\n      pageChange: \"pageChange\",\n      groupChange: \"groupChange\",\n      sortChange: \"sortChange\",\n      selectionChange: \"selectionChange\",\n      dataStateChange: \"dataStateChange\",\n      groupExpand: \"groupExpand\",\n      groupCollapse: \"groupCollapse\",\n      detailExpand: \"detailExpand\",\n      detailCollapse: \"detailCollapse\",\n      edit: \"edit\",\n      cancel: \"cancel\",\n      save: \"save\",\n      remove: \"remove\",\n      add: \"add\",\n      cellClose: \"cellClose\",\n      cellClick: \"cellClick\",\n      pdfExport: \"pdfExport\",\n      excelExport: \"excelExport\",\n      columnResize: \"columnResize\",\n      columnReorder: \"columnReorder\",\n      columnVisibilityChange: \"columnVisibilityChange\",\n      columnLockedChange: \"columnLockedChange\",\n      columnStickyChange: \"columnStickyChange\",\n      scrollBottom: \"scrollBottom\",\n      contentScroll: \"contentScroll\"\n    },\n    exportAs: [\"kendoGrid\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([BrowserSupportService, LocalizationService, ColumnInfoService, SelectionService, CellSelectionService, DetailsService, GroupsService, GroupInfoService, ChangeNotificationService, EditService, PDFService, SuspendService, {\n      provide: CELL_CONTEXT,\n      useValue: ɵ5$1\n    }, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.grid'\n    }, FilterService, ResponsiveService, PagerContextService, ExcelService, ScrollSyncService, ResizeService, LocalDataChangesService, DomEventsService, ColumnResizingService, SinglePopupService, DragAndDropService, DragHintService, DropCueService, ColumnReorderService, NavigationService, FocusRoot, IdService, ScrollRequestService, SortService]), ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 11,\n    vars: 16,\n    consts: function () {\n      let i18n_4;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label visible in the Grid group panel when it is empty\n         * @meaning kendo.grid.groupPanelEmpty\n         */\n        const MSG_EXTERNAL_1430663748859427158$$DIST_FESM2015_INDEX_JS_5 = goog.getMsg(\"Drag a column header and drop it here to group by that column\");\n        i18n_4 = MSG_EXTERNAL_1430663748859427158$$DIST_FESM2015_INDEX_JS_5;\n      } else {\n        i18n_4 = $localize`:kendo.grid.groupPanelEmpty|The label visible in the Grid group panel when it is empty␟30bcb3a2fbc22fcab6ca805e74b90adb8ba1ae96␟1430663748859427158:Drag a column header and drop it here to group by that column`;\n      }\n\n      let i18n_6;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label visible in the Grid when there are no records\n         * @meaning kendo.grid.noRecords\n         */\n        const MSG_EXTERNAL_1243399825085142134$$DIST_FESM2015_INDEX_JS_7 = goog.getMsg(\"No records available.\");\n        i18n_6 = MSG_EXTERNAL_1243399825085142134$$DIST_FESM2015_INDEX_JS_7;\n      } else {\n        i18n_6 = $localize`:kendo.grid.noRecords|The label visible in the Grid when there are no records␟ff9cfd4bf3e40305db251f2b6961796c0550b4b0␟1243399825085142134:No records available.`;\n      }\n\n      let i18n_8;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the first page button in Grid pager\n         * @meaning kendo.grid.pagerFirstPage\n         */\n        const MSG_EXTERNAL_5647145449685906398$$DIST_FESM2015_INDEX_JS_9 = goog.getMsg(\"Go to the first page\");\n        i18n_8 = MSG_EXTERNAL_5647145449685906398$$DIST_FESM2015_INDEX_JS_9;\n      } else {\n        i18n_8 = $localize`:kendo.grid.pagerFirstPage|The label for the first page button in Grid pager␟b405dfc5ee42415daa08d54847d3010de1821111␟5647145449685906398:Go to the first page`;\n      }\n\n      let i18n_10;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the previous page button in Grid pager\n         * @meaning kendo.grid.pagerPreviousPage\n         */\n        const MSG_EXTERNAL_6745088753482690847$$DIST_FESM2015_INDEX_JS_11 = goog.getMsg(\"Go to the previous page\");\n        i18n_10 = MSG_EXTERNAL_6745088753482690847$$DIST_FESM2015_INDEX_JS_11;\n      } else {\n        i18n_10 = $localize`:kendo.grid.pagerPreviousPage|The label for the previous page button in Grid pager␟47aa4fe05f5a2577d3336971d7c44ce48802b860␟6745088753482690847:Go to the previous page`;\n      }\n\n      let i18n_12;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the next page button in Grid pager\n         * @meaning kendo.grid.pagerNextPage\n         */\n        const MSG_EXTERNAL_5510985262435270859$$DIST_FESM2015_INDEX_JS_13 = goog.getMsg(\"Go to the next page\");\n        i18n_12 = MSG_EXTERNAL_5510985262435270859$$DIST_FESM2015_INDEX_JS_13;\n      } else {\n        i18n_12 = $localize`:kendo.grid.pagerNextPage|The label for the next page button in Grid pager␟90031133fca899b4e491d9fc51128c1a184afb30␟5510985262435270859:Go to the next page`;\n      }\n\n      let i18n_14;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the last page button in Grid pager\n         * @meaning kendo.grid.pagerLastPage\n         */\n        const MSG_EXTERNAL_4539768510520419313$$DIST_FESM2015_INDEX_JS_15 = goog.getMsg(\"Go to the last page\");\n        i18n_14 = MSG_EXTERNAL_4539768510520419313$$DIST_FESM2015_INDEX_JS_15;\n      } else {\n        i18n_14 = $localize`:kendo.grid.pagerLastPage|The label for the last page button in Grid pager␟fe84f2ea868286ce03e50b6e55558c16d675c753␟4539768510520419313:Go to the last page`;\n      }\n\n      let i18n_16;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label before the current page number in the Grid pager\n         * @meaning kendo.grid.pagerPage\n         */\n        const MSG_EXTERNAL_5228228287003939680$$DIST_FESM2015_INDEX_JS_17 = goog.getMsg(\"Page\");\n        i18n_16 = MSG_EXTERNAL_5228228287003939680$$DIST_FESM2015_INDEX_JS_17;\n      } else {\n        i18n_16 = $localize`:kendo.grid.pagerPage|The label before the current page number in the Grid pager␟89c1f616c25bb610824cd8a26473a03921df48bd␟5228228287003939680:Page`;\n      }\n\n      let i18n_18;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label before the total pages number in the Grid pager\n         * @meaning kendo.grid.pagerOf\n         */\n        const MSG_EXTERNAL_7004642096327889102$$DIST_FESM2015_INDEX_JS_19 = goog.getMsg(\"of\");\n        i18n_18 = MSG_EXTERNAL_7004642096327889102$$DIST_FESM2015_INDEX_JS_19;\n      } else {\n        i18n_18 = $localize`:kendo.grid.pagerOf|The label before the total pages number in the Grid pager␟0c9abe48f5d4bd2cb51846712e41864fc64aad6a␟7004642096327889102:of`;\n      }\n\n      let i18n_20;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label after the total pages number in the Grid pager\n         * @meaning kendo.grid.pagerItems\n         */\n        const MSG_EXTERNAL_700193548223931835$$DIST_FESM2015_INDEX_JS_21 = goog.getMsg(\"items\");\n        i18n_20 = MSG_EXTERNAL_700193548223931835$$DIST_FESM2015_INDEX_JS_21;\n      } else {\n        i18n_20 = $localize`:kendo.grid.pagerItems|The label after the total pages number in the Grid pager␟7c1704d11bfb77340485acd891439c2b6c6616ca␟700193548223931835:items`;\n      }\n\n      let i18n_22;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the pager input in the Grid pager\n         * @meaning kendo.grid.pagerPageNumberInputTitle\n         */\n        const MSG_EXTERNAL_2090461908134774363$$DIST_FESM2015_INDEX_JS_23 = goog.getMsg(\"Page Number\");\n        i18n_22 = MSG_EXTERNAL_2090461908134774363$$DIST_FESM2015_INDEX_JS_23;\n      } else {\n        i18n_22 = $localize`:kendo.grid.pagerPageNumberInputTitle|The label for the pager input in the Grid pager␟f8bad8f2c7345e4fe531480e3034f7d3e954d383␟2090461908134774363:Page Number`;\n      }\n\n      let i18n_24;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the page size chooser in the Grid pager\n         * @meaning kendo.grid.pagerItemsPerPage\n         */\n        const MSG_EXTERNAL_8838594644885628398$$DIST_FESM2015_INDEX_JS_25 = goog.getMsg(\"items per page\");\n        i18n_24 = MSG_EXTERNAL_8838594644885628398$$DIST_FESM2015_INDEX_JS_25;\n      } else {\n        i18n_24 = $localize`:kendo.grid.pagerItemsPerPage|The label for the page size chooser in the Grid pager␟3331fe7ec45f299afaa4c1e08ea25c493eda9144␟8838594644885628398:items per page`;\n      }\n\n      let i18n_26;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label of the filter cell or icon\n         * @meaning kendo.grid.filter\n         */\n        const MSG_EXTERNAL_7977992299945497789$$DIST_FESM2015_INDEX_JS_27 = goog.getMsg(\"Filter\");\n        i18n_26 = MSG_EXTERNAL_7977992299945497789$$DIST_FESM2015_INDEX_JS_27;\n      } else {\n        i18n_26 = $localize`:kendo.grid.filter|The label of the filter cell or icon␟21a04b7b090dac60e0449cb6e435b7e879173c75␟7977992299945497789:Filter`;\n      }\n\n      let i18n_28;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the equal filter operator\n         * @meaning kendo.grid.filterEqOperator\n         */\n        const MSG_EXTERNAL_4328959145426393682$$DIST_FESM2015_INDEX_JS_29 = goog.getMsg(\"Is equal to\");\n        i18n_28 = MSG_EXTERNAL_4328959145426393682$$DIST_FESM2015_INDEX_JS_29;\n      } else {\n        i18n_28 = $localize`:kendo.grid.filterEqOperator|The text of the equal filter operator␟8b31e1604d10a2f8709dcb1ed5c237e33cffc135␟4328959145426393682:Is equal to`;\n      }\n\n      let i18n_30;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the not equal filter operator\n         * @meaning kendo.grid.filterNotEqOperator\n         */\n        const MSG_EXTERNAL_8497658332767349737$$DIST_FESM2015_INDEX_JS_31 = goog.getMsg(\"Is not equal to\");\n        i18n_30 = MSG_EXTERNAL_8497658332767349737$$DIST_FESM2015_INDEX_JS_31;\n      } else {\n        i18n_30 = $localize`:kendo.grid.filterNotEqOperator|The text of the not equal filter operator␟d46e14d35d89d2fadf5c852abf5557643510a013␟8497658332767349737:Is not equal to`;\n      }\n\n      let i18n_32;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the is null filter operator\n         * @meaning kendo.grid.filterIsNullOperator\n         */\n        const MSG_EXTERNAL_1298299704757177797$$DIST_FESM2015_INDEX_JS_33 = goog.getMsg(\"Is null\");\n        i18n_32 = MSG_EXTERNAL_1298299704757177797$$DIST_FESM2015_INDEX_JS_33;\n      } else {\n        i18n_32 = $localize`:kendo.grid.filterIsNullOperator|The text of the is null filter operator␟078c50eb1fe8b2b43fcc40c5e7f4493152310c2f␟1298299704757177797:Is null`;\n      }\n\n      let i18n_34;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the is not null filter operator\n         * @meaning kendo.grid.filterIsNotNullOperator\n         */\n        const MSG_EXTERNAL_8362279767336741540$$DIST_FESM2015_INDEX_JS_35 = goog.getMsg(\"Is not null\");\n        i18n_34 = MSG_EXTERNAL_8362279767336741540$$DIST_FESM2015_INDEX_JS_35;\n      } else {\n        i18n_34 = $localize`:kendo.grid.filterIsNotNullOperator|The text of the is not null filter operator␟70b39eeaf2674907b2e59b414baf17e032b464dc␟8362279767336741540:Is not null`;\n      }\n\n      let i18n_36;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the is empty filter operator\n         * @meaning kendo.grid.filterIsEmptyOperator\n         */\n        const MSG_EXTERNAL_4762263229995523226$$DIST_FESM2015_INDEX_JS_37 = goog.getMsg(\"Is empty\");\n        i18n_36 = MSG_EXTERNAL_4762263229995523226$$DIST_FESM2015_INDEX_JS_37;\n      } else {\n        i18n_36 = $localize`:kendo.grid.filterIsEmptyOperator|The text of the is empty filter operator␟a4e77e444b4e9b63851ac818e20136212b06c750␟4762263229995523226:Is empty`;\n      }\n\n      let i18n_38;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the is not empty filter operator\n         * @meaning kendo.grid.filterIsNotEmptyOperator\n         */\n        const MSG_EXTERNAL_8245213618709258015$$DIST_FESM2015_INDEX_JS_39 = goog.getMsg(\"Is not empty\");\n        i18n_38 = MSG_EXTERNAL_8245213618709258015$$DIST_FESM2015_INDEX_JS_39;\n      } else {\n        i18n_38 = $localize`:kendo.grid.filterIsNotEmptyOperator|The text of the is not empty filter operator␟dee7553c341248e90aef4a8e7438c52e667e68be␟8245213618709258015:Is not empty`;\n      }\n\n      let i18n_40;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the starts with filter operator\n         * @meaning kendo.grid.filterStartsWithOperator\n         */\n        const MSG_EXTERNAL_6087783423599420507$$DIST_FESM2015_INDEX_JS_41 = goog.getMsg(\"Starts with\");\n        i18n_40 = MSG_EXTERNAL_6087783423599420507$$DIST_FESM2015_INDEX_JS_41;\n      } else {\n        i18n_40 = $localize`:kendo.grid.filterStartsWithOperator|The text of the starts with filter operator␟da43b363b636156e3ccdbb64a0788bdeab51e992␟6087783423599420507:Starts with`;\n      }\n\n      let i18n_42;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the contains filter operator\n         * @meaning kendo.grid.filterContainsOperator\n         */\n        const MSG_EXTERNAL_3831180413287131758$$DIST_FESM2015_INDEX_JS_43 = goog.getMsg(\"Contains\");\n        i18n_42 = MSG_EXTERNAL_3831180413287131758$$DIST_FESM2015_INDEX_JS_43;\n      } else {\n        i18n_42 = $localize`:kendo.grid.filterContainsOperator|The text of the contains filter operator␟5b568a46d2e34ebde7dd53a7e599cbbb7dc6bae1␟3831180413287131758:Contains`;\n      }\n\n      let i18n_44;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the does not contain filter operator\n         * @meaning kendo.grid.filterNotContainsOperator\n         */\n        const MSG_EXTERNAL_7331253838216904826$$DIST_FESM2015_INDEX_JS_45 = goog.getMsg(\"Does not contain\");\n        i18n_44 = MSG_EXTERNAL_7331253838216904826$$DIST_FESM2015_INDEX_JS_45;\n      } else {\n        i18n_44 = $localize`:kendo.grid.filterNotContainsOperator|The text of the does not contain filter operator␟be06aa4fde7fa722c9de5a45f241ff595071d718␟7331253838216904826:Does not contain`;\n      }\n\n      let i18n_46;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the ends with filter operator\n         * @meaning kendo.grid.filterEndsWithOperator\n         */\n        const MSG_EXTERNAL_3662435311670509156$$DIST_FESM2015_INDEX_JS_47 = goog.getMsg(\"Ends with\");\n        i18n_46 = MSG_EXTERNAL_3662435311670509156$$DIST_FESM2015_INDEX_JS_47;\n      } else {\n        i18n_46 = $localize`:kendo.grid.filterEndsWithOperator|The text of the ends with filter operator␟a54b2ecffb41f0603ceedc7ea5a40b7d130e2fa1␟3662435311670509156:Ends with`;\n      }\n\n      let i18n_48;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the greater than or equal filter operator\n         * @meaning kendo.grid.filterGteOperator\n         */\n        const MSG_EXTERNAL_4542824413455511831$$DIST_FESM2015_INDEX_JS_49 = goog.getMsg(\"Is greater than or equal to\");\n        i18n_48 = MSG_EXTERNAL_4542824413455511831$$DIST_FESM2015_INDEX_JS_49;\n      } else {\n        i18n_48 = $localize`:kendo.grid.filterGteOperator|The text of the greater than or equal filter operator␟68471603db771d0304d02fe086da9701c16911c3␟4542824413455511831:Is greater than or equal to`;\n      }\n\n      let i18n_50;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the greater than filter operator\n         * @meaning kendo.grid.filterGtOperator\n         */\n        const MSG_EXTERNAL_1527483349261806183$$DIST_FESM2015_INDEX_JS_51 = goog.getMsg(\"Is greater than\");\n        i18n_50 = MSG_EXTERNAL_1527483349261806183$$DIST_FESM2015_INDEX_JS_51;\n      } else {\n        i18n_50 = $localize`:kendo.grid.filterGtOperator|The text of the greater than filter operator␟ae68acc0e18252a348bdfb32112996d81e5305de␟1527483349261806183:Is greater than`;\n      }\n\n      let i18n_52;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the less than or equal filter operator\n         * @meaning kendo.grid.filterLteOperator\n         */\n        const MSG_EXTERNAL_4840714404733417604$$DIST_FESM2015_INDEX_JS_53 = goog.getMsg(\"Is less than or equal to\");\n        i18n_52 = MSG_EXTERNAL_4840714404733417604$$DIST_FESM2015_INDEX_JS_53;\n      } else {\n        i18n_52 = $localize`:kendo.grid.filterLteOperator|The text of the less than or equal filter operator␟e48d50a6422c616a00b95025adc5283aff4fa8cb␟4840714404733417604:Is less than or equal to`;\n      }\n\n      let i18n_54;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the less than filter operator\n         * @meaning kendo.grid.filterLtOperator\n         */\n        const MSG_EXTERNAL_498627126459578706$$DIST_FESM2015_INDEX_JS_55 = goog.getMsg(\"Is less than\");\n        i18n_54 = MSG_EXTERNAL_498627126459578706$$DIST_FESM2015_INDEX_JS_55;\n      } else {\n        i18n_54 = $localize`:kendo.grid.filterLtOperator|The text of the less than filter operator␟c4d58f0e509cb7e37014715dd91546a724210d70␟498627126459578706:Is less than`;\n      }\n\n      let i18n_56;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the IsTrue boolean filter option\n         * @meaning kendo.grid.filterIsTrue\n         */\n        const MSG_EXTERNAL_2361673238316312251$$DIST_FESM2015_INDEX_JS_57 = goog.getMsg(\"Is True\");\n        i18n_56 = MSG_EXTERNAL_2361673238316312251$$DIST_FESM2015_INDEX_JS_57;\n      } else {\n        i18n_56 = $localize`:kendo.grid.filterIsTrue|The text of the IsTrue boolean filter option␟d5f1e9028bc60c30e8f8e0f9cfeb872512446cea␟2361673238316312251:Is True`;\n      }\n\n      let i18n_58;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the IsFalse boolean filter option\n         * @meaning kendo.grid.filterIsFalse\n         */\n        const MSG_EXTERNAL_7759366406135608407$$DIST_FESM2015_INDEX_JS_59 = goog.getMsg(\"Is False\");\n        i18n_58 = MSG_EXTERNAL_7759366406135608407$$DIST_FESM2015_INDEX_JS_59;\n      } else {\n        i18n_58 = $localize`:kendo.grid.filterIsFalse|The text of the IsFalse boolean filter option␟6d34731320e2536fd78f4a9e08f0b8dcd01edf3d␟7759366406135608407:Is False`;\n      }\n\n      let i18n_60;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the (All) boolean filter option\n         * @meaning kendo.grid.filterBooleanAll\n         */\n        const MSG_EXTERNAL_9215343856736761875$$DIST_FESM2015_INDEX_JS_61 = goog.getMsg(\"(All)\");\n        i18n_60 = MSG_EXTERNAL_9215343856736761875$$DIST_FESM2015_INDEX_JS_61;\n      } else {\n        i18n_60 = $localize`:kendo.grid.filterBooleanAll|The text of the (All) boolean filter option␟4da1456a62bafe2614ed2bc05a2c790a64a4dd0b␟9215343856736761875:(All)`;\n      }\n\n      let i18n_62;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the after or equal date filter operator\n         * @meaning kendo.grid.filterAfterOrEqualOperator\n         */\n        const MSG_EXTERNAL_1964413288176201979$$DIST_FESM2015_INDEX_JS_63 = goog.getMsg(\"Is after or equal to\");\n        i18n_62 = MSG_EXTERNAL_1964413288176201979$$DIST_FESM2015_INDEX_JS_63;\n      } else {\n        i18n_62 = $localize`:kendo.grid.filterAfterOrEqualOperator|The text of the after or equal date filter operator␟d7dac1bbc2372d578a9d2bca099de766043aed7e␟1964413288176201979:Is after or equal to`;\n      }\n\n      let i18n_64;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the after date filter operator\n         * @meaning kendo.grid.filterAfterOperator\n         */\n        const MSG_EXTERNAL_3078502182807244703$$DIST_FESM2015_INDEX_JS_65 = goog.getMsg(\"Is after\");\n        i18n_64 = MSG_EXTERNAL_3078502182807244703$$DIST_FESM2015_INDEX_JS_65;\n      } else {\n        i18n_64 = $localize`:kendo.grid.filterAfterOperator|The text of the after date filter operator␟bff777df0d0831cc02679227422fab4ef2763fa9␟3078502182807244703:Is after`;\n      }\n\n      let i18n_66;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the before date filter operator\n         * @meaning kendo.grid.filterBeforeOperator\n         */\n        const MSG_EXTERNAL_3348865631071358219$$DIST_FESM2015_INDEX_JS_67 = goog.getMsg(\"Is before\");\n        i18n_66 = MSG_EXTERNAL_3348865631071358219$$DIST_FESM2015_INDEX_JS_67;\n      } else {\n        i18n_66 = $localize`:kendo.grid.filterBeforeOperator|The text of the before date filter operator␟35ef5cf367670f15432c9f8761bc85fbdb2b1830␟3348865631071358219:Is before`;\n      }\n\n      let i18n_68;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the before or equal date filter operator\n         * @meaning kendo.grid.filterBeforeOrEqualOperator\n         */\n        const MSG_EXTERNAL_6582064037090631388$$DIST_FESM2015_INDEX_JS_69 = goog.getMsg(\"Is before or equal to\");\n        i18n_68 = MSG_EXTERNAL_6582064037090631388$$DIST_FESM2015_INDEX_JS_69;\n      } else {\n        i18n_68 = $localize`:kendo.grid.filterBeforeOrEqualOperator|The text of the before or equal date filter operator␟27a6b29ffbc1eb498de8d7af20051461a2e842ec␟6582064037090631388:Is before or equal to`;\n      }\n\n      let i18n_70;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the filter button\n         * @meaning kendo.grid.filterFilterButton\n         */\n        const MSG_EXTERNAL_5185263258022896121$$DIST_FESM2015_INDEX_JS_71 = goog.getMsg(\"Filter\");\n        i18n_70 = MSG_EXTERNAL_5185263258022896121$$DIST_FESM2015_INDEX_JS_71;\n      } else {\n        i18n_70 = $localize`:kendo.grid.filterFilterButton|The text of the filter button␟4f1c08d0b056646cdb668da669e2e15825adfe4d␟5185263258022896121:Filter`;\n      }\n\n      let i18n_72;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the clear filter button\n         * @meaning kendo.grid.filterClearButton\n         */\n        const MSG_EXTERNAL_3031209415830321799$$DIST_FESM2015_INDEX_JS_73 = goog.getMsg(\"Clear\");\n        i18n_72 = MSG_EXTERNAL_3031209415830321799$$DIST_FESM2015_INDEX_JS_73;\n      } else {\n        i18n_72 = $localize`:kendo.grid.filterClearButton|The text of the clear filter button␟06e4e4dadede6f91f261cdbb7fb174246a135238␟3031209415830321799:Clear`;\n      }\n\n      let i18n_74;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the And filter logic\n         * @meaning kendo.grid.filterAndLogic\n         */\n        const MSG_EXTERNAL_512662285155477884$$DIST_FESM2015_INDEX_JS_75 = goog.getMsg(\"And\");\n        i18n_74 = MSG_EXTERNAL_512662285155477884$$DIST_FESM2015_INDEX_JS_75;\n      } else {\n        i18n_74 = $localize`:kendo.grid.filterAndLogic|The text of the And filter logic␟f73fbcc2f813d469e4a34491950ca01ea1ac8f60␟512662285155477884:And`;\n      }\n\n      let i18n_76;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the Or filter logic\n         * @meaning kendo.grid.filterOrLogic\n         */\n        const MSG_EXTERNAL_1964926727342405367$$DIST_FESM2015_INDEX_JS_77 = goog.getMsg(\"Or\");\n        i18n_76 = MSG_EXTERNAL_1964926727342405367$$DIST_FESM2015_INDEX_JS_77;\n      } else {\n        i18n_76 = $localize`:kendo.grid.filterOrLogic|The text of the Or filter logic␟04e64780de0fc1c3a9986997e0808ec53a5f2a63␟1964926727342405367:Or`;\n      }\n\n      let i18n_78;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The loading text\n         * @meaning kendo.grid.loading\n         */\n        const MSG_EXTERNAL_5425510787229531767$$DIST_FESM2015_INDEX_JS_79 = goog.getMsg(\"Loading\");\n        i18n_78 = MSG_EXTERNAL_5425510787229531767$$DIST_FESM2015_INDEX_JS_79;\n      } else {\n        i18n_78 = $localize`:kendo.grid.loading|The loading text␟781c049cc69efc30bc8053af9ace3cb4b04bd438␟5425510787229531767:Loading`;\n      }\n\n      let i18n_80;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The Grid aria-label\n         * @meaning kendo.grid.gridLabel\n         */\n        const MSG_EXTERNAL_1756559638952980203$$DIST_FESM2015_INDEX_JS_81 = goog.getMsg(\"Data table\");\n        i18n_80 = MSG_EXTERNAL_1756559638952980203$$DIST_FESM2015_INDEX_JS_81;\n      } else {\n        i18n_80 = $localize`:kendo.grid.gridLabel|The Grid aria-label␟03316b5e0c6e91f110c8f015ca63318ced71b1ab␟1756559638952980203:Data table`;\n      }\n\n      let i18n_82;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text shown in the column menu for the columns item\n         * @meaning kendo.grid.columns\n         */\n        const MSG_EXTERNAL_5332162737795508854$$DIST_FESM2015_INDEX_JS_83 = goog.getMsg(\"Columns\");\n        i18n_82 = MSG_EXTERNAL_5332162737795508854$$DIST_FESM2015_INDEX_JS_83;\n      } else {\n        i18n_82 = $localize`:kendo.grid.columns|The text shown in the column menu for the columns item␟9b841399fbb3d81f2401f98b4f4763834b72a1e5␟5332162737795508854:Columns`;\n      }\n\n      let i18n_84;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text shown in the column menu for the lock item\n         * @meaning kendo.grid.lock\n         */\n        const MSG_EXTERNAL_5849203148124173556$$DIST_FESM2015_INDEX_JS_85 = goog.getMsg(\"Lock\");\n        i18n_84 = MSG_EXTERNAL_5849203148124173556$$DIST_FESM2015_INDEX_JS_85;\n      } else {\n        i18n_84 = $localize`:kendo.grid.lock|The text shown in the column menu for the lock item␟f356cae509dec3dc1b7156326b9a0328a79c62a8␟5849203148124173556:Lock`;\n      }\n\n      let i18n_86;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text shown in the column menu for the unlock item\n         * @meaning kendo.grid.unlock\n         */\n        const MSG_EXTERNAL_6968586378603932789$$DIST_FESM2015_INDEX_JS_87 = goog.getMsg(\"Unlock\");\n        i18n_86 = MSG_EXTERNAL_6968586378603932789$$DIST_FESM2015_INDEX_JS_87;\n      } else {\n        i18n_86 = $localize`:kendo.grid.unlock|The text shown in the column menu for the unlock item␟f33355540003068372e39ba7f3def794869ea9f8␟6968586378603932789:Unlock`;\n      }\n\n      let i18n_88;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text shown in the column menu for the set column position item\n         * @meaning kendo.grid.setColumnPosition\n         */\n        const MSG_EXTERNAL_4152513791950180353$$DIST_FESM2015_INDEX_JS_89 = goog.getMsg(\"Set Column Position\");\n        i18n_88 = MSG_EXTERNAL_4152513791950180353$$DIST_FESM2015_INDEX_JS_89;\n      } else {\n        i18n_88 = $localize`:kendo.grid.setColumnPosition|The text shown in the column menu for the set column position item␟e5b09fd8ecea276841b1018a376a43d5f26cf187␟4152513791950180353:Set Column Position`;\n      }\n\n      let i18n_90;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text shown in the column menu for the stick item\n         * @meaning kendo.grid.stick\n         */\n        const MSG_EXTERNAL_2051035907018784050$$DIST_FESM2015_INDEX_JS_91 = goog.getMsg(\"Stick\");\n        i18n_90 = MSG_EXTERNAL_2051035907018784050$$DIST_FESM2015_INDEX_JS_91;\n      } else {\n        i18n_90 = $localize`:kendo.grid.stick|The text shown in the column menu for the stick item␟31d7229bfb18a112e19a6e8040d7d2e261293dca␟2051035907018784050:Stick`;\n      }\n\n      let i18n_92;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text shown in the column menu for the unstick item\n         * @meaning kendo.grid.unstick\n         */\n        const MSG_EXTERNAL_7237321134369658080$$DIST_FESM2015_INDEX_JS_93 = goog.getMsg(\"Unstick\");\n        i18n_92 = MSG_EXTERNAL_7237321134369658080$$DIST_FESM2015_INDEX_JS_93;\n      } else {\n        i18n_92 = $localize`:kendo.grid.unstick|The text shown in the column menu for the unstick item␟01d4c7e75b7fadc09544cf2277208d39b4eef86a␟7237321134369658080:Unstick`;\n      }\n\n      let i18n_94;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label of the sort icon\n         * @meaning kendo.grid.sortable\n         */\n        const MSG_EXTERNAL_3824304972336788145$$DIST_FESM2015_INDEX_JS_95 = goog.getMsg(\"Sortable\");\n        i18n_94 = MSG_EXTERNAL_3824304972336788145$$DIST_FESM2015_INDEX_JS_95;\n      } else {\n        i18n_94 = $localize`:kendo.grid.sortable|The label of the sort icon␟a692ba271be066ce379f942ff67094e1ea989f4c␟3824304972336788145:Sortable`;\n      }\n\n      let i18n_96;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text shown in the column menu for the sort ascending item\n         * @meaning kendo.grid.sortAscending\n         */\n        const MSG_EXTERNAL_6297762560864270240$$DIST_FESM2015_INDEX_JS_97 = goog.getMsg(\"Sort Ascending\");\n        i18n_96 = MSG_EXTERNAL_6297762560864270240$$DIST_FESM2015_INDEX_JS_97;\n      } else {\n        i18n_96 = $localize`:kendo.grid.sortAscending|The text shown in the column menu for the sort ascending item␟96beffd8446c5455f3bbdc313c946db32df7dcc2␟6297762560864270240:Sort Ascending`;\n      }\n\n      let i18n_98;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text shown in the column menu for the sort descending item\n         * @meaning kendo.grid.sortDescending\n         */\n        const MSG_EXTERNAL_5605073536641230977$$DIST_FESM2015_INDEX_JS_99 = goog.getMsg(\"Sort Descending\");\n        i18n_98 = MSG_EXTERNAL_5605073536641230977$$DIST_FESM2015_INDEX_JS_99;\n      } else {\n        i18n_98 = $localize`:kendo.grid.sortDescending|The text shown in the column menu for the sort descending item␟208d0538d4c2537a1cbf456941e34a2884053d52␟5605073536641230977:Sort Descending`;\n      }\n\n      let i18n_100;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The status announcement when a column is sorted ascending\n         * @meaning kendo.grid.sortedAscending\n         */\n        const MSG_EXTERNAL_6275944032047713540$$DIST_FESM2015_INDEX_JS_101 = goog.getMsg(\"Sorted Ascending\");\n        i18n_100 = MSG_EXTERNAL_6275944032047713540$$DIST_FESM2015_INDEX_JS_101;\n      } else {\n        i18n_100 = $localize`:kendo.grid.sortedAscending|The status announcement when a column is sorted ascending␟947c64329461efd9f8a9aa2c51acbbd099170aa5␟6275944032047713540:Sorted Ascending`;\n      }\n\n      let i18n_102;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The status announcement when a column is sorted descending\n         * @meaning kendo.grid.sortedDescending\n         */\n        const MSG_EXTERNAL_8155280769473236383$$DIST_FESM2015_INDEX_JS_103 = goog.getMsg(\"Sorted Descending\");\n        i18n_102 = MSG_EXTERNAL_8155280769473236383$$DIST_FESM2015_INDEX_JS_103;\n      } else {\n        i18n_102 = $localize`:kendo.grid.sortedDescending|The status announcement when a column is sorted descending␟092a688d1b2b6d873bdc29beaaf43c3f45336581␟8155280769473236383:Sorted Descending`;\n      }\n\n      let i18n_104;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The status announcement when a column is no longer sorted\n         * @meaning kendo.grid.sortedDefault\n         */\n        const MSG_EXTERNAL_5229177293891232538$$DIST_FESM2015_INDEX_JS_105 = goog.getMsg(\"Not Sorted\");\n        i18n_104 = MSG_EXTERNAL_5229177293891232538$$DIST_FESM2015_INDEX_JS_105;\n      } else {\n        i18n_104 = $localize`:kendo.grid.sortedDefault|The status announcement when a column is no longer sorted␟66e99ea340974022c07c52a6f668f5573e7edab0␟5229177293891232538:Not Sorted`;\n      }\n\n      let i18n_106;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text shown in the column menu or column chooser for the columns apply button\n         * @meaning kendo.grid.columnsApply\n         */\n        const MSG_EXTERNAL_34213208292862969$$DIST_FESM2015_INDEX_JS_107 = goog.getMsg(\"Apply\");\n        i18n_106 = MSG_EXTERNAL_34213208292862969$$DIST_FESM2015_INDEX_JS_107;\n      } else {\n        i18n_106 = $localize`:kendo.grid.columnsApply|The text shown in the column menu or column chooser for the columns apply button␟04600bd6e362cf9da9f7f9c4666eab2c88eb6a90␟34213208292862969:Apply`;\n      }\n\n      let i18n_108;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text shown in the column menu or column chooser for the columns reset button\n         * @meaning kendo.grid.columnsReset\n         */\n        const MSG_EXTERNAL_4465838259914958827$$DIST_FESM2015_INDEX_JS_109 = goog.getMsg(\"Reset\");\n        i18n_108 = MSG_EXTERNAL_4465838259914958827$$DIST_FESM2015_INDEX_JS_109;\n      } else {\n        i18n_108 = $localize`:kendo.grid.columnsReset|The text shown in the column menu or column chooser for the columns reset button␟94d3b472d99994a5cca9930afd4cf0ac2774c382␟4465838259914958827:Reset`;\n      }\n\n      let i18n_110;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the expand icon of detail rows.\n         * @meaning kendo.grid.detailExpand\n         */\n        const MSG_EXTERNAL_6952757249912226136$$DIST_FESM2015_INDEX_JS_111 = goog.getMsg(\"Expand Details\");\n        i18n_110 = MSG_EXTERNAL_6952757249912226136$$DIST_FESM2015_INDEX_JS_111;\n      } else {\n        i18n_110 = $localize`:kendo.grid.detailExpand|The title of the expand icon of detail rows.␟ad6629bb6e79235623cfce486ef48087dbe96fb5␟6952757249912226136:Expand Details`;\n      }\n\n      let i18n_112;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the collapse icon of detail rows.\n         * @meaning kendo.grid.detailCollapse\n         */\n        const MSG_EXTERNAL_6065477639036399169$$DIST_FESM2015_INDEX_JS_113 = goog.getMsg(\"Collapse Details\");\n        i18n_112 = MSG_EXTERNAL_6065477639036399169$$DIST_FESM2015_INDEX_JS_113;\n      } else {\n        i18n_112 = $localize`:kendo.grid.detailCollapse|The title of the collapse icon of detail rows.␟ace0c0a58fbb211e8678efb3bd6ac9bb587144c3␟6065477639036399169:Collapse Details`;\n      }\n\n      let i18n_114;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text of the Today button of the Date filter.\n         * @meaning kendo.grid.filterDateToday\n         */\n        const MSG_EXTERNAL_1656723147090613075$$DIST_FESM2015_INDEX_JS_115 = goog.getMsg(\"TODAY\");\n        i18n_114 = MSG_EXTERNAL_1656723147090613075$$DIST_FESM2015_INDEX_JS_115;\n      } else {\n        i18n_114 = $localize`:kendo.grid.filterDateToday|The text of the Today button of the Date filter.␟745058f85d92ee5228977277195262978828c4c8␟1656723147090613075:TODAY`;\n      }\n\n      let i18n_116;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the Toggle button of the Date filter.\n         * @meaning kendo.grid.filterDateToggle\n         */\n        const MSG_EXTERNAL_15438307630389352$$DIST_FESM2015_INDEX_JS_117 = goog.getMsg(\"Toggle Calendar\");\n        i18n_116 = MSG_EXTERNAL_15438307630389352$$DIST_FESM2015_INDEX_JS_117;\n      } else {\n        i18n_116 = $localize`:kendo.grid.filterDateToggle|The title of the Toggle button of the Date filter.␟2c916ea2cbd37665e512219650c37dc17b9ef0c0␟15438307630389352:Toggle Calendar`;\n      }\n\n      let i18n_118;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the Decrement button of the Numeric filter.\n         * @meaning kendo.grid.filterNumericDecrement\n         */\n        const MSG_EXTERNAL_534533728304192410$$DIST_FESM2015_INDEX_JS_119 = goog.getMsg(\"Decrement\");\n        i18n_118 = MSG_EXTERNAL_534533728304192410$$DIST_FESM2015_INDEX_JS_119;\n      } else {\n        i18n_118 = $localize`:kendo.grid.filterNumericDecrement|The title of the Decrement button of the Numeric filter.␟7f991d698abebb2e50570f9aef14126ae931c513␟534533728304192410:Decrement`;\n      }\n\n      let i18n_120;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the Increment button of the Numeric filter.\n         * @meaning kendo.grid.filterNumericIncrement\n         */\n        const MSG_EXTERNAL_5462143714591662391$$DIST_FESM2015_INDEX_JS_121 = goog.getMsg(\"Increment\");\n        i18n_120 = MSG_EXTERNAL_5462143714591662391$$DIST_FESM2015_INDEX_JS_121;\n      } else {\n        i18n_120 = $localize`:kendo.grid.filterNumericIncrement|The title of the Increment button of the Numeric filter.␟25bc8b86968819d3f687aa6dde652800bd4b6b2a␟5462143714591662391:Increment`;\n      }\n\n      let i18n_122;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The labels of the checkbox column checkboxes.\n         * @meaning kendo.grid.selectionCheckboxLabel\n         */\n        const MSG_EXTERNAL_8181603152758207780$$DIST_FESM2015_INDEX_JS_123 = goog.getMsg(\"Select Row\");\n        i18n_122 = MSG_EXTERNAL_8181603152758207780$$DIST_FESM2015_INDEX_JS_123;\n      } else {\n        i18n_122 = $localize`:kendo.grid.selectionCheckboxLabel|The labels of the checkbox column checkboxes.␟be92546944c9cb75e92f8b968456d82a101fc35b␟8181603152758207780:Select Row`;\n      }\n\n      let i18n_124;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label of the checkbox column select all checkbox.\n         * @meaning kendo.grid.selectAllCheckboxLabel\n         */\n        const MSG_EXTERNAL_6136285170059274319$$DIST_FESM2015_INDEX_JS_125 = goog.getMsg(\"Select All Rows\");\n        i18n_124 = MSG_EXTERNAL_6136285170059274319$$DIST_FESM2015_INDEX_JS_125;\n      } else {\n        i18n_124 = $localize`:kendo.grid.selectAllCheckboxLabel|The label of the checkbox column select all checkbox.␟20fbea69eff950cbfcf690203ca6104e8346fa48␟6136285170059274319:Select All Rows`;\n      }\n\n      let i18n_126;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label for the Grid pager\n         * @meaning kendo.grid.pagerLabel\n         */\n        const MSG_EXTERNAL_941504587982751782$$DIST_FESM2015_INDEX_JS_127 = goog.getMsg(\"{$interpolation}\", {\n          \"interpolation\": \"\\uFFFD0\\uFFFD\"\n        });\n        i18n_126 = MSG_EXTERNAL_941504587982751782$$DIST_FESM2015_INDEX_JS_127;\n      } else {\n        i18n_126 = $localize`:kendo.grid.pagerLabel|The label for the Grid pager␟03a0df03d11d80b3aeca50cf4827096a51a853fc␟941504587982751782:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n      }\n\n      let i18n_128;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label of the filter row and menu inputs\n         * @meaning kendo.grid.filterInputLabel\n         */\n        const MSG_EXTERNAL_3836147469421132954$$DIST_FESM2015_INDEX_JS_129 = goog.getMsg(\"{$interpolation}\", {\n          \"interpolation\": \"\\uFFFD0\\uFFFD\"\n        });\n        i18n_128 = MSG_EXTERNAL_3836147469421132954$$DIST_FESM2015_INDEX_JS_129;\n      } else {\n        i18n_128 = $localize`:kendo.grid.filterInputLabel|The label of the filter row and menu inputs␟491dbf44b1ca040395b94229d00d4109af48e64c␟3836147469421132954:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n      }\n\n      let i18n_130;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the filter menu icon\n         * @meaning kendo.grid.filterMenuTitle\n         */\n        const MSG_EXTERNAL_7968307322474586314$$DIST_FESM2015_INDEX_JS_131 = goog.getMsg(\"{$interpolation}\", {\n          \"interpolation\": \"\\uFFFD0\\uFFFD\"\n        });\n        i18n_130 = MSG_EXTERNAL_7968307322474586314$$DIST_FESM2015_INDEX_JS_131;\n      } else {\n        i18n_130 = $localize`:kendo.grid.filterMenuTitle|The title of the filter menu icon␟04e8a1bee6d2dd6edfc921e890fae44a01ceb18c␟7968307322474586314:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n      }\n\n      let i18n_132;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label of the filter menu operators dropdown\n         * @meaning kendo.grid.filterMenuOperatorsDropDownLabel\n         */\n        const MSG_EXTERNAL_1505989735336544615$$DIST_FESM2015_INDEX_JS_133 = goog.getMsg(\"{$interpolation}\", {\n          \"interpolation\": \"\\uFFFD0\\uFFFD\"\n        });\n        i18n_132 = MSG_EXTERNAL_1505989735336544615$$DIST_FESM2015_INDEX_JS_133;\n      } else {\n        i18n_132 = $localize`:kendo.grid.filterMenuOperatorsDropDownLabel|The label of the filter menu operators dropdown␟884eac0bb5b4a01ea36fea20ffa29c6dfe1987e0␟1505989735336544615:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n      }\n\n      let i18n_134;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The label of the filter menu logic dropdown\n         * @meaning kendo.grid.filterMenuLogicDropDownLabel\n         */\n        const MSG_EXTERNAL_7212349983175276206$$DIST_FESM2015_INDEX_JS_135 = goog.getMsg(\"{$interpolation}\", {\n          \"interpolation\": \"\\uFFFD0\\uFFFD\"\n        });\n        i18n_134 = MSG_EXTERNAL_7212349983175276206$$DIST_FESM2015_INDEX_JS_135;\n      } else {\n        i18n_134 = $localize`:kendo.grid.filterMenuLogicDropDownLabel|The label of the filter menu logic dropdown␟c9ba4917588987b943dc414dc6ca108392d8cb40␟7212349983175276206:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n      }\n\n      let i18n_136;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The title of the column menu icon\n         * @meaning kendo.grid.columnMenu\n         */\n        const MSG_EXTERNAL_8738132440639204439$$DIST_FESM2015_INDEX_JS_137 = goog.getMsg(\"{$interpolation}\", {\n          \"interpolation\": \"\\uFFFD0\\uFFFD\"\n        });\n        i18n_136 = MSG_EXTERNAL_8738132440639204439$$DIST_FESM2015_INDEX_JS_137;\n      } else {\n        i18n_136 = $localize`:kendo.grid.columnMenu|The title of the column menu icon␟28d8b294e285a6c34641eb1c7982870b412ef106␟8738132440639204439:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n      }\n\n      return [[\"kendoGridLocalizedMessages\", \"\", \"groupPanelEmpty\", i18n_4, \"noRecords\", i18n_6, \"pagerFirstPage\", i18n_8, \"pagerPreviousPage\", i18n_10, \"pagerNextPage\", i18n_12, \"pagerLastPage\", i18n_14, \"pagerPage\", i18n_16, \"pagerOf\", i18n_18, \"pagerItems\", i18n_20, \"pagerPageNumberInputTitle\", i18n_22, \"pagerItemsPerPage\", i18n_24, \"filter\", i18n_26, \"filterEqOperator\", i18n_28, \"filterNotEqOperator\", i18n_30, \"filterIsNullOperator\", i18n_32, \"filterIsNotNullOperator\", i18n_34, \"filterIsEmptyOperator\", i18n_36, \"filterIsNotEmptyOperator\", i18n_38, \"filterStartsWithOperator\", i18n_40, \"filterContainsOperator\", i18n_42, \"filterNotContainsOperator\", i18n_44, \"filterEndsWithOperator\", i18n_46, \"filterGteOperator\", i18n_48, \"filterGtOperator\", i18n_50, \"filterLteOperator\", i18n_52, \"filterLtOperator\", i18n_54, \"filterIsTrue\", i18n_56, \"filterIsFalse\", i18n_58, \"filterBooleanAll\", i18n_60, \"filterAfterOrEqualOperator\", i18n_62, \"filterAfterOperator\", i18n_64, \"filterBeforeOperator\", i18n_66, \"filterBeforeOrEqualOperator\", i18n_68, \"filterFilterButton\", i18n_70, \"filterClearButton\", i18n_72, \"filterAndLogic\", i18n_74, \"filterOrLogic\", i18n_76, \"loading\", i18n_78, \"gridLabel\", i18n_80, \"columns\", i18n_82, \"lock\", i18n_84, \"unlock\", i18n_86, \"setColumnPosition\", i18n_88, \"stick\", i18n_90, \"unstick\", i18n_92, \"sortable\", i18n_94, \"sortAscending\", i18n_96, \"sortDescending\", i18n_98, \"sortedAscending\", i18n_100, \"sortedDescending\", i18n_102, \"sortedDefault\", i18n_104, \"columnsApply\", i18n_106, \"columnsReset\", i18n_108, \"detailExpand\", i18n_110, \"detailCollapse\", i18n_112, \"filterDateToday\", i18n_114, \"filterDateToggle\", i18n_116, \"filterNumericDecrement\", i18n_118, \"filterNumericIncrement\", i18n_120, \"selectionCheckboxLabel\", i18n_122, \"selectAllCheckboxLabel\", i18n_124, 6, \"pagerLabel\", \"filterInputLabel\", \"filterMenuTitle\", \"filterMenuOperatorsDropDownLabel\", \"filterMenuLogicDropDownLabel\", \"columnMenu\"], [\"pagerLabel\", i18n_126, \"filterInputLabel\", i18n_128, \"filterMenuTitle\", i18n_130, \"filterMenuOperatorsDropDownLabel\", i18n_132, \"filterMenuLogicDropDownLabel\", i18n_134, \"columnMenu\", i18n_136], [\"class\", \"k-toolbar k-grid-toolbar\", \"position\", \"top\", 4, \"ngIf\"], [\"class\", \"k-grid-pager-top\", 3, \"tabindex\", \"template\", \"pageSize\", \"total\", \"skip\", \"options\", \"pageChange\", 4, \"ngIf\"], [3, \"text\", \"groups\", \"change\", 4, \"ngIf\"], [\"role\", \"grid\", 1, \"k-grid-aria-root\"], [\"ariaRoot\", \"\"], [3, \"ngIf\"], [3, \"tabindex\", \"template\", \"pageSize\", \"total\", \"skip\", \"options\", \"pageChange\", 4, \"ngIf\"], [\"class\", \"k-toolbar k-grid-toolbar k-grid-toolbar-bottom\", \"position\", \"bottom\", 4, \"ngIf\"], [\"position\", \"top\", 1, \"k-toolbar\", \"k-grid-toolbar\"], [1, \"k-grid-pager-top\", 3, \"tabindex\", \"template\", \"pageSize\", \"total\", \"skip\", \"options\", \"pageChange\"], [3, \"text\", \"groups\", \"change\"], [\"class\", \"k-grid-header\", \"role\", \"presentation\", 3, \"padding\", 4, \"ngIf\"], [\"kendoDraggable\", \"\", \"kendoGridSelectionMarquee\", \"\", 3, \"data\", \"rowHeight\", \"detailRowHeight\", \"total\", \"take\", \"groups\", \"groupable\", \"skip\", \"trackBy\", \"columns\", \"selectable\", \"filterable\", \"detailTemplate\", \"noRecordsTemplate\", \"rowClass\", \"rowSticky\", \"loading\", \"isVirtual\", \"loadingTemplate\", \"virtualColumns\", \"enableDrag\", \"pageChange\", \"scrollBottom\", \"contentScroll\"], [\"class\", \"k-grid-footer\", 3, \"padding\", 4, \"ngIf\"], [\"role\", \"presentation\", 1, \"k-grid-header\"], [\"role\", \"presentation\", \"class\", \"k-grid-header-locked\", 3, \"width\", 4, \"ngIf\"], [\"role\", \"presentation\", \"data-scrollable\", \"\", 1, \"k-grid-header-wrap\", 3, \"kendoGridResizableContainer\", \"lockedWidth\"], [\"header\", \"\"], [\"role\", \"presentation\", 3, \"virtualColumns\"], [\"kendoGridColGroup\", \"\", \"role\", \"presentation\", 3, \"columns\", \"groups\", \"detailTemplate\"], [\"kendoGridHeader\", \"\", \"role\", \"presentation\", 3, \"resizable\", \"scrollable\", \"columns\", \"totalColumnLevels\", \"sort\", \"filter\", \"filterable\", \"groupable\", \"reorderable\", \"groups\", \"sortable\", \"columnMenu\", \"columnMenuTemplate\", \"lockedColumnsCount\", \"totalColumnsCount\", \"detailTemplate\", \"tabIndex\"], [\"class\", \"k-width-container\", \"role\", \"presentation\", 4, \"ngIf\"], [\"role\", \"presentation\", 1, \"k-grid-header-locked\"], [\"lockedHeader\", \"\"], [\"role\", \"presentation\", 3, \"locked\"], [\"kendoGridHeader\", \"\", 3, \"resizable\", \"scrollable\", \"columns\", \"totalColumnLevels\", \"sort\", \"groups\", \"filter\", \"filterable\", \"groupable\", \"reorderable\", \"sortable\", \"columnMenu\", \"columnMenuTemplate\", \"totalColumnsCount\", \"detailTemplate\", \"tabIndex\"], [\"role\", \"presentation\", 1, \"k-width-container\"], [1, \"k-grid-footer\"], [\"class\", \"k-grid-footer-locked\", 3, \"width\", 4, \"ngIf\"], [\"data-scrollable\", \"\", 1, \"k-grid-footer-wrap\", 3, \"kendoGridResizableContainer\", \"lockedWidth\"], [\"footer\", \"\"], [\"role\", \"presentation\"], [\"kendoGridColGroup\", \"\", 3, \"columns\", \"groups\", \"detailTemplate\"], [\"kendoGridFooter\", \"\", 3, \"logicalRowIndex\", \"scrollable\", \"groups\", \"columns\", \"lockedColumnsCount\", \"detailTemplate\"], [1, \"k-grid-footer-locked\"], [\"kendoGridFooter\", \"\", 3, \"scrollable\", \"groups\", \"columns\", \"detailTemplate\", \"logicalRowIndex\"], [\"kendoGridHeader\", \"\", 3, \"resizable\", \"scrollable\", \"columns\", \"totalColumnLevels\", \"groups\", \"groupable\", \"reorderable\", \"sort\", \"sortable\", \"filter\", \"filterable\", \"columnMenu\", \"columnMenuTemplate\", \"detailTemplate\", \"tabIndex\", 4, \"ngIf\"], [\"kendoGridTableBody\", \"\", \"kendoDraggable\", \"\", \"kendoGridSelectionMarquee\", \"\", 3, \"isLoading\", \"groups\", \"data\", \"skip\", \"columns\", \"selectable\", \"filterable\", \"noRecordsTemplate\", \"detailTemplate\", \"showGroupFooters\", \"trackBy\", \"rowClass\", \"enableDrag\"], [\"kendoGridFooter\", \"\", 3, \"scrollable\", \"logicalRowIndex\", \"groups\", \"columns\", \"detailTemplate\", 4, \"ngIf\"], [\"kendoGridLoading\", \"\", 4, \"ngIf\"], [\"kendoGridHeader\", \"\", 3, \"resizable\", \"scrollable\", \"columns\", \"totalColumnLevels\", \"groups\", \"groupable\", \"reorderable\", \"sort\", \"sortable\", \"filter\", \"filterable\", \"columnMenu\", \"columnMenuTemplate\", \"detailTemplate\", \"tabIndex\"], [\"kendoGridFooter\", \"\", 3, \"scrollable\", \"logicalRowIndex\", \"groups\", \"columns\", \"detailTemplate\"], [\"kendoGridLoading\", \"\"], [3, \"tabindex\", \"template\", \"pageSize\", \"total\", \"skip\", \"options\", \"pageChange\"], [\"position\", \"bottom\", 1, \"k-toolbar\", \"k-grid-toolbar\", \"k-grid-toolbar-bottom\"]];\n    },\n    template: function GridComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵi18nAttributes(1, 1);\n        ɵngcc0.ɵɵelementContainerEnd();\n        ɵngcc0.ɵɵtemplate(2, GridComponent_kendo_grid_toolbar_2_Template, 1, 0, \"kendo-grid-toolbar\", 2);\n        ɵngcc0.ɵɵtemplate(3, GridComponent_kendo_pager_3_Template, 1, 7, \"kendo-pager\", 3);\n        ɵngcc0.ɵɵtemplate(4, GridComponent_kendo_grid_group_panel_4_Template, 1, 2, \"kendo-grid-group-panel\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵtemplate(7, GridComponent_ng_template_7_Template, 3, 23, \"ng-template\", 7);\n        ɵngcc0.ɵɵtemplate(8, GridComponent_ng_template_8_Template, 6, 21, \"ng-template\", 7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(9, GridComponent_kendo_pager_9_Template, 1, 7, \"kendo-pager\", 8);\n        ɵngcc0.ɵɵtemplate(10, GridComponent_kendo_grid_toolbar_10_Template, 1, 0, \"kendo-grid-toolbar\", 9);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵi18nExp(\"Page navigation, page {currentPage} of {totalPages}\")(\"{columnName} Filter\")(\"{columnName} Filter Menu\")(\"{columnName} Filter Operators\")(\"{columnName} Filter Logic\")(\"{columnName} Column Menu\");\n        ɵngcc0.ɵɵi18nApply(1);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showTopToolbar);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showTopPager);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showGroupPanel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-rowcount\", ctx.ariaRowCount)(\"aria-colcount\", ctx.ariaColCount);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isScrollable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isScrollable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showBottomPager);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showBottomToolbar);\n      }\n    },\n    directives: function () {\n      return [LocalizedMessagesDirective, ɵngcc5.NgIf, ToolbarComponent, PagerComponent, GroupPanelComponent, ListComponent, ɵngcc2.DraggableDirective, GridMarqueeDirective, ResizableContainerDirective, TableDirective, ColGroupComponent, HeaderComponent, FooterComponent, TableBodyComponent, LoadingComponent];\n    },\n    styles: [\"   .k-grid .k-grid-aria-root {\\n            display: flex;\\n            flex-direction: column;\\n            flex: 1 1 auto;\\n            overflow: hidden;\\n        }\\n\\n        .k-grid .k-filter-row td {\\n            white-space: nowrap;\\n        }\"],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], GridComponent.prototype, \"data\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], GridComponent.prototype, \"pageSize\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], GridComponent.prototype, \"height\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], GridComponent.prototype, \"rowHeight\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], GridComponent.prototype, \"detailRowHeight\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], GridComponent.prototype, \"skip\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], GridComponent.prototype, \"scrollable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], GridComponent.prototype, \"selectable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], GridComponent.prototype, \"sort\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Function)], GridComponent.prototype, \"trackBy\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], GridComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], GridComponent.prototype, \"group\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], GridComponent.prototype, \"virtualColumns\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], GridComponent.prototype, \"filterable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], GridComponent.prototype, \"sortable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], GridComponent.prototype, \"pageable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], GridComponent.prototype, \"groupable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], GridComponent.prototype, \"navigable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], GridComponent.prototype, \"navigatable\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], GridComponent.prototype, \"autoSize\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Function])], GridComponent.prototype, \"rowClass\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Function])], GridComponent.prototype, \"rowSticky\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Function])], GridComponent.prototype, \"rowSelected\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Function])], GridComponent.prototype, \"cellSelected\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], GridComponent.prototype, \"resizable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], GridComponent.prototype, \"reorderable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], GridComponent.prototype, \"loading\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], GridComponent.prototype, \"columnMenu\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], GridComponent.prototype, \"hideHeader\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"filterChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"pageChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"groupChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"sortChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"selectionChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"dataStateChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"groupExpand\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"groupCollapse\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"detailExpand\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"detailCollapse\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"edit\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"cancel\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"save\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"remove\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"add\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"cellClose\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"cellClick\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"pdfExport\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"excelExport\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"columnResize\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"columnReorder\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"columnVisibilityChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"columnLockedChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"columnStickyChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"scrollBottom\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GridComponent.prototype, \"contentScroll\", void 0);\n\n  __decorate([ContentChildren(ColumnBase$1), __metadata(\"design:type\", QueryList)], GridComponent.prototype, \"columns\", void 0);\n\n  __decorate([HostBinding('attr.dir'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], GridComponent.prototype, \"dir\", null);\n\n  __decorate([HostBinding('class.k-widget'), HostBinding('class.k-grid'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], GridComponent.prototype, \"hostClasses\", null);\n\n  __decorate([HostBinding('class.k-grid-lockedcolumns'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], GridComponent.prototype, \"lockedClasses\", null);\n\n  __decorate([HostBinding('class.k-grid-virtual'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], GridComponent.prototype, \"virtualClasses\", null);\n\n  __decorate([HostBinding('class.k-grid-no-scrollbar'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], GridComponent.prototype, \"noScrollbarClass\", null);\n\n  __decorate([ContentChildren(DetailTemplateDirective), __metadata(\"design:type\", QueryList)], GridComponent.prototype, \"detailTemplateChildren\", void 0);\n\n  __decorate([ContentChildren(CellLoadingTemplateDirective), __metadata(\"design:type\", QueryList)], GridComponent.prototype, \"loadingTemplateChildren\", void 0);\n\n  __decorate([ContentChildren(NoRecordsTemplateDirective), __metadata(\"design:type\", QueryList)], GridComponent.prototype, \"noRecordsTemplateChildren\", void 0);\n\n  __decorate([ContentChildren(PagerTemplateDirective), __metadata(\"design:type\", QueryList)], GridComponent.prototype, \"pagerTemplateChildren\", void 0);\n\n  __decorate([ContentChildren(ToolbarTemplateDirective), __metadata(\"design:type\", QueryList)], GridComponent.prototype, \"toolbarTemplateChildren\", void 0);\n\n  __decorate([ContentChildren(ColumnMenuTemplateDirective), __metadata(\"design:type\", QueryList)], GridComponent.prototype, \"columnMenuTemplates\", void 0);\n\n  __decorate([ViewChild('lockedHeader', {\n    static: false\n  }), __metadata(\"design:type\", Object)], GridComponent.prototype, \"lockedHeader\", void 0);\n\n  __decorate([ViewChild('header', {\n    static: false\n  }), __metadata(\"design:type\", Object)], GridComponent.prototype, \"header\", void 0);\n\n  __decorate([ViewChildren('footer'), __metadata(\"design:type\", QueryList)], GridComponent.prototype, \"footer\", void 0);\n\n  __decorate([ViewChild('ariaRoot', {\n    static: true\n  }), __metadata(\"design:type\", ElementRef)], GridComponent.prototype, \"ariaRoot\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Function])], GridComponent.prototype, \"isDetailExpanded\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Function])], GridComponent.prototype, \"isGroupExpanded\", null);\n\n  GridComponent = __decorate([__metadata(\"design:paramtypes\", [BrowserSupportService, SelectionService, CellSelectionService, ElementRef, GroupInfoService, GroupsService, ChangeNotificationService, DetailsService, EditService, FilterService, PDFService, ResponsiveService, Renderer2, ExcelService, NgZone, ScrollSyncService, DomEventsService, ColumnResizingService, ChangeDetectorRef, ColumnReorderService, ColumnInfoService, NavigationService, SortService, ScrollRequestService, LocalizationService])], GridComponent);\n  /**\n   * @hidden\n   */\n\n  return GridComponent;\n})();\n\nconst update = (arr, idx, value) => [...arr.slice(0, idx + 1), ...arr.slice(idx + 1).map(x => x + value)];\n/**\n * @hidden\n */\n\n\nclass RowHeightService {\n  constructor(total = 0, rowHeight, detailRowHeight) {\n    this.total = total;\n    this.rowHeight = rowHeight;\n    this.detailRowHeight = detailRowHeight;\n    this.offsets = [];\n    this.heights = [];\n    let agg = 0;\n\n    for (let idx = 0; idx < total; idx++) {\n      this.offsets.push(agg);\n      agg += rowHeight;\n      this.heights.push(rowHeight);\n    }\n  }\n\n  height(rowIndex) {\n    return this.heights[rowIndex];\n  }\n\n  expandDetail(rowIndex) {\n    if (this.height(rowIndex) === this.rowHeight) {\n      this.updateRowHeight(rowIndex, this.detailRowHeight);\n    }\n  }\n\n  collapseDetail(rowIndex) {\n    if (this.height(rowIndex) > this.rowHeight) {\n      this.updateRowHeight(rowIndex, this.detailRowHeight * -1);\n    }\n  }\n\n  isExpanded(rowIndex) {\n    return this.height(rowIndex) > this.rowHeight;\n  }\n\n  index(position) {\n    if (position < 0) {\n      return undefined;\n    }\n\n    const result = this.offsets.reduce((prev, current, idx) => {\n      if (prev !== undefined) {\n        return prev;\n      } else if (current === position) {\n        return idx;\n      } else if (current > position) {\n        return idx - 1;\n      }\n\n      return undefined;\n    }, undefined); // tslint:disable-line:align\n\n    return result === undefined ? this.total - 1 : result;\n  }\n\n  offset(rowIndex) {\n    return this.offsets[rowIndex];\n  }\n\n  totalHeight() {\n    return this.heights.reduce((prev, curr) => prev + curr, 0);\n  }\n\n  updateRowHeight(rowIndex, value) {\n    if (this.total > 0) {\n      this.heights[rowIndex] += value;\n      this.offsets = update(this.offsets, rowIndex, value);\n    }\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass ScrollAction {\n  constructor(offset) {\n    this.offset = offset;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass PageAction {\n  constructor(skip, take$$1) {\n    this.skip = skip;\n    this.take = take$$1;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass ScrollBottomAction {}\n\nconst SCROLL_BOTTOM_THRESHOLD = 2;\n/**\n * @hidden\n */\n\nclass ScrollerService {\n  constructor(scrollObservable) {\n    this.scrollObservable = scrollObservable;\n    this.firstLoaded = 0;\n  }\n\n  create(rowHeightService, skip, take$$1, total) {\n    this.rowHeightService = rowHeightService;\n    this.firstLoaded = skip;\n    this.lastLoaded = skip + take$$1;\n    this.take = take$$1;\n    this.total = total;\n    this.lastScrollTop = 0;\n    const subject = new BehaviorSubject(new ScrollAction(this.rowHeightService.offset(skip)));\n    this.subscription = Observable.create(observer => {\n      this.unsubscribe();\n      this.scrollSubscription = this.scrollObservable.subscribe(x => this.onScroll(x, observer));\n    }).subscribe(x => subject.next(x));\n    return subject;\n  }\n\n  destroy() {\n    this.unsubscribe();\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  onScroll({\n    scrollTop,\n    offsetHeight,\n    scrollHeight,\n    clientHeight\n  }, observer) {\n    if (this.lastScrollTop === scrollTop) {\n      return;\n    }\n\n    const up = this.lastScrollTop >= scrollTop;\n    this.lastScrollTop = scrollTop;\n    let firstItemIndex = this.rowHeightService.index(scrollTop);\n    let firstItemOffset = this.rowHeightService.offset(firstItemIndex);\n    const lastItemIndex = this.rowHeightService.index(scrollTop + offsetHeight);\n\n    if (!up) {\n      if (lastItemIndex >= this.lastLoaded && this.lastLoaded < this.total) {\n        const overflow = firstItemIndex + this.take - this.total;\n\n        if (overflow > 0) {\n          firstItemIndex = firstItemIndex - overflow;\n          firstItemOffset = this.rowHeightService.offset(firstItemIndex);\n        }\n\n        this.firstLoaded = firstItemIndex;\n        observer.next(new ScrollAction(firstItemOffset));\n        let nextTake = this.firstLoaded + this.take;\n        this.lastLoaded = Math.min(nextTake, this.total);\n        nextTake = nextTake > this.total ? this.total - this.firstLoaded : this.take;\n        observer.next(new PageAction(this.firstLoaded, this.take));\n      } else {\n        const atBottom = scrollHeight - clientHeight - scrollTop < SCROLL_BOTTOM_THRESHOLD;\n\n        if (atBottom) {\n          observer.next(new ScrollBottomAction());\n        }\n      }\n    }\n\n    if (up && firstItemIndex < this.firstLoaded) {\n      const nonVisibleBuffer = Math.floor(this.take * 0.3);\n      this.firstLoaded = Math.max(firstItemIndex - nonVisibleBuffer, 0);\n      observer.next(new ScrollAction(this.rowHeightService.offset(this.firstLoaded)));\n      this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n      observer.next(new PageAction(this.firstLoaded, this.take));\n    }\n  }\n\n  unsubscribe() {\n    if (this.scrollSubscription) {\n      this.scrollSubscription.unsubscribe();\n      this.scrollSubscription = undefined;\n    }\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst NON_DATA_CELL_CLASSES = 'k-hierarchy-cell k-detail-cell k-group-cell';\n/**\n * @hidden\n */\n\nconst NON_DATA_ROW_CLASSES = 'k-grouping-row k-group-footer k-detail-row k-grid-norecords';\n/**\n * @hidden\n */\n\nconst IGNORE_TARGET_CLASSSES = 'k-icon';\n/**\n * @hidden\n */\n\nconst IGNORE_CONTAINER_CLASSES = 'k-widget k-grid-ignore-click';\n\nconst elementAt = (index, elements, elementOffset) => {\n  for (let idx = 0, elementIdx = 0; idx < elements.length; idx++) {\n    const offset = elementOffset(elements[idx]);\n\n    if (elementIdx <= index && index <= elementIdx + offset - 1) {\n      return elements[idx];\n    }\n\n    elementIdx += offset;\n  }\n};\n\nconst rowAt = (index, rows) => elementAt(index, rows, row => row.hasAttribute('data-kendo-grid-item-index') ? 1 : 0);\n\nconst cellAt = (index, cells) => elementAt(index, cells, cell => !hasClasses(cell, NON_DATA_CELL_CLASSES) ? parseInt(cell.getAttribute('colSpan'), 10) || 1 : 0);\n\nconst EMPTY_OBJECT = {};\n/**\n * @hidden\n */\n\nconst SCROLLER_FACTORY_TOKEN = new InjectionToken('grid-scroll-service-factory');\n/**\n * @hidden\n */\n\nfunction DEFAULT_SCROLLER_FACTORY(observable) {\n  return new ScrollerService(observable);\n}\n\nconst wheelDeltaY = e => {\n  const deltaY = e.wheelDeltaY;\n\n  if (e.wheelDelta && (deltaY === undefined || deltaY)) {\n    return e.wheelDelta;\n  } else if (e.detail && e.axis === e.VERTICAL_AXIS) {\n    return -e.detail * 10;\n  }\n\n  return 0;\n};\n\nconst preventLockedScroll = (args, element) => {\n  const delta = wheelDeltaY(args);\n  const scrollTop = element.scrollTop;\n  const allowScroll = scrollTop === 0 && 0 < delta || element.scrollHeight <= element.offsetHeight + scrollTop && delta < 0;\n\n  if (!allowScroll) {\n    event.preventDefault();\n  }\n};\n\nconst translateY = (renderer, value) => el => renderer.setStyle(el, \"transform\", `translateY(${value}px)`);\n\nconst maybeNativeElement = el => el ? el.nativeElement : null;\n\nconst hasScrollbar = (el, parent) => el.nativeElement.offsetWidth > parent.nativeElement.clientWidth;\n\nconst setHeight$1 = renderer => ({\n  el,\n  height\n}) => renderer.setStyle(el, \"height\", `${height}px`);\n\nconst bufferSize = 1;\n/**\n * @hidden\n */\n\nlet ListComponent = /*#__PURE__*/(() => {\n  let ListComponent = class ListComponent {\n    constructor(scrollerFactory, detailsService, changeNotification, suspendService, groupsService, ngZone, renderer, scrollSyncService, resizeService, editService, supportService, navigationService, scrollRequestService, localization, columnResizingService, changeDetector, pdfService, columnInfo) {\n      this.changeNotification = changeNotification;\n      this.suspendService = suspendService;\n      this.groupsService = groupsService;\n      this.ngZone = ngZone;\n      this.renderer = renderer;\n      this.scrollSyncService = scrollSyncService;\n      this.resizeService = resizeService;\n      this.editService = editService;\n      this.supportService = supportService;\n      this.navigationService = navigationService;\n      this.localization = localization;\n      this.columnResizingService = columnResizingService;\n      this.changeDetector = changeDetector;\n      this.pdfService = pdfService;\n      this.columnInfo = columnInfo;\n      this.groups = [];\n      this.skip = 0;\n      this.columns = new ColumnsContainer(() => []);\n      this.selectable = false;\n      this.groupable = false;\n      this.trackBy = defaultTrackBy;\n      this.contentScroll = new EventEmitter();\n      this.pageChange = new EventEmitter();\n      this.scrollBottom = new EventEmitter();\n      this.columnsStartIdx = 0;\n      this.resizeSensors = new QueryList();\n      this.dispatcher = new Subject();\n      this.containerScrollTop = 0;\n      this.scrollLeft = 0;\n      this.rtl = false;\n      this.scroller = scrollerFactory(this.dispatcher);\n      this.subscriptions = detailsService.changes.subscribe(x => this.detailExpand(x)).add(scrollRequestService.requests.subscribe(x => this.scrollTo(x)));\n    }\n\n    get hostClass() {\n      return true;\n    }\n\n    get hostRole() {\n      return 'presentation';\n    }\n\n    get showFooter() {\n      return this.groupable && this.groupable.showFooter;\n    }\n\n    get totalWidth() {\n      if (this.virtualColumns && this.columns.unlockedWidth) {\n        return this.columns.unlockedWidth;\n      }\n    }\n\n    get lockedLeafColumns() {\n      return this.columns.lockedLeafColumns;\n    }\n\n    get nonLockedLeafColumns() {\n      return this.columns.nonLockedLeafColumns;\n    }\n\n    get nonLockedColumnsToRender() {\n      if (this.virtualColumns && !this.pdfService.exporting) {\n        return this.viewportColumns;\n      }\n\n      return this.nonLockedLeafColumns;\n    }\n\n    get leafColumns() {\n      return this.columns.leafColumnsToRender;\n    }\n\n    get lockedWidth() {\n      const groupCellsWidth = this.groups.length * GROUP_CELL_WIDTH;\n      return expandColumns(this.lockedLeafColumns.toArray()).reduce((prev, curr) => prev + (curr.width || 0), groupCellsWidth);\n    }\n\n    get nonLockedWidth() {\n      if (!this.rtl && this.lockedLeafColumns.length || this.virtualColumns) {\n        return sumColumnWidths(expandColumns(this.nonLockedColumnsToRender.toArray()));\n      }\n\n      return undefined;\n    }\n\n    get isLocked() {\n      return this.lockedLeafColumns.length > 0;\n    }\n\n    ngOnInit() {\n      this.init();\n      this.subscriptions.add(this.ngZone.runOutsideAngular(this.handleRowSync.bind(this)));\n      this.subscriptions.add(this.ngZone.runOutsideAngular(this.handleRowNavigationLocked.bind(this)));\n      this.subscriptions.add(merge(this.columns.changes, this.resizeService.changes).subscribe(() => {\n        if (this.virtualColumns) {\n          this.ngZone.run(() => {\n            this.updateViewportColumns();\n            this.changeDetector.markForCheck();\n          });\n        }\n      }));\n      this.subscriptions.add(this.localization.changes.subscribe(({\n        rtl\n      }) => this.rtl = rtl));\n    }\n\n    ngOnChanges(changes) {\n      const hasInitialSkip = changes.skip && changes.skip.firstChange && changes.skip.currentValue > 0;\n\n      if (hasInitialSkip) {\n        this.handleInitialScrollToSkip();\n      }\n\n      if (isChanged(\"skip\", changes) && !this.rebind) {\n        this.skipScroll = true;\n        this.container.nativeElement.scrollTop = this.rowHeightService.offset(this.skip);\n      }\n\n      if (anyChanged([\"total\", \"take\"], changes)) {\n        this.init();\n      }\n\n      this.rebind = false;\n    }\n\n    ngDoCheck() {\n      if (this.virtualColumns && (!this.viewportColumns || this.viewportWidthChange())) {\n        this.updateViewportColumns();\n      }\n    }\n\n    ngAfterViewInit() {\n      if (this.skip && this.isVirtual) {\n        this.container.nativeElement.scrollTop = this.rowHeightService.offset(this.skip);\n      }\n\n      this.resetNavigationViewport();\n      this.attachContainerScroll();\n      this.initResizeService();\n    }\n\n    ngAfterViewChecked() {\n      const isLocked = this.isLocked;\n\n      if (isLocked && !this.hasLockedContainer) {\n        this.syncRowsHeight();\n      }\n\n      this.hasLockedContainer = isLocked;\n    }\n\n    syncRowsHeight() {\n      if (this.lockedContainer) {\n        syncRowsHeight(this.lockedTable.nativeElement, this.table.nativeElement);\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n\n      if (this.resizeService) {\n        this.resizeService.destroy();\n      }\n\n      this.cleanupScroller();\n    }\n\n    init() {\n      if (this.suspendService.scroll) {\n        return;\n      }\n\n      this.rowHeightService = new RowHeightService(this.total, this.rowHeight, this.detailRowHeight);\n      this.totalHeight = this.rowHeightService.totalHeight();\n\n      if (!isUniversal()) {\n        this.ngZone.runOutsideAngular(this.createScroller.bind(this));\n      }\n    }\n\n    lockedScroll() {\n      if (!this.suspendService.scroll) {\n        const lockedScrollTop = this.lockedContainer.nativeElement.scrollTop;\n\n        if (lockedScrollTop !== this.containerScrollTop) {\n          this.container.nativeElement.scrollTop = this.containerScrollTop = lockedScrollTop;\n        }\n      }\n    }\n\n    lockedMousewheel(args) {\n      if (!args.ctrlKey) {\n        preventLockedScroll(args, this.container.nativeElement);\n        const scrollDelta = wheelDeltaY(args);\n        this.container.nativeElement.scrollTop -= scrollDelta;\n      }\n    }\n\n    lockedKeydown(args) {\n      if (args.keyCode === Keys.PageDown || args.keyCode === Keys.PageUp) {\n        const dir = args.keyCode === Keys.PageDown ? 1 : -1;\n        const element = this.container.nativeElement;\n        element.scrollTop += element.offsetHeight * dir * 0.8;\n        args.preventDefault();\n      }\n    }\n\n    detailExpand({\n      index,\n      expand\n    }) {\n      if (expand) {\n        this.rowHeightService.expandDetail(index);\n      } else {\n        this.rowHeightService.collapseDetail(index);\n      }\n\n      this.totalHeight = this.rowHeightService.totalHeight();\n      this.resetNavigationViewport();\n    }\n\n    attachContainerScroll() {\n      if (isUniversal()) {\n        return;\n      }\n\n      this.ngZone.runOutsideAngular(() => {\n        this.subscriptions.add(fromEvent(this.container.nativeElement, 'scroll').pipe(map(event => event.target), filter(() => !this.suspendService.scroll), tap(target => {\n          this.onContainerScroll(target);\n          this.resetNavigationViewport();\n\n          if (this.virtualColumns) {\n            this.handleColumnScroll();\n          }\n\n          const rowViewport = this.navigationService.viewport || EMPTY_OBJECT;\n          const columnViewport = this.navigationService.columnViewport || EMPTY_OBJECT;\n          this.contentScroll.emit({\n            scrollLeft: target.scrollLeft,\n            scrollTop: target.scrollTop,\n            startRow: rowViewport.firstItemIndex,\n            endRow: rowViewport.lastItemIndex,\n            startColumn: columnViewport.firstItemIndex,\n            endColumn: columnViewport.lastItemIndex\n          });\n        })).subscribe(this.dispatcher));\n      });\n      this.scrollSyncService.registerEmitter(this.container.nativeElement, \"body\");\n    }\n\n    createScroller() {\n      this.cleanupScroller();\n      const observable = this.scroller.create(this.rowHeightService, this.skip, this.take, this.total);\n      this.skipScroll = false;\n      this.scrollerSubscription = observable.pipe(filter(x => x instanceof PageAction), filter(() => {\n        const temp = this.skipScroll;\n        this.skipScroll = false;\n        return !temp;\n      }), tap(() => this.rebind = true)).subscribe(x => this.ngZone.run(() => this.pageChange.emit(x)));\n      this.scrollerSubscription.add(observable.pipe(filter(x => x instanceof ScrollAction)).subscribe(this.scroll.bind(this)));\n      this.scrollerSubscription.add(observable.pipe(filter(x => x instanceof ScrollBottomAction)).subscribe(() => this.scrollBottom.emit()));\n    }\n\n    scroll({\n      offset = 0\n    }) {\n      if (this.isVirtual) {\n        [maybeNativeElement(this.table), maybeNativeElement(this.lockedTable)].filter(isPresent).forEach(translateY(this.renderer, offset));\n      }\n\n      this.resetNavigationViewport();\n    }\n\n    onContainerScroll({\n      scrollTop\n    }) {\n      this.containerScrollTop = scrollTop;\n\n      if (this.lockedContainer) {\n        this.lockedContainer.nativeElement.scrollTop = scrollTop;\n      }\n    }\n\n    handleInitialScrollToSkip() {\n      const shouldScroll = () => this.isVirtual && this.skip > 0 && this.total > 0;\n\n      const sub = this.changeNotification.changes.pipe(filter(shouldScroll)).subscribe(_ => {\n        this.scrollTo({\n          row: this.skip\n        });\n        sub.unsubscribe();\n      });\n    }\n\n    handleRowSync() {\n      const isLocked = () => isPresent(this.lockedContainer);\n\n      const onStable = () => this.ngZone.onStable.asObservable().pipe(take(1));\n\n      return merge(this.changeNotification.changes, this.groupsService.changes.pipe(filter(isLocked), switchMapTo(onStable())), this.editService.changed, this.resizeService.changes, this.columnResizingService.changes.pipe(filter(change => change.type === 'end')), this.supportService.changes).pipe(tap(() => this.resetNavigationViewport()), filter(isLocked)).subscribe(() => {\n        const scrollTop = this.container.nativeElement.scrollTop;\n        const scrollLeft = this.container.nativeElement.scrollLeft;\n        this.syncRowsHeight();\n        this.syncContainerHeight();\n        this.lockedContainer.nativeElement.scrollTop = this.container.nativeElement.scrollTop = scrollTop; // fixes scroll left position in IE when editing\n\n        this.container.nativeElement.scrollLeft = scrollLeft;\n        this.resizeSensors.forEach(sensor => sensor.acceptSize());\n      });\n    }\n\n    handleRowNavigationLocked() {\n      return this.navigationService.changes.pipe(filter(() => isPresent(this.lockedContainer)), delay(10)).subscribe(args => {\n        if (this.lockedLeafColumns.length <= args.prevColIndex && args.colIndex < this.lockedLeafColumns.length) {\n          const cell = this.navigationService.activeCell;\n\n          if (cell && cell.colIndex + cell.colSpan < args.prevColIndex) {\n            this.container.nativeElement.scrollLeft = 0;\n          }\n        }\n      });\n    }\n\n    scrollToVirtualRow(itemIndex) {\n      if (isPresent(this.detailTemplate)) {\n        itemIndex = Math.floor(itemIndex / 2);\n      }\n\n      const offset = this.rowHeightService.offset(itemIndex);\n      this.container.nativeElement.scrollTop = offset;\n      this.resetNavigationViewport();\n    }\n\n    scrollTo({\n      row,\n      column\n    }) {\n      if (isNumber(row)) {\n        if (this.isVirtual) {\n          this.scrollToVirtualRow(row);\n        } else {\n          const element = rowAt(row, this.table.nativeElement.rows);\n\n          if (element) {\n            this.container.nativeElement.scrollTop = element.offsetTop;\n          }\n        }\n      }\n\n      if (isNumber(column)) {\n        column -= this.lockedLeafColumns.length;\n\n        if (this.virtualColumns) {\n          const columns = this.columns.leafColumnsToRender;\n          let offset = 0;\n\n          for (let idx = 0; idx < column; idx++) {\n            offset += columns[idx].width || 0;\n          }\n\n          const startOffset = this.lockedLeafColumns.length ? 0 : this.groups.length * GROUP_CELL_WIDTH + (this.detailTemplate && column > 0 ? GROUP_CELL_WIDTH : 0);\n          this.container.nativeElement.scrollLeft = this.normalizeScrollLeft(offset + startOffset);\n        } else if (column === 0 && this.detailTemplate) {\n          this.container.nativeElement.scrollLeft = this.normalizeScrollLeft(0);\n        } else {\n          const firstRow = rowAt(0, this.table.nativeElement.rows);\n\n          if (firstRow) {\n            const element = cellAt(column, firstRow.cells);\n\n            if (element) {\n              this.container.nativeElement.scrollLeft = this.elementScrollLeft(element);\n            }\n          }\n        }\n      }\n    }\n\n    resetNavigationViewport() {\n      if (!this.container || !this.navigationService.enabled || !this.navigationService.needsViewport() || this.data.length === 0) {\n        return;\n      }\n\n      const {\n        scrollTop,\n        offsetHeight\n      } = this.container.nativeElement;\n      const scrollBottom = scrollTop + offsetHeight;\n      const firstItemIndex = this.rowHeightService.index(scrollTop);\n      let lastItemIndex = this.rowHeightService.index(scrollBottom);\n      const lastItemOffset = this.rowHeightService.offset(lastItemIndex);\n      const lastItemOverflows = lastItemOffset + this.rowHeight > scrollBottom;\n\n      if (lastItemIndex > 0 && lastItemOverflows) {\n        lastItemIndex--;\n      }\n\n      let viewportStart = firstItemIndex;\n      let viewportEnd = lastItemIndex;\n\n      if (isPresent(this.detailTemplate)) {\n        viewportStart *= 2;\n        viewportEnd *= 2;\n        const firstItemHeight = this.rowHeightService.offset(firstItemIndex);\n\n        if (firstItemHeight + this.rowHeight < scrollTop) {\n          viewportStart++;\n        }\n\n        const lastItemHeight = this.rowHeightService.height(lastItemIndex);\n        const lastItemExpanded = this.rowHeightService.isExpanded(lastItemIndex);\n        const lastItemDetailOverflows = lastItemOffset + lastItemHeight > scrollBottom;\n\n        if (lastItemExpanded && !lastItemDetailOverflows) {\n          viewportEnd++;\n        }\n      }\n\n      this.navigationService.setViewport(viewportStart, viewportEnd);\n    }\n\n    cleanupScroller() {\n      if (this.scrollerSubscription) {\n        this.scrollerSubscription.unsubscribe();\n      }\n\n      if (this.scroller) {\n        this.scroller.destroy();\n      }\n    }\n\n    initResizeService() {\n      this.resizeService.connect(merge(...this.resizeSensors.map(sensor => sensor.resize)));\n    }\n\n    syncContainerHeight() {\n      [maybeNativeElement(this.lockedContainer)].filter(isPresent).map(el => {\n        el.style.height = '';\n        let height = this.container.nativeElement.offsetHeight;\n\n        if (hasScrollbar(this.table, this.container)) {\n          height -= this.supportService.scrollbarWidth;\n        }\n\n        return {\n          el,\n          height\n        };\n      }).forEach(setHeight$1(this.renderer));\n    }\n\n    updateViewportColumns(range) {\n      const columns = this.columns.nonLockedLeafColumns.toArray();\n      let {\n        startIdx,\n        endIdx,\n        offset\n      } = range || this.calculateViewportColumns();\n      const start = Math.max(0, startIdx - bufferSize);\n      const end = Math.min(endIdx + bufferSize, columns.length - 1);\n\n      if (start < startIdx) {\n        for (let idx = startIdx - 1; idx >= start; idx--) {\n          offset -= columns[idx].width;\n        }\n      }\n\n      let currentColumns = columns.slice(start, end + 1);\n      this.viewportColumnsWidth = currentColumns.reduce((total, column) => total + column.width, 0);\n\n      if (start > 0) {\n        const offsetColumn = new ColumnBase$1();\n        offsetColumn.width = offset;\n        currentColumns.unshift(offsetColumn);\n      }\n\n      this.viewportColumns = new QueryList();\n      this.viewportColumns.reset(currentColumns);\n      this.columnsStartIdx = start;\n      this.columnsEndIdx = end;\n      this.columnInfo.columnRangeChange.emit({\n        start,\n        end,\n        offset\n      });\n\n      if (!range) {\n        this.updateColumnViewport(startIdx, endIdx);\n      }\n    }\n\n    handleColumnScroll() {\n      const container = this.container.nativeElement;\n      const scrollLeft = container.scrollLeft;\n\n      if (this.scrollLeft !== scrollLeft) {\n        this.scrollLeft = scrollLeft;\n        const range = this.calculateViewportColumns();\n        this.updateColumnViewport(range.startIdx, range.endIdx);\n\n        if (range.startIdx < this.columnsStartIdx || this.columnsEndIdx < range.endIdx) {\n          cancelAnimationFrame(this.columnUpdateFrame);\n          this.columnUpdateFrame = requestAnimationFrame(() => {\n            this.ngZone.run(() => {\n              this.updateViewportColumns(range);\n              this.changeDetector.markForCheck();\n            });\n          });\n        }\n      }\n    }\n\n    updateColumnViewport(startIdx, endIdx) {\n      const lockedCount = this.lockedLeafColumns.length;\n      const leafColumns$$1 = this.nonLockedLeafColumns.toArray();\n      const viewportStart = lockedCount + startIdx + (this.detailTemplate && startIdx > 0 ? 1 : 0);\n      let viewportEnd = lockedCount + endIdx + (this.detailTemplate ? 1 : 0);\n\n      for (let idx = 0; idx < leafColumns$$1.length; idx++) {\n        const column = leafColumns$$1[idx];\n\n        if (column.isSpanColumn) {\n          viewportEnd += column.childColumns.length;\n        }\n      }\n\n      this.navigationService.setColumnViewport(viewportStart, viewportEnd);\n    }\n\n    calculateViewportColumns() {\n      const {\n        scrollLeft,\n        clientWidth\n      } = this.container.nativeElement;\n      const columns = this.columns.nonLockedLeafColumns.toArray();\n      const normalizedScrollLeft = this.normalizeScrollLeft(scrollLeft);\n      const viewportEnd = normalizedScrollLeft + clientWidth;\n      let startIdx;\n      let endIdx = 0;\n      let current = 0;\n      let offset = 0;\n      let idx;\n\n      for (idx = 0; idx < columns.length; idx++) {\n        const column = columns[idx];\n        current += column.width || 0;\n\n        if (startIdx === undefined && current > normalizedScrollLeft) {\n          startIdx = idx;\n          offset = current - (column.width || 0);\n        }\n\n        if (current >= viewportEnd) {\n          endIdx = idx;\n          break;\n        }\n      }\n\n      if (!endIdx && idx > 0) {\n        endIdx = columns.length - 1;\n      }\n\n      return {\n        startIdx,\n        endIdx,\n        offset\n      };\n    }\n\n    viewportWidthChange() {\n      const currentWidth = this.viewportColumns.toArray().reduce((total, column) => total + column.width, 0);\n      return currentWidth !== this.viewportColumnsWidth;\n    }\n\n    normalizeScrollLeft(position) {\n      return this.rtl ? rtlScrollPosition(position, this.container.nativeElement, this.supportService.rtlScrollLeft) : position;\n    }\n\n    elementScrollLeft(element) {\n      if (this.rtl) {\n        return this.normalizeScrollLeft(this.container.nativeElement.scrollWidth - element.offsetLeft - element.offsetWidth);\n      }\n\n      return element.offsetLeft;\n    }\n\n  };\n\n  ListComponent.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)(ɵngcc0.ɵɵdirectiveInject(SCROLLER_FACTORY_TOKEN), ɵngcc0.ɵɵdirectiveInject(DetailsService), ɵngcc0.ɵɵdirectiveInject(ChangeNotificationService), ɵngcc0.ɵɵdirectiveInject(SuspendService), ɵngcc0.ɵɵdirectiveInject(GroupsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ScrollSyncService), ɵngcc0.ɵɵdirectiveInject(ResizeService), ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(BrowserSupportService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(ScrollRequestService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ColumnResizingService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PDFService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService));\n  };\n\n  ListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"kendo-grid-list\"]],\n    viewQuery: function ListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c139, 7);\n        ɵngcc0.ɵɵviewQuery(_c140, 5);\n        ɵngcc0.ɵɵviewQuery(_c141, 5);\n        ɵngcc0.ɵɵviewQuery(_c142, 7);\n        ɵngcc0.ɵɵviewQuery(ResizeSensorComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lockedContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lockedTable = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.table = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.resizeSensors = _t);\n      }\n    },\n    hostVars: 3,\n    hostBindings: function ListComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.hostRole);\n        ɵngcc0.ɵɵclassProp(\"k-grid-container\", ctx.hostClass);\n      }\n    },\n    inputs: {\n      groups: \"groups\",\n      skip: \"skip\",\n      columns: \"columns\",\n      selectable: \"selectable\",\n      groupable: \"groupable\",\n      trackBy: \"trackBy\",\n      data: \"data\",\n      total: \"total\",\n      rowHeight: \"rowHeight\",\n      stickyRowHeight: \"stickyRowHeight\",\n      detailRowHeight: \"detailRowHeight\",\n      take: \"take\",\n      detailTemplate: \"detailTemplate\",\n      noRecordsTemplate: \"noRecordsTemplate\",\n      filterable: \"filterable\",\n      rowClass: \"rowClass\",\n      rowSticky: \"rowSticky\",\n      loading: \"loading\",\n      virtualColumns: \"virtualColumns\",\n      isVirtual: \"isVirtual\",\n      loadingTemplate: \"loadingTemplate\"\n    },\n    outputs: {\n      contentScroll: \"contentScroll\",\n      pageChange: \"pageChange\",\n      scrollBottom: \"scrollBottom\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: SCROLLER_FACTORY_TOKEN,\n      useValue: DEFAULT_SCROLLER_FACTORY\n    }]), ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 14,\n    vars: 36,\n    consts: [[\"class\", \"k-grid-content-locked\", \"role\", \"presentation\", 3, \"width\", \"kendoEventsOutsideAngular\", \"scope\", 4, \"ngIf\"], [\"role\", \"presentation\", \"tabindex\", \"-1\", 1, \"k-grid-content\", \"k-virtual-content\", 3, \"kendoGridResizableContainer\", \"lockedWidth\"], [\"container\", \"\"], [\"role\", \"presentation\", 1, \"k-grid-table-wrap\"], [\"role\", \"presentation\", 1, \"k-grid-table\", 3, \"virtualColumns\"], [\"table\", \"\"], [\"kendoGridColGroup\", \"\", \"role\", \"presentation\", 3, \"groups\", \"columns\", \"detailTemplate\"], [\"kendoGridTableBody\", \"\", \"role\", \"presentation\", 3, \"skipGroupDecoration\", \"data\", \"groups\", \"showGroupFooters\", \"columns\", \"allColumns\", \"detailTemplate\", \"noRecordsTemplate\", \"lockedColumnsCount\", \"totalColumnsCount\", \"skip\", \"selectable\", \"trackBy\", \"filterable\", \"rowClass\", \"rowSticky\", \"virtualColumns\", \"isLoading\", \"isVirtual\", \"loadingTemplate\"], [4, \"ngIf\"], [\"role\", \"presentation\", 1, \"k-height-container\"], [\"class\", \"k-width-container\", \"role\", \"presentation\", 4, \"ngIf\"], [\"kendoGridLoading\", \"\", 4, \"ngIf\"], [\"role\", \"presentation\", 1, \"k-grid-content-locked\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [\"lockedContainer\", \"\"], [\"role\", \"presentation\", 1, \"k-grid-table\", 3, \"locked\"], [\"lockedTable\", \"\"], [\"kendoGridTableBody\", \"\", \"role\", \"presentation\", 3, \"groups\", \"isLocked\", \"data\", \"noRecordsText\", \"columns\", \"totalColumnsCount\", \"detailTemplate\", \"showGroupFooters\", \"skip\", \"selectable\", \"trackBy\", \"filterable\", \"rowClass\", \"isLoading\", \"isVirtual\", \"loadingTemplate\"], [\"role\", \"presentation\", 1, \"k-width-container\"], [\"kendoGridLoading\", \"\"]],\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ListComponent_div_0_Template, 10, 33, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"table\", 4, 5);\n        ɵngcc0.ɵɵelement(6, \"colgroup\", 6);\n        ɵngcc0.ɵɵelement(7, \"tbody\", 7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, ListComponent_kendo_resize_sensor_8_Template, 1, 0, \"kendo-resize-sensor\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(9, ListComponent_kendo_resize_sensor_9_Template, 1, 0, \"kendo-resize-sensor\", 8);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 9);\n        ɵngcc0.ɵɵelement(11, \"div\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(12, ListComponent_div_12_Template, 2, 2, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, ListComponent_div_13_Template, 1, 0, \"div\", 11);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isLocked);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"kendoGridResizableContainer\", ctx.lockedLeafColumns.length)(\"lockedWidth\", ctx.lockedWidth + 1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.nonLockedWidth, \"px\");\n        ɵngcc0.ɵɵproperty(\"virtualColumns\", ctx.virtualColumns);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"groups\", ctx.isLocked ? ɵngcc0.ɵɵpureFunction0(35, _c138) : ctx.groups)(\"columns\", ctx.nonLockedColumnsToRender)(\"detailTemplate\", ctx.detailTemplate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"skipGroupDecoration\", ctx.isLocked)(\"data\", ctx.data)(\"groups\", ctx.groups)(\"showGroupFooters\", ctx.showFooter)(\"columns\", ctx.nonLockedColumnsToRender)(\"allColumns\", ctx.nonLockedLeafColumns)(\"detailTemplate\", ctx.detailTemplate)(\"noRecordsTemplate\", ctx.noRecordsTemplate)(\"lockedColumnsCount\", ctx.lockedLeafColumns.length)(\"totalColumnsCount\", ctx.leafColumns.length)(\"skip\", ctx.skip)(\"selectable\", ctx.selectable)(\"trackBy\", ctx.trackBy)(\"filterable\", ctx.filterable)(\"rowClass\", ctx.rowClass)(\"rowSticky\", ctx.rowSticky)(\"virtualColumns\", ctx.virtualColumns)(\"isLoading\", ctx.loading)(\"isVirtual\", ctx.isVirtual)(\"loadingTemplate\", ctx.loadingTemplate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isLocked);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isLocked || ctx.virtualColumns);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx.totalHeight, \"px\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.virtualColumns);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    directives: function () {\n      return [ɵngcc5.NgIf, ResizableContainerDirective, TableDirective, ColGroupComponent, TableBodyComponent, ɵngcc2.EventsOutsideAngularDirective, ɵngcc2.ResizeSensorComponent, LoadingComponent];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding(\"class.k-grid-container\"), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ListComponent.prototype, \"hostClass\", null);\n\n  __decorate([HostBinding(\"attr.role\"), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], ListComponent.prototype, \"hostRole\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], ListComponent.prototype, \"data\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], ListComponent.prototype, \"groups\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], ListComponent.prototype, \"total\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], ListComponent.prototype, \"rowHeight\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], ListComponent.prototype, \"stickyRowHeight\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], ListComponent.prototype, \"detailRowHeight\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], ListComponent.prototype, \"take\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], ListComponent.prototype, \"skip\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnsContainer)], ListComponent.prototype, \"columns\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", DetailTemplateDirective)], ListComponent.prototype, \"detailTemplate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", NoRecordsTemplateDirective)], ListComponent.prototype, \"noRecordsTemplate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ListComponent.prototype, \"selectable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ListComponent.prototype, \"groupable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ListComponent.prototype, \"filterable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Function)], ListComponent.prototype, \"rowClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Function)], ListComponent.prototype, \"rowSticky\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ListComponent.prototype, \"loading\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Function)], ListComponent.prototype, \"trackBy\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ListComponent.prototype, \"virtualColumns\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ListComponent.prototype, \"isVirtual\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", TemplateRef)], ListComponent.prototype, \"loadingTemplate\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ListComponent.prototype, \"contentScroll\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ListComponent.prototype, \"pageChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ListComponent.prototype, \"scrollBottom\", void 0);\n\n  __decorate([ViewChild('container', {\n    static: true\n  }), __metadata(\"design:type\", ElementRef)], ListComponent.prototype, \"container\", void 0);\n\n  __decorate([ViewChild('lockedContainer', {\n    static: false\n  }), __metadata(\"design:type\", ElementRef)], ListComponent.prototype, \"lockedContainer\", void 0);\n\n  __decorate([ViewChild('lockedTable', {\n    static: false\n  }), __metadata(\"design:type\", ElementRef)], ListComponent.prototype, \"lockedTable\", void 0);\n\n  __decorate([ViewChild('table', {\n    static: true\n  }), __metadata(\"design:type\", ElementRef)], ListComponent.prototype, \"table\", void 0);\n\n  __decorate([ViewChildren(ResizeSensorComponent), __metadata(\"design:type\", QueryList)], ListComponent.prototype, \"resizeSensors\", void 0);\n\n  ListComponent = __decorate([__param(0, Inject(SCROLLER_FACTORY_TOKEN)), __metadata(\"design:paramtypes\", [Object, DetailsService, ChangeNotificationService, SuspendService, GroupsService, NgZone, Renderer2, ScrollSyncService, ResizeService, EditService, BrowserSupportService, NavigationService, ScrollRequestService, LocalizationService, ColumnResizingService, ChangeDetectorRef, PDFService, ColumnInfoService])], ListComponent);\n  /**\n   * A directive which encapsulates the in-memory handling of data operations such as [paging]({% slug paging_grid %}),\n   * [sorting]({% slug sorting_grid %}), and [grouping]({% slug groupingbasics_grid %})\n   * ([more information and examples]({% slug automaticoperations_grid %})).\n   */\n\n  return ListComponent;\n})();\nlet DataBindingDirective = /*#__PURE__*/(() => {\n  let DataBindingDirective = class DataBindingDirective {\n    constructor(grid, changeDetector, localDataChangesService) {\n      this.grid = grid;\n      this.changeDetector = changeDetector;\n      this.localDataChangesService = localDataChangesService;\n      this.state = {\n        skip: 0\n      };\n      this.originalData = [];\n\n      if (localDataChangesService) {\n        this.dataChangedSubscription = this.localDataChangesService.changes.subscribe(this.rebind.bind(this));\n      }\n    }\n    /**\n     * Defines the number of records that will be skipped by the pager.\n     */\n\n\n    set skip(value) {\n      if (!isPresent(value)) {\n        value = 0;\n      }\n\n      this.grid.skip = this.state.skip = value;\n    }\n    /**\n     * Defines the descriptors by which the data will be sorted.\n     */\n\n\n    set sort(value) {\n      this.grid.sort = this.state.sort = value;\n    }\n    /**\n     * Defines the descriptor by which the data will be filtered.\n     */\n\n\n    set filter(value) {\n      this.grid.filter = this.state.filter = value;\n    }\n    /**\n     * Defines the page size used by the Grid pager.\n     */\n\n\n    set pageSize(value) {\n      this.grid.pageSize = this.state.take = value;\n    }\n    /**\n     * The descriptors by which the data will be grouped.\n     */\n\n\n    set group(value) {\n      this.grid.group = this.state.group = value;\n    }\n    /**\n     * The array of data which will be used to populate the Grid.\n     */\n\n\n    set data(value) {\n      this.originalData = value || [];\n\n      if (this.localDataChangesService) {\n        this.localDataChangesService.data = value;\n      }\n\n      this.dataChanged = true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnInit() {\n      this.applyState(this.state);\n      this.stateChangeSubscription = this.grid.dataStateChange.subscribe(this.onStateChange.bind(this));\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnDestroy() {\n      if (this.stateChangeSubscription) {\n        this.stateChangeSubscription.unsubscribe();\n      }\n\n      if (this.dataChangedSubscription) {\n        this.dataChangedSubscription.unsubscribe();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnChanges(changes) {\n      if (anyChanged([\"pageSize\", \"skip\", \"sort\", \"group\", \"filter\"], changes)) {\n        this.rebind();\n      }\n    }\n\n    ngDoCheck() {\n      if (this.dataChanged) {\n        this.updateGridData();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    onStateChange(state$$1) {\n      this.applyState(state$$1);\n      this.rebind();\n    }\n    /**\n     * @hidden\n     */\n\n\n    rebind() {\n      this.data = this.originalData;\n      this.updateGridData();\n      this.notifyDataChange();\n    }\n    /**\n     * Notifies the Grid that its data has changed.\n     */\n\n\n    notifyDataChange() {\n      this.grid.onDataChange();\n\n      if (this.changeDetector) {\n        this.changeDetector.markForCheck();\n      }\n    }\n\n    process(state$$1) {\n      return process(this.originalData, state$$1);\n    }\n\n    applyState({\n      skip,\n      take: take$$1,\n      sort,\n      group,\n      filter: filter$$1\n    }) {\n      this.skip = skip;\n      this.pageSize = take$$1;\n      this.sort = sort;\n      this.group = group;\n      this.filter = filter$$1;\n    }\n\n    updateGridData() {\n      this.grid.data = this.process(this.state);\n      this.dataChanged = false;\n    }\n\n  };\n\n  DataBindingDirective.ɵfac = function DataBindingDirective_Factory(t) {\n    return new (t || DataBindingDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(LocalDataChangesService));\n  };\n\n  DataBindingDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: DataBindingDirective,\n    selectors: [[\"\", \"kendoGridBinding\", \"\"]],\n    inputs: {\n      skip: \"skip\",\n      sort: \"sort\",\n      filter: \"filter\",\n      pageSize: \"pageSize\",\n      group: \"group\",\n      data: [\"kendoGridBinding\", \"data\"]\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DataBindingDirective.prototype, \"skip\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], DataBindingDirective.prototype, \"sort\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DataBindingDirective.prototype, \"filter\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DataBindingDirective.prototype, \"pageSize\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], DataBindingDirective.prototype, \"group\", null);\n\n  __decorate([Input(\"kendoGridBinding\"), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], DataBindingDirective.prototype, \"data\", null);\n\n  DataBindingDirective = __decorate([__metadata(\"design:paramtypes\", [GridComponent, ChangeDetectorRef, LocalDataChangesService])], DataBindingDirective);\n  /**\n   * A directive which stores the row selection state of the Grid in memory\n   * ([see example]({% slug selection_grid %}#toc-during-data-operations)).\n   */\n\n  return DataBindingDirective;\n})();\nlet SelectionDirective = /*#__PURE__*/(() => {\n  let SelectionDirective = class SelectionDirective extends Selection {\n    constructor(grid, cd) {\n      super(grid, cd);\n      this.grid = grid;\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnInit() {\n      if (this.grid.selectable === false) {\n        this.grid.selectable = true;\n      }\n\n      this.grid.selectionDirective = this;\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnDestroy() {\n      super.destroy();\n    }\n\n  };\n\n  SelectionDirective.ɵfac = function SelectionDirective_Factory(t) {\n    return new (t || SelectionDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  SelectionDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: SelectionDirective,\n    selectors: [[\"\", \"kendoGridSelectBy\", \"\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  SelectionDirective = __decorate([__metadata(\"design:paramtypes\", [GridComponent, ChangeDetectorRef])], SelectionDirective);\n  /**\n   * A directive which controls the expanded state of the master detail rows.\n   */\n\n  return SelectionDirective;\n})();\nlet ExpandDetailsDirective = /*#__PURE__*/(() => {\n  let ExpandDetailsDirective = class ExpandDetailsDirective {\n    constructor(grid) {\n      this.grid = grid;\n      /**\n       * Fires when the expandedDetailKeys are changed.\n       */\n\n      this.expandedDetailKeysChange = new EventEmitter();\n      /**\n       * Defines the collection that will store the expanded keys.\n       */\n\n      this.expandedDetailKeys = [];\n      /**\n       * Specifies if the items should be initially expanded.\n       * @default false\n       */\n\n      this.initiallyExpanded = false;\n      this.subscriptions = new Subscription();\n      this.grid.isDetailExpanded = this.isExpanded.bind(this);\n      this.subscriptions.add(merge(this.grid.detailExpand.pipe(map(e => Object.assign({\n        expand: true\n      }, e))), this.grid.detailCollapse.pipe(map(e => Object.assign({\n        expand: false\n      }, e)))).subscribe(this.toggleState.bind(this)));\n    }\n    /**\n     * Defines the item key that will be stored in the `expandedDetailKeys` collection ([see example]({% slug master_detail_expanded_state_grid %}#toc-built-in-directive)).\n     */\n\n\n    get expandDetailsKey() {\n      return this._expandBy;\n    }\n\n    set expandDetailsKey(key) {\n      if (isString(key)) {\n        this._expandBy = getter(key);\n      } else {\n        this._expandBy = key;\n      }\n    }\n    /**\n     *\n     * @hidden\n     * A deprecated alias for setting the `expandDetailsKey` property.\n     */\n\n\n    get expandDetailBy() {\n      return this.expandDetailsKey;\n    }\n\n    set expandDetailBy(key) {\n      this.expandDetailsKey = key;\n    }\n\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n\n    get keyGetter() {\n      return this._expandBy || getter(undefined);\n    }\n    /**\n     * @hidden\n     */\n\n\n    isExpanded(args) {\n      const key = this.keyGetter(args.dataItem);\n      return this.expandedDetailKeys.indexOf(key) > -1 ? !this.initiallyExpanded : this.initiallyExpanded;\n    }\n\n    toggleState(args) {\n      const key = this.keyGetter(args.dataItem);\n\n      if (Boolean(this.initiallyExpanded) !== args.expand) {\n        this.expandedDetailKeys.push(key);\n      } else {\n        const index = this.expandedDetailKeys.indexOf(key);\n        this.expandedDetailKeys.splice(index, 1);\n      }\n\n      this.expandedDetailKeysChange.emit(this.expandedDetailKeys);\n    }\n\n  };\n\n  ExpandDetailsDirective.ɵfac = function ExpandDetailsDirective_Factory(t) {\n    return new (t || ExpandDetailsDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent));\n  };\n\n  ExpandDetailsDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ExpandDetailsDirective,\n    selectors: [[\"\", \"kendoGridExpandDetailsBy\", \"\"]],\n    inputs: {\n      expandedDetailKeys: \"expandedDetailKeys\",\n      initiallyExpanded: \"initiallyExpanded\",\n      expandDetailsKey: [\"kendoGridExpandDetailsBy\", \"expandDetailsKey\"],\n      expandDetailBy: \"expandDetailBy\"\n    },\n    outputs: {\n      expandedDetailKeysChange: \"expandedDetailKeysChange\"\n    },\n    exportAs: [\"kendoGridExpandDetailsBy\"]\n  });\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ExpandDetailsDirective.prototype, \"expandedDetailKeysChange\", void 0);\n\n  __decorate([Input('kendoGridExpandDetailsBy'), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], ExpandDetailsDirective.prototype, \"expandDetailsKey\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], ExpandDetailsDirective.prototype, \"expandDetailBy\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], ExpandDetailsDirective.prototype, \"expandedDetailKeys\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ExpandDetailsDirective.prototype, \"initiallyExpanded\", void 0);\n\n  ExpandDetailsDirective = __decorate([__metadata(\"design:paramtypes\", [GridComponent])], ExpandDetailsDirective);\n  return ExpandDetailsDirective;\n})();\n\nconst mapParentGroup = parentGroup => {\n  const parentGroupKeys = [];\n\n  while (parentGroup) {\n    parentGroupKeys.push({\n      field: parentGroup.group.field,\n      value: parentGroup.group.value\n    });\n    parentGroup = parentGroup.parentGroup;\n  }\n\n  return parentGroupKeys;\n};\n\nconst DEFAULT_KEY_GETTER = groupRowArgs => ({\n  field: groupRowArgs.group.field,\n  value: groupRowArgs.group.value,\n  parentGroupKeys: mapParentGroup(groupRowArgs.parentGroup)\n});\n/**\n * A directive which controls the expanded state of the group rows\n * ([see example]({% slug groups_expanded_state_grid %}#toc-built-in-directive)).\n */\n\n\nlet ExpandGroupDirective = /*#__PURE__*/(() => {\n  let ExpandGroupDirective = class ExpandGroupDirective {\n    constructor(grid) {\n      this.grid = grid;\n      /**\n       * Fires when the expandedGroupKeys are changed.\n       */\n\n      this.expandedGroupKeysChange = new EventEmitter();\n      /**\n       * Specifies if the group items should be initially expanded.\n       * @default false\n       */\n\n      this.groupsInitiallyExpanded = false;\n      this.subscriptions = new Subscription();\n      this.grid.isGroupExpanded = this.isExpanded.bind(this);\n      this.subscriptions.add(merge(this.grid.groupExpand.pipe(map(e => Object.assign({\n        expand: true\n      }, e))), this.grid.groupCollapse.pipe(map(e => Object.assign({\n        expand: false\n      }, e)))).subscribe(this.toggleState.bind(this)));\n    }\n    /**\n     * Defines the item format that will be stored in the `expandedGroupKeys`\n     * ([see example]({% slug groups_expanded_state_grid %}#toc-custom-group-key-format)).\n     */\n\n\n    get expandGroupBy() {\n      return this._expandGroupBy;\n    }\n\n    set expandGroupBy(key) {\n      if (typeof key === 'function') {\n        this._expandGroupBy = key;\n      }\n    }\n    /**\n     * Defines the collection that will store the expanded group keys.\n     */\n\n\n    get expandedGroupKeys() {\n      return this._expandedGroupKeys;\n    }\n\n    set expandedGroupKeys(expandedGroups) {\n      this._expandedGroupKeys = (expandedGroups || []).slice();\n    }\n\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n\n    get keyGetter() {\n      return this.expandGroupBy || DEFAULT_KEY_GETTER;\n    }\n    /**\n     * @hidden\n     */\n\n\n    isExpanded(groupArgs) {\n      const itemIndex = this.getItemIndex(groupArgs);\n      return itemIndex > -1 ? !this.groupsInitiallyExpanded : this.groupsInitiallyExpanded;\n    }\n\n    getItemIndex(groupArgs) {\n      if (this.expandGroupBy) {\n        return this.expandedGroupKeys.indexOf(this.keyGetter(groupArgs));\n      }\n\n      return this.expandedGroupKeys.findIndex(item => {\n        let index = 0;\n        let parentGroup = groupArgs.parentGroup;\n\n        while (isPresent(parentGroup)) {\n          if (!isPresent(item.parentGroupKeys) || !isPresent(item.parentGroupKeys[index]) || parentGroup.group.value !== item.parentGroupKeys[index].value || parentGroup.group.field !== item.parentGroupKeys[index].field) {\n            return false;\n          }\n\n          parentGroup = parentGroup.parentGroup;\n          index++;\n        }\n\n        return item.value === groupArgs.group.value && item.field === groupArgs.group.field;\n      });\n    }\n\n    toggleState(groupArgs) {\n      const key = this.keyGetter(groupArgs);\n\n      if (Boolean(this.groupsInitiallyExpanded) !== groupArgs.expand) {\n        this.expandedGroupKeys.push(key);\n      } else {\n        const index = this.expandedGroupKeys.indexOf(key);\n        this.expandedGroupKeys.splice(index, 1);\n      }\n\n      this.expandedGroupKeysChange.emit(this.expandedGroupKeys.slice());\n    }\n\n  };\n\n  ExpandGroupDirective.ɵfac = function ExpandGroupDirective_Factory(t) {\n    return new (t || ExpandGroupDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent));\n  };\n\n  ExpandGroupDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ExpandGroupDirective,\n    selectors: [[\"\", \"kendoGridExpandGroupBy\", \"\"]],\n    inputs: {\n      groupsInitiallyExpanded: \"groupsInitiallyExpanded\",\n      expandGroupBy: [\"kendoGridExpandGroupBy\", \"expandGroupBy\"],\n      expandedGroupKeys: \"expandedGroupKeys\"\n    },\n    outputs: {\n      expandedGroupKeysChange: \"expandedGroupKeysChange\"\n    },\n    exportAs: [\"kendoGridExpandGroupBy\"]\n  });\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ExpandGroupDirective.prototype, \"expandedGroupKeysChange\", void 0);\n\n  __decorate([Input('kendoGridExpandGroupBy'), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], ExpandGroupDirective.prototype, \"expandGroupBy\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], ExpandGroupDirective.prototype, \"expandedGroupKeys\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ExpandGroupDirective.prototype, \"groupsInitiallyExpanded\", void 0);\n\n  ExpandGroupDirective = __decorate([__metadata(\"design:paramtypes\", [GridComponent])], ExpandGroupDirective);\n  /**\n   * @hidden\n   */\n\n  return ExpandGroupDirective;\n})();\nlet Messages = /*#__PURE__*/(() => {\n  class Messages extends ComponentMessages {}\n\n  Messages.ɵfac = /*@__PURE__*/function () {\n    let ɵMessages_BaseFactory;\n    return function Messages_Factory(t) {\n      return (ɵMessages_BaseFactory || (ɵMessages_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(Messages)))(t || Messages);\n    };\n  }();\n\n  Messages.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: Messages,\n    inputs: {\n      groupPanelEmpty: \"groupPanelEmpty\",\n      noRecords: \"noRecords\",\n      pagerLabel: \"pagerLabel\",\n      pagerFirstPage: \"pagerFirstPage\",\n      pagerLastPage: \"pagerLastPage\",\n      pagerPreviousPage: \"pagerPreviousPage\",\n      pagerNextPage: \"pagerNextPage\",\n      pagerPage: \"pagerPage\",\n      pagerItemsPerPage: \"pagerItemsPerPage\",\n      pagerOf: \"pagerOf\",\n      pagerItems: \"pagerItems\",\n      pagerPageNumberInputTitle: \"pagerPageNumberInputTitle\",\n      filter: \"filter\",\n      filterInputLabel: \"filterInputLabel\",\n      filterMenuTitle: \"filterMenuTitle\",\n      filterMenuOperatorsDropDownLabel: \"filterMenuOperatorsDropDownLabel\",\n      filterMenuLogicDropDownLabel: \"filterMenuLogicDropDownLabel\",\n      filterEqOperator: \"filterEqOperator\",\n      filterNotEqOperator: \"filterNotEqOperator\",\n      filterIsNullOperator: \"filterIsNullOperator\",\n      filterIsNotNullOperator: \"filterIsNotNullOperator\",\n      filterIsEmptyOperator: \"filterIsEmptyOperator\",\n      filterIsNotEmptyOperator: \"filterIsNotEmptyOperator\",\n      filterStartsWithOperator: \"filterStartsWithOperator\",\n      filterContainsOperator: \"filterContainsOperator\",\n      filterNotContainsOperator: \"filterNotContainsOperator\",\n      filterEndsWithOperator: \"filterEndsWithOperator\",\n      filterGteOperator: \"filterGteOperator\",\n      filterGtOperator: \"filterGtOperator\",\n      filterLteOperator: \"filterLteOperator\",\n      filterLtOperator: \"filterLtOperator\",\n      filterIsTrue: \"filterIsTrue\",\n      filterIsFalse: \"filterIsFalse\",\n      filterBooleanAll: \"filterBooleanAll\",\n      filterAfterOrEqualOperator: \"filterAfterOrEqualOperator\",\n      filterAfterOperator: \"filterAfterOperator\",\n      filterBeforeOperator: \"filterBeforeOperator\",\n      filterBeforeOrEqualOperator: \"filterBeforeOrEqualOperator\",\n      filterFilterButton: \"filterFilterButton\",\n      filterClearButton: \"filterClearButton\",\n      filterAndLogic: \"filterAndLogic\",\n      filterOrLogic: \"filterOrLogic\",\n      loading: \"loading\",\n      gridLabel: \"gridLabel\",\n      columnMenu: \"columnMenu\",\n      setColumnPosition: \"setColumnPosition\",\n      columns: \"columns\",\n      lock: \"lock\",\n      unlock: \"unlock\",\n      stick: \"stick\",\n      unstick: \"unstick\",\n      sortable: \"sortable\",\n      sortAscending: \"sortAscending\",\n      sortDescending: \"sortDescending\",\n      sortedAscending: \"sortedAscending\",\n      sortedDescending: \"sortedDescending\",\n      sortedDefault: \"sortedDefault\",\n      columnsApply: \"columnsApply\",\n      columnsReset: \"columnsReset\",\n      detailExpand: \"detailExpand\",\n      detailCollapse: \"detailCollapse\",\n      filterDateToday: \"filterDateToday\",\n      filterDateToggle: \"filterDateToggle\",\n      filterNumericDecrement: \"filterNumericDecrement\",\n      filterNumericIncrement: \"filterNumericIncrement\",\n      selectionCheckboxLabel: \"selectionCheckboxLabel\",\n      selectAllCheckboxLabel: \"selectAllCheckboxLabel\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"groupPanelEmpty\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"noRecords\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"pagerLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"pagerFirstPage\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"pagerLastPage\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"pagerPreviousPage\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"pagerNextPage\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"pagerPage\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"pagerItemsPerPage\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"pagerOf\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"pagerItems\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"pagerPageNumberInputTitle\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterInputLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterMenuTitle\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterMenuOperatorsDropDownLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterMenuLogicDropDownLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterEqOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterNotEqOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterIsNullOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterIsNotNullOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterIsEmptyOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterIsNotEmptyOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterStartsWithOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterContainsOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterNotContainsOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterEndsWithOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterGteOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterGtOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterLteOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterLtOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterIsTrue\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterIsFalse\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterBooleanAll\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterAfterOrEqualOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterAfterOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterBeforeOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterBeforeOrEqualOperator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterFilterButton\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterClearButton\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterAndLogic\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterOrLogic\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"loading\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"gridLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"columnMenu\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"setColumnPosition\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"columns\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"lock\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"unlock\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"stick\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"unstick\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"sortable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"sortAscending\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"sortDescending\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"sortedAscending\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"sortedDescending\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"sortedDefault\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"columnsApply\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"columnsReset\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"detailExpand\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"detailCollapse\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterDateToday\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterDateToggle\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterNumericDecrement\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"filterNumericIncrement\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"selectionCheckboxLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"selectAllCheckboxLabel\", void 0);\n\n  return Messages;\n})();\nvar LocalizedMessagesDirective_1;\n/**\n * @hidden\n */\n\nlet LocalizedMessagesDirective = LocalizedMessagesDirective_1 = class LocalizedMessagesDirective extends Messages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n};\n\nLocalizedMessagesDirective.ɵfac = function LocalizedMessagesDirective_Factory(t) {\n  return new (t || LocalizedMessagesDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nLocalizedMessagesDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: LocalizedMessagesDirective,\n  selectors: [[\"\", \"kendoGridLocalizedMessages\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(() => LocalizedMessagesDirective_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nLocalizedMessagesDirective = LocalizedMessagesDirective_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], LocalizedMessagesDirective);\nvar CustomMessagesComponent_1;\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug globalization_grid %}#toc-localization)).\n */\n\nlet CustomMessagesComponent = CustomMessagesComponent_1 = class CustomMessagesComponent extends Messages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n  get override() {\n    return true;\n  }\n\n};\n\nCustomMessagesComponent.ɵfac = function CustomMessagesComponent_Factory(t) {\n  return new (t || CustomMessagesComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nCustomMessagesComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CustomMessagesComponent,\n  selectors: [[\"kendo-grid-messages\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(() => CustomMessagesComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function CustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nCustomMessagesComponent = CustomMessagesComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], CustomMessagesComponent);\n/**\n * @hidden\n */\n\nlet FilterRowComponent = /*#__PURE__*/(() => {\n  let FilterRowComponent = class FilterRowComponent {\n    constructor(localization, columnInfoService) {\n      this.localization = localization;\n      this.columnInfoService = columnInfoService;\n      this.columns = [];\n      this.groups = [];\n      this.filterRowClass = true;\n    }\n\n    addStickyStyles(column) {\n      const sticky = column.sticky ? this.columnInfoService.stickyColumnsStyles(column) : null;\n      return Object.assign({}, sticky, column.filterStyle);\n    }\n\n    filterLabel(column) {\n      const localizationMsg = this.localization.get('filterInputLabel') || '';\n      const columnName = column.title || column.field;\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n  };\n\n  FilterRowComponent.ɵfac = function FilterRowComponent_Factory(t) {\n    return new (t || FilterRowComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService));\n  };\n\n  FilterRowComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FilterRowComponent,\n    selectors: [[\"\", \"kendoGridFilterRow\", \"\"]],\n    hostVars: 2,\n    hostBindings: function FilterRowComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-filter-row\", ctx.filterRowClass);\n      }\n    },\n    inputs: {\n      columns: \"columns\",\n      groups: \"groups\",\n      filter: \"filter\",\n      detailTemplate: \"detailTemplate\",\n      logicalRowIndex: \"logicalRowIndex\",\n      lockedColumnsCount: \"lockedColumnsCount\"\n    },\n    attrs: _c144,\n    decls: 3,\n    vars: 3,\n    consts: [[\"role\", \"presentation\", 3, \"k-group-cell\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\", 3, \"k-hierarchy-cell\", 4, \"ngIf\"], [\"kendoGridFilterCell\", \"\", \"kendoGridLogicalCell\", \"\", 3, \"k-grid-header-sticky\", \"ngStyle\", \"ngClass\", \"column\", \"filter\", \"logicalRowIndex\", \"logicalColIndex\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\"], [\"kendoGridFilterCell\", \"\", \"kendoGridLogicalCell\", \"\", 3, \"ngStyle\", \"ngClass\", \"column\", \"filter\", \"logicalRowIndex\", \"logicalColIndex\"]],\n    template: function FilterRowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, FilterRowComponent_td_0_Template, 1, 2, \"td\", 0);\n        ɵngcc0.ɵɵtemplate(1, FilterRowComponent_td_1_Template, 1, 2, \"td\", 1);\n        ɵngcc0.ɵɵtemplate(2, FilterRowComponent_td_2_Template, 1, 9, \"td\", 2);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.groups);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.detailTemplate == null ? null : ctx.detailTemplate.templateRef);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.columns);\n      }\n    },\n    directives: function () {\n      return [ɵngcc5.NgForOf, ɵngcc5.NgIf, FilterCellComponent, LogicalCellDirective, ɵngcc5.NgStyle, ɵngcc5.NgClass];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], FilterRowComponent.prototype, \"columns\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], FilterRowComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], FilterRowComponent.prototype, \"groups\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", DetailTemplateDirective)], FilterRowComponent.prototype, \"detailTemplate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], FilterRowComponent.prototype, \"logicalRowIndex\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], FilterRowComponent.prototype, \"lockedColumnsCount\", void 0);\n\n  __decorate([HostBinding('class.k-filter-row'), __metadata(\"design:type\", Boolean)], FilterRowComponent.prototype, \"filterRowClass\", void 0);\n\n  FilterRowComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, ColumnInfoService])], FilterRowComponent);\n  return FilterRowComponent;\n})();\n\nconst areDifferent = (a, b) => a.field !== b.field || a.operator !== b.operator || a.value !== b.value;\n\nconst isChanged$1 = (a, b) => {\n  if (a.length !== b.length) {\n    return true;\n  }\n\n  for (let idx = 0, len = a.length; idx < len; idx++) {\n    const prev = a[idx];\n    const curr = b[idx];\n\n    if (isCompositeFilterDescriptor(prev)) {\n      // tslint:disable-next-line:no-use-before-declare\n      if (diffFilters(prev, curr[idx])) {\n        return true;\n      }\n    } else if (areDifferent(prev, curr)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst copyObject = obj => {\n  const result = {};\n  Object.assign(result, obj);\n\n  if (obj.constructor !== Object) {\n    const proto = obj.constructor.prototype;\n    Object.getOwnPropertyNames(proto).forEach(property => {\n      if (property !== 'constructor' && proto.hasOwnProperty(property)) {\n        result[property] = obj[property];\n      }\n    });\n  }\n\n  return result;\n};\n\nconst cloneFilter = filter$$1 => copyObject(filter$$1);\n/**\n * @hidden\n */\n\n\nconst cloneFilters = filter$$1 => {\n  if (!filter$$1) {\n    return;\n  }\n\n  if (isCompositeFilterDescriptor(filter$$1)) {\n    return {\n      filters: cloneFilters(filter$$1.filters),\n      logic: filter$$1.logic\n    };\n  } else if (Array.isArray(filter$$1)) {\n    return filter$$1.map(cloneFilters);\n  }\n\n  return cloneFilter(filter$$1);\n};\n/**\n * @hidden\n */\n\n\nconst diffFilters = (a, b) => {\n  if (isPresent(a) && !isPresent(b)) {\n    return true;\n  }\n\n  if (!isPresent(a) && isPresent(b)) {\n    return true;\n  }\n\n  return isPresent(a) && isPresent(b) && isChanged$1(a.filters, b.filters);\n};\n/**\n * @hidden\n */\n\n\nlet FilterCellComponent = /*#__PURE__*/(() => {\n  let FilterCellComponent = class FilterCellComponent {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this._templateContext = {};\n    }\n\n    get filter() {\n      return this._filter;\n    }\n\n    set filter(value) {\n      this._filter = cloneFilters(value);\n    }\n\n    get templateContext() {\n      this._templateContext.column = this.column;\n      this._templateContext.filter = this.filter; // tslint:disable-next-line:no-string-literal\n\n      this._templateContext[\"$implicit\"] = this.filter;\n      return this._templateContext;\n    }\n\n    get hasTemplate() {\n      return isPresent(this.column.filterCellTemplateRef);\n    }\n\n    get isFilterable() {\n      return isPresent(this.column) && !isNullOrEmptyString(this.column.field) && this.column.filterable;\n    }\n\n  };\n\n  FilterCellComponent.ɵfac = function FilterCellComponent_Factory(t) {\n    return new (t || FilterCellComponent)();\n  };\n\n  FilterCellComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FilterCellComponent,\n    selectors: [[\"\", \"kendoGridFilterCell\", \"\"]],\n    inputs: {\n      filter: \"filter\",\n      column: \"column\"\n    },\n    attrs: _c145,\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ngIf\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"kendoFilterCellHost\", \"\", 3, \"column\", \"filter\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function FilterCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, FilterCellComponent_ng_template_0_Template, 3, 3, \"ng-template\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isFilterable);\n      }\n    },\n    directives: function () {\n      return [ɵngcc5.NgIf, ɵngcc5.NgSwitch, ɵngcc5.NgSwitchCase, FilterCellHostDirective, ɵngcc5.NgTemplateOutlet];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], FilterCellComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], FilterCellComponent.prototype, \"filter\", null);\n\n  return FilterCellComponent;\n})();\n\nconst localizeOperators = operators => localization => Object.keys(operators).reduce((acc, key) => {\n  acc[operators[key]] = localization.get(key);\n  return acc;\n}, {}); // tslint:disable-line:align\n\n\nconst operatorTexts = localizeOperators({\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  // tslint:disable-next-line:object-literal-sort-keys\n  \"filterGteOperator\": \"gte\",\n  \"filterGtOperator\": \"gt\",\n  \"filterLteOperator\": \"lte\",\n  \"filterLtOperator\": \"lt\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\",\n  \"filterIsEmptyOperator\": \"isempty\",\n  \"filterIsNotEmptyOperator\": \"isnotempty\",\n  \"filterContainsOperator\": \"contains\",\n  \"filterNotContainsOperator\": \"doesnotcontain\",\n  \"filterStartsWithOperator\": \"startswith\",\n  \"filterEndsWithOperator\": \"endswith\",\n  \"filterAfterOrEqualOperator\": \"after-eq\",\n  \"filterAfterOperator\": \"after\",\n  \"filterBeforeOrEqualOperator\": \"before-eq\",\n  \"filterBeforeOperator\": \"before\"\n});\n/**\n * @hidden\n */\n\nconst toJSON = xs => xs.map(x => x.toJSON());\n/**\n * @hidden\n */\n\n\nlet FilterOperatorBase = /*#__PURE__*/(() => {\n  class FilterOperatorBase {\n    constructor(operator, localization) {\n      this.operator = operator;\n      this.localization = localization;\n      this.messages = operatorTexts(this.localization);\n      this._text = this.messages[this.operator];\n      this.localization.changes.subscribe(this.refreshText.bind(this));\n    }\n    /**\n     * The text that will be displayed in the drop-down list.\n     * @readonly\n     * @type {string}\n     * @memberOf FilterOperatorBase\n     */\n\n\n    get text() {\n      return this._text;\n    }\n    /**\n     *\n     */\n\n\n    set text(value) {\n      this._text = isNullOrEmptyString(value) ? this.messages[this.operator] : value;\n    }\n    /**\n     * @hidden\n     */\n\n\n    toJSON() {\n      return {\n        text: this.text,\n        value: this.operator\n      };\n    }\n\n    refreshText() {\n      const update = this._text === this.messages[this.operator];\n      this.messages = operatorTexts(this.localization);\n\n      if (update) {\n        this._text = this.messages[this.operator];\n      }\n    }\n\n  }\n\n  FilterOperatorBase.ɵfac = function FilterOperatorBase_Factory(t) {\n    ɵngcc0.ɵɵinvalidFactory();\n  };\n\n  FilterOperatorBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FilterOperatorBase,\n    inputs: {\n      text: \"text\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], FilterOperatorBase.prototype, \"text\", null);\n\n  return FilterOperatorBase;\n})();\n\nconst insertDefaultFilter = (index, rootFilter, filter$$1) => {\n  rootFilter = rootFilter || {\n    filters: [],\n    logic: \"and\"\n  };\n  rootFilter.filters[index] = filter$$1;\n  return filter$$1;\n};\n/**\n * @hidden\n */\n\n\nconst setFilter = (index, filter$$1, field, defaultOperator) => {\n  if (isPresent(filter$$1) && isPresent(filter$$1.filters) && filter$$1.filters.length > index) {\n    return filter$$1.filters[index];\n  } else {\n    return insertDefaultFilter(index, filter$$1, {\n      field,\n      operator: defaultOperator\n    });\n  }\n};\n/**\n * @hidden\n */\n\n\nconst logicOperators = localization => [{\n  text: localization.get(\"filterAndLogic\"),\n  value: \"and\"\n}, {\n  text: localization.get(\"filterOrLogic\"),\n  value: \"or\"\n}];\n/**\n * @hidden\n */\n\n\nconst flatten = filter$$1 => {\n  if (isPresent(filter$$1.filters)) {\n    return filter$$1.filters.reduce((acc, curr) => acc.concat(isCompositeFilterDescriptor(curr) ? flatten(curr) : [curr]), []);\n  }\n\n  return [];\n};\n\nconst trimFilterByField = (filter$$1, field) => {\n  if (isPresent(filter$$1) && isPresent(filter$$1.filters)) {\n    filter$$1.filters = filter$$1.filters.filter(x => {\n      if (isCompositeFilterDescriptor(x)) {\n        trimFilterByField(x, field);\n        return x.filters.length;\n      } else {\n        return x.field !== field;\n      }\n    });\n  }\n};\n/**\n * @hidden\n */\n\n\nconst filtersByField = (filter$$1, field) => flatten(filter$$1 || {}).filter(x => x.field === field);\n/**\n * @hidden\n */\n\n\nconst filterByField = (filter$$1, field) => {\n  let [currentFilter] = filtersByField(filter$$1, field);\n  return currentFilter;\n};\n/**\n * @hidden\n */\n\n\nconst removeFilter = (filter$$1, field) => {\n  trimFilterByField(filter$$1, field);\n  return filter$$1;\n};\n/**\n * @hidden\n */\n\n\nconst localizeOperators$1 = operators => localization => Object.keys(operators).map(key => ({\n  text: localization.get(key),\n  value: operators[key]\n}));\n/**\n * An abstract base class for the filter-cell component ([see example]({% slug reusablecustomfilters_grid %}#toc-filter-row)).\n */\n\n\nlet BaseFilterCellComponent = /*#__PURE__*/(() => {\n  class BaseFilterCellComponent {\n    constructor(filterService) {\n      this.filterService = filterService;\n      this.operatorList = new QueryList();\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hostClasses() {\n      return true;\n    }\n\n    get operators() {\n      return this._operators.length ? this._operators : this.defaultOperators;\n    }\n\n    set operators(values) {\n      this._operators = values;\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngAfterContentInit() {\n      this.operationListSubscription = observe(this.operatorList).pipe(map(q => q.toArray()), map(toJSON)).subscribe(x => {\n        this.operators = x;\n      });\n    }\n\n    ngOnDestroy() {\n      if (this.operationListSubscription) {\n        this.operationListSubscription.unsubscribe();\n      }\n    }\n\n    filterByField(field) {\n      return filterByField(this.filter, field);\n    }\n\n    filtersByField(field) {\n      return filtersByField(this.filter, field);\n    }\n\n    removeFilter(field) {\n      return removeFilter(this.filter, field);\n    }\n\n    updateFilter(filter$$1) {\n      const root = this.filter || {\n        filters: [],\n        logic: \"and\"\n      };\n      let [currentFilter] = flatten(root).filter(x => x.field === filter$$1.field);\n\n      if (!isPresent(currentFilter)) {\n        root.filters.push(filter$$1);\n      } else {\n        Object.assign(currentFilter, filter$$1);\n      }\n\n      return root;\n    }\n\n    applyFilter(filter$$1) {\n      this.filterService.filter(filter$$1);\n    }\n\n  }\n\n  BaseFilterCellComponent.ɵfac = function BaseFilterCellComponent_Factory(t) {\n    ɵngcc0.ɵɵinvalidFactory();\n  };\n\n  BaseFilterCellComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: BaseFilterCellComponent,\n    contentQueries: function BaseFilterCellComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, FilterOperatorBase, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.operatorList = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function BaseFilterCellComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n      }\n    }\n  });\n\n  __decorate([HostBinding('class.k-filtercell'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], BaseFilterCellComponent.prototype, \"hostClasses\", null);\n\n  __decorate([ContentChildren(FilterOperatorBase), __metadata(\"design:type\", QueryList)], BaseFilterCellComponent.prototype, \"operatorList\", void 0);\n\n  return BaseFilterCellComponent;\n})();\nconst numericOperators = localizeOperators$1({\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  // tslint:disable-next-line:object-literal-sort-keys\n  \"filterGteOperator\": \"gte\",\n  \"filterGtOperator\": \"gt\",\n  \"filterLteOperator\": \"lte\",\n  \"filterLtOperator\": \"lt\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\"\n});\n/**\n * Represents a base numeric filter component.\n */\n\nlet NumericFilterComponent = /*#__PURE__*/(() => {\n  class NumericFilterComponent extends BaseFilterCellComponent {\n    constructor(filterService, localization) {\n      super(filterService);\n      this.localization = localization;\n      /**\n       * The default filter operator. Defaults to `eq`.\n       * @type {string}\n       */\n\n      this.operator = \"eq\";\n      /**\n       * Specifies the value that is used to increment or decrement the component value.\n       * @type {numeric}\n       */\n\n      this.step = 1;\n      /**\n       * Specifies whether the **Up** and **Down** spin buttons will be rendered.\n       * @type {boolean}\n       */\n\n      this.spinners = true;\n      this.defaultOperators = numericOperators(this.localization);\n    }\n    /**\n     * Specifies the number format used when the component is not focused.\n     * By default, the `column.format` value is used (if set).\n     */\n\n\n    set format(value) {\n      this._format = value;\n    }\n    /**\n     * @readonly\n     * @type {string}\n     */\n\n\n    get format() {\n      return !isNullOrEmptyString(this._format) ? this._format : this.columnFormat;\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n\n\n    get currentFilter() {\n      return this.filterByField(this.column.field);\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n\n\n    get currentOperator() {\n      return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n\n    get columnFormat() {\n      return this.column && !isNullOrEmptyString(this.column.format) ? extractFormat(this.column.format) : \"n2\";\n    }\n\n    ngOnInit() {\n      this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      super.ngOnDestroy();\n    }\n\n    localizationChange() {\n      this.defaultOperators = numericOperators(this.localization);\n\n      if (this.operatorList.length) {\n        this.operators = toJSON(this.operatorList.toArray());\n      }\n    }\n\n  }\n\n  NumericFilterComponent.ɵfac = function NumericFilterComponent_Factory(t) {\n    ɵngcc0.ɵɵinvalidFactory();\n  };\n\n  NumericFilterComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NumericFilterComponent,\n    inputs: {\n      operator: \"operator\",\n      step: \"step\",\n      spinners: \"spinners\",\n      format: \"format\",\n      column: \"column\",\n      filter: \"filter\",\n      min: \"min\",\n      max: \"max\",\n      decimals: \"decimals\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], NumericFilterComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], NumericFilterComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], NumericFilterComponent.prototype, \"operator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], NumericFilterComponent.prototype, \"step\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], NumericFilterComponent.prototype, \"min\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], NumericFilterComponent.prototype, \"max\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], NumericFilterComponent.prototype, \"spinners\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], NumericFilterComponent.prototype, \"decimals\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], NumericFilterComponent.prototype, \"format\", null);\n  /**\n   * Represents a numeric filter cell.\n   *\n   * @example\n   *  ```html-no-run\n   *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n   *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n   *          <kendo-grid-numeric-filter-cell\n   *              [column]=\"column\"\n   *              [filter]=\"filter\">\n   *          </kendo-grid-numeric-filter-cell>\n   *          </ng-template>\n   *      </kendo-grid-column>\n   *   ```\n   */\n\n\n  return NumericFilterComponent;\n})();\nlet NumericFilterCellComponent = /*#__PURE__*/(() => {\n  let NumericFilterCellComponent = class NumericFilterCellComponent extends NumericFilterComponent {\n    constructor(filterService, localization) {\n      super(filterService, localization);\n      this.localization = localization;\n      /**\n       * Determines the delay time (in milliseconds) before the filter value is submitted.\n       * A value of `0` indicates no delay. The default value is `500`.\n       * @type {boolean}\n       */\n\n      this.filterDelay = 500;\n      /**\n       * Determines if the drop-down filter operators will be displayed.\n       * The default value is `true`.\n       * @type {boolean}\n       */\n\n      this.showOperators = true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    messageFor(key) {\n      return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get columnLabel() {\n      const localizationMsg = this.localization.get('filterInputLabel') || '';\n      const columnName = this.column.title || this.column.field;\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n  };\n\n  NumericFilterCellComponent.ɵfac = function NumericFilterCellComponent_Factory(t) {\n    return new (t || NumericFilterCellComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  NumericFilterCellComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NumericFilterCellComponent,\n    selectors: [[\"kendo-grid-numeric-filter-cell\"]],\n    inputs: {\n      filterDelay: \"filterDelay\",\n      showOperators: \"showOperators\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 17,\n    consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"showOperators\"], [\"kendoGridFocusable\", \"\", \"kendoFilterInput\", \"\", 3, \"columnLabel\", \"filterDelay\", \"autoCorrect\", \"value\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\"], [3, \"increment\", \"decrement\"]],\n    template: function NumericFilterCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"kendo-numerictextbox\", 1);\n        ɵngcc0.ɵɵelement(2, \"kendo-numerictextbox-messages\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"showOperators\", ctx.showOperators);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"columnLabel\", ctx.columnLabel)(\"filterDelay\", ctx.filterDelay)(\"autoCorrect\", true)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value)(\"format\", ctx.format)(\"decimals\", ctx.decimals)(\"spinners\", ctx.spinners)(\"min\", ctx.min)(\"max\", ctx.max)(\"step\", ctx.step);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"increment\", ctx.messageFor(\"filterNumericIncrement\"))(\"decrement\", ctx.messageFor(\"filterNumericDecrement\"));\n      }\n    },\n    directives: function () {\n      return [FilterCellWrapperComponent, ɵngcc6.NumericTextBoxComponent, FocusableDirective, FilterInputDirective, ɵngcc6.NumericTextBoxCustomMessagesComponent];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], NumericFilterCellComponent.prototype, \"filterDelay\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], NumericFilterCellComponent.prototype, \"showOperators\", void 0);\n\n  NumericFilterCellComponent = __decorate([__metadata(\"design:paramtypes\", [FilterService, LocalizationService])], NumericFilterCellComponent);\n  /**\n   * @hidden\n   */\n\n  return NumericFilterCellComponent;\n})();\nlet FilterInputDirective = /*#__PURE__*/(() => {\n  let FilterInputDirective = class FilterInputDirective {\n    constructor(valueAccessors, ngZone, element, renderer) {\n      this.element = element;\n      this.renderer = renderer;\n      this.change = new EventEmitter();\n      this.composing = false;\n      this.filterDelay = 500;\n      this.changeRequests = new Subject();\n      this.accessor = valueAccessors[0];\n      ngZone.runOutsideAngular(() => {\n        const unsubscribeStart = renderer.listen(element.nativeElement, 'compositionstart', () => this.composing = true);\n        const unsubscribeEnd = renderer.listen(element.nativeElement, 'compositionend', () => this.composing = false);\n\n        this.unsubscribeEvents = () => {\n          unsubscribeStart();\n          unsubscribeEnd();\n        };\n      });\n    }\n\n    set value(value) {\n      this.accessor.writeValue(value);\n    }\n\n    set disabled(value) {\n      this.accessor.setDisabledState(value);\n    }\n\n    ngAfterViewInit() {\n      this.addAriaAttributes();\n      this.accessor.registerOnChange(x => this.filterDelay > 0 ? this.changeRequests.next(x) : this.change.emit(x));\n      this.subscribeChanges();\n    }\n\n    ngOnChanges(changes) {\n      if (isChanged('filterDelay', changes)) {\n        this.unsubscribeChanges();\n        this.subscribeChanges();\n      }\n    }\n\n    ngOnDestroy() {\n      this.unsubscribeChanges();\n      this.unsubscribeEvents();\n    }\n\n    subscribeChanges() {\n      this.changeRequestsSubscription = this.changeRequests.pipe(debounceTime(this.filterDelay), filter(() => !this.composing)).subscribe(x => this.change.emit(x));\n    }\n\n    unsubscribeChanges() {\n      if (this.changeRequestsSubscription) {\n        this.changeRequestsSubscription.unsubscribe();\n      }\n    }\n\n    addAriaAttributes() {\n      const ariaValue = this.columnLabel;\n\n      if (this.kendoInput && this.kendoInput.focusableId && isDocumentAvailable()) {\n        const focusableElement = this.element.nativeElement.querySelector(`#${this.kendoInput.focusableId}`);\n        this.renderer.setAttribute(focusableElement, 'aria-label', ariaValue);\n      } else {\n        this.renderer.setAttribute(this.element.nativeElement, 'aria-label', ariaValue);\n      }\n    }\n\n  };\n\n  FilterInputDirective.ɵfac = function FilterInputDirective_Factory(t) {\n    return new (t || FilterInputDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  FilterInputDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FilterInputDirective,\n    selectors: [[\"\", \"kendoFilterInput\", \"\"]],\n    contentQueries: function FilterInputDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, KendoInput, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.kendoInput = _t.first);\n      }\n    },\n    inputs: {\n      filterDelay: \"filterDelay\",\n      value: \"value\",\n      columnLabel: \"columnLabel\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n\n  __decorate([ContentChild(KendoInput, {\n    static: true\n  }), __metadata(\"design:type\", Object)], FilterInputDirective.prototype, \"kendoInput\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], FilterInputDirective.prototype, \"filterDelay\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], FilterInputDirective.prototype, \"columnLabel\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], FilterInputDirective.prototype, \"value\", null);\n\n  FilterInputDirective = __decorate([__param(0, Self()), __param(0, Inject(NG_VALUE_ACCESSOR)), __metadata(\"design:paramtypes\", [Array, NgZone, ElementRef, Renderer2])], FilterInputDirective);\n  return FilterInputDirective;\n})();\nconst EMPTY_VALUE_OPERATORS = new Set(['isnull', 'isnotnull', 'isempty', 'isnotempty']);\n\nconst isEmptyValueOperator = operator => EMPTY_VALUE_OPERATORS.has(operator);\n/**\n * @hidden\n */\n\n\nlet FilterInputWrapperComponent = /*#__PURE__*/(() => {\n  class FilterInputWrapperComponent extends BaseFilterCellComponent {\n    constructor(filterService) {\n      super(filterService);\n      this.operators = [];\n    }\n\n    get currentFilter() {\n      return this.filterByField(this.column.field);\n    }\n\n    get currentOperator() {\n      const filter$$1 = this.currentFilter;\n\n      if (!this._operator) {\n        this._operator = filter$$1 ? filter$$1.operator : this.defaultOperator;\n      }\n\n      return this._operator;\n    }\n\n    set currentOperator(value) {\n      this._operator = value;\n      const emptyValueOperator = isEmptyValueOperator(value);\n      this.filterInputDisabled = emptyValueOperator;\n\n      if (emptyValueOperator) {\n        this.applyNoValueFilter(value);\n      } else if (!isBlank(value) && isPresent(this.currentFilter)) {\n        this.onChange(this.currentFilter.value);\n      }\n    }\n\n    get defaultOperator() {\n      if (!isNullOrEmptyString(this._defaultOperator)) {\n        return this._defaultOperator;\n      } else if (this.operators && this.operators.length) {\n        return this.operators[0].value;\n      }\n\n      return \"eq\";\n    }\n\n    set defaultOperator(value) {\n      this._defaultOperator = value;\n    }\n\n    set filterInputDisabled(disabled) {\n      if (!this.input) {\n        return;\n      }\n\n      this.input.disabled = disabled;\n    }\n\n    ngAfterContentInit() {\n      if (isPresent(this.input)) {\n        this.changeSubscription = this.input.change.subscribe(this.onChange.bind(this));\n        this.filterInputDisabled = isEmptyValueOperator(this.currentOperator);\n      }\n    }\n\n    ngOnDestroy() {\n      super.ngOnDestroy();\n\n      if (this.changeSubscription) {\n        this.changeSubscription.unsubscribe();\n      }\n    }\n\n    onChange(value) {\n      if (!isNullOrEmptyString(value) || this.filterByField(this.column.field)) {\n        this.filterChange(isNullOrEmptyString(value) ? this.removeFilter(this.column.field) : this.updateFilter({\n          field: this.column.field,\n          operator: this.currentOperator,\n          value: value\n        }));\n      }\n    }\n\n    onClear() {\n      this.onChange(null);\n      this.filterInputDisabled = isEmptyValueOperator(this.defaultOperator);\n    }\n\n    applyNoValueFilter(operator) {\n      this.filterChange(this.updateFilter({\n        field: this.column.field,\n        operator: operator,\n        value: null\n      }));\n    }\n\n    ngOnChanges(changes) {\n      if (isChanged(\"filter\", changes, false)) {\n        this._operator = null;\n        this.filterInputDisabled = isEmptyValueOperator(this.currentOperator);\n      }\n    }\n\n  }\n\n  FilterInputWrapperComponent.ɵfac = function FilterInputWrapperComponent_Factory(t) {\n    ɵngcc0.ɵɵinvalidFactory();\n  };\n\n  FilterInputWrapperComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FilterInputWrapperComponent,\n    contentQueries: function FilterInputWrapperComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, FilterInputDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);\n      }\n    },\n    inputs: {\n      operators: \"operators\",\n      defaultOperator: \"defaultOperator\",\n      column: \"column\",\n      filter: \"filter\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], FilterInputWrapperComponent.prototype, \"operators\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], FilterInputWrapperComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], FilterInputWrapperComponent.prototype, \"filter\", void 0);\n\n  __decorate([ContentChild(FilterInputDirective, {\n    static: false\n  }), __metadata(\"design:type\", FilterInputDirective)], FilterInputWrapperComponent.prototype, \"input\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], FilterInputWrapperComponent.prototype, \"defaultOperator\", null);\n\n  return FilterInputWrapperComponent;\n})();\nconst EMPTY_FILTER_OPERATORS = ['isnull', 'isnotnull', 'isempty', 'isnotempty'];\n/**\n * @hidden\n */\n\nlet FilterCellWrapperComponent = /*#__PURE__*/(() => {\n  let FilterCellWrapperComponent = class FilterCellWrapperComponent extends FilterInputWrapperComponent {\n    constructor(filterService) {\n      super(filterService);\n      this.showOperators = true;\n    }\n\n    get hostClasses() {\n      return true;\n    }\n\n    get overrideBaseClasses() {\n      return false;\n    }\n\n    get showButton() {\n      const filter$$1 = this.currentFilter;\n      return isPresent(filter$$1) && (!isNullOrEmptyString(filter$$1.value) || EMPTY_FILTER_OPERATORS.indexOf(String(filter$$1.operator)) >= 0);\n    }\n\n    filterChange(filter$$1) {\n      this.applyFilter(filter$$1);\n    }\n\n  };\n\n  FilterCellWrapperComponent.ɵfac = function FilterCellWrapperComponent_Factory(t) {\n    return new (t || FilterCellWrapperComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService));\n  };\n\n  FilterCellWrapperComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FilterCellWrapperComponent,\n    selectors: [[\"kendo-grid-filter-wrapper-cell\"]],\n    hostVars: 4,\n    hostBindings: function FilterCellWrapperComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-filtercell-wrapper\", ctx.hostClasses)(\"k-filtercell\", ctx.overrideBaseClasses);\n      }\n    },\n    inputs: {\n      showOperators: \"showOperators\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c146,\n    decls: 2,\n    vars: 4,\n    consts: [[3, \"showOperators\", \"operators\", \"showButton\", \"value\", \"clear\", \"valueChange\"]],\n    template: function FilterCellWrapperComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"kendo-grid-filter-cell-operators\", 0);\n        ɵngcc0.ɵɵlistener(\"clear\", function FilterCellWrapperComponent_Template_kendo_grid_filter_cell_operators_clear_1_listener() {\n          return ctx.onClear();\n        })(\"valueChange\", function FilterCellWrapperComponent_Template_kendo_grid_filter_cell_operators_valueChange_1_listener($event) {\n          return ctx.currentOperator = $event;\n        });\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"showOperators\", ctx.showOperators)(\"operators\", ctx.operators)(\"showButton\", ctx.showButton)(\"value\", ctx.currentOperator);\n      }\n    },\n    directives: function () {\n      return [FilterCellOperatorsComponent];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-filtercell-wrapper'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], FilterCellWrapperComponent.prototype, \"hostClasses\", null);\n\n  __decorate([HostBinding('class.k-filtercell'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], FilterCellWrapperComponent.prototype, \"overrideBaseClasses\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], FilterCellWrapperComponent.prototype, \"showOperators\", void 0);\n\n  FilterCellWrapperComponent = __decorate([__metadata(\"design:paramtypes\", [FilterService])], FilterCellWrapperComponent); // tslint:disable:no-access-missing-member\n\n  return FilterCellWrapperComponent;\n})();\nconst stringOperators = localizeOperators$1({\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  // tslint:disable-next-line:object-literal-sort-keys\n  \"filterContainsOperator\": \"contains\",\n  \"filterNotContainsOperator\": \"doesnotcontain\",\n  \"filterStartsWithOperator\": \"startswith\",\n  \"filterEndsWithOperator\": \"endswith\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\",\n  \"filterIsEmptyOperator\": \"isempty\",\n  \"filterIsNotEmptyOperator\": \"isnotempty\"\n});\n/**\n * Represents a base string filter component.\n */\n\nlet StringFilterComponent = /*#__PURE__*/(() => {\n  class StringFilterComponent extends BaseFilterCellComponent {\n    constructor(filterService, localization) {\n      super(filterService);\n      this.localization = localization;\n      /**\n       * The default filter operator. Defaults to `contains`.\n       * @type {string}\n       */\n\n      this.operator = \"contains\";\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n\n\n    get currentFilter() {\n      return this.filterByField((this.column || {}).field);\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n\n\n    get currentOperator() {\n      return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n\n    ngOnInit() {\n      this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      super.ngOnDestroy();\n    }\n\n    localizationChange() {\n      this.defaultOperators = stringOperators(this.localization);\n\n      if (this.operatorList.length) {\n        this.operators = toJSON(this.operatorList.toArray());\n      }\n    }\n\n  }\n\n  StringFilterComponent.ɵfac = function StringFilterComponent_Factory(t) {\n    ɵngcc0.ɵɵinvalidFactory();\n  };\n\n  StringFilterComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: StringFilterComponent,\n    inputs: {\n      operator: \"operator\",\n      column: \"column\",\n      filter: \"filter\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], StringFilterComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], StringFilterComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], StringFilterComponent.prototype, \"operator\", void 0);\n  /**\n   * Represents a string-filter cell component\n   * ([see example]({% slug builtinfiltertemplate_grid %}#toc-configuration-components-for-filter-templates)).\n   *\n   * @example\n   *\n   *  ```html-no-run\n   *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n   *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n   *          <kendo-grid-string-filter-cell\n   *              [showOperators]=\"false\"\n   *              [column]=\"column\"\n   *              [filter]=\"filter\">\n   *          </kendo-grid-string-filter-cell>\n   *          </ng-template>\n   *      </kendo-grid-column>\n   *   ```\n   */\n\n\n  return StringFilterComponent;\n})();\nlet StringFilterCellComponent = /*#__PURE__*/(() => {\n  let StringFilterCellComponent = class StringFilterCellComponent extends StringFilterComponent {\n    constructor(filterService, localization) {\n      super(filterService, localization);\n      /**\n       * Determines the delay time (in milliseconds) before the filter value is submitted.\n       * A value of `0` indicates no delay. The default value is `500`.\n       * @type {boolean}\n       */\n\n      this.filterDelay = 500;\n      /**\n       * Determines if the drop-down filter operators will be displayed.\n       * The default value is `true`.\n       * @type {boolean}\n       */\n\n      this.showOperators = true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get columnLabel() {\n      const localizationMsg = this.localization.get('filterInputLabel') || '';\n      const columnName = this.column.title || this.column.field;\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n  };\n\n  StringFilterCellComponent.ɵfac = function StringFilterCellComponent_Factory(t) {\n    return new (t || StringFilterCellComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  StringFilterCellComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: StringFilterCellComponent,\n    selectors: [[\"kendo-grid-string-filter-cell\"]],\n    inputs: {\n      filterDelay: \"filterDelay\",\n      showOperators: \"showOperators\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 8,\n    consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"showOperators\"], [\"kendoGridFocusable\", \"\", \"kendoFilterInput\", \"\", 1, \"k-textbox\", 3, \"columnLabel\", \"filterDelay\", \"ngModel\"]],\n    template: function StringFilterCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n        ɵngcc0.ɵɵelement(1, \"input\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"showOperators\", ctx.showOperators);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"columnLabel\", ctx.columnLabel)(\"filterDelay\", ctx.filterDelay)(\"ngModel\", ctx.currentFilter == null ? null : ctx.currentFilter.value);\n      }\n    },\n    directives: [FilterCellWrapperComponent, ɵngcc7.DefaultValueAccessor, FocusableDirective, FilterInputDirective, ɵngcc7.NgControlStatus, ɵngcc7.NgModel],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], StringFilterCellComponent.prototype, \"filterDelay\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], StringFilterCellComponent.prototype, \"showOperators\", void 0);\n\n  StringFilterCellComponent = __decorate([__metadata(\"design:paramtypes\", [FilterService, LocalizationService])], StringFilterCellComponent);\n  /**\n   * Represents a component which accommodates the filter operators.\n   */\n\n  return StringFilterCellComponent;\n})();\nlet FilterCellOperatorsComponent = /*#__PURE__*/(() => {\n  let FilterCellOperatorsComponent = class FilterCellOperatorsComponent {\n    constructor(localization) {\n      this.localization = localization;\n      this.clearText = 'Clear';\n      /**\n       * The filter operators that will be displayed.\n       */\n\n      this.operators = [];\n      /**\n       * Determines if the list of operators will be displayed.\n       * @type {boolean}\n       */\n\n      this.showOperators = true;\n      /**\n       * Fires when the operator is selected.\n       * @type {EventEmitter<string>}\n       */\n\n      this.valueChange = new EventEmitter();\n      /**\n       * Fires when the **Clear** button is clicked.\n       * @type {EventEmitter<{}>}\n       */\n\n      this.clear = new EventEmitter();\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hostClasses() {\n      return true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    onChange(dataItem) {\n      this.valueChange.emit(dataItem);\n    }\n    /**\n     * @hidden\n     */\n\n\n    clearClick() {\n      this.clear.emit();\n      return false;\n    }\n    /**\n     * @hidden\n     */\n\n\n    clearKeydown(args) {\n      if (args.keyCode === Keys.Enter || args.keyCode === Keys.Space) {\n        this.clear.emit();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    dropdownKeydown(args) {\n      if (args.defaultPrevented) {\n        return;\n      }\n\n      if (args.keyCode === Keys.Enter && !this.dropdown.isOpen) {\n        this.dropdown.toggle(true);\n        args.preventDefault();\n      }\n    }\n\n    ngOnInit() {\n      this.localization.changes.subscribe(() => this.clearText = this.localization.get(\"filterClearButton\"));\n    }\n\n  };\n\n  FilterCellOperatorsComponent.ɵfac = function FilterCellOperatorsComponent_Factory(t) {\n    return new (t || FilterCellOperatorsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  FilterCellOperatorsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FilterCellOperatorsComponent,\n    selectors: [[\"kendo-grid-filter-cell-operators\"]],\n    viewQuery: function FilterCellOperatorsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c147, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function FilterCellOperatorsComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-filtercell-operator\", ctx.hostClasses);\n      }\n    },\n    inputs: {\n      operators: \"operators\",\n      showOperators: \"showOperators\",\n      showButton: \"showButton\",\n      value: \"value\"\n    },\n    outputs: {\n      valueChange: \"valueChange\",\n      clear: \"clear\"\n    },\n    decls: 3,\n    vars: 5,\n    consts: [[\"kendoGridFocusable\", \"\", \"class\", \"k-dropdown-operator\", \"iconClass\", \"k-i-filter\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"data\", \"value\", \"valuePrimitive\", \"popupSettings\", \"valueChange\", \"keydown\", 4, \"ngIf\"], [\"type\", \"button\", \"kendoGridFocusable\", \"\", 1, \"k-button\", \"k-button-icon\", 3, \"ngClass\", \"title\", \"click\", \"keydown\"], [1, \"k-icon\", \"k-i-filter-clear\"], [\"kendoGridFocusable\", \"\", \"iconClass\", \"k-i-filter\", \"textField\", \"text\", \"valueField\", \"value\", 1, \"k-dropdown-operator\", 3, \"data\", \"value\", \"valuePrimitive\", \"popupSettings\", \"valueChange\", \"keydown\"], [\"dropdown\", \"\"]],\n    template: function FilterCellOperatorsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, FilterCellOperatorsComponent_kendo_dropdownlist_0_Template, 2, 5, \"kendo-dropdownlist\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function FilterCellOperatorsComponent_Template_button_click_1_listener() {\n          return ctx.clearClick();\n        })(\"keydown\", function FilterCellOperatorsComponent_Template_button_keydown_1_listener($event) {\n          return ctx.clearKeydown($event);\n        });\n        ɵngcc0.ɵɵelement(2, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showOperators);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c149, ctx.showButton))(\"title\", ctx.clearText);\n      }\n    },\n    directives: [ɵngcc5.NgIf, FocusableDirective, ɵngcc5.NgClass, ɵngcc8.DropDownListComponent],\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-filtercell-operator'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], FilterCellOperatorsComponent.prototype, \"hostClasses\", null);\n\n  __decorate([ViewChild('dropdown', {\n    static: false\n  }), __metadata(\"design:type\", DropDownListComponent)], FilterCellOperatorsComponent.prototype, \"dropdown\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], FilterCellOperatorsComponent.prototype, \"operators\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], FilterCellOperatorsComponent.prototype, \"showButton\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], FilterCellOperatorsComponent.prototype, \"showOperators\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], FilterCellOperatorsComponent.prototype, \"value\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], FilterCellOperatorsComponent.prototype, \"valueChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], FilterCellOperatorsComponent.prototype, \"clear\", void 0);\n\n  FilterCellOperatorsComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], FilterCellOperatorsComponent); // tslint:disable:no-access-missing-member\n\n  return FilterCellOperatorsComponent;\n})();\nconst stringOperators$1 = localizeOperators$1({\n  \"filterContainsOperator\": \"contains\",\n  \"filterNotContainsOperator\": \"doesnotcontain\",\n  // tslint:disable-next-line:object-literal-sort-keys\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  \"filterStartsWithOperator\": \"startswith\",\n  \"filterEndsWithOperator\": \"endswith\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\",\n  \"filterIsEmptyOperator\": \"isempty\",\n  \"filterIsNotEmptyOperator\": \"isnotempty\"\n});\n/**\n * @hidden\n */\n\nlet AutoCompleteFilterCellComponent = /*#__PURE__*/(() => {\n  let AutoCompleteFilterCellComponent = class AutoCompleteFilterCellComponent extends BaseFilterCellComponent {\n    constructor(filterService, column, localization) {\n      super(filterService);\n      this.localization = localization;\n      this.showOperators = true;\n      this.defaultOperators = stringOperators$1(this.localization);\n      this.column = column;\n    }\n\n    set valueField(value) {\n      this._valueField = value;\n    }\n\n    get valueField() {\n      return this._valueField ? this._valueField : this.column.field;\n    }\n\n    get currentFilter() {\n      return this.filterByField(this.column.field);\n    }\n\n    get currentOperator() {\n      return this.currentFilter ? this.currentFilter.operator : \"contains\";\n    }\n\n  };\n\n  AutoCompleteFilterCellComponent.ɵfac = function AutoCompleteFilterCellComponent_Factory(t) {\n    return new (t || AutoCompleteFilterCellComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(ColumnComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  AutoCompleteFilterCellComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: AutoCompleteFilterCellComponent,\n    selectors: [[\"kendo-grid-autocomplete-filter-cell\"]],\n    inputs: {\n      showOperators: \"showOperators\",\n      column: \"column\",\n      valueField: \"valueField\",\n      filter: \"filter\",\n      data: \"data\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 7,\n    consts: [[3, \"column\", \"filter\", \"operators\", \"showOperators\"], [\"kendoFilterInput\", \"\", 3, \"data\", \"valueField\", \"value\"]],\n    template: function AutoCompleteFilterCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n        ɵngcc0.ɵɵelement(1, \"kendo-autocomplete\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"showOperators\", ctx.showOperators);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"data\", ctx.data)(\"valueField\", ctx.valueField)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value);\n      }\n    },\n    directives: [FilterCellWrapperComponent, ɵngcc8.AutoCompleteComponent, FilterInputDirective],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], AutoCompleteFilterCellComponent.prototype, \"showOperators\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], AutoCompleteFilterCellComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], AutoCompleteFilterCellComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], AutoCompleteFilterCellComponent.prototype, \"data\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], AutoCompleteFilterCellComponent.prototype, \"valueField\", null);\n\n  AutoCompleteFilterCellComponent = __decorate([__metadata(\"design:paramtypes\", [FilterService, ColumnComponent, LocalizationService])], AutoCompleteFilterCellComponent); // tslint:disable:no-access-missing-member\n\n  /**\n   * @hidden\n   */\n\n  return AutoCompleteFilterCellComponent;\n})();\nlet BooleanFilterComponent = /*#__PURE__*/(() => {\n  class BooleanFilterComponent extends BaseFilterCellComponent {\n    constructor(filterService, localization) {\n      super(filterService);\n      this.localization = localization;\n      /**\n       * @hidden\n       */\n\n      this.operator = \"eq\";\n      /**\n       * @hidden\n       */\n\n      this.items = [{\n        text: this.localization.get(\"filterIsTrue\"),\n        value: true\n      }, {\n        text: this.localization.get(\"filterIsFalse\"),\n        value: false\n      }];\n      /**\n       * @hidden\n       */\n\n      this.defaultItem = {\n        text: this.localization.get(\"filterBooleanAll\"),\n        value: null\n      };\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hostClasses() {\n      return true;\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n\n\n    get currentFilter() {\n      return this.filterByField(this.column.field);\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n\n\n    get currentOperator() {\n      return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n\n    ngOnInit() {\n      this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      super.ngOnDestroy();\n    }\n\n    localizationChange() {\n      this.items = [{\n        text: this.localization.get(\"filterIsTrue\"),\n        value: true\n      }, {\n        text: this.localization.get(\"filterIsFalse\"),\n        value: false\n      }];\n      this.defaultItem = {\n        text: this.localization.get(\"filterBooleanAll\"),\n        value: null\n      };\n    }\n\n  }\n\n  BooleanFilterComponent.ɵfac = function BooleanFilterComponent_Factory(t) {\n    ɵngcc0.ɵɵinvalidFactory();\n  };\n\n  BooleanFilterComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: BooleanFilterComponent,\n    hostVars: 2,\n    hostBindings: function BooleanFilterComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-filtercell-boolean\", ctx.hostClasses);\n      }\n    },\n    inputs: {\n      column: \"column\",\n      filter: \"filter\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([HostBinding('class.k-filtercell-boolean'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], BooleanFilterComponent.prototype, \"hostClasses\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], BooleanFilterComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], BooleanFilterComponent.prototype, \"filter\", void 0);\n  /**\n   * Represents a Boolean filter-cell component.\n   *\n   * @example\n   *\n   *  ```html-no-run\n   *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n   *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n   *          <kendo-grid-boolean-filter-cell\n   *              [column]=\"column\"\n   *              [filter]=\"filter\">\n   *          </kendo-grid-boolean-filter-cell>\n   *          </ng-template>\n   *      </kendo-grid-column>\n   *   ```\n   */\n\n\n  return BooleanFilterComponent;\n})();\nlet BooleanFilterCellComponent = /*#__PURE__*/(() => {\n  let BooleanFilterCellComponent = class BooleanFilterCellComponent extends BooleanFilterComponent {\n    constructor(filterService, localization, cd) {\n      super(filterService, localization);\n      this.cd = cd;\n    }\n\n    localizationChange() {\n      super.localizationChange();\n      this.cd.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n\n\n    get columnLabel() {\n      const localizationMsg = this.localization.get('filterInputLabel') || '';\n      const columnName = this.column.title || this.column.field;\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n  };\n\n  BooleanFilterCellComponent.ɵfac = function BooleanFilterCellComponent_Factory(t) {\n    return new (t || BooleanFilterCellComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  BooleanFilterCellComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BooleanFilterCellComponent,\n    selectors: [[\"kendo-grid-boolean-filter-cell\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 11,\n    consts: [[3, \"column\", \"filter\", \"showOperators\", \"defaultOperator\"], [\"kendoFilterInput\", \"\", \"kendoGridFocusable\", \"\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"columnLabel\", \"defaultItem\", \"data\", \"popupSettings\", \"valuePrimitive\", \"value\"]],\n    template: function BooleanFilterCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n        ɵngcc0.ɵɵelement(1, \"kendo-dropdownlist\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"showOperators\", false)(\"defaultOperator\", ctx.operator);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"columnLabel\", ctx.columnLabel)(\"defaultItem\", ctx.defaultItem)(\"data\", ctx.items)(\"popupSettings\", ɵngcc0.ɵɵpureFunction0(10, _c148))(\"valuePrimitive\", true)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value);\n      }\n    },\n    directives: [FilterCellWrapperComponent, ɵngcc8.DropDownListComponent, FilterInputDirective, FocusableDirective],\n    encapsulation: 2\n  });\n  BooleanFilterCellComponent = __decorate([__metadata(\"design:paramtypes\", [FilterService, LocalizationService, ChangeDetectorRef])], BooleanFilterCellComponent); // tslint:disable:no-access-missing-member\n\n  return BooleanFilterCellComponent;\n})();\nconst dateOperators = localizeOperators$1({\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  // tslint:disable-next-line:object-literal-sort-keys\n  \"filterAfterOrEqualOperator\": \"gte\",\n  \"filterAfterOperator\": \"gt\",\n  \"filterBeforeOrEqualOperator\": \"lte\",\n  \"filterBeforeOperator\": \"lt\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\"\n});\n/**\n * @hidden\n */\n\nlet DateFilterComponent = /*#__PURE__*/(() => {\n  class DateFilterComponent extends BaseFilterCellComponent {\n    constructor(filterService, localization) {\n      super(filterService);\n      this.localization = localization;\n      /**\n       * The default filter operator. Defaults to `contains`.\n       * @type {string}\n       */\n\n      this.operator = \"gte\";\n      /**\n       * Defines the active view that the calendar initially renders.\n       * By default, the active view is `month`.\n       *\n       * > You have to set `activeView` within the `topView`-`bottomView` range.\n       */\n\n      this.activeView = \"month\";\n      /**\n       * Defines the bottommost calendar view, to which the user can navigate.\n       */\n\n      this.bottomView = \"month\";\n      /**\n       * Defines the topmost calendar view, to which the user can navigate.\n       */\n\n      this.topView = \"century\";\n      /**\n       * Determines whether to display a week number column in the `month` view of the Calendar.\n       */\n\n      this.weekNumber = false;\n      this.defaultOperators = dateOperators(this.localization);\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n\n\n    get currentFilter() {\n      return this.filterByField(this.column.field);\n    }\n    /**\n     * Specifies the date format that is used when the component is not focused.\n     * By default, the `column.format` value is used (if set).\n     */\n\n\n    set format(value) {\n      this._format = value;\n    }\n    /**\n     * Specifies the date format that is used when the component is not focused.\n     * By default, the `column.format` value is used (if set).\n     *\n     * @readonly\n     * @type {string}\n     */\n\n\n    get format() {\n      return !isNullOrEmptyString(this._format) ? this._format : this.columnFormat;\n    }\n\n    get columnFormat() {\n      return this.column && !isNullOrEmptyString(this.column.format) ? extractFormat(this.column.format) : \"d\";\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n\n\n    get currentOperator() {\n      return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n\n    ngOnInit() {\n      this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      super.ngOnDestroy();\n    }\n\n    localizationChange() {\n      this.defaultOperators = dateOperators(this.localization);\n\n      if (this.operatorList.length) {\n        this.operators = toJSON(this.operatorList.toArray());\n      }\n    }\n\n  }\n\n  DateFilterComponent.ɵfac = function DateFilterComponent_Factory(t) {\n    ɵngcc0.ɵɵinvalidFactory();\n  };\n\n  DateFilterComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: DateFilterComponent,\n    inputs: {\n      operator: \"operator\",\n      activeView: \"activeView\",\n      bottomView: \"bottomView\",\n      topView: \"topView\",\n      weekNumber: \"weekNumber\",\n      format: \"format\",\n      column: \"column\",\n      filter: \"filter\",\n      min: \"min\",\n      max: \"max\",\n      formatPlaceholder: \"formatPlaceholder\",\n      placeholder: \"placeholder\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], DateFilterComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DateFilterComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DateFilterComponent.prototype, \"operator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DateFilterComponent.prototype, \"format\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Date)], DateFilterComponent.prototype, \"min\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Date)], DateFilterComponent.prototype, \"max\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DateFilterComponent.prototype, \"formatPlaceholder\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DateFilterComponent.prototype, \"placeholder\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DateFilterComponent.prototype, \"activeView\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DateFilterComponent.prototype, \"bottomView\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DateFilterComponent.prototype, \"topView\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], DateFilterComponent.prototype, \"weekNumber\", void 0);\n  /**\n   * Represents a date-filter cell component.\n   *\n   * @example\n   *\n   *  ```html-no-run\n   *      <kendo-grid-column field=\"OrderDate\" title=\"Order Date\">\n   *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n   *          <kendo-grid-date-filter-cell\n   *              [showOperators]=\"false\"\n   *              [column]=\"column\"\n   *              [filter]=\"filter\">\n   *          </kendo-grid-date-filter-cell>\n   *          </ng-template>\n   *      </kendo-grid-column>\n   *   ```\n   */\n\n\n  return DateFilterComponent;\n})();\nlet DateFilterCellComponent = /*#__PURE__*/(() => {\n  let DateFilterCellComponent = class DateFilterCellComponent extends DateFilterComponent {\n    constructor(filterService, localization) {\n      super(filterService, localization);\n      this.localization = localization;\n      /**\n       * Determines if the drop-down filter operators will be displayed. The default value is `true`.\n       * @type {boolean}\n       */\n\n      this.showOperators = true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    messageFor(key) {\n      return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get columnLabel() {\n      const localizationMsg = this.localization.get('filterInputLabel') || '';\n      const columnName = this.column.title || this.column.field;\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n  };\n\n  DateFilterCellComponent.ɵfac = function DateFilterCellComponent_Factory(t) {\n    return new (t || DateFilterCellComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  DateFilterCellComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DateFilterCellComponent,\n    selectors: [[\"kendo-grid-date-filter-cell\"]],\n    inputs: {\n      showOperators: \"showOperators\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 18,\n    consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"showOperators\"], [\"kendoFilterInput\", \"\", \"kendoGridFocusable\", \"\", 3, \"columnLabel\", \"value\", \"format\", \"formatPlaceholder\", \"placeholder\", \"activeView\", \"bottomView\", \"topView\", \"min\", \"max\", \"weekNumber\"], [3, \"toggle\", \"today\"]],\n    template: function DateFilterCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"kendo-datepicker\", 1);\n        ɵngcc0.ɵɵelement(2, \"kendo-datepicker-messages\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"showOperators\", ctx.showOperators);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"columnLabel\", ctx.columnLabel)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value)(\"format\", ctx.format)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"placeholder\", ctx.placeholder)(\"activeView\", ctx.activeView)(\"bottomView\", ctx.bottomView)(\"topView\", ctx.topView)(\"min\", ctx.min)(\"max\", ctx.max)(\"weekNumber\", ctx.weekNumber);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"toggle\", ctx.messageFor(\"filterDateToggle\"))(\"today\", ctx.messageFor(\"filterDateToday\"));\n      }\n    },\n    directives: [FilterCellWrapperComponent, ɵngcc9.DatePickerComponent, FilterInputDirective, FocusableDirective, ɵngcc9.DatePickerCustomMessagesComponent],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], DateFilterCellComponent.prototype, \"showOperators\", void 0);\n\n  DateFilterCellComponent = __decorate([__metadata(\"design:paramtypes\", [FilterService, LocalizationService])], DateFilterCellComponent);\n  /**\n   * @hidden\n   */\n\n  return DateFilterCellComponent;\n})();\nlet ColGroupComponent = /*#__PURE__*/(() => {\n  let ColGroupComponent = class ColGroupComponent {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.columns = [];\n      this.groups = [];\n    }\n\n    get columnsToRender() {\n      return columnsToRender(this.columns);\n    }\n\n    trackBy(index, _item) {\n      return index;\n    }\n\n  };\n\n  ColGroupComponent.ɵfac = function ColGroupComponent_Factory(t) {\n    return new (t || ColGroupComponent)();\n  };\n\n  ColGroupComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ColGroupComponent,\n    selectors: [[\"\", \"kendoGridColGroup\", \"\"]],\n    inputs: {\n      columns: \"columns\",\n      groups: \"groups\",\n      detailTemplate: \"detailTemplate\"\n    },\n    attrs: _c150,\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ngIf\"], [3, \"k-group-col\", 4, \"ngFor\", \"ngForOf\"], [3, \"k-hierarchy-col\", 4, \"ngIf\"], [3, \"width\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"]],\n    template: function ColGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ColGroupComponent_ng_template_0_Template, 3, 4, \"ng-template\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", true);\n      }\n    },\n    directives: [ɵngcc5.NgIf, ɵngcc5.NgForOf],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], ColGroupComponent.prototype, \"columns\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], ColGroupComponent.prototype, \"groups\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", DetailTemplateDirective)], ColGroupComponent.prototype, \"detailTemplate\", void 0);\n  /**\n   * @hidden\n   */\n\n\n  return ColGroupComponent;\n})();\nlet LoadingComponent = /*#__PURE__*/(() => {\n  let LoadingComponent = class LoadingComponent {\n    constructor(localization) {\n      this.localization = localization;\n      this.hostClass = true;\n    }\n\n    get loadingText() {\n      return this.localization.get('loading');\n    }\n\n  };\n\n  LoadingComponent.ɵfac = function LoadingComponent_Factory(t) {\n    return new (t || LoadingComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  LoadingComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LoadingComponent,\n    selectors: [[\"\", \"kendoGridLoading\", \"\"]],\n    hostVars: 2,\n    hostBindings: function LoadingComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-loading-mask\", ctx.hostClass);\n      }\n    },\n    attrs: _c151,\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"k-loading-text\"], [1, \"k-loading-image\"], [1, \"k-loading-color\"]],\n    template: function LoadingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.loadingText);\n      }\n    },\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-loading-mask'), __metadata(\"design:type\", Boolean)], LoadingComponent.prototype, \"hostClass\", void 0);\n\n  LoadingComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], LoadingComponent);\n  /**\n   * @hidden\n   */\n\n  return LoadingComponent;\n})();\nlet ResizableContainerDirective = /*#__PURE__*/(() => {\n  let ResizableContainerDirective = class ResizableContainerDirective {\n    constructor(el, renderer, resizeService, grid) {\n      this.el = el;\n      this.renderer = renderer;\n      this.resizeService = resizeService;\n      this.grid = grid;\n      this.enabled = false;\n    }\n\n    set lockedWidth(value) {\n      this._lockedWidth = value;\n\n      if (this.enabled) {\n        this.attachResize();\n        this.resize();\n      }\n    }\n\n    set kendoGridResizableContainer(enabled) {\n      const refresh = enabled !== this.enabled;\n      this.enabled = enabled;\n\n      if (refresh) {\n        this.attachResize();\n        this.resize();\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.resizeSubscription) {\n        this.resizeSubscription.unsubscribe();\n      }\n    }\n\n    attachResize() {\n      if (this.resizeSubscription && !this.enabled) {\n        this.resizeSubscription.unsubscribe();\n        this.resizeSubscription = null;\n      }\n\n      if (!this.resizeSubscription && this.enabled) {\n        this.resizeSubscription = this.resizeService.changes.subscribe(this.resize.bind(this));\n      }\n    }\n\n    resize() {\n      if (this.grid && this.grid.wrapper) {\n        const containerElement = this.grid.wrapper.nativeElement;\n        const width = Math.max(containerElement.clientWidth - this._lockedWidth, 0);\n\n        if (this.enabled && width > 0) {\n          this.renderer.setStyle(this.el.nativeElement, \"width\", width + \"px\");\n        } else {\n          this.renderer.setStyle(this.el.nativeElement, \"width\", \"\");\n        }\n      }\n    }\n\n  };\n\n  ResizableContainerDirective.ɵfac = function ResizableContainerDirective_Factory(t) {\n    return new (t || ResizableContainerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ResizeService), ɵngcc0.ɵɵdirectiveInject(GridComponent, 8));\n  };\n\n  ResizableContainerDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ResizableContainerDirective,\n    selectors: [[\"\", \"kendoGridResizableContainer\", \"\"]],\n    inputs: {\n      lockedWidth: \"lockedWidth\",\n      kendoGridResizableContainer: \"kendoGridResizableContainer\"\n    }\n  });\n\n  __decorate([Input('lockedWidth'), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], ResizableContainerDirective.prototype, \"lockedWidth\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], ResizableContainerDirective.prototype, \"kendoGridResizableContainer\", null);\n\n  ResizableContainerDirective = __decorate([__param(3, Optional()), __metadata(\"design:paramtypes\", [ElementRef, Renderer2, ResizeService, GridComponent])], ResizableContainerDirective);\n  /**\n   * @hidden\n   */\n\n  return ResizableContainerDirective;\n})();\nlet TemplateContextDirective = /*#__PURE__*/(() => {\n  let TemplateContextDirective = class TemplateContextDirective {\n    constructor(viewContainerRef) {\n      this.viewContainerRef = viewContainerRef;\n    }\n\n    set templateContext(context) {\n      this.removeView();\n\n      if (context.templateRef) {\n        this.insertedViewRef = this.viewContainerRef.createEmbeddedView(context.templateRef, context);\n      }\n    }\n\n    ngOnDestroy() {\n      this.removeView();\n    }\n\n    removeView() {\n      if (this.insertedViewRef) {\n        this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.insertedViewRef));\n        this.insertedViewRef = undefined;\n      }\n    }\n\n  };\n\n  TemplateContextDirective.ɵfac = function TemplateContextDirective_Factory(t) {\n    return new (t || TemplateContextDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n  };\n\n  TemplateContextDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TemplateContextDirective,\n    selectors: [[\"\", \"templateContext\", \"\"]],\n    inputs: {\n      templateContext: \"templateContext\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], TemplateContextDirective.prototype, \"templateContext\", null);\n\n  TemplateContextDirective = __decorate([__metadata(\"design:paramtypes\", [ViewContainerRef])], TemplateContextDirective);\n  /**\n   * @hidden\n   */\n\n  return TemplateContextDirective;\n})();\nlet FocusGroup = /*#__PURE__*/(() => {\n  let FocusGroup = class FocusGroup {\n    constructor(root) {\n      this.root = root;\n      this.active = true;\n      this.children = [];\n      this.root.registerGroup(this);\n    }\n\n    get focusableChildren() {\n      return this.children.filter(el => el.canFocus());\n    }\n\n    get isActive() {\n      return this.active;\n    }\n\n    ngOnDestroy() {\n      this.root.unregisterGroup(this);\n    }\n\n    registerElement(element) {\n      this.unregisterElement(element);\n      this.children.push(element);\n    }\n\n    unregisterElement(element) {\n      this.children = this.children.filter(f => f !== element);\n    }\n    /**\n     * Returns a Boolean value which indicates if the group will receive focus when the cell is focused.\n     * Requires a single \"simple\" focusable element such as a button or a checkbox.\n     */\n\n\n    isNavigable() {\n      const focusable = this.focusableChildren;\n      return focusable.length === 1 && focusable[0].isNavigable();\n    }\n\n    canFocus() {\n      return this.focusableChildren.length > 0;\n    }\n\n    focus() {\n      if (this.canFocus() && !this.hasFocus()) {\n        this.focusableChildren[0].focus();\n      }\n    }\n\n    activate() {\n      this.toggleState(true);\n    }\n\n    deactivate() {\n      this.toggleState(false);\n    }\n\n    hasFocus() {\n      return this.children.reduce((focused, element) => focused || element.hasFocus(), false);\n    }\n\n    toggleState(active) {\n      if (this.active !== active) {\n        this.active = active;\n        this.children.forEach(f => f.toggle(active));\n      }\n    }\n\n  };\n\n  FocusGroup.ɵfac = function FocusGroup_Factory(t) {\n    return new (t || FocusGroup)(ɵngcc0.ɵɵinject(FocusRoot));\n  };\n\n  FocusGroup.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: FocusGroup,\n    factory: function (t) {\n      return FocusGroup.ɵfac(t);\n    }\n  });\n  FocusGroup = __decorate([__metadata(\"design:paramtypes\", [FocusRoot])], FocusGroup);\n  return FocusGroup;\n})();\nlet id = 0;\n\nfunction nextId() {\n  return id++;\n}\n/**\n * @hidden\n */\n\n\nlet LogicalCellDirective = /*#__PURE__*/(() => {\n  let LogicalCellDirective = class LogicalCellDirective {\n    constructor(focusGroup, element, columnInfoService, idService, navigationService, renderer, zone, cellContext) {\n      this.focusGroup = focusGroup;\n      this.element = element;\n      this.columnInfoService = columnInfoService;\n      this.idService = idService;\n      this.navigationService = navigationService;\n      this.renderer = renderer;\n      this.zone = zone;\n      this.cellContext = cellContext;\n      this.logicalSlaveCell = false;\n      this.colSpan = 1;\n      this.rowSpan = 1;\n      this.dataRowIndex = -1;\n      this.detailExpandCell = false;\n      this.uid = nextId();\n    }\n\n    get id() {\n      if (!this.logicalSlaveCell && this.columnInfoService.isLocked) {\n        return this.idService.cellId(this.logicalRowIndex, this.logicalColIndex);\n      }\n    }\n\n    get ariaColIndex() {\n      if (this.logicalSlaveCell || this.logicalColIndex === -1) {\n        return undefined;\n      }\n\n      return this.logicalColIndex + 1;\n    }\n\n    ngOnInit() {\n      if (!this.navigationService.enabled) {\n        return;\n      }\n\n      this.navigationChange = this.navigationService.changes.subscribe(e => this.onNavigationChange(e));\n    }\n\n    ngDoCheck() {\n      if (!this.navigationService.enabled || this.logicalColIndex === -1) {\n        return;\n      }\n\n      if (this.cellContext) {\n        this.cellContext.focusGroup = this.focusGroup;\n      }\n\n      this.registerNoChanges();\n    }\n\n    ngOnChanges(changes) {\n      if (!this.navigationService.enabled) {\n        return;\n      }\n\n      const keys = Object.keys(changes);\n\n      if (keys.length === 1 && keys[0] === 'groupItem' || this.logicalColIndex === -1) {\n        // Ignore groupItem changes as the reference is not stable\n        return;\n      }\n\n      const indexChange = changes.logicalColIndex;\n      const rowIndexChange = changes.logicalRowIndex;\n      const index = indexChange && !indexChange.isFirstChange() ? indexChange.previousValue : this.logicalColIndex;\n      const rowIndex = rowIndexChange && !rowIndexChange.isFirstChange() ? rowIndexChange.previousValue : this.logicalRowIndex;\n      this.navigationService.unregisterCell(index, rowIndex, this);\n      this.registerChanges();\n      this.updateElement();\n    }\n\n    ngOnDestroy() {\n      if (this.navigationChange) {\n        this.navigationChange.unsubscribe();\n      }\n\n      this.navigationService.unregisterCell(this.logicalColIndex, this.logicalRowIndex, this);\n    }\n\n    onNavigationChange(e) {\n      const active = this.logicalColIndex === e.colIndex && this.logicalRowIndex === e.rowIndex;\n      const wasActive = this.logicalColIndex === e.prevColIndex && this.logicalRowIndex === e.prevRowIndex;\n\n      if (active || wasActive) {\n        this.updateElement();\n      }\n    }\n\n    updateElement() {\n      const el = this.element.nativeElement;\n      this.renderer.setAttribute(el, 'tabIndex', this.isFocusable() && !this.logicalSlaveCell ? '0' : '-1');\n\n      if (this.isFocused()) {\n        if (this.focusGroup.isNavigable()) {\n          this.focusGroup.focus();\n        } else {\n          if (!this.logicalSlaveCell && this.navigationService.autoFocusCell(this.logicalColIndex, this.logicalColIndex + this.colSpan - 1)) {\n            this.microtask(() => this.isFocused() && el.focus());\n          }\n\n          this.renderer.addClass(el, 'k-state-focused');\n        }\n\n        if (this.headerLabelText) {\n          el.setAttribute('aria-label', '');\n        }\n      } else {\n        this.renderer.removeClass(el, 'k-state-focused');\n\n        if (this.headerLabelText) {\n          el.setAttribute('aria-label', this.headerLabelText);\n        }\n      }\n    }\n\n    microtask(callback) {\n      this.zone.runOutsideAngular(() => Promise.resolve(null).then(callback));\n    }\n\n    registerChanges() {\n      if (!this.logicalSlaveCell) {\n        this.navigationService.registerCell(this);\n      }\n    }\n\n    registerNoChanges() {\n      if (!this.logicalSlaveCell) {\n        this.navigationService.registerCellOnCurrentRow(this);\n      }\n    }\n\n    isFocusable() {\n      return this.navigationService.isCellFocusable(this);\n    }\n\n    isFocused() {\n      return this.navigationService.isCellFocused(this);\n    }\n\n  };\n\n  LogicalCellDirective.ɵfac = function LogicalCellDirective_Factory(t) {\n    return new (t || LogicalCellDirective)(ɵngcc0.ɵɵdirectiveInject(FocusGroup), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService), ɵngcc0.ɵɵdirectiveInject(IdService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT, 8));\n  };\n\n  LogicalCellDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: LogicalCellDirective,\n    selectors: [[\"\", \"kendoGridLogicalCell\", \"\"]],\n    hostVars: 2,\n    hostBindings: function LogicalCellDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"aria-colindex\", ctx.ariaColIndex);\n      }\n    },\n    inputs: {\n      logicalSlaveCell: \"logicalSlaveCell\",\n      colSpan: \"colSpan\",\n      rowSpan: \"rowSpan\",\n      dataRowIndex: \"dataRowIndex\",\n      detailExpandCell: \"detailExpandCell\",\n      logicalColIndex: \"logicalColIndex\",\n      logicalRowIndex: \"logicalRowIndex\",\n      colIndex: \"colIndex\",\n      groupItem: \"groupItem\",\n      dataItem: \"dataItem\",\n      headerLabelText: \"headerLabelText\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: FocusGroup,\n      deps: [FocusRoot],\n      useClass: FocusGroup\n    }]), ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], LogicalCellDirective.prototype, \"logicalColIndex\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], LogicalCellDirective.prototype, \"logicalRowIndex\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], LogicalCellDirective.prototype, \"logicalSlaveCell\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], LogicalCellDirective.prototype, \"colIndex\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], LogicalCellDirective.prototype, \"colSpan\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], LogicalCellDirective.prototype, \"rowSpan\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], LogicalCellDirective.prototype, \"groupItem\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], LogicalCellDirective.prototype, \"dataRowIndex\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], LogicalCellDirective.prototype, \"dataItem\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], LogicalCellDirective.prototype, \"detailExpandCell\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], LogicalCellDirective.prototype, \"headerLabelText\", void 0);\n\n  __decorate([HostBinding('attr.id'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], LogicalCellDirective.prototype, \"id\", null);\n\n  __decorate([HostBinding('attr.aria-colindex'), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [])], LogicalCellDirective.prototype, \"ariaColIndex\", null);\n\n  LogicalCellDirective = __decorate([__param(7, Optional()), __param(7, Inject(CELL_CONTEXT)), __metadata(\"design:paramtypes\", [FocusGroup, ElementRef, ColumnInfoService, IdService, NavigationService, Renderer2, NgZone, Object])], LogicalCellDirective);\n  return LogicalCellDirective;\n})();\nlet id$1 = 0;\n\nfunction nextId$1() {\n  return id$1++;\n}\n/**\n * @hidden\n */\n\n\nlet LogicalRowDirective = /*#__PURE__*/(() => {\n  let LogicalRowDirective = class LogicalRowDirective {\n    constructor(idService, navigation) {\n      this.idService = idService;\n      this.navigation = navigation;\n      this.logicalSlaveRow = false;\n      this.logicalSlaveCellsCount = 0;\n      this.dataRowIndex = -1;\n      this.uid = nextId$1();\n    }\n\n    get hostRole() {\n      return this.logicalSlaveRow ? 'presentation' : 'row';\n    }\n\n    get ariaRowIndex() {\n      return this.logicalRowIndex + 1;\n    }\n\n    get ariaOwns() {\n      if (!this.navigation.enabled || this.logicalSlaveRow || this.logicalSlaveCellsCount === 0) {\n        return undefined;\n      }\n\n      const ids = [];\n      const total = this.logicalCellsCount + this.logicalSlaveCellsCount;\n\n      for (let cellIndex = this.logicalCellsCount; cellIndex < total; cellIndex++) {\n        ids.push(this.idService.cellId(this.logicalRowIndex, cellIndex));\n      }\n\n      return ids.join(' ');\n    }\n\n    ngOnChanges(changes) {\n      if (!this.navigation.enabled || this.logicalSlaveRow) {\n        return;\n      }\n\n      const indexChange = changes.logicalRowIndex;\n      const logicalSlaveRowChange = changes.logicalSlaveRow;\n\n      if (indexChange || logicalSlaveRowChange) {\n        const index = indexChange && !indexChange.isFirstChange() ? indexChange.previousValue : this.logicalRowIndex;\n        this.navigation.unregisterRow(index, this);\n        this.navigation.registerRow(this);\n      } else if (anyChanged(['dataRowIndex', 'dataItem'], changes)) {\n        this.navigation.updateRow(this);\n      }\n    }\n\n    ngOnDestroy() {\n      this.navigation.unregisterRow(this.logicalRowIndex, this);\n    }\n\n  };\n\n  LogicalRowDirective.ɵfac = function LogicalRowDirective_Factory(t) {\n    return new (t || LogicalRowDirective)(ɵngcc0.ɵɵdirectiveInject(IdService), ɵngcc0.ɵɵdirectiveInject(NavigationService));\n  };\n\n  LogicalRowDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: LogicalRowDirective,\n    selectors: [[\"\", \"kendoGridLogicalRow\", \"\"]],\n    hostVars: 3,\n    hostBindings: function LogicalRowDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.hostRole)(\"aria-rowindex\", ctx.ariaRowIndex)(\"aria-owns\", ctx.ariaOwns);\n      }\n    },\n    inputs: {\n      logicalSlaveRow: \"logicalSlaveRow\",\n      logicalSlaveCellsCount: \"logicalSlaveCellsCount\",\n      dataRowIndex: \"dataRowIndex\",\n      logicalRowIndex: \"logicalRowIndex\",\n      logicalCellsCount: \"logicalCellsCount\",\n      dataItem: \"dataItem\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], LogicalRowDirective.prototype, \"logicalRowIndex\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], LogicalRowDirective.prototype, \"logicalSlaveRow\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], LogicalRowDirective.prototype, \"logicalCellsCount\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], LogicalRowDirective.prototype, \"logicalSlaveCellsCount\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], LogicalRowDirective.prototype, \"dataRowIndex\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], LogicalRowDirective.prototype, \"dataItem\", void 0);\n\n  __decorate([HostBinding('attr.role'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], LogicalRowDirective.prototype, \"hostRole\", null);\n\n  __decorate([HostBinding('attr.aria-rowindex'), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [])], LogicalRowDirective.prototype, \"ariaRowIndex\", null);\n\n  __decorate([HostBinding('attr.aria-owns'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], LogicalRowDirective.prototype, \"ariaOwns\", null);\n\n  LogicalRowDirective = __decorate([__metadata(\"design:paramtypes\", [IdService, NavigationService])], LogicalRowDirective);\n  return LogicalRowDirective;\n})();\nconst FORMAT_REGEX = /\\{\\d+:?/;\n/**\n * @hidden\n */\n\nlet FieldAccessorPipe = /*#__PURE__*/(() => {\n  let FieldAccessorPipe = class FieldAccessorPipe {\n    constructor(intlService) {\n      this.intlService = intlService;\n    }\n\n    transform(dataItem, fieldName, format) {\n      if (!isNullOrEmptyString(fieldName)) {\n        const value = getter(fieldName)(dataItem);\n\n        if (!isNullOrEmptyString(format)) {\n          return this.formatValue(format, value);\n        }\n\n        return value;\n      }\n\n      return dataItem;\n    }\n\n    formatValue(format, value) {\n      const intl = this.intlService;\n\n      if (isString(format) && format.match(FORMAT_REGEX)) {\n        return intl.format(format, value);\n      }\n\n      return intl.toString(value, format);\n    }\n\n  };\n\n  FieldAccessorPipe.ɵfac = function FieldAccessorPipe_Factory(t) {\n    return new (t || FieldAccessorPipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc10.IntlService, 16));\n  };\n\n  FieldAccessorPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n    name: \"valueOf\",\n    type: FieldAccessorPipe,\n    pure: false\n  });\n  FieldAccessorPipe = __decorate([__metadata(\"design:paramtypes\", [IntlService])], FieldAccessorPipe);\n  /**\n   * @hidden\n   */\n\n  return FieldAccessorPipe;\n})();\n\nconst columnsToResize = ({\n  columns\n}) => Math.max(1, resizableColumns(columns).length);\n/**\n * @hidden\n */\n\n\nconst row = selector => element => element.querySelector(selector);\n/**\n * @hidden\n */\n\n\nconst headerRow = index => element => element.querySelectorAll('thead>tr')[index];\n/**\n * @hidden\n */\n\n\nconst cell = (index, selector = 'td') => element => element.querySelectorAll(`${selector}:not(.k-group-cell):not(.k-hierarchy-cell)`)[index];\n/**\n * @hidden\n */\n\n\nconst offsetWidth = element => element.offsetWidth;\n/**\n * @hidden\n */\n\n\nconst pipe = (...fns) => data => fns.reduce((state$$1, fn) => state$$1 ? fn(state$$1) : 0, data);\n/**\n * @hidden\n */\n\n\nlet TableDirective = /*#__PURE__*/(() => {\n  let TableDirective = class TableDirective {\n    constructor(element, renderer, service, zone, cdr) {\n      this.element = element;\n      this.renderer = renderer;\n      this.service = service;\n      this.zone = zone;\n      this.cdr = cdr;\n      this.locked = false;\n      this.firstResize = false;\n    }\n\n    get minWidth() {\n      return this.firstResize ? 0 : null;\n    }\n\n    ngOnInit() {\n      const obs = this.service.changes.pipe(filter(e => this.locked === e.locked));\n      this.subscription = obs.pipe(filter(e => e.type === 'start'), tap(this.initState.bind(this)), map(columnsToResize), switchMap(take$$1 => obs.pipe(filter(e => e.type === 'resizeTable'), map(e => e.delta), bufferCount(take$$1)))).subscribe(this.resize.bind(this));\n      this.autoFitSubscription = this.service.registerTable({\n        autoFit: this.autoFitObservable.bind(this),\n        locked: this.locked\n      });\n    }\n\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      if (this.autoFitSubscription) {\n        this.autoFitSubscription();\n        this.autoFitSubscription = null;\n      }\n    }\n\n    initState() {\n      this.firstResize = true;\n\n      if (!this.virtualColumns || this.locked) {\n        this.originalWidth = offsetWidth(this.element.nativeElement);\n      }\n    }\n\n    resize(deltas) {\n      if (!this.virtualColumns || this.locked) {\n        const delta = deltas.reduce((sum, item) => sum + item, 0);\n        const width = this.originalWidth + delta;\n        this.renderer.setStyle(this.element.nativeElement, 'width', width + 'px');\n      }\n\n      this.cdr.detectChanges();\n    }\n\n    autoFitObservable(columnInfo) {\n      return Observable.create(observer => {\n        this.zone.runOutsideAngular(() => {\n          this.renderer.addClass(this.element.nativeElement, 'k-autofitting');\n          this.cdr.detectChanges();\n          const widths = columnInfo.map(this.measureColumn.bind(this));\n          this.renderer.removeClass(this.element.nativeElement, 'k-autofitting');\n          observer.next(widths);\n        });\n      });\n    }\n\n    measureColumn(info) {\n      const dom = this.element.nativeElement;\n      const header = pipe(headerRow(info.level), cell(info.headerIndex, 'th'), offsetWidth)(dom);\n      let data = 0;\n\n      if (!info.isParentSpan || info.isParentSpan && info.isLastInSpan) {\n        data = pipe(row('tbody>tr:not(.k-grouping-row):not(.k-grid-norecords)'), cell(info.index), offsetWidth)(dom);\n      }\n\n      const footer = pipe(row('tfoot>tr'), cell(info.index), offsetWidth)(dom);\n      return Math.max(header, data, footer);\n    }\n\n  };\n\n  TableDirective.ɵfac = function TableDirective_Factory(t) {\n    return new (t || TableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ColumnResizingService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  TableDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TableDirective,\n    selectors: [[\"table\"]],\n    hostVars: 2,\n    hostBindings: function TableDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"min-width\", ctx.minWidth);\n      }\n    },\n    inputs: {\n      locked: \"locked\",\n      virtualColumns: \"virtualColumns\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], TableDirective.prototype, \"locked\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], TableDirective.prototype, \"virtualColumns\", void 0);\n\n  __decorate([HostBinding('style.min-width'), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [])], TableDirective.prototype, \"minWidth\", null);\n\n  TableDirective = __decorate([__metadata(\"design:paramtypes\", [ElementRef, Renderer2, ColumnResizingService, NgZone, ChangeDetectorRef])], TableDirective);\n  return TableDirective;\n})();\nconst exportedModules = [ColumnComponent, ColumnGroupComponent, LogicalCellDirective, LogicalRowDirective, FocusableDirective, FooterTemplateDirective, ColGroupComponent, ResizableContainerDirective, TemplateContextDirective, FieldAccessorPipe, DetailTemplateDirective, SpanColumnComponent, TableDirective, LoadingComponent];\n/**\n * @hidden\n */\n\nlet SharedModule = /*#__PURE__*/(() => {\n  let SharedModule = class SharedModule {\n    static exports() {\n      return [ColumnComponent, SpanColumnComponent, ColumnGroupComponent, FooterTemplateDirective, DetailTemplateDirective, FocusableDirective];\n    }\n\n  };\n\n  SharedModule.ɵfac = function SharedModule_Factory(t) {\n    return new (t || SharedModule)();\n  };\n\n  SharedModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: SharedModule\n  });\n  SharedModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule], DraggableModule, EventsModule]\n  });\n  return SharedModule;\n})();\nvar ContainsFilterOperatorComponent_1;\n/**\n * Represents the `Contains` (**Contains**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet ContainsFilterOperatorComponent = ContainsFilterOperatorComponent_1 = class ContainsFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"contains\", localization);\n  }\n\n};\n\nContainsFilterOperatorComponent.ɵfac = function ContainsFilterOperatorComponent_Factory(t) {\n  return new (t || ContainsFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nContainsFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: ContainsFilterOperatorComponent,\n  selectors: [[\"kendo-filter-contains-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => ContainsFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ContainsFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nContainsFilterOperatorComponent = ContainsFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], ContainsFilterOperatorComponent);\nvar DoesNotContainFilterOperatorComponent_1;\n/**\n * Represents the `DoesNotContain` (**Does not contain**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet DoesNotContainFilterOperatorComponent = DoesNotContainFilterOperatorComponent_1 = class DoesNotContainFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"doesnotcontain\", localization);\n  }\n\n};\n\nDoesNotContainFilterOperatorComponent.ɵfac = function DoesNotContainFilterOperatorComponent_Factory(t) {\n  return new (t || DoesNotContainFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nDoesNotContainFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: DoesNotContainFilterOperatorComponent,\n  selectors: [[\"kendo-filter-not-contains-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => DoesNotContainFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function DoesNotContainFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nDoesNotContainFilterOperatorComponent = DoesNotContainFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], DoesNotContainFilterOperatorComponent);\nvar EndsWithFilterOperatorComponent_1;\n/**\n * Represents the `EndsWith` (**Ends with**) string filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet EndsWithFilterOperatorComponent = EndsWithFilterOperatorComponent_1 = class EndsWithFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"endswith\", localization);\n  }\n\n};\n\nEndsWithFilterOperatorComponent.ɵfac = function EndsWithFilterOperatorComponent_Factory(t) {\n  return new (t || EndsWithFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nEndsWithFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: EndsWithFilterOperatorComponent,\n  selectors: [[\"kendo-filter-endswith-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => EndsWithFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function EndsWithFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nEndsWithFilterOperatorComponent = EndsWithFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], EndsWithFilterOperatorComponent);\nvar EqualFilterOperatorComponent_1;\n/**\n * Represents the `Equal` (**Is equal to**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet EqualFilterOperatorComponent = EqualFilterOperatorComponent_1 = class EqualFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"eq\", localization);\n  }\n\n};\n\nEqualFilterOperatorComponent.ɵfac = function EqualFilterOperatorComponent_Factory(t) {\n  return new (t || EqualFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nEqualFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: EqualFilterOperatorComponent,\n  selectors: [[\"kendo-filter-eq-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => EqualFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function EqualFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nEqualFilterOperatorComponent = EqualFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], EqualFilterOperatorComponent);\nvar IsEmptyFilterOperatorComponent_1;\n/**\n * Represents the `IsEmpty` (**Is empty**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet IsEmptyFilterOperatorComponent = IsEmptyFilterOperatorComponent_1 = class IsEmptyFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"isempty\", localization);\n  }\n\n};\n\nIsEmptyFilterOperatorComponent.ɵfac = function IsEmptyFilterOperatorComponent_Factory(t) {\n  return new (t || IsEmptyFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nIsEmptyFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: IsEmptyFilterOperatorComponent,\n  selectors: [[\"kendo-filter-isempty-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => IsEmptyFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function IsEmptyFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nIsEmptyFilterOperatorComponent = IsEmptyFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], IsEmptyFilterOperatorComponent);\nvar IsNotEmptyFilterOperatorComponent_1;\n/**\n * Represents the `IsNotEmpty` (**Is not empty**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet IsNotEmptyFilterOperatorComponent = IsNotEmptyFilterOperatorComponent_1 = class IsNotEmptyFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"isnotempty\", localization);\n  }\n\n};\n\nIsNotEmptyFilterOperatorComponent.ɵfac = function IsNotEmptyFilterOperatorComponent_Factory(t) {\n  return new (t || IsNotEmptyFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nIsNotEmptyFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: IsNotEmptyFilterOperatorComponent,\n  selectors: [[\"kendo-filter-isnotempty-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => IsNotEmptyFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function IsNotEmptyFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nIsNotEmptyFilterOperatorComponent = IsNotEmptyFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], IsNotEmptyFilterOperatorComponent);\nvar IsNotNullFilterOperatorComponent_1;\n/**\n * Represents the `IsNotNull` (**Is not null**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet IsNotNullFilterOperatorComponent = IsNotNullFilterOperatorComponent_1 = class IsNotNullFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"isnotnull\", localization);\n  }\n\n};\n\nIsNotNullFilterOperatorComponent.ɵfac = function IsNotNullFilterOperatorComponent_Factory(t) {\n  return new (t || IsNotNullFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nIsNotNullFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: IsNotNullFilterOperatorComponent,\n  selectors: [[\"kendo-filter-isnotnull-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => IsNotNullFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function IsNotNullFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nIsNotNullFilterOperatorComponent = IsNotNullFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], IsNotNullFilterOperatorComponent);\nvar IsNullFilterOperatorComponent_1;\n/**\n * Represents the `IsNull` (**Is null**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet IsNullFilterOperatorComponent = IsNullFilterOperatorComponent_1 = class IsNullFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"isnull\", localization);\n  }\n\n};\n\nIsNullFilterOperatorComponent.ɵfac = function IsNullFilterOperatorComponent_Factory(t) {\n  return new (t || IsNullFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nIsNullFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: IsNullFilterOperatorComponent,\n  selectors: [[\"kendo-filter-isnull-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => IsNullFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function IsNullFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nIsNullFilterOperatorComponent = IsNullFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], IsNullFilterOperatorComponent);\nvar NotEqualFilterOperatorComponent_1;\n/**\n * Represents the `NotEqual` (**Is not equal to**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet NotEqualFilterOperatorComponent = NotEqualFilterOperatorComponent_1 = class NotEqualFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"neq\", localization);\n  }\n\n};\n\nNotEqualFilterOperatorComponent.ɵfac = function NotEqualFilterOperatorComponent_Factory(t) {\n  return new (t || NotEqualFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nNotEqualFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NotEqualFilterOperatorComponent,\n  selectors: [[\"kendo-filter-neq-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => NotEqualFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function NotEqualFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nNotEqualFilterOperatorComponent = NotEqualFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], NotEqualFilterOperatorComponent);\nvar StartsWithFilterOperatorComponent_1;\n/**\n * Represents the `StartsWith` (**Starts with**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet StartsWithFilterOperatorComponent = StartsWithFilterOperatorComponent_1 = class StartsWithFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"startswith\", localization);\n  }\n\n};\n\nStartsWithFilterOperatorComponent.ɵfac = function StartsWithFilterOperatorComponent_Factory(t) {\n  return new (t || StartsWithFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nStartsWithFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: StartsWithFilterOperatorComponent,\n  selectors: [[\"kendo-filter-startswith-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => StartsWithFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function StartsWithFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nStartsWithFilterOperatorComponent = StartsWithFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], StartsWithFilterOperatorComponent);\nvar GreaterFilterOperatorComponent_1;\n/*\n * Represents the `Greater` (**Is greater than**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet GreaterFilterOperatorComponent = GreaterFilterOperatorComponent_1 = class GreaterFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"gt\", localization);\n  }\n\n};\n\nGreaterFilterOperatorComponent.ɵfac = function GreaterFilterOperatorComponent_Factory(t) {\n  return new (t || GreaterFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nGreaterFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: GreaterFilterOperatorComponent,\n  selectors: [[\"kendo-filter-gt-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => GreaterFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function GreaterFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nGreaterFilterOperatorComponent = GreaterFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], GreaterFilterOperatorComponent);\nvar GreaterOrEqualToFilterOperatorComponent_1;\n/**\n * Represents the `GreaterOrEqualTo` (**Is greater than or equal to**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet GreaterOrEqualToFilterOperatorComponent = GreaterOrEqualToFilterOperatorComponent_1 = class GreaterOrEqualToFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"gte\", localization);\n  }\n\n};\n\nGreaterOrEqualToFilterOperatorComponent.ɵfac = function GreaterOrEqualToFilterOperatorComponent_Factory(t) {\n  return new (t || GreaterOrEqualToFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nGreaterOrEqualToFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: GreaterOrEqualToFilterOperatorComponent,\n  selectors: [[\"kendo-filter-gte-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => GreaterOrEqualToFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function GreaterOrEqualToFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nGreaterOrEqualToFilterOperatorComponent = GreaterOrEqualToFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], GreaterOrEqualToFilterOperatorComponent);\nvar LessFilterOperatorComponent_1;\n/*\n * Represents the `Less` (**Is less than**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet LessFilterOperatorComponent = LessFilterOperatorComponent_1 = class LessFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"lt\", localization);\n  }\n\n};\n\nLessFilterOperatorComponent.ɵfac = function LessFilterOperatorComponent_Factory(t) {\n  return new (t || LessFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nLessFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: LessFilterOperatorComponent,\n  selectors: [[\"kendo-filter-lt-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => LessFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function LessFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nLessFilterOperatorComponent = LessFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], LessFilterOperatorComponent);\nvar LessOrEqualToFilterOperatorComponent_1;\n/*\n * Represents the `LessOrEqualTo` (**Is less than or equal to**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet LessOrEqualToFilterOperatorComponent = LessOrEqualToFilterOperatorComponent_1 = class LessOrEqualToFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"lte\", localization);\n  }\n\n};\n\nLessOrEqualToFilterOperatorComponent.ɵfac = function LessOrEqualToFilterOperatorComponent_Factory(t) {\n  return new (t || LessOrEqualToFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nLessOrEqualToFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: LessOrEqualToFilterOperatorComponent,\n  selectors: [[\"kendo-filter-lte-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => LessOrEqualToFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function LessOrEqualToFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nLessOrEqualToFilterOperatorComponent = LessOrEqualToFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], LessOrEqualToFilterOperatorComponent);\nvar AfterFilterOperatorComponent_1;\n/*\n * Represents the `Greater` (**Is after**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet AfterFilterOperatorComponent = AfterFilterOperatorComponent_1 = class AfterFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"after\", localization);\n  }\n  /**\n   * @hidden\n   */\n\n\n  toJSON() {\n    return {\n      text: this.text,\n      value: \"gt\"\n    };\n  }\n\n};\n\nAfterFilterOperatorComponent.ɵfac = function AfterFilterOperatorComponent_Factory(t) {\n  return new (t || AfterFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nAfterFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: AfterFilterOperatorComponent,\n  selectors: [[\"kendo-filter-after-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => AfterFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function AfterFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nAfterFilterOperatorComponent = AfterFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], AfterFilterOperatorComponent);\nvar AfterEqFilterOperatorComponent_1;\n/*\n * Represents the `GreaterOrEqualTo` (**Is after or equal to**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet AfterEqFilterOperatorComponent = AfterEqFilterOperatorComponent_1 = class AfterEqFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"after-eq\", localization);\n  }\n  /**\n   * @hidden\n   */\n\n\n  toJSON() {\n    return {\n      text: this.text,\n      value: \"gte\"\n    };\n  }\n\n};\n\nAfterEqFilterOperatorComponent.ɵfac = function AfterEqFilterOperatorComponent_Factory(t) {\n  return new (t || AfterEqFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nAfterEqFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: AfterEqFilterOperatorComponent,\n  selectors: [[\"kendo-filter-after-eq-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => AfterEqFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function AfterEqFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nAfterEqFilterOperatorComponent = AfterEqFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], AfterEqFilterOperatorComponent);\nvar BeforeEqFilterOperatorComponent_1;\n/*\n * Represents the `LessOrEqualTo` (**Is before or equal to**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet BeforeEqFilterOperatorComponent = BeforeEqFilterOperatorComponent_1 = class BeforeEqFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"before-eq\", localization);\n  }\n  /**\n   * @hidden\n   */\n\n\n  toJSON() {\n    return {\n      text: this.text,\n      value: \"lte\"\n    };\n  }\n\n};\n\nBeforeEqFilterOperatorComponent.ɵfac = function BeforeEqFilterOperatorComponent_Factory(t) {\n  return new (t || BeforeEqFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nBeforeEqFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: BeforeEqFilterOperatorComponent,\n  selectors: [[\"kendo-filter-before-eq-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => BeforeEqFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function BeforeEqFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nBeforeEqFilterOperatorComponent = BeforeEqFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], BeforeEqFilterOperatorComponent);\nvar BeforeFilterOperatorComponent_1;\n/*\n * Represents the `Less then` (**Is before**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\nlet BeforeFilterOperatorComponent = BeforeFilterOperatorComponent_1 = class BeforeFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"before\", localization);\n  }\n  /**\n   * @hidden\n   */\n\n\n  toJSON() {\n    return {\n      text: this.text,\n      value: \"lt\"\n    };\n  }\n\n};\n\nBeforeFilterOperatorComponent.ɵfac = function BeforeFilterOperatorComponent_Factory(t) {\n  return new (t || BeforeFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nBeforeFilterOperatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: BeforeFilterOperatorComponent,\n  selectors: [[\"kendo-filter-before-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => BeforeFilterOperatorComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function BeforeFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nBeforeFilterOperatorComponent = BeforeFilterOperatorComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], BeforeFilterOperatorComponent);\nconst FILTER_OPERATORS = [FilterCellOperatorsComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, AfterFilterOperatorComponent, AfterEqFilterOperatorComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent];\nconst importedModules = [CommonModule, ReactiveFormsModule, FormsModule, DropDownListModule, AutoCompleteModule, InputsModule, DatePickerModule, PopupModule, SharedModule];\nconst COMPONENTS = [FilterInputDirective];\n/**\n * @hidden\n */\n\nlet SharedFilterModule = /*#__PURE__*/(() => {\n  let SharedFilterModule = class SharedFilterModule {\n    static exports() {\n      return [...FILTER_OPERATORS];\n    }\n\n  };\n\n  SharedFilterModule.ɵfac = function SharedFilterModule_Factory(t) {\n    return new (t || SharedFilterModule)();\n  };\n\n  SharedFilterModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: SharedFilterModule\n  });\n  SharedFilterModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[...importedModules], CommonModule, ReactiveFormsModule, FormsModule, DropDownListModule, AutoCompleteModule, InputsModule, DatePickerModule, PopupModule, SharedModule]\n  });\n  /**\n   * @hidden\n   */\n\n  return SharedFilterModule;\n})();\nlet FilterHostDirective = /*#__PURE__*/(() => {\n  class FilterHostDirective {\n    constructor(host, resolver) {\n      this.host = host;\n      this.resolver = resolver;\n    }\n\n    ngOnInit() {\n      this.component = this.host.createComponent(this.resolver.resolveComponentFactory(this.componentType()));\n      this.initComponent({\n        column: this.column,\n        filter: this.filter\n      });\n    }\n\n    ngOnDestroy() {\n      if (this.component) {\n        this.component.destroy();\n        this.component = null;\n      }\n    }\n\n    ngOnChanges(changes) {\n      if (anyChanged([\"column\", \"filter\"], changes)) {\n        this.initComponent({\n          column: this.column,\n          filter: this.filter\n        });\n      }\n    }\n\n    initComponent({\n      column,\n      filter: filter$$1\n    }) {\n      const instance = this.component.instance;\n      instance.column = column;\n      instance.filter = filter$$1;\n    }\n\n  }\n\n  FilterHostDirective.ɵfac = function FilterHostDirective_Factory(t) {\n    ɵngcc0.ɵɵinvalidFactory();\n  };\n\n  FilterHostDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FilterHostDirective,\n    inputs: {\n      column: \"column\",\n      filter: \"filter\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], FilterHostDirective.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], FilterHostDirective.prototype, \"filter\", void 0);\n  /**\n   * @hidden\n   *\n   * > List the following components in the GridModule as `entryComponents`.\n   */\n\n\n  return FilterHostDirective;\n})();\n\nconst filterComponentFactory = type => ({\n  \"boolean\": BooleanFilterCellComponent,\n  \"date\": DateFilterCellComponent,\n  \"numeric\": NumericFilterCellComponent,\n  \"text\": StringFilterCellComponent\n})[type];\n/**\n * @hidden\n */\n\n\nlet FilterCellHostDirective = /*#__PURE__*/(() => {\n  let FilterCellHostDirective = class FilterCellHostDirective extends FilterHostDirective {\n    constructor(host, resolver) {\n      super(host, resolver);\n    }\n\n    componentType() {\n      if (!isNullOrEmptyString(this.column.filter)) {\n        return filterComponentFactory(this.column.filter);\n      }\n\n      return StringFilterCellComponent;\n    }\n\n  };\n\n  FilterCellHostDirective.ɵfac = function FilterCellHostDirective_Factory(t) {\n    return new (t || FilterCellHostDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver));\n  };\n\n  FilterCellHostDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FilterCellHostDirective,\n    selectors: [[\"\", \"kendoFilterCellHost\", \"\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  FilterCellHostDirective = __decorate([__metadata(\"design:paramtypes\", [ViewContainerRef, ComponentFactoryResolver])], FilterCellHostDirective);\n  return FilterCellHostDirective;\n})();\nconst INTERNAL_COMPONENTS = [FilterRowComponent, FilterCellComponent, FilterCellTemplateDirective, StringFilterCellComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, BooleanFilterCellComponent, FilterCellHostDirective, FilterCellWrapperComponent, DateFilterCellComponent];\nconst ENTRY_COMPONENTS = [StringFilterCellComponent, NumericFilterCellComponent, BooleanFilterCellComponent, DateFilterCellComponent];\n/**\n * @hidden\n */\n\nlet RowFilterModule = /*#__PURE__*/(() => {\n  let RowFilterModule = class RowFilterModule {\n    static exports() {\n      return [FilterRowComponent, FilterCellComponent, FilterCellTemplateDirective, FilterCellOperatorsComponent, StringFilterCellComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, BooleanFilterCellComponent, DateFilterCellComponent, SharedFilterModule.exports()];\n    }\n\n  };\n\n  RowFilterModule.ɵfac = function RowFilterModule_Factory(t) {\n    return new (t || RowFilterModule)();\n  };\n\n  RowFilterModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RowFilterModule\n  });\n  RowFilterModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[SharedFilterModule], SharedFilterModule]\n  });\n  /**\n   * @hidden\n   */\n\n  return RowFilterModule;\n})();\nlet PagerInputDirective = /*#__PURE__*/(() => {\n  let PagerInputDirective = class PagerInputDirective {\n    constructor(host, renderer) {\n      this.host = host;\n      this.renderer = renderer;\n    }\n\n    ngAfterViewInit() {\n      const inputElement = this.host.numericInput.nativeElement;\n      this.renderer.addClass(inputElement, 'k-pager-nav');\n    }\n\n  };\n\n  PagerInputDirective.ɵfac = function PagerInputDirective_Factory(t) {\n    return new (t || PagerInputDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc6.NumericTextBoxComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  PagerInputDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: PagerInputDirective,\n    selectors: [[\"\", \"kendoGridPagerInput\", \"\"]]\n  });\n  PagerInputDirective = __decorate([__metadata(\"design:paramtypes\", [NumericTextBoxComponent, Renderer2])], PagerInputDirective);\n  /**\n   * @hidden\n   */\n\n  return PagerInputDirective;\n})();\nlet PagerDropDownListDirective = /*#__PURE__*/(() => {\n  let PagerDropDownListDirective = class PagerDropDownListDirective {\n    constructor(host, renderer) {\n      this.host = host;\n      this.renderer = renderer;\n\n      this.keydownHandler = e => {\n        if (e.keyCode === Keys.Escape && this.host.isOpen) {\n          e.stopPropagation();\n          this.host.toggle(false);\n        }\n      };\n    }\n\n    ngAfterViewInit() {\n      const wrapperElement = this.host.wrapper.nativeElement;\n      this.renderer.addClass(wrapperElement, 'k-pager-nav');\n      wrapperElement.addEventListener('keydown', this.keydownHandler, true);\n    }\n\n    ngOnDestroy() {\n      this.host.wrapper.nativeElement.removeEventListener('keydown', this.keydownHandler);\n    }\n\n  };\n\n  PagerDropDownListDirective.ɵfac = function PagerDropDownListDirective_Factory(t) {\n    return new (t || PagerDropDownListDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc8.DropDownListComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  PagerDropDownListDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: PagerDropDownListDirective,\n    selectors: [[\"\", \"kendoGridPagerDropDown\", \"\"]]\n  });\n  PagerDropDownListDirective = __decorate([__metadata(\"design:paramtypes\", [DropDownListComponent, Renderer2])], PagerDropDownListDirective);\n  /**\n   * @hidden\n   */\n\n  return PagerDropDownListDirective;\n})();\n\nconst normalizeSettings = ({\n  buttonCount = 10,\n  info = true,\n  type = 'numeric',\n  pageSizes = false,\n  previousNext = true,\n  responsive = true,\n  position = 'bottom'\n}) => ({\n  buttonCount,\n  info,\n  pageSizes: pageSizes === true ? [5, 10, 20] : pageSizes,\n  previousNext,\n  type,\n  responsive,\n  position\n});\n/**\n * @hidden\n */\n\n\nconst normalize = settings => normalizeSettings(settings === true ? {} : settings);\n/**\n * @hidden\n */\n\n\nlet PagerComponent = /*#__PURE__*/(() => {\n  let PagerComponent = class PagerComponent {\n    constructor(pagerContext, navigationService, element, renderer, zone, localizationService, cellContext, focusRoot, focusGroup) {\n      this.pagerContext = pagerContext;\n      this.navigationService = navigationService;\n      this.element = element;\n      this.renderer = renderer;\n      this.zone = zone;\n      this.localizationService = localizationService;\n      this.cellContext = cellContext;\n      this.focusRoot = focusRoot;\n      this.focusGroup = focusGroup;\n      this.total = 0;\n      this.skip = 1;\n      this.pageChange = new EventEmitter();\n      this.pagerWrapClass = true;\n      this.gridPagerClass = true;\n      this.widgetClass = true;\n      this.settings = normalize({});\n      this.subscriptions = new Subscription();\n      this._templateContext = {};\n      this._isFocused = false;\n\n      this.resizeHandler = () => {\n        const element = this.element.nativeElement;\n\n        if (this.template || !element) {\n          return;\n        }\n\n        const width = element.offsetWidth;\n\n        if (width < RESPONSIVE_BREAKPOINT_MEDIUM) {\n          this.renderer.removeClass(element, 'k-pager-md');\n          this.renderer.addClass(element, 'k-pager-sm');\n        } else if (width >= RESPONSIVE_BREAKPOINT_MEDIUM && width < RESPONSIVE_BREAKPOINT_LARGE) {\n          this.renderer.addClass(element, 'k-pager-md');\n          this.renderer.removeClass(element, 'k-pager-sm');\n        } else {\n          this.clearResponsiveClasses();\n        }\n      };\n    }\n\n    set options(value) {\n      this.settings = normalize(value);\n    }\n\n    get isFocused() {\n      return this._isFocused;\n    }\n\n    get pagerAriaLabel() {\n      return this.navigationService.enabled ? this.pagerLabel : undefined;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get pagerLabel() {\n      const localizationMsg = this.localizationService.get('pagerLabel') || '';\n      return replaceMessagePlaceholder(replaceMessagePlaceholder(localizationMsg, 'currentPage', this.currentPage.toString()), 'totalPages', this.totalPages.toString());\n    }\n\n    get focusTrapTabIndex() {\n      return this.focusGroup.isActive ? '0' : '-1';\n    }\n\n    onFocusIn(event) {\n      if (this.navigationService.enabled) {\n        const shouldFocusPager = event.target === this.element.nativeElement;\n\n        if (shouldFocusPager) {\n          this._isFocused = true;\n          this.focusRoot.deactivate();\n        } else {\n          this.focusRoot.activate();\n        }\n      }\n    }\n\n    onFocusOut() {\n      if (this.navigationService.enabled) {\n        this._isFocused = false;\n      }\n    }\n\n    onEscape() {\n      if (this.navigationService.enabled) {\n        this.focusRoot.deactivate();\n        this.element.nativeElement.focus();\n      }\n    }\n\n    onEnter(event) {\n      if (this.navigationService.enabled && event.target === this.element.nativeElement) {\n        this.focusRoot.activate();\n        this.focusFirstElement();\n      }\n    }\n\n    navigateToPreviousPage(e) {\n      if (this.shouldTriggerPageChange(e.target, this.currentPage > 1)) {\n        this.pagerContext.prevPage();\n      }\n    }\n\n    navigateToNextPage(e) {\n      if (this.shouldTriggerPageChange(e.target, this.currentPage < this.totalPages)) {\n        this.pagerContext.nextPage();\n      }\n    }\n\n    navigateToFirstPage(e) {\n      if (this.shouldTriggerPageChange(e.target, this.currentPage > 1)) {\n        this.pagerContext.changePage(0);\n      }\n    }\n\n    navigateToLastPage(e) {\n      if (this.shouldTriggerPageChange(e.target, this.currentPage < this.totalPages)) {\n        this.pagerContext.changePage(this.totalPages - 1);\n      }\n    }\n\n    get totalPages() {\n      return Math.ceil((this.total || 0) / this.pageSize);\n    }\n\n    get currentPage() {\n      return Math.floor((this.skip || 0) / this.pageSize) + 1;\n    }\n\n    get templateContext() {\n      const context = this._templateContext;\n      context.totalPages = this.totalPages;\n      context.total = this.total;\n      context.skip = this.skip;\n      context.pageSize = this.pageSize;\n      context.currentPage = this.currentPage;\n      return context;\n    }\n\n    ngOnInit() {\n      this.subscriptions.add(this.pagerContext.pageChange.subscribe(this.changePage.bind(this)));\n\n      if (this.navigationService.enabled) {\n        this.focusRoot.deactivate();\n      }\n    }\n\n    ngDoCheck() {\n      this.updateCellContext();\n    }\n\n    ngOnChanges(changes) {\n      if (anyChanged(['pageSize', 'skip', 'total'], changes, false)) {\n        this.pagerContext.notifyChanges({\n          pageSize: this.pageSize,\n          skip: this.skip,\n          total: this.total\n        });\n      }\n\n      if (changes.template) {\n        changes.template.currentValue ? this.clearResponsiveClasses() : this.resizeHandler();\n      }\n\n      if (changes.options) {\n        this.settings.responsive ? this.resizeHandler() : this.clearResponsiveClasses();\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n    }\n\n    changePage(event) {\n      this.pageChange.emit(event);\n    }\n\n    onInnerFocusIn(event, position) {\n      this.zone.onStable.pipe(take(1)).subscribe(() => {\n        if (position === 'start') {\n          if (event.relatedTarget === this.element.nativeElement) {\n            this.focusFirstElement();\n          } else {\n            this.focusLastElement();\n          }\n        } else {\n          this.focusFirstElement();\n        }\n      });\n    }\n\n    clearResponsiveClasses() {\n      const element = this.element.nativeElement;\n      this.renderer.removeClass(element, 'k-pager-sm');\n      this.renderer.removeClass(element, 'k-pager-md');\n    }\n\n    shouldTriggerPageChange(target, condition) {\n      return this.navigationService.enabled && target === this.element.nativeElement && condition;\n    }\n\n    focusFirstElement() {\n      const first = findFocusableChild(this.element.nativeElement, true);\n\n      if (first) {\n        first.focus();\n      }\n    }\n\n    focusLastElement() {\n      const last = findLastFocusableChild(this.element.nativeElement, true);\n\n      if (last) {\n        last.focus();\n      }\n    }\n\n    updateCellContext() {\n      if (this.cellContext) {\n        this.cellContext.focusGroup = this.focusGroup;\n      }\n    }\n\n  };\n\n  PagerComponent.ɵfac = function PagerComponent_Factory(t) {\n    return new (t || PagerComponent)(ɵngcc0.ɵɵdirectiveInject(PagerContextService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT, 8), ɵngcc0.ɵɵdirectiveInject(FocusRoot), ɵngcc0.ɵɵdirectiveInject(FocusGroup));\n  };\n\n  PagerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PagerComponent,\n    selectors: [[\"kendo-pager\"]],\n    hostVars: 9,\n    hostBindings: function PagerComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function PagerComponent_focusin_HostBindingHandler($event) {\n          return ctx.onFocusIn($event);\n        })(\"focusout\", function PagerComponent_focusout_HostBindingHandler() {\n          return ctx.onFocusOut();\n        })(\"keydown.escape\", function PagerComponent_keydown_escape_HostBindingHandler() {\n          return ctx.onEscape();\n        })(\"keydown.enter\", function PagerComponent_keydown_enter_HostBindingHandler($event) {\n          return ctx.onEnter($event);\n        })(\"keydown.arrowleft\", function PagerComponent_keydown_arrowleft_HostBindingHandler($event) {\n          return ctx.navigateToPreviousPage($event);\n        })(\"keydown.pageup\", function PagerComponent_keydown_pageup_HostBindingHandler($event) {\n          return ctx.navigateToPreviousPage($event);\n        })(\"keydown.arrowright\", function PagerComponent_keydown_arrowright_HostBindingHandler($event) {\n          return ctx.navigateToNextPage($event);\n        })(\"keydown.pagedown\", function PagerComponent_keydown_pagedown_HostBindingHandler($event) {\n          return ctx.navigateToNextPage($event);\n        })(\"keydown.home\", function PagerComponent_keydown_home_HostBindingHandler($event) {\n          return ctx.navigateToFirstPage($event);\n        })(\"keydown.end\", function PagerComponent_keydown_end_HostBindingHandler($event) {\n          return ctx.navigateToLastPage($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.pagerAriaLabel);\n        ɵngcc0.ɵɵclassProp(\"k-pager-wrap\", ctx.pagerWrapClass)(\"k-grid-pager\", ctx.gridPagerClass)(\"k-widget\", ctx.widgetClass)(\"k-state-focused\", ctx.isFocused);\n      }\n    },\n    inputs: {\n      total: \"total\",\n      skip: \"skip\",\n      options: \"options\",\n      pageSize: \"pageSize\",\n      template: \"template\"\n    },\n    outputs: {\n      pageChange: \"pageChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: FOCUS_ROOT_ACTIVE,\n      useValue: true\n    }, {\n      provide: FocusRoot,\n      deps: [FOCUS_ROOT_ACTIVE],\n      useClass: FocusRoot\n    }, {\n      provide: FocusGroup,\n      deps: [FocusRoot],\n      useClass: FocusGroup\n    }]), ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 5,\n    vars: 5,\n    consts: [[\"class\", \"k-sr-only\", 3, \"tabindex\", \"focusin\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"resize\", 4, \"ngIf\"], [1, \"k-sr-only\", 3, \"tabindex\", \"focusin\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"buttonCount\", 4, \"ngIf\"], [3, \"pageSizes\", 4, \"ngIf\"], [3, \"buttonCount\"], [3, \"pageSizes\"], [\"pageSizes\", \"\"], [3, \"resize\"]],\n    template: function PagerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, PagerComponent_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, PagerComponent_ng_container_1_Template, 1, 2, \"ng-container\", 1);\n        ɵngcc0.ɵɵtemplate(2, PagerComponent_ng_container_2_Template, 7, 6, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(3, PagerComponent_div_3_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(4, PagerComponent_kendo_resize_sensor_4_Template, 1, 0, \"kendo-resize-sensor\", 3);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.navigationService.enabled);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.template == null ? null : ctx.template.templateRef);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx.template == null ? null : ctx.template.templateRef));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.navigationService.enabled);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.settings.responsive);\n      }\n    },\n    directives: function () {\n      return [ɵngcc5.NgIf, ɵngcc5.NgTemplateOutlet, PagerPrevButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerNextButtonsComponent, PagerInfoComponent, PagerPageSizesComponent, ɵngcc2.ResizeSensorComponent];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], PagerComponent.prototype, \"total\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], PagerComponent.prototype, \"skip\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], PagerComponent.prototype, \"pageSize\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], PagerComponent.prototype, \"options\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", PagerTemplateDirective)], PagerComponent.prototype, \"template\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], PagerComponent.prototype, \"pageChange\", void 0);\n\n  __decorate([HostBinding('class.k-pager-wrap'), __metadata(\"design:type\", Boolean)], PagerComponent.prototype, \"pagerWrapClass\", void 0);\n\n  __decorate([HostBinding('class.k-grid-pager'), __metadata(\"design:type\", Boolean)], PagerComponent.prototype, \"gridPagerClass\", void 0);\n\n  __decorate([HostBinding('class.k-widget'), __metadata(\"design:type\", Boolean)], PagerComponent.prototype, \"widgetClass\", void 0);\n\n  __decorate([HostBinding('class.k-state-focused'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], PagerComponent.prototype, \"isFocused\", null);\n\n  __decorate([HostBinding('attr.aria-label'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], PagerComponent.prototype, \"pagerAriaLabel\", null);\n\n  __decorate([HostListener('focusin', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], PagerComponent.prototype, \"onFocusIn\", null);\n\n  __decorate([HostListener('focusout'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], PagerComponent.prototype, \"onFocusOut\", null);\n\n  __decorate([HostListener('keydown.escape'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], PagerComponent.prototype, \"onEscape\", null);\n\n  __decorate([HostListener('keydown.enter', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], PagerComponent.prototype, \"onEnter\", null);\n\n  __decorate([HostListener('keydown.arrowleft', ['$event']), HostListener('keydown.pageup', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], PagerComponent.prototype, \"navigateToPreviousPage\", null);\n\n  __decorate([HostListener('keydown.arrowright', ['$event']), HostListener('keydown.pagedown', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], PagerComponent.prototype, \"navigateToNextPage\", null);\n\n  __decorate([HostListener('keydown.home', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], PagerComponent.prototype, \"navigateToFirstPage\", null);\n\n  __decorate([HostListener('keydown.end', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], PagerComponent.prototype, \"navigateToLastPage\", null);\n\n  PagerComponent = __decorate([__param(6, Optional()), __param(6, Inject(CELL_CONTEXT)), __metadata(\"design:paramtypes\", [PagerContextService, NavigationService, ElementRef, Renderer2, NgZone, LocalizationService, Object, FocusRoot, FocusGroup])], PagerComponent);\n  /**\n   * @hidden\n   */\n\n  return PagerComponent;\n})();\nlet PagerElementComponent = /*#__PURE__*/(() => {\n  class PagerElementComponent {\n    constructor(localization, pagerContext, cd) {\n      this.localization = localization;\n      this.pagerContext = pagerContext;\n      this.cd = cd;\n      this.total = this.pagerContext.total;\n      this.skip = this.pagerContext.skip;\n      this.pageSize = this.pagerContext.pageSize;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerElementComponent\n     */\n\n\n    get currentPage() {\n      return Math.floor((this.skip || 0) / this.pageSize) + 1;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerElementComponent\n     */\n\n\n    get totalPages() {\n      return Math.ceil((this.total || 0) / this.pageSize);\n    }\n    /**\n     * @hidden\n     *\n     * @param {string} key\n     * @returns {string}\n     *\n     * @memberOf PagerElementComponent\n     */\n\n\n    textFor(key) {\n      return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     *\n     * @param {number} page\n     *\n     * @memberOf PagerElementComponent\n     */\n\n\n    changePage(page) {\n      this.pagerContext.changePage(page);\n      return false;\n    }\n    /**\n     * @hidden\n     *\n     * @memberOf PagerElementComponent\n     */\n\n\n    ngOnInit() {\n      this.subscriptions = this.pagerContext.changes.subscribe(this.onChanges.bind(this));\n      this.subscriptions.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n    }\n\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n    }\n\n  }\n\n  PagerElementComponent.ɵfac = function PagerElementComponent_Factory(t) {\n    ɵngcc0.ɵɵinvalidFactory();\n  };\n\n  PagerElementComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: PagerElementComponent\n  });\n  /**\n   * Displays buttons for navigating to the first and to the previous page ([see example]({% slug paging_grid %}#toc-pager-templates)).\n   */\n\n  return PagerElementComponent;\n})();\nlet PagerPrevButtonsComponent = /*#__PURE__*/(() => {\n  let PagerPrevButtonsComponent = class PagerPrevButtonsComponent extends PagerElementComponent {\n    constructor(localization, pagerContext, cd, navigationService) {\n      super(localization, pagerContext, cd);\n      this.navigationService = navigationService;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {boolean}\n     * @memberOf PagerPrevButtonsComponent\n     */\n\n\n    get disabled() {\n      return this.currentPage === 1 || !this.total;\n    }\n\n    onChanges({\n      total,\n      skip,\n      pageSize\n    }) {\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n\n  };\n\n  PagerPrevButtonsComponent.ɵfac = function PagerPrevButtonsComponent_Factory(t) {\n    return new (t || PagerPrevButtonsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(PagerContextService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NavigationService));\n  };\n\n  PagerPrevButtonsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PagerPrevButtonsComponent,\n    selectors: [[\"kendo-pager-prev-buttons\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 4,\n    vars: 16,\n    consts: [[3, \"kendoGridFocusable\", \"title\", \"ngClass\", \"click\", \"keydown.enter\"], [3, \"ngClass\"]],\n    template: function PagerPrevButtonsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function PagerPrevButtonsComponent_Template_span_click_0_listener() {\n          return ctx.currentPage !== 1 ? ctx.changePage(0) : false;\n        })(\"keydown.enter\", function PagerPrevButtonsComponent_Template_span_keydown_enter_0_listener() {\n          return ctx.currentPage !== 1 ? ctx.changePage(0) : false;\n        });\n        ɵngcc0.ɵɵelement(1, \"span\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"span\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function PagerPrevButtonsComponent_Template_span_click_2_listener() {\n          return ctx.currentPage !== 1 ? ctx.changePage(ctx.currentPage - 2) : false;\n        })(\"keydown.enter\", function PagerPrevButtonsComponent_Template_span_keydown_enter_2_listener() {\n          return ctx.currentPage !== 1 ? ctx.changePage(ctx.currentPage - 2) : false;\n        });\n        ɵngcc0.ɵɵelement(3, \"span\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"kendoGridFocusable\", !ctx.disabled)(\"title\", ctx.textFor(\"pagerFirstPage\"))(\"ngClass\", ɵngcc0.ɵɵpureFunction1(10, _c152, ctx.disabled));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(12, _c153));\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.textFor(\"pagerFirstPage\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"kendoGridFocusable\", !ctx.disabled)(\"title\", ctx.textFor(\"pagerPreviousPage\"))(\"ngClass\", ɵngcc0.ɵɵpureFunction1(13, _c154, ctx.disabled));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(15, _c155));\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.textFor(\"pagerPreviousPage\"));\n      }\n    },\n    directives: [FocusableDirective, ɵngcc5.NgClass],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  PagerPrevButtonsComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, PagerContextService, ChangeDetectorRef, NavigationService])], PagerPrevButtonsComponent);\n  /**\n   * Displays buttons for navigating to the next and to the last page ([see example]({% slug paging_grid %}#toc-pager-template)).\n   */\n\n  return PagerPrevButtonsComponent;\n})();\nlet PagerNextButtonsComponent = /*#__PURE__*/(() => {\n  let PagerNextButtonsComponent = class PagerNextButtonsComponent extends PagerElementComponent {\n    constructor(localization, pagerContext, cd, navigationService) {\n      super(localization, pagerContext, cd);\n      this.navigationService = navigationService;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {boolean}\n     * @memberOf PagerNextButtonsComponent\n     */\n\n\n    get disabled() {\n      return this.currentPage === this.totalPages || !this.total;\n    }\n\n    onChanges({\n      total,\n      skip,\n      pageSize\n    }) {\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n\n  };\n\n  PagerNextButtonsComponent.ɵfac = function PagerNextButtonsComponent_Factory(t) {\n    return new (t || PagerNextButtonsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(PagerContextService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NavigationService));\n  };\n\n  PagerNextButtonsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PagerNextButtonsComponent,\n    selectors: [[\"kendo-pager-next-buttons\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 4,\n    vars: 16,\n    consts: [[\"tabindex\", \"0\", 3, \"kendoGridFocusable\", \"title\", \"ngClass\", \"click\", \"keydown.enter\"], [3, \"ngClass\"]],\n    template: function PagerNextButtonsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function PagerNextButtonsComponent_Template_span_click_0_listener() {\n          return ctx.currentPage !== ctx.totalPages ? ctx.changePage(ctx.currentPage) : false;\n        })(\"keydown.enter\", function PagerNextButtonsComponent_Template_span_keydown_enter_0_listener() {\n          return ctx.currentPage !== ctx.totalPages ? ctx.changePage(ctx.currentPage) : false;\n        });\n        ɵngcc0.ɵɵelement(1, \"span\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"span\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function PagerNextButtonsComponent_Template_span_click_2_listener() {\n          return ctx.currentPage !== ctx.totalPages ? ctx.changePage(ctx.totalPages - 1) : false;\n        })(\"keydown.enter\", function PagerNextButtonsComponent_Template_span_keydown_enter_2_listener() {\n          return ctx.currentPage !== ctx.totalPages ? ctx.changePage(ctx.totalPages - 1) : false;\n        });\n        ɵngcc0.ɵɵelement(3, \"span\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"kendoGridFocusable\", !ctx.disabled)(\"title\", ctx.textFor(\"pagerNextPage\"))(\"ngClass\", ɵngcc0.ɵɵpureFunction1(10, _c154, ctx.disabled));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(12, _c156));\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.textFor(\"pagerNextPage\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"kendoGridFocusable\", !ctx.disabled)(\"title\", ctx.textFor(\"pagerLastPage\"))(\"ngClass\", ɵngcc0.ɵɵpureFunction1(13, _c157, ctx.disabled));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(15, _c158));\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.textFor(\"pagerLastPage\"));\n      }\n    },\n    directives: [FocusableDirective, ɵngcc5.NgClass],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  PagerNextButtonsComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, PagerContextService, ChangeDetectorRef, NavigationService])], PagerNextButtonsComponent);\n  /**\n   * Displays numeric buttons to enable navigation between the pages.\n   */\n\n  return PagerNextButtonsComponent;\n})();\nlet PagerNumericButtonsComponent = /*#__PURE__*/(() => {\n  let PagerNumericButtonsComponent = class PagerNumericButtonsComponent extends PagerElementComponent {\n    constructor(localization, cd, pagerContext) {\n      super(localization, pagerContext, cd);\n      this.pagerContext = pagerContext;\n      this.numbersWrapClass = true;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number[]}\n     * @memberOf PagerNumericButtonsComponent\n     */\n\n\n    get buttons() {\n      let result = [];\n\n      for (let idx = this.start; idx <= this.end; idx++) {\n        result.push(idx);\n      }\n\n      return result;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get end() {\n      return Math.min(this.start + this.buttonCount - 1, this.totalPages);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get start() {\n      const page = this.currentPage;\n      const buttonCount = this.buttonCount;\n\n      if (page > buttonCount) {\n        const reminder = page % buttonCount;\n        return reminder === 0 ? page - buttonCount + 1 : page - reminder + 1;\n      }\n\n      return 1;\n    }\n    /**\n     * @hidden\n     */\n\n\n    pageLabel(num) {\n      const pageText = this.textFor('pagerPage');\n\n      if (pageText) {\n        return pageText + ' ' + num;\n      }\n\n      return num.toString();\n    }\n    /**\n     * @hidden\n     */\n\n\n    onSelectChange(e) {\n      const target = e.target;\n      const valueAsNumber = Number(target.value);\n\n      if (!Number.isNaN(valueAsNumber)) {\n        this.changePage(valueAsNumber - 1);\n      } else {\n        if (target.value === 'previousButtons') {\n          this.changePage(this.start - 2);\n        } else {\n          this.changePage(this.end);\n        }\n      }\n    }\n\n    onChanges({\n      total,\n      skip,\n      pageSize\n    }) {\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n\n  };\n\n  PagerNumericButtonsComponent.ɵfac = function PagerNumericButtonsComponent_Factory(t) {\n    return new (t || PagerNumericButtonsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PagerContextService));\n  };\n\n  PagerNumericButtonsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PagerNumericButtonsComponent,\n    selectors: [[\"kendo-pager-numeric-buttons\"]],\n    hostVars: 2,\n    hostBindings: function PagerNumericButtonsComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-pager-numbers-wrap\", ctx.numbersWrapClass);\n      }\n    },\n    inputs: {\n      buttonCount: \"buttonCount\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 8,\n    vars: 9,\n    consts: [[\"kendoGridFocusable\", \"\", \"tabindex\", \"0\", 1, \"k-dropdown\", \"k-pager-nav\", 3, \"value\", \"change\"], [\"class\", \"k-link\", \"value\", \"previousButtons\", 4, \"ngIf\"], [3, \"value\", \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"nextButtons\", \"class\", \"k-link\", 4, \"ngIf\"], [3, \"ngClass\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"value\", \"previousButtons\", 1, \"k-link\"], [3, \"value\", \"ngClass\"], [\"value\", \"nextButtons\", 1, \"k-link\"], [\"kendoGridFocusable\", \"\", \"tabindex\", \"0\", 1, \"k-link\", \"k-pager-nav\", 3, \"click\", \"keydown.enter\"], [\"kendoGridFocusable\", \"\", \"tabindex\", \"0\", 3, \"ngClass\", \"click\", \"keydown.enter\"]],\n    template: function PagerNumericButtonsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"select\", 0);\n        ɵngcc0.ɵɵlistener(\"change\", function PagerNumericButtonsComponent_Template_select_change_0_listener($event) {\n          return ctx.onSelectChange($event);\n        });\n        ɵngcc0.ɵɵtemplate(1, PagerNumericButtonsComponent_option_1_Template, 2, 1, \"option\", 1);\n        ɵngcc0.ɵɵtemplate(2, PagerNumericButtonsComponent_option_2_Template, 2, 7, \"option\", 2);\n        ɵngcc0.ɵɵtemplate(3, PagerNumericButtonsComponent_option_3_Template, 2, 1, \"option\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"ul\", 4);\n        ɵngcc0.ɵɵtemplate(5, PagerNumericButtonsComponent_li_5_Template, 3, 1, \"li\", 5);\n        ɵngcc0.ɵɵtemplate(6, PagerNumericButtonsComponent_li_6_Template, 3, 5, \"li\", 6);\n        ɵngcc0.ɵɵtemplate(7, PagerNumericButtonsComponent_li_7_Template, 3, 1, \"li\", 5);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"value\", ctx.currentPage.toString());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.start > 1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.buttons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.end < ctx.totalPages);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(8, _c161));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.start > 1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.buttons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.end < ctx.totalPages);\n      }\n    },\n    directives: [FocusableDirective, ɵngcc5.NgIf, ɵngcc5.NgForOf, ɵngcc5.NgClass],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([HostBinding('class.k-pager-numbers-wrap'), __metadata(\"design:type\", Boolean)], PagerNumericButtonsComponent.prototype, \"numbersWrapClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], PagerNumericButtonsComponent.prototype, \"buttonCount\", void 0);\n\n  PagerNumericButtonsComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, ChangeDetectorRef, PagerContextService])], PagerNumericButtonsComponent);\n  /**\n   * Displays an input element which allows the typing and rendering of page numbers.\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *      <kendo-grid\n   *        [kendoGridBinding]=\"gridData\"\n   *        [pageSize]=\"1\"\n   *        [pageable]=\"true\"\n   *      >\n   *       <kendo-grid-column field=\"ProductID\" title=\"ID\" width=\"40\">\n   *       </kendo-grid-column>\n   *       <kendo-grid-column field=\"ProductName\" title=\"Name\" width=\"250\">\n   *       </kendo-grid-column>\n   *       <kendo-grid-column field=\"UnitPrice\" title=\"Price\" width=\"80\" format=\"{0:c}\">\n   *       </kendo-grid-column>\n   *\n   *       <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n   *          <kendo-pager-prev-buttons></kendo-pager-prev-buttons>\n   *          <kendo-pager-numeric-buttons [buttonCount]=\"10\"></kendo-pager-numeric-buttons>\n   *          <kendo-pager-next-buttons></kendo-pager-next-buttons>\n   *          <kendo-pager-input></kendo-pager-input>\n   *          <kendo-pager-info></kendo-pager-info>\n   *       </ng-template>\n   *\n   *    </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *     public gridData = [{\n   *         \"ProductID\": 1,\n   *         \"ProductName\": \"Chai\",\n   *         \"UnitPrice\": 18.0000,\n   *         \"Discontinued\": false\n   *       }, {\n   *         \"ProductID\": 2,\n   *         \"ProductName\": \"Chang\",\n   *         \"UnitPrice\": 19.0000,\n   *         \"Discontinued\": true\n   *       }\n   *     ];\n   * }\n   *\n   * ```\n   */\n\n  return PagerNumericButtonsComponent;\n})();\nlet PagerInputComponent = /*#__PURE__*/(() => {\n  let PagerInputComponent = class PagerInputComponent extends PagerElementComponent {\n    constructor(localization, pagerContext, zone, navigationService, cd) {\n      super(localization, pagerContext, cd);\n      this.pagerContext = pagerContext;\n      this.zone = zone;\n      this.navigationService = navigationService;\n      /**\n       * @hidden\n       *\n       * @param {string} value\n       *\n       * @memberOf PagerInputComponent\n       */\n\n      this.handleKeyDown = event => {\n        let incomingValue = this.numericInput.value || this.current;\n\n        if (event.keyCode === Keys.Enter) {\n          event.preventDefault();\n\n          if (incomingValue !== this.current) {\n            this.zone.run(() => {\n              this.changePage(incomingValue - 1);\n            });\n          }\n        }\n      };\n      /**\n       * @hidden\n       *\n       * @param {string} value\n       *\n       * @memberOf PagerInputComponent\n       */\n\n\n      this.handleBlur = () => {\n        const inputValue = this.numericInput.value;\n\n        if (!inputValue) {\n          this.numericInput.writeValue(this.current);\n          return;\n        }\n\n        if (inputValue !== this.current) {\n          this.zone.run(() => {\n            this.changePage(inputValue - 1);\n          });\n        }\n      };\n    }\n    /**\n     * @hidden\n     */\n\n\n    get current() {\n      return this.hasPages ? this.currentPage : 0;\n    }\n\n    get hasPages() {\n      return this.totalPages !== 0;\n    }\n\n    onChanges({\n      total,\n      skip,\n      pageSize\n    }) {\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n\n  };\n\n  PagerInputComponent.ɵfac = function PagerInputComponent_Factory(t) {\n    return new (t || PagerInputComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(PagerContextService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  PagerInputComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PagerInputComponent,\n    selectors: [[\"kendo-pager-input\"]],\n    viewQuery: function PagerInputComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NumericTextBoxComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.numericInput = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 4,\n    vars: 18,\n    consts: [[3, \"ngClass\"], [\"kendoGridPagerInput\", \"\", \"tabindex\", \"0\", \"format\", \"n0\", 3, \"kendoGridFocusable\", \"spinners\", \"decimals\", \"disabled\", \"value\", \"min\", \"max\", \"autoCorrect\", \"title\", \"kendoEventsOutsideAngular\"]],\n    template: function PagerInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelement(2, \"kendo-numerictextbox\", 1);\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(14, _c162));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.textFor(\"pagerPage\"), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"kendoGridFocusable\", ctx.hasPages)(\"spinners\", false)(\"decimals\", 0)(\"disabled\", !ctx.hasPages)(\"value\", ctx.current)(\"min\", ctx.hasPages ? 1 : 0)(\"max\", ctx.totalPages)(\"autoCorrect\", true)(\"title\", ctx.textFor(\"pagerPageNumberInputTitle\"))(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction2(15, _c163, ctx.handleKeyDown, ctx.handleBlur));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate2(\" \", ctx.textFor(\"pagerOf\"), \" \", ctx.totalPages, \" \");\n      }\n    },\n    directives: [ɵngcc5.NgClass, ɵngcc6.NumericTextBoxComponent, PagerInputDirective, FocusableDirective, ɵngcc2.EventsOutsideAngularDirective],\n    encapsulation: 2\n  });\n\n  __decorate([ViewChild(NumericTextBoxComponent, {\n    static: false\n  }), __metadata(\"design:type\", NumericTextBoxComponent)], PagerInputComponent.prototype, \"numericInput\", void 0);\n\n  PagerInputComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, PagerContextService, NgZone, NavigationService, ChangeDetectorRef])], PagerInputComponent);\n  /**\n   * Displays information about the current page and the total number of records ([see example]({% slug paging_grid %}#toc-pager-templates)).\n   */\n\n  return PagerInputComponent;\n})();\nlet PagerInfoComponent = /*#__PURE__*/(() => {\n  let PagerInfoComponent = class PagerInfoComponent extends PagerElementComponent {\n    constructor(localization, cd, pagerContext) {\n      super(localization, pagerContext, cd);\n      this.pagerContext = pagerContext;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerInfoComponent\n     */\n\n\n    get maxItems() {\n      return Math.min(this.currentPage * this.pageSize, this.total);\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerInfoComponent\n     */\n\n\n    get currentPageText() {\n      return this.total ? (this.currentPage - 1) * this.pageSize + 1 : 0;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {boolean}\n     * @memberOf PagerInfoComponent\n     */\n\n\n    get classes() {\n      return true;\n    }\n\n    onChanges({\n      total,\n      skip,\n      pageSize\n    }) {\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n\n  };\n\n  PagerInfoComponent.ɵfac = function PagerInfoComponent_Factory(t) {\n    return new (t || PagerInfoComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PagerContextService));\n  };\n\n  PagerInfoComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PagerInfoComponent,\n    selectors: [[\"kendo-pager-info\"]],\n    hostVars: 4,\n    hostBindings: function PagerInfoComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-pager-info\", ctx.classes)(\"k-label\", ctx.classes);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 5,\n    template: function PagerInfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtext(0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵtextInterpolate5(\"\", ctx.currentPageText, \" - \", ctx.maxItems, \" \", ctx.textFor(\"pagerOf\"), \" \", ctx.total, \" \", ctx.textFor(\"pagerItems\"), \"\");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([HostBinding(\"class.k-pager-info\"), HostBinding(\"class.k-label\"), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], PagerInfoComponent.prototype, \"classes\", null);\n\n  PagerInfoComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, ChangeDetectorRef, PagerContextService])], PagerInfoComponent);\n  /**\n   * Displays a drop-down list for the page size selection ([see example]({% slug paging_grid %}#toc-pager-templates)).\n   */\n\n  return PagerInfoComponent;\n})();\nlet PagerPageSizesComponent = /*#__PURE__*/(() => {\n  let PagerPageSizesComponent = class PagerPageSizesComponent extends PagerElementComponent {\n    constructor(localization, cd, pagerContext, navigationService) {\n      super(localization, pagerContext, cd);\n      this.pagerContext = pagerContext;\n      this.navigationService = navigationService;\n      this._pageSizes = [];\n    }\n\n    get pageSizes() {\n      return this._pageSizes;\n    }\n    /**\n     * The page sizes collection. Can be an Array of numbers and/or PageSizeItem objects.\n     *\n     * @example\n     * ```ts-preview\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid [kendoGridBinding]=\"gridData\" [height]=\"200\"\n     *           [pageable]=\"true\"\n     *            [pageSize]=\"pageSize\">\n     *            <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n     *                <kendo-pager-page-sizes [pageSizes]=\"pagesizes\"></kendo-pager-page-sizes>\n     *            </ng-template>\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     *    public pageSize = 2;\n     *    public pagesizes = [{text: 'One', value: 1}, {text: 'Two', value: 2}, {text: 'All', value : 'all'}];\n     * }\n     *\n     * const products = [{\n     *   'ProductID' : 1,\n     *   'ProductName' : \"Chai\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 1,\n     *   'QuantityPerUnit' : \"10 boxes x 20 bags\",\n     *   'UnitPrice' : 18.0000,\n     *   'UnitsInStock' : 39,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 10,\n     *   'Discontinued' : false\n     *\n     * }, {\n     *   'ProductID' : 2,\n     *   'ProductName' : \"Chang\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 1,\n     *   'QuantityPerUnit' : \"24 - 12 oz bottles\",\n     *   'UnitPrice' : 19.0000,\n     *   'UnitsInStock' : 17,\n     *   'UnitsOnOrder' : 40,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 3,\n     *   'ProductName' : \"Aniseed Syrup\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"12 - 550 ml bottles\",\n     *   'UnitPrice' : 10.0000,\n     *   'UnitsInStock' : 13,\n     *   'UnitsOnOrder' : 70,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 4,\n     *   'ProductName' : \"Chef Anton\\'s Cajun Seasoning\",\n     *   'SupplierID' : 2,\n     *  'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"48 - 6 oz jars\",\n     *   'UnitPrice' : 22.0000,\n     *   'UnitsInStock' : 53,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 0,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 5,\n     *   'ProductName' : \"Chef Anton\\'s Gumbo Mix\",\n     *   'SupplierID' : 2,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"36 boxes\",\n     *   'UnitPrice' : 21.3500,\n     *   'UnitsInStock' : 0,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 0,\n     *   'Discontinued' : true\n     * }, {\n     *   'ProductID' : 6,\n     *   'ProductName' : \"Grandma\\'s Boysenberry Spread\",\n     *   'SupplierID' : 3,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"12 - 8 oz jars\",\n     *   'UnitPrice' : 25.0000,\n     *   'UnitsInStock' : 120,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }];\n     * ```\n     */\n\n\n    set pageSizes(pageSizes) {\n      let normalizedItems = [];\n      pageSizes.forEach(item => {\n        if (typeof item === 'number') {\n          normalizedItems.push({\n            text: item.toString(),\n            value: item\n          });\n        } else {\n          normalizedItems.push(item);\n        }\n      });\n\n      if (this.pageSize && !normalizedItems.some(item => item.value === this.pageSize)) {\n        normalizedItems = [{\n          text: this.pageSize.toString(),\n          value: this.pageSize\n        }, ...normalizedItems];\n      }\n\n      this._pageSizes = normalizedItems;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     */\n\n\n    get classes() {\n      return true;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     */\n\n\n    get showInitialPageSize() {\n      return this.pageSizes.filter(item => {\n        if (typeof item.value === 'number') {\n          return item.value === Number(this.pageSize);\n        }\n\n        return this.total === Number(this.pageSize);\n      }).length === 0;\n    }\n    /**\n     * @hidden\n     */\n\n\n    pageSizeChange(value) {\n      this.pageSize = typeof value === 'number' ? value : this.total;\n      this.pagerContext.changePageSize(this.pageSize);\n    }\n    /**\n     * @hidden\n     */\n\n\n    getValue(page) {\n      return typeof page.value === 'number' ? page.value : this.total;\n    }\n\n    onChanges({\n      total,\n      skip,\n      pageSize\n    }) {\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = typeof pageSize === 'number' ? pageSize : this.total;\n      this.cd.markForCheck();\n    }\n\n  };\n\n  PagerPageSizesComponent.ɵfac = function PagerPageSizesComponent_Factory(t) {\n    return new (t || PagerPageSizesComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PagerContextService), ɵngcc0.ɵɵdirectiveInject(NavigationService));\n  };\n\n  PagerPageSizesComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PagerPageSizesComponent,\n    selectors: [[\"kendo-pager-page-sizes\"]],\n    hostVars: 4,\n    hostBindings: function PagerPageSizesComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-pager-sizes\", ctx.classes)(\"k-label\", ctx.classes);\n      }\n    },\n    inputs: {\n      pageSizes: \"pageSizes\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 5,\n    consts: [[\"kendoGridPagerDropDown\", \"\", \"tabindex\", \"0\", \"kendoGridFocusable\", \"\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"data\", \"valuePrimitive\", \"value\", \"valueChange\"], [\"dropdownlist\", \"\"], [3, \"for\", \"text\"]],\n    template: function PagerPageSizesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"kendo-dropdownlist\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"valueChange\", function PagerPageSizesComponent_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n          return ctx.pageSizeChange($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"kendo-label\", 2);\n      }\n\n      if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n\n        ɵngcc0.ɵɵproperty(\"data\", ctx.pageSizes)(\"valuePrimitive\", true)(\"value\", ctx.pageSize);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"for\", _r0)(\"text\", ctx.textFor(\"pagerItemsPerPage\"));\n      }\n    },\n    directives: [ɵngcc8.DropDownListComponent, PagerDropDownListDirective, FocusableDirective, ɵngcc11.LabelComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], PagerPageSizesComponent.prototype, \"pageSizes\", null);\n\n  __decorate([HostBinding('class.k-pager-sizes'), HostBinding('class.k-label'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], PagerPageSizesComponent.prototype, \"classes\", null);\n\n  PagerPageSizesComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, ChangeDetectorRef, PagerContextService, NavigationService])], PagerPageSizesComponent);\n  return PagerPageSizesComponent;\n})();\nconst importedModules$1 = [CommonModule, InputsModule, LabelModule, DropDownsModule, ResizeSensorModule, SharedModule];\nconst INTERNAL_COMPONENTS$1 = [PagerComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, PagerTemplateDirective, PagerDropDownListDirective, PagerInputDirective];\n/**\n * @hidden\n */\n\nlet PagerModule = /*#__PURE__*/(() => {\n  let PagerModule = class PagerModule {\n    static exports() {\n      return [PagerComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, PagerTemplateDirective, PagerDropDownListDirective, PagerInputDirective];\n    }\n\n  };\n\n  PagerModule.ɵfac = function PagerModule_Factory(t) {\n    return new (t || PagerModule)();\n  };\n\n  PagerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: PagerModule\n  });\n  PagerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[...importedModules$1]]\n  });\n  /**\n   * @hidden\n   */\n\n  return PagerModule;\n})();\nlet GroupHeaderComponent = /*#__PURE__*/(() => {\n  let GroupHeaderComponent = class GroupHeaderComponent {\n    constructor(groupsService, groupInfoService) {\n      this.groupsService = groupsService;\n      this.groupInfoService = groupInfoService;\n      this.skipGroupDecoration = false;\n      this.hasDetails = false;\n      this.totalColumnsCount = 0;\n      this.groups = [];\n      this.isExpanded = false;\n    }\n\n    get groupItemClass() {\n      return true;\n    }\n\n    ngDoCheck() {\n      const groupArgs = {\n        group: this.item.data,\n        groupIndex: this.item.index,\n        parentGroup: getGroupRowArgs(this.item.parentGroup)\n      };\n      this.isExpanded = this.groupsService.isExpanded(groupArgs);\n    }\n\n    prefixGroupCell(item) {\n      return new Array(item.level);\n    }\n\n    toggleGroup(item) {\n      this.groupsService.toggleRow(item);\n      return false;\n    }\n\n    groupSpan(item) {\n      const groupCount = (this.groups || []).length;\n      const detailOffset = this.hasDetails ? 1 : 0;\n\n      if (this.hasGroupHeaderColumn) {\n        return groupCount + 1 + detailOffset - item.level;\n      }\n\n      let columnCount = columnsSpan(this.columns);\n\n      if (this.skipGroupDecoration) {\n        return columnCount;\n      }\n\n      return groupCount + columnCount + detailOffset - item.level;\n    }\n\n    logicalColSpan() {\n      return this.skipGroupDecoration ? 1 : this.totalColumnsCount;\n    }\n\n    ariaRole() {\n      if (this.skipGroupDecoration) {\n        return 'presentation';\n      }\n\n      return 'gridcell';\n    }\n\n    formatForGroup(item) {\n      return this.groupInfoService.formatForGroup(item);\n    }\n\n    groupTitle(item) {\n      return this.groupInfoService.groupTitle(item);\n    }\n\n    groupHeaderTemplate(item) {\n      return this.groupInfoService.groupHeaderTemplate(item);\n    }\n\n  };\n\n  GroupHeaderComponent.ɵfac = function GroupHeaderComponent_Factory(t) {\n    return new (t || GroupHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(GroupsService), ɵngcc0.ɵɵdirectiveInject(GroupInfoService));\n  };\n\n  GroupHeaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: GroupHeaderComponent,\n    selectors: [[\"\", \"kendoGridGroupHeader\", \"\"]],\n    hostVars: 2,\n    hostBindings: function GroupHeaderComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-grouping-row\", ctx.groupItemClass);\n      }\n    },\n    inputs: {\n      skipGroupDecoration: \"skipGroupDecoration\",\n      hasDetails: \"hasDetails\",\n      totalColumnsCount: \"totalColumnsCount\",\n      groups: \"groups\",\n      rowIndex: \"rowIndex\",\n      logicalRowIndex: \"logicalRowIndex\",\n      item: \"item\",\n      hasGroupHeaderColumn: \"hasGroupHeaderColumn\",\n      groupHeaderColumns: \"groupHeaderColumns\",\n      columns: \"columns\"\n    },\n    attrs: _c164,\n    decls: 3,\n    vars: 3,\n    consts: [[3, \"ngIf\"], [\"aria-selected\", \"false\", \"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"logicalSlaveCell\", \"groupItem\", \"colSpan\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"k-group-cell\", \"role\", \"presentation\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\", 1, \"k-group-cell\"], [\"aria-selected\", \"false\", \"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"logicalSlaveCell\", \"groupItem\", \"colSpan\"], [1, \"k-reset\"], [\"href\", \"#\", \"tabindex\", \"-1\", \"role\", \"presentation\", 1, \"k-icon\", 3, \"ngClass\", \"click\"], [3, \"templateContext\"], [\"role\", \"gridcell\", \"aria-selected\", \"false\", \"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"logicalSlaveCell\", \"groupItem\", \"colSpan\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"gridcell\", \"aria-selected\", \"false\", \"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"logicalSlaveCell\", \"groupItem\", \"colSpan\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function GroupHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, GroupHeaderComponent_ng_template_0_Template, 1, 1, \"ng-template\", 0);\n        ɵngcc0.ɵɵtemplate(1, GroupHeaderComponent_td_1_Template, 3, 9, \"td\", 1);\n        ɵngcc0.ɵɵtemplate(2, GroupHeaderComponent_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.skipGroupDecoration);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx.skipGroupDecoration && ctx.hasGroupHeaderColumn));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasGroupHeaderColumn);\n      }\n    },\n    directives: [ɵngcc5.NgIf, ɵngcc5.NgForOf, LogicalCellDirective, ɵngcc5.NgClass, TemplateContextDirective, ɵngcc5.NgTemplateOutlet],\n    pipes: [FieldAccessorPipe],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], GroupHeaderComponent.prototype, \"rowIndex\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], GroupHeaderComponent.prototype, \"logicalRowIndex\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], GroupHeaderComponent.prototype, \"item\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], GroupHeaderComponent.prototype, \"skipGroupDecoration\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], GroupHeaderComponent.prototype, \"hasDetails\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], GroupHeaderComponent.prototype, \"totalColumnsCount\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], GroupHeaderComponent.prototype, \"hasGroupHeaderColumn\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], GroupHeaderComponent.prototype, \"groupHeaderColumns\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], GroupHeaderComponent.prototype, \"columns\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], GroupHeaderComponent.prototype, \"groups\", void 0);\n\n  __decorate([HostBinding('class.k-grouping-row'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], GroupHeaderComponent.prototype, \"groupItemClass\", null);\n\n  GroupHeaderComponent = __decorate([__metadata(\"design:paramtypes\", [GroupsService, GroupInfoService])], GroupHeaderComponent);\n  /**\n   * @hidden\n   */\n\n  return GroupHeaderComponent;\n})();\nlet DropTargetDirective = /*#__PURE__*/(() => {\n  let DropTargetDirective = class DropTargetDirective {\n    constructor(element, service) {\n      this.element = element;\n      this.service = service;\n      this.context = {};\n      this.enter = new EventEmitter();\n      this.leave = new EventEmitter();\n      this.drop = new EventEmitter();\n      this.subscriptions = new Subscription();\n    }\n\n    ngOnInit() {\n      this.service.add(this);\n      const changes = this.service.changes.pipe(filter(({\n        target\n      }) => target === this));\n      this.subscriptions.add(changes.pipe(filter(({\n        type\n      }) => type === 'leave')).subscribe(e => {\n        this.leave.next(this.eventArgs(e));\n      }));\n      this.subscriptions.add(changes.pipe(filter(({\n        type\n      }) => type === 'enter')).subscribe(e => {\n        this.enter.next(this.eventArgs(e));\n      }));\n      this.subscriptions.add(changes.pipe(filter(({\n        type\n      }) => type === 'drop')).subscribe(e => {\n        this.drop.next(this.eventArgs(e));\n      }));\n    }\n\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n    }\n\n    eventArgs(e) {\n      return {\n        target: this,\n        mouseEvent: e.mouseEvent,\n        draggable: e.draggable\n      };\n    }\n\n  };\n\n  DropTargetDirective.ɵfac = function DropTargetDirective_Factory(t) {\n    return new (t || DropTargetDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragAndDropService));\n  };\n\n  DropTargetDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: DropTargetDirective,\n    selectors: [[\"\", \"kendoDropTarget\", \"\"]],\n    inputs: {\n      context: \"context\"\n    },\n    outputs: {\n      enter: \"enter\",\n      leave: \"leave\",\n      drop: \"drop\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DropTargetDirective.prototype, \"context\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DropTargetDirective.prototype, \"enter\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DropTargetDirective.prototype, \"leave\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DropTargetDirective.prototype, \"drop\", void 0);\n\n  DropTargetDirective = __decorate([__metadata(\"design:paramtypes\", [ElementRef, DragAndDropService])], DropTargetDirective);\n  return DropTargetDirective;\n})();\n\nconst withoutField = ({\n  field\n}) => isNullOrEmptyString(field);\n\nconst alreadyGrouped = ({\n  groups,\n  field\n}) => groups.some(group => group.field === field);\n\nconst overSameTarget = ({\n  target,\n  field\n}) => target.field === field;\n\nconst overLastTarget = ({\n  target\n}) => target.lastTarget;\n\nconst isLastGroup = ({\n  groups,\n  field\n}) => groups.map(group => group.field).indexOf(field) === groups.length - 1;\n\nconst isNotGroupable = groupsService => ({\n  field\n}) => !groupsService.isGroupable(field);\n\nconst columnRules = groupService => or(withoutField, alreadyGrouped, isNotGroupable(groupService));\n\nconst indicatorRules = or(overSameTarget, and(overLastTarget, isLastGroup));\n/**\n * @hidden\n */\n\nlet GroupPanelComponent = /*#__PURE__*/(() => {\n  let GroupPanelComponent = class GroupPanelComponent {\n    constructor(hint, cue, groupInfoService, localization, cd) {\n      this.hint = hint;\n      this.cue = cue;\n      this.groupInfoService = groupInfoService;\n      this.localization = localization;\n      this.cd = cd;\n      this.change = new EventEmitter();\n      this.groups = [];\n      this.dropTargets = new QueryList();\n      this.groupTitles = [];\n      this.subscription = new Subscription();\n    }\n\n    get groupHeaderClass() {\n      return true;\n    }\n\n    set text(value) {\n      this.emptyText = value;\n    }\n\n    get text() {\n      return this.emptyText ? this.emptyText : this.localization.get('groupPanelEmpty');\n    }\n\n    ngAfterViewInit() {\n      this.subscription.add(observe(this.dropTargets).subscribe(this.attachTargets.bind(this)));\n    }\n\n    ngOnInit() {\n      this.subscription.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n    }\n\n    ngDoCheck() {\n      const currentTitles = this.groups.map(group => this.groupInfoService.groupTitle(group));\n\n      if (currentTitles.length !== this.groupTitles.length || currentTitles.some((current, idx) => current !== this.groupTitles[idx])) {\n        this.groupTitles = currentTitles;\n        this.cd.markForCheck();\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      if (this.targetSubscription) {\n        this.targetSubscription.unsubscribe();\n      }\n    }\n\n    directionChange(group) {\n      const index = this.groups.findIndex(x => x.field === group.field);\n      const groups = [...this.groups.slice(0, index), group, ...this.groups.slice(index + 1)];\n      this.change.emit(groups);\n    }\n\n    insert(field, index) {\n      const groups = this.groups.filter(x => x.field !== field);\n\n      if (groups.length || this.groups.length === 0) {\n        this.change.emit([...groups.slice(0, index), {\n          field: field\n        }, ...groups.slice(index)]);\n      }\n    }\n\n    remove(group) {\n      this.change.emit(this.groups.filter(x => x.field !== group.field));\n    }\n\n    canDrop(draggable, target) {\n      const isIndicator = draggable.type === 'groupIndicator';\n      const rules = isIndicator ? indicatorRules : columnRules(this.groupInfoService);\n      return !rules({\n        field: draggable.field,\n        groups: this.groups,\n        target\n      });\n    }\n\n    attachTargets() {\n      if (this.targetSubscription) {\n        this.targetSubscription.unsubscribe();\n      }\n\n      this.targetSubscription = new Subscription();\n      const enterStream = this.dropTargets.reduce((acc, target) => merge(acc, target.enter), from([]));\n      const leaveStream = this.dropTargets.reduce((acc, target) => merge(acc, target.leave), from([]));\n      const dropStream = this.dropTargets.reduce((acc, target) => merge(acc, target.drop), from([]));\n      this.targetSubscription.add(enterStream.pipe(tap(_ => this.hint.removeLock()), filter(({\n        draggable,\n        target\n      }) => this.canDrop(draggable.context, target.context)), tap(this.enter.bind(this)), switchMapTo(dropStream.pipe(takeUntil(leaveStream.pipe(tap(this.leave.bind(this))))))).subscribe(this.drop.bind(this)));\n    }\n\n    enter({\n      draggable,\n      target\n    }) {\n      this.hint.enable();\n      let before = target.context.lastTarget || isTargetBefore(draggable.element.nativeElement, target.element.nativeElement);\n\n      if (this.localization.rtl) {\n        before = !before;\n      }\n\n      this.cue.position(position(target.element.nativeElement, before));\n    }\n\n    leave() {\n      this.hint.disable();\n      this.cue.hide();\n    }\n\n    drop({\n      target,\n      draggable\n    }) {\n      const field = draggable.context.field;\n      const index = this.dropTargets.toArray().indexOf(target);\n      this.insert(field, index);\n    }\n\n  };\n\n  GroupPanelComponent.ɵfac = function GroupPanelComponent_Factory(t) {\n    return new (t || GroupPanelComponent)(ɵngcc0.ɵɵdirectiveInject(DragHintService), ɵngcc0.ɵɵdirectiveInject(DropCueService), ɵngcc0.ɵɵdirectiveInject(GroupInfoService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  GroupPanelComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: GroupPanelComponent,\n    selectors: [[\"kendo-grid-group-panel\"]],\n    viewQuery: function GroupPanelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DropTargetDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropTargets = _t);\n      }\n    },\n    hostVars: 4,\n    hostBindings: function GroupPanelComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-grouping-header\", ctx.groupHeaderClass)(\"k-grouping-header-flex\", ctx.groupHeaderClass);\n      }\n    },\n    inputs: {\n      groups: \"groups\",\n      text: \"text\"\n    },\n    outputs: {\n      change: \"change\"\n    },\n    decls: 3,\n    vars: 3,\n    consts: [[3, \"ngIf\"], [\"class\", \"k-indicator-container\", \"kendoDropTarget\", \"\", 3, \"context\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"k-indicator-container\", \"kendoDropTarget\", \"\", 3, \"context\", 4, \"ngIf\"], [\"kendoDropTarget\", \"\", 1, \"k-indicator-container\", 3, \"context\"], [\"kendoDraggableColumn\", \"\", \"kendoGroupIndicator\", \"\", \"kendoDraggable\", \"\", 3, \"enableDrag\", \"context\", \"group\", \"groupTitle\", \"directionChange\", \"remove\"]],\n    template: function GroupPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, GroupPanelComponent_ng_template_0_Template, 2, 3, \"ng-template\", 0);\n        ɵngcc0.ɵɵtemplate(1, GroupPanelComponent_div_1_Template, 2, 10, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, GroupPanelComponent_div_2_Template, 2, 2, \"div\", 2);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.groups.length === 0);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.groups);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.groups.length !== 0);\n      }\n    },\n    directives: function () {\n      return [ɵngcc5.NgIf, ɵngcc5.NgForOf, DropTargetDirective, DraggableColumnDirective, GroupIndicatorComponent, ɵngcc2.DraggableDirective];\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GroupPanelComponent.prototype, \"change\", void 0);\n\n  __decorate([HostBinding(\"class.k-grouping-header\"), HostBinding(\"class.k-grouping-header-flex\"), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], GroupPanelComponent.prototype, \"groupHeaderClass\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], GroupPanelComponent.prototype, \"text\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], GroupPanelComponent.prototype, \"groups\", void 0);\n\n  __decorate([ViewChildren(DropTargetDirective), __metadata(\"design:type\", QueryList)], GroupPanelComponent.prototype, \"dropTargets\", void 0);\n\n  GroupPanelComponent = __decorate([__metadata(\"design:paramtypes\", [DragHintService, DropCueService, GroupInfoService, LocalizationService, ChangeDetectorRef])], GroupPanelComponent);\n  /**\n   * @hidden\n   */\n\n  return GroupPanelComponent;\n})();\nlet GroupIndicatorComponent = /*#__PURE__*/(() => {\n  let GroupIndicatorComponent = class GroupIndicatorComponent {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.directionChange = new EventEmitter();\n      this.remove = new EventEmitter();\n    }\n\n    get groupIndicatorClass() {\n      return true;\n    }\n\n    get dir() {\n      return this.group.dir ? this.group.dir : \"asc\";\n    }\n\n    toggleDirection() {\n      this.directionChange.emit({\n        dir: this.dir === \"asc\" ? \"desc\" : \"asc\",\n        field: this.group.field\n      });\n      return false;\n    }\n\n    removeDescriptor() {\n      this.remove.emit({\n        dir: this.group.dir,\n        field: this.group.field\n      });\n      return false;\n    }\n\n  };\n\n  GroupIndicatorComponent.ɵfac = function GroupIndicatorComponent_Factory(t) {\n    return new (t || GroupIndicatorComponent)();\n  };\n\n  GroupIndicatorComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: GroupIndicatorComponent,\n    selectors: [[\"\", \"kendoGroupIndicator\", \"\"]],\n    hostVars: 2,\n    hostBindings: function GroupIndicatorComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-group-indicator\", ctx.groupIndicatorClass);\n      }\n    },\n    inputs: {\n      group: \"group\",\n      groupTitle: \"groupTitle\"\n    },\n    outputs: {\n      directionChange: \"directionChange\",\n      remove: \"remove\"\n    },\n    attrs: _c171,\n    decls: 5,\n    vars: 5,\n    consts: [[\"href\", \"#\", \"tabindex\", \"-1\", 1, \"k-link\", 3, \"click\"], [1, \"k-icon\"], [\"tabindex\", \"-1\", 1, \"k-button\", \"k-button-icon\", \"k-bare\", 3, \"click\"], [1, \"k-icon\", \"k-i-group-delete\"]],\n    template: function GroupIndicatorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"a\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function GroupIndicatorComponent_Template_a_click_0_listener() {\n          return ctx.toggleDirection();\n        });\n        ɵngcc0.ɵɵelement(1, \"span\", 1);\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"a\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function GroupIndicatorComponent_Template_a_click_3_listener() {\n          return ctx.removeDescriptor();\n        });\n        ɵngcc0.ɵɵelement(4, \"span\", 3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"k-i-sort-asc-sm\", ctx.dir === \"asc\")(\"k-i-sort-desc-sm\", ctx.dir === \"desc\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.groupTitle, \"\");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GroupIndicatorComponent.prototype, \"directionChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], GroupIndicatorComponent.prototype, \"remove\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], GroupIndicatorComponent.prototype, \"group\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], GroupIndicatorComponent.prototype, \"groupTitle\", void 0);\n\n  __decorate([HostBinding(\"class.k-group-indicator\"), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], GroupIndicatorComponent.prototype, \"groupIndicatorClass\", null); // TODO\n  // tslint:disable:rxjs-no-unsafe-takeuntil\n\n  /**\n   * @hidden\n   */\n\n\n  return GroupIndicatorComponent;\n})();\n\nconst preventOnDblClick = release => mouseDown => of(mouseDown).pipe(delay(150), takeUntil(release));\n\nconst hasClass = className => el => new RegExp(`(^| )${className}( |$)`).test(el.className);\n\nconst isDeleteButton = or(hasClass(\"k-i-group-delete\"), hasClass(\"k-button-icon\"));\nconst isSortIcon = or(hasClass(\"k-i-sort-asc-sm\"), hasClass(\"k-i-sort-desc-sm\"));\nconst skipButtons = and(not(isDeleteButton), not(isSortIcon), not(isFocusableWithTabKey), not(matchesNodeName(\"label\")));\n\nconst elementUnderCursor = ({\n  clientX,\n  clientY\n}) => document.elementFromPoint(clientX, clientY);\n\nconst hideThenShow = (element, cont) => {\n  element.style.display = 'none';\n  const result = cont();\n  element.style.display = 'block';\n  return result;\n};\n/**\n * @hidden\n */\n\n\nlet DraggableColumnDirective = /*#__PURE__*/(() => {\n  let DraggableColumnDirective = class DraggableColumnDirective {\n    constructor(draggable, element, zone, service, hint, cue, nav, renderer) {\n      this.draggable = draggable;\n      this.element = element;\n      this.zone = zone;\n      this.service = service;\n      this.hint = hint;\n      this.cue = cue;\n      this.nav = nav;\n      this.renderer = renderer;\n      this.context = {};\n      this.drag = new EventEmitter();\n      this.subscriptions = new Subscription();\n    }\n\n    set enableDrag(enabled) {\n      this.enabled = enabled;\n      this.updateTouchAction();\n    }\n\n    get hostClass() {\n      return this.enabled;\n    }\n\n    ngOnInit() {\n      this.subscriptions.add(this.zone.runOutsideAngular(() => this.draggable.kendoPress.pipe(filter(_ => this.enabled), filter(({\n        originalEvent: {\n          target\n        }\n      }) => target === this.element.nativeElement || skipButtons(target)), tap(e => {\n        const originalEvent = e.originalEvent;\n\n        if (!e.isTouch) {\n          originalEvent.preventDefault();\n        }\n\n        this.nav.navigateTo(originalEvent.target);\n      }), switchMap(preventOnDblClick(this.draggable.kendoRelease)), tap(_ => {\n        this.hint.create(this.context.hint);\n        this.cue.create();\n      }), switchMap(down => this.draggable.kendoDrag.pipe(tap(e => {\n        if (e.isTouch) {\n          e.originalEvent.preventDefault();\n        }\n      }), tap(this.hint.attach()), tap(this.cue.attach()), takeUntil(this.draggable.kendoRelease), map(move => ({\n        move,\n        down\n      })))), tap(this.performDrag.bind(this)), switchMapTo(this.draggable.kendoRelease)).subscribe(this.drop.bind(this))));\n    }\n\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n    }\n\n    drop(upEvent) {\n      this.hint.remove();\n      this.cue.remove();\n      this.service.notifyDrop(this, upEvent);\n    }\n\n    performDrag({\n      move\n    }) {\n      this.hint.move(move);\n      const cursorElement = this.elementUnderCursor(move);\n\n      if (cursorElement) {\n        this.service.notifyDrag(this, cursorElement, move);\n      }\n\n      this.drag.emit({\n        draggable: this,\n        mouseEvent: move\n      });\n    }\n\n    elementUnderCursor(mouseEvent) {\n      this.hint.hide();\n      let target = elementUnderCursor(mouseEvent);\n\n      if (target && /k-grouping-dropclue/.test(target.className)) {\n        target = hideThenShow(target, elementUnderCursor.bind(this, mouseEvent));\n      }\n\n      this.hint.show();\n      return target;\n    }\n\n    updateTouchAction() {\n      if (!this.element) {\n        return;\n      }\n\n      this.enabled ? this.renderer.addClass(this.element.nativeElement, 'k-touch-action-none') : this.renderer.removeClass(this.element.nativeElement, 'k-touch-action-none');\n    }\n\n  };\n\n  DraggableColumnDirective.ɵfac = function DraggableColumnDirective_Factory(t) {\n    return new (t || DraggableColumnDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DraggableDirective, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DragAndDropService), ɵngcc0.ɵɵdirectiveInject(DragHintService), ɵngcc0.ɵɵdirectiveInject(DropCueService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  DraggableColumnDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: DraggableColumnDirective,\n    selectors: [[\"\", \"kendoDraggableColumn\", \"\"]],\n    hostVars: 2,\n    hostBindings: function DraggableColumnDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-grid-draggable-header\", ctx.hostClass);\n      }\n    },\n    inputs: {\n      context: \"context\",\n      enableDrag: \"enableDrag\"\n    },\n    outputs: {\n      drag: \"drag\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DraggableColumnDirective.prototype, \"context\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DraggableColumnDirective.prototype, \"enableDrag\", null);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DraggableColumnDirective.prototype, \"drag\", void 0);\n\n  __decorate([HostBinding('class.k-grid-draggable-header'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], DraggableColumnDirective.prototype, \"hostClass\", null);\n\n  DraggableColumnDirective = __decorate([__param(0, Host()), __metadata(\"design:paramtypes\", [DraggableDirective, ElementRef, NgZone, DragAndDropService, DragHintService, DropCueService, NavigationService, Renderer2])], DraggableColumnDirective);\n  return DraggableColumnDirective;\n})();\nconst exported = [DraggableColumnDirective, DropTargetDirective];\n/**\n * @hidden\n */\n\nlet DragAndDropModule = /*#__PURE__*/(() => {\n  let DragAndDropModule = class DragAndDropModule {};\n\n  DragAndDropModule.ɵfac = function DragAndDropModule_Factory(t) {\n    return new (t || DragAndDropModule)();\n  };\n\n  DragAndDropModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DragAndDropModule\n  });\n  DragAndDropModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return DragAndDropModule;\n})();\nconst exportedModules$1 = [GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective, GroupHeaderComponent, GroupPanelComponent, GroupIndicatorComponent];\n/**\n * @hidden\n */\n\nlet GroupModule = /*#__PURE__*/(() => {\n  let GroupModule = class GroupModule {\n    static exports() {\n      return [GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective];\n    }\n\n  };\n\n  GroupModule.ɵfac = function GroupModule_Factory(t) {\n    return new (t || GroupModule)();\n  };\n\n  GroupModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: GroupModule\n  });\n  GroupModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, SharedModule, DragAndDropModule]]\n  });\n  /**\n   * @hidden\n   */\n\n  return GroupModule;\n})();\nconst DEFAULTS = {\n  allowUnsort: true,\n  mode: 'single',\n  showIndexes: true,\n  initialDirection: 'asc'\n};\n/**\n * @hidden\n */\n\nconst normalize$1 = (...settings) => Object.assign({}, DEFAULTS, ...settings);\n/**\n * @hidden\n */\n\n\nconst hasFilter = (settings, column) => settings.filter !== false && column.field && column.filterable;\n/**\n * @hidden\n */\n\n\nconst hasSort = (settings, column) => settings.sort !== false && column.field && column.sortable;\n/**\n * @hidden\n */\n\n\nconst hasLock = (settings, column) => settings.lock && column.lockable && !(column.parent && !column.parent.isSpanColumn);\n/**\n * @hidden\n */\n\n\nconst hasStick = (settings, column) => settings.stick && column.stickable && !(column.parent && !column.parent.isSpanColumn);\n/**\n * @hidden\n */\n\n\nconst hasPosition = (settings, column) => settings.setColumnPosition && (column.stickable || column.lockable) && !(column.parent && !column.parent.isSpanColumn);\n/**\n * @hidden\n */\n\n\nconst hasColumnChooser = settings => settings.columnChooser !== false;\n/**\n * @hidden\n */\n\n\nconst hasItems = (settings, column) => hasColumnChooser(settings) || hasLock(settings, column) || hasSort(settings, column) || hasFilter(settings, column);\n/**\n * @hidden\n */\n\n\nlet FilterMenuComponent = /*#__PURE__*/(() => {\n  let FilterMenuComponent = class FilterMenuComponent {\n    constructor(filterService, popupService, localization, navigationService) {\n      this.filterService = filterService;\n      this.popupService = popupService;\n      this.localization = localization;\n      this.navigationService = navigationService;\n      this.tabIndex = '-1';\n    }\n\n    get hasFilters() {\n      return filtersByField(this.filter, (this.column || {}).field).length > 0;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get filterLabel() {\n      const localizationMsg = this.localization.get('filterMenuTitle') || '';\n      const columnName = this.column.title || this.column.field;\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n    toggle(anchor, template) {\n      this.popupRef = this.popupService.open(anchor, template, this.popupRef);\n\n      if (!this.popupRef) {\n        if (this.navigationService.enabled) {\n          this.navigationService.focusCell(0, this.column.leafIndex);\n        } else {\n          this.anchor.nativeElement.focus();\n        }\n      }\n\n      return false;\n    }\n\n    close() {\n      this.popupService.destroy();\n\n      if (this.navigationService.enabled) {\n        this.navigationService.focusCell(0, this.column.leafIndex);\n      } else {\n        this.anchor.nativeElement.focus();\n      }\n    }\n\n  };\n\n  FilterMenuComponent.ɵfac = function FilterMenuComponent_Factory(t) {\n    return new (t || FilterMenuComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(SinglePopupService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(NavigationService));\n  };\n\n  FilterMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FilterMenuComponent,\n    selectors: [[\"kendo-grid-filter-menu\"]],\n    viewQuery: function FilterMenuComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c172, 7);\n        ɵngcc0.ɵɵviewQuery(_c173, 7, TemplateRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.anchor = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      }\n    },\n    inputs: {\n      tabIndex: \"tabIndex\",\n      column: \"column\",\n      filter: \"filter\"\n    },\n    decls: 5,\n    vars: 5,\n    consts: [[\"href\", \"#\", 3, \"ngClass\", \"tabindex\", \"click\", \"keydown.enter\"], [\"anchor\", \"\"], [1, \"k-icon\", \"k-i-filter\"], [\"template\", \"\"], [3, \"column\", \"filter\", \"close\", \"keydown.escape\", \"keydown.enter\"]],\n    template: function FilterMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n        ɵngcc0.ɵɵelementStart(0, \"a\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function FilterMenuComponent_Template_a_click_0_listener() {\n          ɵngcc0.ɵɵrestoreView(_r7);\n\n          const _r0 = ɵngcc0.ɵɵreference(1);\n\n          const _r1 = ɵngcc0.ɵɵreference(4);\n\n          return ctx.toggle(_r0, _r1);\n        })(\"keydown.enter\", function FilterMenuComponent_Template_a_keydown_enter_0_listener($event) {\n          return $event.stopImmediatePropagation();\n        });\n        ɵngcc0.ɵɵelement(2, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, FilterMenuComponent_ng_template_3_Template, 1, 2, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c174, ctx.hasFilters))(\"tabindex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"title\", ctx.filterLabel);\n      }\n    },\n    directives: function () {\n      return [ɵngcc5.NgClass, FilterMenuContainerComponent];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], FilterMenuComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], FilterMenuComponent.prototype, \"filter\", void 0);\n\n  __decorate([ViewChild('anchor', {\n    static: true\n  }), __metadata(\"design:type\", ElementRef)], FilterMenuComponent.prototype, \"anchor\", void 0);\n\n  __decorate([ViewChild('template', {\n    static: true,\n    read: TemplateRef\n  }), __metadata(\"design:type\", TemplateRef)], FilterMenuComponent.prototype, \"template\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], FilterMenuComponent.prototype, \"tabIndex\", void 0);\n\n  FilterMenuComponent = __decorate([__metadata(\"design:paramtypes\", [FilterService, SinglePopupService, LocalizationService, NavigationService])], FilterMenuComponent);\n  /**\n   * Represents the service that is passed to the\n   * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n   *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n   *              <span class=\"k-icon k-i-close\" (click)=\"service.close()\"\n   *                  style=\"position: absolute; right: 5px; top: 5px;cursor: pointer;\"></span>\n   *              <kendo-grid-columnmenu-sort [service]=\"service\">\n   *              </kendo-grid-columnmenu-sort>\n   *          </ng-template>\n   *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n   *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n   *       </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n   * }\n   *\n   * ```\n   */\n\n  return FilterMenuComponent;\n})();\nlet ColumnMenuService = /*#__PURE__*/(() => {\n  let ColumnMenuService = class ColumnMenuService {\n    /**\n     * @hidden\n     */\n    constructor(menuTabbingService) {\n      /**\n       * @hidden\n       */\n      this.closeMenu = new EventEmitter();\n      this.menuTabbingService = menuTabbingService;\n    }\n    /**\n     * Closes the column menu.\n     */\n\n\n    close() {\n      this.closeMenu.emit();\n    }\n\n  };\n\n  ColumnMenuService.ɵfac = function ColumnMenuService_Factory(t) {\n    return new (t || ColumnMenuService)(ɵngcc0.ɵɵinject(MenuTabbingService));\n  };\n\n  ColumnMenuService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ColumnMenuService,\n    factory: function (t) {\n      return ColumnMenuService.ɵfac(t);\n    }\n  });\n  ColumnMenuService = __decorate([__metadata(\"design:paramtypes\", [MenuTabbingService])], ColumnMenuService);\n  return ColumnMenuService;\n})();\nconst POPUP_CLASS = 'k-grid-columnmenu-popup';\n/**\n * Represents the [column menu]({% slug columnmenu_grid %}) component.\n */\n\nlet ColumnMenuComponent = /*#__PURE__*/(() => {\n  let ColumnMenuComponent = class ColumnMenuComponent {\n    constructor(popupService, localization, service, navigationService) {\n      this.popupService = popupService;\n      this.localization = localization;\n      this.service = service;\n      this.navigationService = navigationService;\n      /**\n       * @hidden\n       */\n\n      this.standalone = true;\n      /**\n       * The settings for the Column Menu.\n       */\n\n      this.settings = {};\n      /**\n       * @hidden\n       */\n\n      this.sortable = true;\n      /**\n       * @hidden\n       */\n\n      this.tabIndex = '-1';\n      /**\n       * @hidden\n       */\n\n      this.expandedFilter = false;\n      /**\n       * @hidden\n       */\n\n      this.expandedColumns = false;\n      /**\n       * @hidden\n       */\n\n      this.expandedPosition = false;\n      this.closeSubscription = service.closeMenu.subscribe(this.close.bind(this));\n    }\n    /**\n     * @hidden\n     */\n\n\n    get isActive() {\n      return this.hasFilter && filtersByField(this.filter, this.column.field).length > 0 || !this.sortable && this.hasSort && this.sort.find(descriptor => descriptor.field === this.column.field);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hasFilter() {\n      return hasFilter(this.settings, this.column);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hasSort() {\n      return hasSort(this.settings, this.column);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hasColumnChooser() {\n      return hasColumnChooser(this.settings);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hasLock() {\n      return hasLock(this.settings, this.column);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hasStick() {\n      return hasStick(this.settings, this.column);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hasPosition() {\n      return hasPosition(this.settings, this.column);\n    }\n\n    ngOnChanges() {\n      this.service.column = this.column;\n      this.service.sort = this.sort;\n      this.service.filter = this.filter;\n      this.service.sortable = this.sortable;\n    }\n\n    ngOnDestroy() {\n      this.close();\n      this.closeSubscription.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n\n\n    toggle(e, anchor, template) {\n      if (e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n\n      this.expandedFilter = this.getExpandedState(this.settings.filter);\n      this.expandedColumns = this.getExpandedState(this.settings.columnChooser);\n      this.expandedPosition = this.getExpandedState(this.settings.setColumnPosition);\n      this.popupRef = this.popupService.open(anchor, template, this.popupRef, POPUP_CLASS);\n\n      if (!this.popupRef) {\n        if (this.navigationService.enabled) {\n          this.navigationService.focusCell(0, this.column.leafIndex);\n        } else {\n          this.anchor.nativeElement.focus();\n        }\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    close() {\n      this.popupService.destroy();\n      this.popupRef = null;\n\n      if (this.navigationService.enabled) {\n        this.navigationService.focusCell(0, this.column.leafIndex);\n      } else {\n        this.anchor.nativeElement.focus();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    get columnMenuTitle() {\n      const localizationMsg = this.localization.get('columnMenu') || '';\n      const columnName = this.column.title || this.column.field;\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n    getExpandedState(menuItemSettings) {\n      return typeof menuItemSettings === 'object' ? menuItemSettings.expanded : false;\n    }\n\n  };\n\n  ColumnMenuComponent.ɵfac = function ColumnMenuComponent_Factory(t) {\n    return new (t || ColumnMenuComponent)(ɵngcc0.ɵɵdirectiveInject(SinglePopupService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ColumnMenuService), ɵngcc0.ɵɵdirectiveInject(NavigationService));\n  };\n\n  ColumnMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ColumnMenuComponent,\n    selectors: [[\"kendo-grid-column-menu\"]],\n    viewQuery: function ColumnMenuComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c172, 7);\n        ɵngcc0.ɵɵviewQuery(_c173, 7, TemplateRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.anchor = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function ColumnMenuComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-grid-column-menu-standalone\", ctx.standalone);\n      }\n    },\n    inputs: {\n      standalone: \"standalone\",\n      settings: \"settings\",\n      sortable: \"sortable\",\n      tabIndex: \"tabIndex\",\n      column: \"column\",\n      sort: \"sort\",\n      filter: \"filter\",\n      columnMenuTemplate: \"columnMenuTemplate\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([ColumnMenuService, MenuTabbingService]), ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 7,\n    vars: 5,\n    consts: [[\"href\", \"#\", 1, \"k-grid-column-menu\", \"k-grid-filter\", 3, \"ngClass\", \"tabindex\", \"click\", \"keydown.enter\"], [\"anchor\", \"\"], [1, \"k-icon\", \"k-i-more-vertical\"], [\"template\", \"\"], [\"defaultTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"keydown.escape\", \"keydown.enter\"], [3, \"kendoGridColumnMenuItem\", \"service\", 4, \"ngIf\"], [3, \"showLock\", \"showStick\", \"kendoGridColumnMenuItem\", \"service\", \"expanded\", 4, \"ngIf\"], [3, \"kendoGridColumnMenuItem\", \"service\", \"expanded\", 4, \"ngIf\"], [3, \"kendoGridColumnMenuItem\", \"service\"], [\"sortItem\", \"\"], [\"lockItem\", \"\"], [\"stickItem\", \"\"], [3, \"showLock\", \"showStick\", \"kendoGridColumnMenuItem\", \"service\", \"expanded\"], [\"positionItem\", \"\"], [3, \"kendoGridColumnMenuItem\", \"service\", \"expanded\"], [\"chooserItem\", \"\"], [\"filterItem\", \"\"]],\n    template: function ColumnMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r20 = ɵngcc0.ɵɵgetCurrentView();\n\n        ɵngcc0.ɵɵelementStart(0, \"a\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function ColumnMenuComponent_Template_a_click_0_listener($event) {\n          ɵngcc0.ɵɵrestoreView(_r20);\n\n          const _r0 = ɵngcc0.ɵɵreference(1);\n\n          const _r1 = ɵngcc0.ɵɵreference(4);\n\n          return ctx.toggle($event, _r0, _r1);\n        })(\"keydown.enter\", function ColumnMenuComponent_Template_a_keydown_enter_0_listener($event) {\n          return $event.stopImmediatePropagation();\n        });\n        ɵngcc0.ɵɵelement(2, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, ColumnMenuComponent_ng_template_3_Template, 1, 5, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(5, ColumnMenuComponent_ng_template_5_Template, 7, 6, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c176, ctx.isActive))(\"tabindex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"title\", ctx.columnMenuTitle);\n      }\n    },\n    directives: function () {\n      return [ɵngcc5.NgClass, ɵngcc5.NgTemplateOutlet, ColumnMenuContainerComponent, ɵngcc5.NgIf, ColumnMenuSortComponent, ColumnMenuItemDirective, ColumnMenuLockComponent, ColumnMenuStickComponent, ColumnMenuPositionComponent, ColumnMenuChooserComponent, ColumnMenuFilterComponent];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-grid-column-menu-standalone'), Input(), __metadata(\"design:type\", Boolean)], ColumnMenuComponent.prototype, \"standalone\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ColumnMenuComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ColumnMenuComponent.prototype, \"settings\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ColumnMenuComponent.prototype, \"sort\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ColumnMenuComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ColumnMenuComponent.prototype, \"sortable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", TemplateRef)], ColumnMenuComponent.prototype, \"columnMenuTemplate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ColumnMenuComponent.prototype, \"tabIndex\", void 0);\n\n  __decorate([ViewChild('anchor', {\n    static: true\n  }), __metadata(\"design:type\", ElementRef)], ColumnMenuComponent.prototype, \"anchor\", void 0);\n\n  __decorate([ViewChild('template', {\n    static: true,\n    read: TemplateRef\n  }), __metadata(\"design:type\", TemplateRef)], ColumnMenuComponent.prototype, \"template\", void 0);\n\n  ColumnMenuComponent = __decorate([__metadata(\"design:paramtypes\", [SinglePopupService, LocalizationService, ColumnMenuService, NavigationService])], ColumnMenuComponent);\n  return ColumnMenuComponent;\n})();\n\nconst mergeObjects = (...args) => Object.assign.apply(null, [{}].concat(args));\n\nconst directions = initialDirection => initialDirection === \"asc\" ? [\"asc\", \"desc\"] : [\"desc\", \"asc\"];\n/**\n * @hidden\n */\n\n\nconst isRootLevel = ({\n  parent\n}) => !isTruthy(parent);\n\nconst ofColumnType = ({\n  draggable\n}) => ['column', 'columnGroup'].indexOf(draggable.context.type) >= 0;\n\nconst notSameElement = ({\n  draggable,\n  target\n}) => draggable.element.nativeElement !== target.element.nativeElement;\n\nconst inSameParent = (x, y) => x.parent === y.parent || isInSpanColumn(y) && inSameParent(x, y.parent);\n\nconst sameParent = ({\n  draggable,\n  target\n}) => inSameParent(draggable.context.column, target.context.column);\n\nconst lastNonLocked = ({\n  draggable\n}) => !isTruthy(draggable.context.column.locked) && isRootLevel(draggable.context.column) && draggable.context.lastColumn;\n\nconst notInSpanColumn = ({\n  draggable\n}) => !isInSpanColumn(draggable.context.column);\n\nconst reorderable = ({\n  draggable\n}) => draggable.context.column.reorderable;\n\nconst lockable = ({\n  draggable,\n  target\n}) => draggable.context.column.lockable !== false || draggable.context.column.isLocked === target.context.column.isLocked;\n\nconst rules = and(ofColumnType, reorderable, notInSpanColumn, notSameElement, sameParent, not(lastNonLocked), lockable);\n/**\n * @hidden\n */\n\nlet HeaderComponent = /*#__PURE__*/(() => {\n  let HeaderComponent = class HeaderComponent {\n    constructor(popupService, hint, cue, reorderService, idService, sortService, localization, columnInfoService, cd) {\n      this.popupService = popupService;\n      this.hint = hint;\n      this.cue = cue;\n      this.reorderService = reorderService;\n      this.idService = idService;\n      this.sortService = sortService;\n      this.localization = localization;\n      this.columnInfoService = columnInfoService;\n      this.cd = cd;\n      this.columns = [];\n      this.groups = [];\n      this.sort = new Array();\n      this.sortable = false;\n      this.groupable = false;\n      this.lockedColumnsCount = 0;\n      this.resizable = false;\n      this.reorderable = false;\n      this.columnMenu = false;\n      this.totalColumnsCount = 0;\n      this.sortedFields = {};\n      this.dropTargets = new QueryList();\n      this.subscription = new Subscription();\n    }\n\n    get headerClass() {\n      return !this.scrollable;\n    }\n\n    get sortableLabel() {\n      return this.localization.get('sortable');\n    } // Number of unlocked columns in the next table, if any\n\n\n    get unlockedColumnsCount() {\n      return this.totalColumnsCount - this.lockedColumnsCount - this.columns.length;\n    }\n\n    sortColumn(column) {\n      this.sortService.sort(this.toggleSort(column));\n    }\n\n    onSortClick(column, event, link) {\n      const target = event.target;\n\n      if (column.headerTemplateRef && target !== link) {\n        const hasFocusableParent = Boolean(closestInScope(target, isFocusable, link));\n\n        if (hasFocusableParent) {\n          // Do not sort when clicking focusable template elements.\n          return;\n        }\n      }\n\n      this.sortColumn(column);\n    }\n\n    onHeaderKeydown(column, args) {\n      if (args.keyCode === Keys.ArrowDown && args.altKey && this.showFilterMenu) {\n        args.preventDefault();\n        args.stopImmediatePropagation();\n        const filterMenu = this.filterMenus.find(fm => fm.column === column);\n        filterMenu.toggle(filterMenu.anchor.nativeElement, filterMenu.template);\n      }\n\n      if (args.keyCode === Keys.ArrowDown && args.altKey && this.showColumnMenu(column)) {\n        args.preventDefault();\n        args.stopImmediatePropagation();\n        const columnMenu = this.columnMenus.find(cm => cm.column === column);\n        columnMenu.toggle(null, columnMenu.anchor.nativeElement, columnMenu.template);\n      }\n\n      if (!this.sortable || args.defaultPrevented || column.sortable === false) {\n        return;\n      }\n\n      if (args.keyCode === Keys.Enter && isPresent(column.field)) {\n        this.sortService.sort(this.toggleSort(column));\n      }\n    }\n\n    showSortNumbering(column) {\n      const {\n        showIndexes\n      } = normalize$1(this.sortable);\n      return showIndexes && this.sort && this.sort.filter(({\n        dir\n      }) => isPresent(dir)).length > 1 && this.sortOrder(column.field) > 0;\n    }\n\n    sortOrder(field) {\n      return this.sort.filter(({\n        dir\n      }) => isPresent(dir)).findIndex(x => x.field === field) + 1;\n    }\n\n    sortIcon(field) {\n      const state$$1 = this.sortDescriptor(field);\n      return {\n        'k-icon': isPresent(state$$1.dir),\n        'k-i-sort-desc-sm': state$$1.dir === \"desc\",\n        'k-i-sort-asc-sm': state$$1.dir === \"asc\"\n      };\n    }\n\n    sortState(column) {\n      if (!this.isSortable(column)) {\n        return;\n      }\n\n      const state$$1 = this.sortDescriptor(column.field);\n\n      if (state$$1.dir === 'asc') {\n        return 'ascending';\n      }\n\n      if (state$$1.dir === 'desc') {\n        return 'descending';\n      }\n    }\n\n    sortStatus(column) {\n      if (!this.sortedFields[column.field] || !this.isSortable(column)) {\n        return;\n      }\n\n      let msg = 'sortedDefault';\n      const state$$1 = this.sortDescriptor(column.field);\n\n      if (state$$1.dir === 'asc') {\n        msg = 'sortedAscending';\n      } else if (state$$1.dir === 'desc') {\n        msg = 'sortedDescending';\n      }\n\n      return this.localization.get(msg);\n    }\n\n    toggleSort(column) {\n      const {\n        allowUnsort,\n        mode,\n        initialDirection\n      } = normalize$1(this.sortable, column.sortable);\n      const descriptor = this.toggleDirection(column.field, allowUnsort, initialDirection);\n\n      if (mode === 'single') {\n        return [descriptor];\n      }\n\n      return [...this.sort.filter(desc => desc.field !== column.field), descriptor];\n    }\n\n    ngAfterViewInit() {\n      this.subscription.add(observe(this.dropTargets).subscribe(this.attachTargets.bind(this)));\n    }\n\n    ngDoCheck() {\n      this._leafColumns = columnsToRender(this.columns || []).filter(x => !isColumnGroupComponent(x));\n    }\n\n    ngOnChanges(changes) {\n      const sortChange = changes.sort;\n\n      if (sortChange && !sortChange.isFirstChange()) {\n        sortChange.currentValue.forEach(change => {\n          this.sortedFields[change.field] = true;\n        });\n      }\n    }\n\n    ngOnInit() {\n      this.subscription.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n    }\n\n    ngOnDestroy() {\n      if (this.targetSubscription) {\n        this.targetSubscription.unsubscribe();\n      }\n\n      if (this.popupService) {\n        this.popupService.destroy();\n      }\n\n      this.subscription.unsubscribe();\n    }\n\n    selectAllCheckboxId() {\n      return this.idService.selectAllCheckboxId();\n    }\n\n    get selectAllCheckboxLabel() {\n      return this.localization.get('selectAllCheckboxLabel');\n    }\n\n    isFirstOnRow(column, index) {\n      const isTailing = c => c && (this.columnsForLevel(c.level).indexOf(c) > 0 || isTailing(c.parent));\n\n      return index === 0 && !this.groups.length && !this.detailTemplate && isTailing(column.parent);\n    }\n\n    logicalColumnIndex(column) {\n      const index = column.leafIndex;\n\n      if (isPresent(index)) {\n        return index + (isPresent(this.detailTemplate) ? 1 : 0);\n      }\n\n      return -1;\n    }\n\n    get showFilterMenu() {\n      return !this.columnMenu && hasFilterMenu(this.filterable);\n    }\n\n    get showFilterRow() {\n      return hasFilterRow(this.filterable);\n    }\n\n    showColumnMenu(column) {\n      return this.columnMenu && column.columnMenu && (this.columnMenuTemplate || column.columnMenuTemplates.length || hasItems(this.columnMenu, column));\n    }\n\n    isFilterable(column) {\n      return !isNullOrEmptyString(column.field) && column.filterable === true;\n    }\n\n    canDrop(draggable, target) {\n      return this.reorderable && rules({\n        draggable,\n        target\n      });\n    }\n\n    shouldActivate(column) {\n      const canReorder = this.reorderable && column.reorderable;\n\n      if (!canReorder && !isColumnComponent(column)) {\n        return false;\n      }\n\n      const groupable = this.groupable && isColumnComponent(column) && column.groupable !== false;\n      return groupable || canReorder;\n    }\n\n    isSortable(column) {\n      return !isNullOrEmptyString(column.field) && isTruthy(this.sortable) && isTruthy(column.sortable);\n    }\n\n    isCheckboxColumn(column) {\n      return isCheckboxColumn(column) && !column.templateRef;\n    }\n\n    trackByIndex(index, _item) {\n      return index;\n    }\n\n    addStickyStyles(column) {\n      const stickyStyles = this.columnInfoService.stickyColumnsStyles(column);\n      return Object.assign({}, column.style, stickyStyles);\n    }\n\n    toggleDirection(field, allowUnsort, initialDirection) {\n      const descriptor = this.sortDescriptor(field);\n      const [first, second] = directions(initialDirection);\n      let dir = first;\n\n      if (descriptor.dir === first) {\n        dir = second;\n      } else if (descriptor.dir === second && allowUnsort) {\n        dir = undefined;\n      }\n\n      return {\n        dir,\n        field\n      };\n    }\n\n    columnsForLevel(level) {\n      const columns = this.columns ? this.columns.filter(column => column.level === level) : [];\n      return sortColumns(columnsToRender(columns));\n    }\n\n    isColumnGroupComponent(column) {\n      return isColumnGroupComponent(column);\n    }\n\n    get columnLevels() {\n      return new Array((this.totalColumnLevels || 0) + 1);\n    }\n\n    sortDescriptor(field) {\n      return this.sort.find(item => item.field === field) || {\n        field\n      };\n    }\n\n    get leafColumns() {\n      return this._leafColumns;\n    }\n\n    attachTargets() {\n      if (this.targetSubscription) {\n        this.targetSubscription.unsubscribe();\n      }\n\n      this.targetSubscription = new Subscription();\n      const enterStream = merge(...this.dropTargets.map(target => target.enter));\n      const leaveStream = merge(...this.dropTargets.map(target => target.leave));\n      const dropStream = merge(...this.dropTargets.map(target => target.drop));\n      this.targetSubscription.add(enterStream.pipe(tap(({\n        target,\n        draggable\n      }) => {\n        if (draggable.context.type === 'groupIndicator') {\n          return;\n        }\n\n        const targetLocked = isTruthy(target.context.column.isLocked);\n        const draggableLocked = isTruthy(draggable.context.column.isLocked);\n\n        if (this.lockedColumnsCount > 0 || targetLocked || draggableLocked) {\n          this.hint.toggleLock(targetLocked);\n        }\n      }), filter(({\n        draggable,\n        target\n      }) => this.canDrop(draggable, target)), switchMap(this.trackMove.bind(this, leaveStream, dropStream)), map(e => mergeObjects(e, {\n        before: this.calculateBefore(e),\n        changeContainer: e.changeContainer\n      })), map(this.normalizeTarget.bind(this)), tap(this.enter.bind(this)), switchMap(args => dropStream.pipe(map(() => args), takeUntil(leaveStream.pipe(tap(this.leave.bind(this))))))).subscribe(this.drop.bind(this)));\n    }\n\n    normalizeTarget(e) {\n      let target = e.target;\n      const parent = target.context.column.parent;\n\n      if (parent && parent.isSpanColumn) {\n        const arr = this.dropTargets.toArray();\n        const firstSpan = arr.find(t => t.context.column.parent === parent);\n        const index = arr.indexOf(firstSpan);\n        const adjust = e.before ? 0 : parent.childColumns.length - 1;\n        target = arr[index + adjust];\n      }\n\n      return mergeObjects(e, {\n        target\n      });\n    }\n\n    trackMove(leaveStream, dropStream, e) {\n      const column = e.target.context.column;\n      const levelColumns = this.columnsForLevel(column.level);\n      const index = levelColumns.indexOf(column);\n      const isFirst = column.locked ? index === levelColumns.length - 1 : index === 0;\n      const changed = e.draggable.context.column.isLocked !== column.isLocked;\n\n      if (changed && isFirst) {\n        return e.draggable.drag.pipe(takeUntil(leaveStream), takeUntil(dropStream), map(({\n          mouseEvent\n        }) => mergeObjects({\n          changeContainer: true\n        }, e, {\n          mouseEvent\n        })));\n      }\n\n      return of(mergeObjects({\n        changeContainer: changed\n      }, e));\n    }\n\n    calculateBefore({\n      draggable,\n      target,\n      mouseEvent,\n      changeContainer = false\n    }) {\n      const targetElement = target.element.nativeElement;\n      let before = false;\n\n      if (changeContainer) {\n        const {\n          left\n        } = offset(targetElement);\n        const halfWidth = targetElement.offsetWidth / 2;\n        const middle = left + halfWidth;\n        before = middle > mouseEvent.pageX;\n\n        if (this.localization.rtl) {\n          before = !before;\n        }\n      } else {\n        before = isTargetBefore(draggable.element.nativeElement, targetElement);\n      }\n\n      return before;\n    }\n\n    enter({\n      target,\n      before\n    }) {\n      this.hint.enable();\n\n      if (this.localization.rtl) {\n        before = !before;\n      }\n\n      this.cue.position(position(target.element.nativeElement, before));\n    }\n\n    leave() {\n      this.hint.disable();\n      this.cue.hide();\n    }\n\n    drop({\n      draggable,\n      target,\n      before,\n      changeContainer\n    }) {\n      this.reorderService.reorder({\n        before,\n        changeContainer,\n        source: draggable.context.column,\n        target: target.context.column\n      });\n    }\n\n  };\n\n  HeaderComponent.ɵfac = function HeaderComponent_Factory(t) {\n    return new (t || HeaderComponent)(ɵngcc0.ɵɵdirectiveInject(SinglePopupService), ɵngcc0.ɵɵdirectiveInject(DragHintService), ɵngcc0.ɵɵdirectiveInject(DropCueService), ɵngcc0.ɵɵdirectiveInject(ColumnReorderService), ɵngcc0.ɵɵdirectiveInject(IdService), ɵngcc0.ɵɵdirectiveInject(SortService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  HeaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: HeaderComponent,\n    selectors: [[\"\", \"kendoGridHeader\", \"\"]],\n    viewQuery: function HeaderComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DropTargetDirective, 5);\n        ɵngcc0.ɵɵviewQuery(FilterMenuComponent, 5);\n        ɵngcc0.ɵɵviewQuery(ColumnMenuComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropTargets = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.filterMenus = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnMenus = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function HeaderComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-grid-header\", ctx.headerClass);\n      }\n    },\n    inputs: {\n      columns: \"columns\",\n      groups: \"groups\",\n      sort: \"sort\",\n      sortable: \"sortable\",\n      groupable: \"groupable\",\n      lockedColumnsCount: \"lockedColumnsCount\",\n      resizable: \"resizable\",\n      reorderable: \"reorderable\",\n      columnMenu: \"columnMenu\",\n      totalColumnsCount: \"totalColumnsCount\",\n      totalColumnLevels: \"totalColumnLevels\",\n      detailTemplate: \"detailTemplate\",\n      scrollable: \"scrollable\",\n      filterable: \"filterable\",\n      filter: \"filter\",\n      columnMenuTemplate: \"columnMenuTemplate\",\n      tabIndex: \"tabIndex\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    attrs: _c177,\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ngIf\"], [\"kendoGridLogicalRow\", \"\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", 4, \"ngFor\", \"ngForOf\"], [\"kendoGridFilterRow\", \"\", \"kendoGridLogicalRow\", \"\", 3, \"columns\", \"filter\", \"groups\", \"detailTemplate\", \"lockedColumnsCount\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", 4, \"ngIf\"], [\"kendoGridLogicalRow\", \"\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"], [\"class\", \"k-group-cell k-header\", \"role\", \"presentation\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"k-hierarchy-cell k-header\", \"role\", \"presentation\", \"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 3, \"logicalRowIndex\", \"logicalColIndex\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [\"role\", \"presentation\", 1, \"k-group-cell\", \"k-header\"], [\"role\", \"presentation\", \"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 1, \"k-hierarchy-cell\", \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\"], [\"kendoGridLogicalCell\", \"\", \"role\", \"columnheader\", \"aria-selected\", \"false\", \"kendoDropTarget\", \"\", \"kendoDraggable\", \"\", \"kendoDraggableColumn\", \"\", \"class\", \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"headerLabelText\", \"colSpan\", \"rowSpan\", \"enableDrag\", \"context\", \"k-filterable\", \"k-first\", \"k-grid-header-sticky\", \"ngClass\", \"ngStyle\", \"keydown\", 4, \"ngIf\"], [\"kendoGridLogicalCell\", \"\", \"kendoDropTarget\", \"\", \"kendoDraggable\", \"\", \"kendoDraggableColumn\", \"\", \"class\", \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"rowSpan\", \"colSpan\", \"headerLabelText\", \"enableDrag\", \"context\", \"k-first\", \"k-filterable\", \"k-grid-content-sticky\", \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [\"kendoGridLogicalCell\", \"\", \"role\", \"columnheader\", \"aria-selected\", \"false\", \"kendoDropTarget\", \"\", \"kendoDraggable\", \"\", \"kendoDraggableColumn\", \"\", 1, \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"headerLabelText\", \"colSpan\", \"rowSpan\", \"enableDrag\", \"context\", \"ngClass\", \"ngStyle\", \"keydown\"], [\"kendoGridColumnHandle\", \"\", \"kendoDraggable\", \"\", \"class\", \"k-column-resizer\", 3, \"column\", \"columns\", 4, \"ngIf\"], [3, \"column\", \"filter\", \"tabIndex\", 4, \"ngIf\"], [3, \"standalone\", \"settings\", \"column\", \"columnMenuTemplate\", \"sort\", \"filter\", \"sortable\", \"tabIndex\", 4, \"ngIf\"], [3, \"templateContext\"], [3, \"column\", \"filter\", \"tabIndex\"], [3, \"standalone\", \"settings\", \"column\", \"columnMenuTemplate\", \"sort\", \"filter\", \"sortable\", \"tabIndex\"], [1, \"k-cell-inner\"], [1, \"k-link\", 3, \"click\"], [\"link\", \"\"], [3, \"ngClass\"], [\"class\", \"k-sort-order\", 4, \"ngIf\"], [\"role\", \"status\", 1, \"k-sort-status\", 2, \"position\", \"absolute\", \"left\", \"-10000px\", 3, \"innerHtml\"], [1, \"k-column-title\"], [1, \"k-sort-order\"], [\"kendoGridSelectAllCheckbox\", \"\", \"kendoGridFocusable\", \"\", 1, \"k-checkbox\"], [\"kendoGridColumnHandle\", \"\", \"kendoDraggable\", \"\", 1, \"k-column-resizer\", 3, \"column\", \"columns\"], [\"kendoGridLogicalCell\", \"\", \"kendoDropTarget\", \"\", \"kendoDraggable\", \"\", \"kendoDraggableColumn\", \"\", 1, \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"rowSpan\", \"colSpan\", \"headerLabelText\", \"enableDrag\", \"context\", \"ngClass\", \"ngStyle\"], [3, \"standalone\", \"settings\", \"column\", \"columnMenuTemplate\", 4, \"ngIf\"], [3, \"standalone\", \"settings\", \"column\", \"columnMenuTemplate\"], [\"kendoGridFilterRow\", \"\", \"kendoGridLogicalRow\", \"\", 3, \"columns\", \"filter\", \"groups\", \"detailTemplate\", \"lockedColumnsCount\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"]],\n    template: function HeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, HeaderComponent_ng_template_0_Template, 2, 2, \"ng-template\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", true);\n      }\n    },\n    directives: function () {\n      return [ɵngcc5.NgIf, ɵngcc5.NgForOf, LogicalRowDirective, LogicalCellDirective, DropTargetDirective, ɵngcc2.DraggableDirective, DraggableColumnDirective, ɵngcc5.NgClass, ɵngcc5.NgStyle, TemplateContextDirective, FilterMenuComponent, ColumnMenuComponent, SelectAllCheckboxDirective, FocusableDirective, ColumnHandleDirective, FilterRowComponent];\n    },\n    styles: [\".k-column-resizer[_ngcontent-%COMP%] {\\n            cursor: col-resize;\\n            display: block;\\n            height: 1000%;\\n            position: absolute;\\n            top: 0;\\n            width: .5em;\\n        }\"]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], HeaderComponent.prototype, \"totalColumnLevels\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], HeaderComponent.prototype, \"columns\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], HeaderComponent.prototype, \"groups\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", DetailTemplateDirective)], HeaderComponent.prototype, \"detailTemplate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], HeaderComponent.prototype, \"scrollable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], HeaderComponent.prototype, \"filterable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], HeaderComponent.prototype, \"sort\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], HeaderComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], HeaderComponent.prototype, \"sortable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], HeaderComponent.prototype, \"groupable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], HeaderComponent.prototype, \"lockedColumnsCount\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], HeaderComponent.prototype, \"resizable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], HeaderComponent.prototype, \"reorderable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], HeaderComponent.prototype, \"columnMenu\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", TemplateRef)], HeaderComponent.prototype, \"columnMenuTemplate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], HeaderComponent.prototype, \"totalColumnsCount\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], HeaderComponent.prototype, \"tabIndex\", void 0);\n\n  __decorate([HostBinding('class.k-grid-header'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], HeaderComponent.prototype, \"headerClass\", null);\n\n  __decorate([ViewChildren(DropTargetDirective), __metadata(\"design:type\", QueryList)], HeaderComponent.prototype, \"dropTargets\", void 0);\n\n  __decorate([ViewChildren(FilterMenuComponent), __metadata(\"design:type\", QueryList)], HeaderComponent.prototype, \"filterMenus\", void 0);\n\n  __decorate([ViewChildren(ColumnMenuComponent), __metadata(\"design:type\", QueryList)], HeaderComponent.prototype, \"columnMenus\", void 0);\n\n  HeaderComponent = __decorate([__metadata(\"design:paramtypes\", [SinglePopupService, DragHintService, DropCueService, ColumnReorderService, IdService, SortService, LocalizationService, ColumnInfoService, ChangeDetectorRef])], HeaderComponent); // TODO\n  // tslint:disable:rxjs-no-unsafe-takeuntil\n\n  /**\n   * @hidden\n   */\n\n  return HeaderComponent;\n})();\n\nconst fromPercentage = (value, percent) => {\n  const sign = percent < 0 ? -1 : 1;\n  return Math.ceil(Math.abs(percent) / 100 * value) * sign;\n};\n/**\n * @hidden\n */\n\n\nconst toPercentage = (value, whole) => value / whole * 100;\n/**\n * @hidden\n */\n\n\nconst headerWidth = handle => handle.nativeElement.parentElement.offsetWidth;\n/**\n * @hidden\n */\n\n\nconst allLeafColumns = columns => expandColumns(columns).filter(c => !c.isColumnGroup);\n/**\n * @hidden\n */\n\n\nconst stopPropagation = ({\n  originalEvent: event\n}) => {\n  event.stopPropagation();\n  event.preventDefault();\n};\n/**\n * @hidden\n */\n\n\nconst createMoveStream = (service, draggable) => mouseDown => draggable.kendoDrag.pipe(takeUntil(draggable.kendoRelease.pipe(tap(() => service.end()))), map(({\n  pageX\n}) => ({\n  originalX: mouseDown.pageX,\n  pageX\n})));\n/**\n * @hidden\n */\n\n\nconst preventOnDblClick$1 = release => mouseDown => of(mouseDown).pipe(delay(150), takeUntil(release));\n/**\n * @hidden\n */\n\n\nconst isInSpanColumn$1 = column => !!(column.parent && column.parent.isSpanColumn);\n/**\n * @hidden\n *\n * Calculates the column index. If the column is stated in `SpanColumn`,\n * the index for all child columns equals the index of the first child.\n */\n\n\nconst indexOf = (target, list) => {\n  let index = 0;\n  let ignore = 0;\n  let skip = 0;\n\n  while (index < list.length) {\n    const current = list[index];\n    const isParentSpanColumn = isInSpanColumn$1(current);\n\n    if (current === target) {\n      break;\n    }\n\n    if (ignore-- <= 0 && isParentSpanColumn) {\n      ignore = current.parent.childColumns.length - 1;\n      skip += ignore;\n    }\n\n    index++;\n  }\n\n  return index - skip;\n};\n/**\n * @hidden\n */\n\n\nlet ColumnHandleDirective = /*#__PURE__*/(() => {\n  let ColumnHandleDirective = class ColumnHandleDirective {\n    constructor(draggable, element, service, zone, cdr, localization) {\n      this.draggable = draggable;\n      this.element = element;\n      this.service = service;\n      this.zone = zone;\n      this.cdr = cdr;\n      this.localization = localization;\n      this.columns = [];\n      this.subscriptions = new Subscription();\n      this.rtl = false;\n    }\n\n    get visible() {\n      return this.column.resizable ? 'block' : 'none';\n    }\n\n    get leftStyle() {\n      return isTruthy(this.rtl) ? 0 : null;\n    }\n\n    get rightStyle() {\n      return isTruthy(this.rtl) ? null : 0;\n    }\n\n    autoFit() {\n      const allLeafs = allLeafColumns(this.columns);\n      const currentLeafs = leafColumns([this.column]).filter(column => isTruthy(column.resizable));\n      const columnInfo = currentLeafs.map(column => {\n        const isParentSpan = isInSpanColumn$1(column);\n        const isLastInSpan = isParentSpan ? column.parent.childColumns.last === column : false;\n        const index = indexOf(column, allLeafs);\n        return {\n          column,\n          headerIndex: this.columnsForLevel(column.level).indexOf(column),\n          index,\n          isLastInSpan,\n          isParentSpan,\n          level: column.level\n        };\n      });\n      currentLeafs.forEach(column => column.width = 0);\n      this.service.measureColumns(columnInfo);\n    }\n\n    ngOnInit() {\n      const service = this.service.changes.pipe(filter(() => this.column.resizable), filter(e => isPresent(e.columns.find(column => column === this.column))));\n      this.subscriptions.add(service.pipe(filter(e => e.type === 'start')).subscribe(this.initState.bind(this)));\n      this.subscriptions.add(service.pipe(filter(e => e.type === 'resizeColumn')).subscribe(this.resize.bind(this)));\n      this.subscriptions.add(this.service.changes.pipe(filter(e => e.type === 'start'), filter(this.shouldUpdate.bind(this)), take(1) //on first resize only\n      ).subscribe(this.initColumnWidth.bind(this)));\n      this.subscriptions.add(this.zone.runOutsideAngular(() => this.draggable.kendoPress.pipe(tap(stopPropagation), tap(() => this.service.start(this.column)), switchMap(preventOnDblClick$1(this.draggable.kendoRelease)), switchMap(createMoveStream(this.service, this.draggable))).subscribe(({\n        pageX,\n        originalX\n      }) => {\n        const delta = pageX - originalX;\n        const percent = toPercentage(delta, this.column.resizeStartWidth || this.column.width);\n        this.service.resizeColumns(percent);\n      })));\n      this.subscriptions.add(service.pipe(filter(e => e.type === 'autoFitComplete')).subscribe(this.sizeToFit.bind(this)));\n      this.subscriptions.add(service.pipe(filter(e => e.type === 'triggerAutoFit')).subscribe(this.autoFit.bind(this)));\n      this.subscriptions.add(this.localization.changes.subscribe(({\n        rtl\n      }) => this.rtl = rtl));\n    }\n\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n    }\n\n    shouldUpdate() {\n      return !allLeafColumns(this.columns).map(column => column.width).some(isBlank);\n    }\n\n    initColumnWidth() {\n      this.column.width = headerWidth(this.element);\n    }\n\n    initState() {\n      this.column.resizeStartWidth = headerWidth(this.element);\n      this.service.resizedColumn({\n        column: this.column,\n        oldWidth: this.column.resizeStartWidth\n      });\n    }\n\n    resize({\n      deltaPercent\n    }) {\n      let delta = fromPercentage(this.column.resizeStartWidth, deltaPercent);\n\n      if (isTruthy(this.rtl)) {\n        delta *= -1;\n      }\n\n      const newWidth = Math.max(this.column.resizeStartWidth + delta, this.column.minResizableWidth);\n      const tableDelta = newWidth > this.column.minResizableWidth ? delta : this.column.minResizableWidth - this.column.resizeStartWidth;\n      this.updateWidth(this.column, newWidth);\n      this.service.resizeTable(this.column, tableDelta);\n    }\n\n    sizeToFit({\n      columns,\n      widths\n    }) {\n      const index = columns.indexOf(this.column);\n      const width = Math.max(...widths.map(w => w[index])) + 1; //add 1px for IE\n\n      const tableDelta = width - this.column.resizeStartWidth;\n      this.updateWidth(this.column, width);\n      this.service.resizeTable(this.column, tableDelta);\n    }\n\n    updateWidth(column, width) {\n      column.width = width;\n      this.cdr.markForCheck(); //force CD cycle\n    }\n\n    columnsForLevel(level) {\n      return columnsToRender(this.columns ? this.columns.filter(column => column.level === level) : []);\n    }\n\n  };\n\n  ColumnHandleDirective.ɵfac = function ColumnHandleDirective_Factory(t) {\n    return new (t || ColumnHandleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DraggableDirective, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ColumnResizingService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  ColumnHandleDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ColumnHandleDirective,\n    selectors: [[\"\", \"kendoGridColumnHandle\", \"\"]],\n    hostVars: 6,\n    hostBindings: function ColumnHandleDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"dblclick\", function ColumnHandleDirective_dblclick_HostBindingHandler() {\n          return ctx.autoFit();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.visible)(\"left\", ctx.leftStyle)(\"right\", ctx.rightStyle);\n      }\n    },\n    inputs: {\n      columns: \"columns\",\n      column: \"column\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], ColumnHandleDirective.prototype, \"columns\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnBase$1)], ColumnHandleDirective.prototype, \"column\", void 0);\n\n  __decorate([HostBinding('style.display'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], ColumnHandleDirective.prototype, \"visible\", null);\n\n  __decorate([HostBinding('style.left'), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [])], ColumnHandleDirective.prototype, \"leftStyle\", null);\n\n  __decorate([HostBinding('style.right'), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [])], ColumnHandleDirective.prototype, \"rightStyle\", null);\n\n  __decorate([HostListener('dblclick'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], ColumnHandleDirective.prototype, \"autoFit\", null);\n\n  ColumnHandleDirective = __decorate([__param(0, Host()), __metadata(\"design:paramtypes\", [DraggableDirective, ElementRef, ColumnResizingService, NgZone, ChangeDetectorRef, LocalizationService])], ColumnHandleDirective);\n  /**\n   * Represents the select-all checkbox feature of the Grid ([see example]({% slug selection_grid %}#toc-select-all-feature)).\n   */\n\n  return ColumnHandleDirective;\n})();\nlet SelectAllCheckboxDirective = /*#__PURE__*/(() => {\n  let SelectAllCheckboxDirective = class SelectAllCheckboxDirective {\n    constructor(selectionService, el, renderer, ngZone) {\n      this.selectionService = selectionService;\n      this.el = el;\n      this.renderer = renderer;\n      this.ngZone = ngZone;\n      /**\n       * Fires when the user clicks the `kendoGridSelectAllCheckbox` select-all checkbox\n       * ([see example]({% slug selection_grid %}#toc-select-all-feature)).\n       */\n\n      this.selectAllChange = new EventEmitter();\n      this.type = \"checkbox\";\n      this.stateSet = false;\n      this.ngZone.runOutsideAngular(() => {\n        this.destroyClick = this.renderer.listen(this.el.nativeElement, \"click\", this.onClick.bind(this));\n      });\n    }\n\n    ngAfterContentChecked() {\n      this.setState();\n    }\n\n    ngOnChanges() {\n      this.stateSet = true;\n    }\n\n    ngOnDestroy() {\n      if (this.destroyClick) {\n        this.destroyClick();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    onClick() {\n      // yields consistent cross-browser behavior when clicking an \"indeterminate\" checkbox\n      const undefinedCheckedStateInIE = detectIE() && this.selectionService.selectAllState === undefined;\n      const isChecked = undefinedCheckedStateInIE ? true : this.el.nativeElement.checked;\n      const options = this.selectionService.options;\n      this.selectAllChange.emit(isChecked ? \"checked\" : \"unchecked\");\n\n      if (options.enabled && options.mode === \"multiple\") {\n        this.ngZone.run(() => {\n          this.selectionService.updateAll(isChecked);\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    setState() {\n      const state$$1 = this.stateSet ? this.stateToBool() : this.selectionService.selectAllState;\n      const elem = this.el.nativeElement;\n      this.renderer.setProperty(elem, \"indeterminate\", !isPresent(state$$1));\n      this.renderer.setProperty(elem, \"checked\", isPresent(state$$1) ? state$$1 : false);\n    }\n    /**\n     * @hidden\n     */\n\n\n    stateToBool() {\n      switch (this.state) {\n        case \"checked\":\n          return true;\n\n        case \"unchecked\":\n          return false;\n\n        default:\n          return undefined;\n      }\n    }\n\n  };\n\n  SelectAllCheckboxDirective.ɵfac = function SelectAllCheckboxDirective_Factory(t) {\n    return new (t || SelectAllCheckboxDirective)(ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  SelectAllCheckboxDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: SelectAllCheckboxDirective,\n    selectors: [[\"\", \"kendoGridSelectAllCheckbox\", \"\"]],\n    hostVars: 1,\n    hostBindings: function SelectAllCheckboxDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"type\", ctx.type);\n      }\n    },\n    inputs: {\n      state: \"state\"\n    },\n    outputs: {\n      selectAllChange: \"selectAllChange\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SelectAllCheckboxDirective.prototype, \"state\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], SelectAllCheckboxDirective.prototype, \"selectAllChange\", void 0);\n\n  __decorate([HostBinding('attr.type'), __metadata(\"design:type\", String)], SelectAllCheckboxDirective.prototype, \"type\", void 0);\n\n  SelectAllCheckboxDirective = __decorate([__metadata(\"design:paramtypes\", [SelectionService, ElementRef, Renderer2, NgZone])], SelectAllCheckboxDirective);\n  return SelectAllCheckboxDirective;\n})();\n\nconst isNoValueOperator = operator => operator === \"isnull\" || operator === \"isnotnull\" || operator === \"isempty\" || operator === \"isnotempty\";\n\nconst validFilters = ({\n  value,\n  operator\n}) => !isNullOrEmptyString(value) || isNoValueOperator(operator);\n\nconst trimFilters = filter$$1 => {\n  filter$$1.filters = filter$$1.filters.filter(validFilters);\n  return filter$$1;\n};\n\nconst findParent = (filters, field, parent) => {\n  return filters.reduce((acc, filter$$1) => {\n    if (acc) {\n      return acc;\n    }\n\n    if (filter$$1.filters) {\n      return findParent(filter$$1.filters, field, filter$$1);\n    } else if (filter$$1.field === field) {\n      return parent;\n    }\n\n    return acc;\n  }, undefined); // tslint:disable-line:align\n};\n\nconst parentLogicOfDefault = (filter$$1, field, def = \"and\") => {\n  const parent = findParent((filter$$1 || {}).filters || [], field);\n  return isPresent(parent) ? parent.logic : def;\n};\n/**\n * @hidden\n */\n\n\nlet FilterMenuContainerComponent = /*#__PURE__*/(() => {\n  let FilterMenuContainerComponent = class FilterMenuContainerComponent {\n    constructor(parentService, childService, localization, cd, menuTabbingService) {\n      this.parentService = parentService;\n      this.childService = childService;\n      this.localization = localization;\n      this.cd = cd;\n      this.close = new EventEmitter();\n      /**\n       * @hidden\n       */\n\n      this.actionsClass = 'k-action-buttons k-button-group';\n      this._templateContext = {};\n      this.menuTabbingService = menuTabbingService;\n    }\n\n    get filter() {\n      return this._filter;\n    }\n    /**\n     * The current root filter.\n     * @type {CompositeFilterDescriptor}\n     */\n\n\n    set filter(value) {\n      this._filter = cloneFilters(value);\n    }\n\n    get childFilter() {\n      if (!isPresent(this._childFilter)) {\n        this._childFilter = {\n          filters: filtersByField(this.filter, (this.column || {}).field),\n          logic: parentLogicOfDefault(this.filter, (this.column || {}).field)\n        };\n      }\n\n      return this._childFilter;\n    }\n\n    ngOnInit() {\n      this.subscription = this.childService.changes.subscribe(filter$$1 => this._childFilter = filter$$1);\n      this.subscription.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n    }\n\n    ngAfterViewChecked() {\n      if (!this.menuTabbingService.isColumnMenu || this.isLast && this.isExpanded) {\n        this.menuTabbingService.lastFocusable = this.disabled ? this.resetButton.nativeElement : this.filterButton.nativeElement;\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      this.menuTabbingService.lastFocusable = undefined;\n    }\n\n    get disabled() {\n      return !this.childFilter.filters.some(validFilters);\n    }\n\n    get templateContext() {\n      this._templateContext.column = this.column;\n      this._templateContext.filter = this.childFilter;\n      this._templateContext.filterService = this.childService; // tslint:disable-next-line:no-string-literal\n\n      this._templateContext[\"$implicit\"] = this.childFilter;\n      return this._templateContext;\n    }\n\n    get hasTemplate() {\n      return isPresent(this.column) && isPresent(this.column.filterMenuTemplateRef);\n    }\n\n    submit() {\n      const filter$$1 = trimFilters(this.childFilter);\n\n      if (filter$$1.filters.length) {\n        const root = this.filter || {\n          filters: [],\n          logic: \"and\"\n        };\n        removeFilter(root, this.column.field);\n        root.filters.push(filter$$1);\n        this.parentService.filter(root);\n      }\n\n      this.close.emit();\n      return false;\n    }\n\n    reset() {\n      const root = this.filter || {\n        filters: [],\n        logic: \"and\"\n      };\n      removeFilter(root, this.column.field);\n      this.parentService.filter(root);\n      this.close.emit();\n    }\n\n    onTab(e, buttonType) {\n      if (this.menuTabbingService.firstFocusable && (!this.menuTabbingService.isColumnMenu || this.isLast)) {\n        e.preventDefault();\n\n        if (buttonType === 'reset') {\n          this.disabled ? this.menuTabbingService.firstFocusable.focus() : this.filterButton.nativeElement.focus();\n        } else {\n          this.menuTabbingService.firstFocusable.focus();\n        }\n      }\n    }\n\n    get clearText() {\n      return this.localization.get(\"filterClearButton\");\n    }\n\n    get filterText() {\n      return this.localization.get(\"filterFilterButton\");\n    }\n\n  };\n\n  FilterMenuContainerComponent.ɵfac = function FilterMenuContainerComponent_Factory(t) {\n    return new (t || FilterMenuContainerComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService, 4), ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MenuTabbingService));\n  };\n\n  FilterMenuContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FilterMenuContainerComponent,\n    selectors: [[\"kendo-grid-filter-menu-container\"]],\n    viewQuery: function FilterMenuContainerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c181, 5);\n        ɵngcc0.ɵɵviewQuery(_c182, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.resetButton = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.filterButton = _t.first);\n      }\n    },\n    inputs: {\n      actionsClass: \"actionsClass\",\n      menuTabbingService: \"menuTabbingService\",\n      filter: \"filter\",\n      column: \"column\",\n      isLast: \"isLast\",\n      isExpanded: \"isExpanded\"\n    },\n    outputs: {\n      close: \"close\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([FilterService, MenuTabbingService])],\n    decls: 12,\n    vars: 7,\n    consts: [[1, \"k-filter-menu\", \"k-group\", \"k-reset\", \"k-state-border-up\", 3, \"submit\", \"reset\"], [1, \"k-filter-menu-container\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [3, \"ngClass\"], [\"type\", \"reset\", 1, \"k-button\", 3, \"keydown.tab\"], [\"resetButton\", \"\"], [\"type\", \"submit\", 1, \"k-button\", \"k-primary\", 3, \"disabled\", \"keydown.tab\"], [\"filterButton\", \"\"], [\"kendoFilterMenuHost\", \"\", 3, \"filterService\", \"column\", \"filter\", \"menuTabbingService\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function FilterMenuContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"form\", 0);\n        ɵngcc0.ɵɵlistener(\"submit\", function FilterMenuContainerComponent_Template_form_submit_0_listener() {\n          return ctx.submit();\n        })(\"reset\", function FilterMenuContainerComponent_Template_form_reset_0_listener() {\n          return ctx.reset();\n        });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementContainerStart(2, 2);\n        ɵngcc0.ɵɵtemplate(3, FilterMenuContainerComponent_ng_container_3_Template, 2, 4, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, FilterMenuContainerComponent_ng_container_4_Template, 2, 1, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementContainerEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(6, \"button\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"keydown.tab\", function FilterMenuContainerComponent_Template_button_keydown_tab_6_listener($event) {\n          return ctx.onTab($event, \"reset\");\n        });\n        ɵngcc0.ɵɵtext(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"button\", 7, 8);\n        ɵngcc0.ɵɵlistener(\"keydown.tab\", function FilterMenuContainerComponent_Template_button_keydown_tab_9_listener($event) {\n          return ctx.onTab($event, \"filter\");\n        });\n        ɵngcc0.ɵɵtext(11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.hasTemplate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.actionsClass);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.clearText);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.filterText);\n      }\n    },\n    directives: function () {\n      return [ɵngcc7.ɵNgNoValidate, ɵngcc7.NgControlStatusGroup, ɵngcc7.NgForm, ɵngcc5.NgSwitch, ɵngcc5.NgSwitchCase, ɵngcc5.NgClass, FilterMenuHostDirective, ɵngcc5.NgIf, ɵngcc5.NgTemplateOutlet];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], FilterMenuContainerComponent.prototype, \"close\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], FilterMenuContainerComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], FilterMenuContainerComponent.prototype, \"isLast\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], FilterMenuContainerComponent.prototype, \"isExpanded\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", MenuTabbingService)], FilterMenuContainerComponent.prototype, \"menuTabbingService\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], FilterMenuContainerComponent.prototype, \"filter\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], FilterMenuContainerComponent.prototype, \"actionsClass\", void 0);\n\n  __decorate([ViewChild('resetButton', {\n    static: false\n  }), __metadata(\"design:type\", ElementRef)], FilterMenuContainerComponent.prototype, \"resetButton\", void 0);\n\n  __decorate([ViewChild('filterButton', {\n    static: false\n  }), __metadata(\"design:type\", ElementRef)], FilterMenuContainerComponent.prototype, \"filterButton\", void 0);\n\n  FilterMenuContainerComponent = __decorate([__param(0, SkipSelf()), __metadata(\"design:paramtypes\", [FilterService, FilterService, LocalizationService, ChangeDetectorRef, MenuTabbingService])], FilterMenuContainerComponent);\n  /**\n   * @hidden\n   */\n\n  return FilterMenuContainerComponent;\n})();\nlet FilterMenuInputWrapperComponent = /*#__PURE__*/(() => {\n  let FilterMenuInputWrapperComponent = class FilterMenuInputWrapperComponent extends FilterInputWrapperComponent {\n    constructor(localizationService) {\n      super(null);\n      this.localizationService = localizationService;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hostClasses() {\n      return false;\n    }\n\n    ngAfterViewInit() {\n      if (this.isFirstDropDown && this.filterService && this.filterService.menuTabbingService) {\n        this.filterService.menuTabbingService.firstFocusable = this.firstOperatorDropDown;\n        this.firstOperatorDropDown.focus();\n      }\n    }\n\n    operatorChange(dataItem) {\n      this.currentOperator = dataItem;\n    }\n\n    filterChange(filter$$1) {\n      this.applyFilter(filter$$1);\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n\n\n    get currentFilter() {\n      return this._currentFilter;\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n\n\n    set currentFilter(value) {\n      this._currentFilter = value;\n    }\n\n    updateFilter(filter$$1) {\n      Object.assign(this.currentFilter, filter$$1);\n      return this.filter;\n    }\n\n    onChange(value) {\n      this.filterChange(this.updateFilter({\n        field: this.column.field,\n        operator: this.currentOperator,\n        value: value\n      }));\n    }\n\n    onShiftTab(e) {\n      e.stopImmediatePropagation();\n\n      if ((!this.menuTabbingService || !this.menuTabbingService.isColumnMenu) && this.isFirstDropDown && this.filterService.menuTabbingService.lastFocusable) {\n        e.preventDefault();\n        this.filterService.menuTabbingService.lastFocusable.focus();\n      }\n    }\n\n    get filterMenuDropDownLabel() {\n      const localizationMsg = this.localizationService.get('filterMenuOperatorsDropDownLabel') || '';\n      const columnName = this.column ? this.column.title || this.column.field : '';\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n  };\n\n  FilterMenuInputWrapperComponent.ɵfac = function FilterMenuInputWrapperComponent_Factory(t) {\n    return new (t || FilterMenuInputWrapperComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  FilterMenuInputWrapperComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FilterMenuInputWrapperComponent,\n    selectors: [[\"kendo-grid-filter-menu-input-wrapper\"]],\n    viewQuery: function FilterMenuInputWrapperComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DropDownListComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.firstOperatorDropDown = _t.first);\n      }\n    },\n    inputs: {\n      currentFilter: \"currentFilter\",\n      filterService: \"filterService\",\n      isFirstDropDown: \"isFirstDropDown\",\n      menuTabbingService: \"menuTabbingService\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c146,\n    decls: 2,\n    vars: 4,\n    consts: [[\"kendoFilterMenuDropDown\", \"\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"filterMenuDropDownLabel\", \"data\", \"value\", \"valuePrimitive\", \"valueChange\", \"keydown.shift.tab\"]],\n    template: function FilterMenuInputWrapperComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"kendo-dropdownlist\", 0);\n        ɵngcc0.ɵɵlistener(\"valueChange\", function FilterMenuInputWrapperComponent_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n          return ctx.operatorChange($event);\n        })(\"keydown.shift.tab\", function FilterMenuInputWrapperComponent_Template_kendo_dropdownlist_keydown_shift_tab_0_listener($event) {\n          return ctx.onShiftTab($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"filterMenuDropDownLabel\", ctx.filterMenuDropDownLabel)(\"data\", ctx.operators)(\"value\", ctx.currentOperator)(\"valuePrimitive\", true);\n      }\n    },\n    directives: function () {\n      return [ɵngcc8.DropDownListComponent, FilterMenuDropDownListDirective];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", FilterService)], FilterMenuInputWrapperComponent.prototype, \"filterService\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], FilterMenuInputWrapperComponent.prototype, \"isFirstDropDown\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", MenuTabbingService)], FilterMenuInputWrapperComponent.prototype, \"menuTabbingService\", void 0);\n\n  __decorate([ViewChild(DropDownListComponent, {\n    static: false\n  }), __metadata(\"design:type\", DropDownListComponent)], FilterMenuInputWrapperComponent.prototype, \"firstOperatorDropDown\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], FilterMenuInputWrapperComponent.prototype, \"currentFilter\", null);\n\n  FilterMenuInputWrapperComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], FilterMenuInputWrapperComponent);\n  /**\n   * @hidden\n   */\n\n  return FilterMenuInputWrapperComponent;\n})();\nlet StringFilterMenuInputComponent = /*#__PURE__*/(() => {\n  let StringFilterMenuInputComponent = class StringFilterMenuInputComponent {\n    constructor(localizationService) {\n      this.localizationService = localizationService;\n      this.operators = [];\n    }\n\n    get columnLabel() {\n      const localizationMsg = this.localizationService.get('filterInputLabel') || '';\n      const columnName = this.column ? this.column.title || this.column.field : '';\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n  };\n\n  StringFilterMenuInputComponent.ɵfac = function StringFilterMenuInputComponent_Factory(t) {\n    return new (t || StringFilterMenuInputComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  StringFilterMenuInputComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: StringFilterMenuInputComponent,\n    selectors: [[\"kendo-grid-string-filter-menu-input\"]],\n    inputs: {\n      operators: \"operators\",\n      column: \"column\",\n      filter: \"filter\",\n      operator: \"operator\",\n      currentFilter: \"currentFilter\",\n      filterService: \"filterService\",\n      isFirstDropDown: \"isFirstDropDown\",\n      menuTabbingService: \"menuTabbingService\"\n    },\n    decls: 2,\n    vars: 11,\n    consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"currentFilter\", \"filterService\", \"isFirstDropDown\", \"menuTabbingService\"], [\"kendoFilterInput\", \"\", 1, \"k-textbox\", 3, \"columnLabel\", \"filterDelay\", \"ngModel\"]],\n    template: function StringFilterMenuInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-menu-input-wrapper\", 0);\n        ɵngcc0.ɵɵelement(1, \"input\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"currentFilter\", ctx.currentFilter)(\"filterService\", ctx.filterService)(\"isFirstDropDown\", ctx.isFirstDropDown)(\"menuTabbingService\", ctx.menuTabbingService);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"columnLabel\", ctx.columnLabel)(\"filterDelay\", 0)(\"ngModel\", ctx.currentFilter == null ? null : ctx.currentFilter.value);\n      }\n    },\n    directives: [FilterMenuInputWrapperComponent, ɵngcc7.DefaultValueAccessor, FilterInputDirective, ɵngcc7.NgControlStatus, ɵngcc7.NgModel],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], StringFilterMenuInputComponent.prototype, \"operators\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], StringFilterMenuInputComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], StringFilterMenuInputComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], StringFilterMenuInputComponent.prototype, \"operator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], StringFilterMenuInputComponent.prototype, \"currentFilter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", FilterService)], StringFilterMenuInputComponent.prototype, \"filterService\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], StringFilterMenuInputComponent.prototype, \"isFirstDropDown\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", MenuTabbingService)], StringFilterMenuInputComponent.prototype, \"menuTabbingService\", void 0);\n\n  StringFilterMenuInputComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], StringFilterMenuInputComponent);\n  /**\n   * Represents a string-filter menu component.\n   * ([see example]({% slug builtinfiltertemplate_grid %}#toc-configuration-components-for-filter-templates)).\n   */\n\n  return StringFilterMenuInputComponent;\n})();\nlet StringFilterMenuComponent = /*#__PURE__*/(() => {\n  let StringFilterMenuComponent = class StringFilterMenuComponent extends StringFilterComponent {\n    constructor(localization) {\n      super(null, localization);\n      this.logicOperators = logicOperators(this.localization);\n      /**\n       * The current menu filter.\n       * @type {CompositeFilterDescriptor}\n       */\n\n      this.filter = {\n        filters: [],\n        logic: \"and\"\n      };\n      /**\n       * Determines if the inputs of second criteria will displayed.\n       */\n\n      this.extra = true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hostClasses() {\n      return false;\n    }\n\n    get firstFilter() {\n      return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n    }\n\n    get secondFilter() {\n      return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n    }\n\n    logicChange(value) {\n      this.filter.logic = value;\n    }\n\n    get filterMenuDropDownLabel() {\n      const localizationMsg = this.localization.get('filterMenuLogicDropDownLabel') || '';\n      const columnName = this.column ? this.column.title || this.column.field : '';\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n    localizationChange() {\n      this.logicOperators = logicOperators(this.localization);\n      super.localizationChange();\n    }\n\n  };\n\n  StringFilterMenuComponent.ɵfac = function StringFilterMenuComponent_Factory(t) {\n    return new (t || StringFilterMenuComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  StringFilterMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: StringFilterMenuComponent,\n    selectors: [[\"kendo-grid-string-filter-menu\"]],\n    hostVars: 2,\n    hostBindings: function StringFilterMenuComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n      }\n    },\n    inputs: {\n      filter: \"filter\",\n      extra: \"extra\",\n      column: \"column\",\n      filterService: \"filterService\",\n      menuTabbingService: \"menuTabbingService\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 9,\n    consts: [[3, \"currentFilter\", \"operators\", \"filterService\", \"column\", \"filter\", \"isFirstDropDown\", \"menuTabbingService\"], [\"kendoFilterMenuDropDown\", \"\", \"class\", \"k-filter-and\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"filterMenuDropDownLabel\", \"data\", \"valuePrimitive\", \"value\", \"valueChange\", 4, \"ngIf\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"menuTabbingService\", 4, \"ngIf\"], [\"kendoFilterMenuDropDown\", \"\", \"textField\", \"text\", \"valueField\", \"value\", 1, \"k-filter-and\", 3, \"filterMenuDropDownLabel\", \"data\", \"valuePrimitive\", \"value\", \"valueChange\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"menuTabbingService\"]],\n    template: function StringFilterMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"kendo-grid-string-filter-menu-input\", 0);\n        ɵngcc0.ɵɵtemplate(1, StringFilterMenuComponent_kendo_dropdownlist_1_Template, 1, 4, \"kendo-dropdownlist\", 1);\n        ɵngcc0.ɵɵtemplate(2, StringFilterMenuComponent_kendo_grid_string_filter_menu_input_2_Template, 1, 6, \"kendo-grid-string-filter-menu-input\", 2);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"currentFilter\", ctx.firstFilter)(\"operators\", ctx.operators)(\"filterService\", ctx.filterService)(\"column\", ctx.column)(\"filter\", ctx.filter)(\"isFirstDropDown\", true)(\"menuTabbingService\", ctx.menuTabbingService);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.extra);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.extra);\n      }\n    },\n    directives: function () {\n      return [StringFilterMenuInputComponent, ɵngcc5.NgIf, ɵngcc8.DropDownListComponent, FilterMenuDropDownListDirective];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-filtercell'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], StringFilterMenuComponent.prototype, \"hostClasses\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], StringFilterMenuComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], StringFilterMenuComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], StringFilterMenuComponent.prototype, \"extra\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", FilterService)], StringFilterMenuComponent.prototype, \"filterService\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", MenuTabbingService)], StringFilterMenuComponent.prototype, \"menuTabbingService\", void 0);\n\n  StringFilterMenuComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], StringFilterMenuComponent);\n  /**\n   * Represents a numeric-filter menu component.\n   *\n   * @example\n   *  ```html-no-run\n   *      <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\">\n   *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n   *          <kendo-grid-numeric-filter-menu\n   *              [column]=\"column\"\n   *              [filter]=\"filter\"\n   *              [filterService]=\"filterService\"\n   *              >\n   *          </kendo-grid-numeric-filter-menu>\n   *          </ng-template>\n   *      </kendo-grid-column>\n   *   ```\n   */\n\n  return StringFilterMenuComponent;\n})();\nlet NumericFilterMenuComponent = /*#__PURE__*/(() => {\n  let NumericFilterMenuComponent = class NumericFilterMenuComponent extends NumericFilterComponent {\n    constructor(localization) {\n      super(null, localization);\n      this.logicOperators = logicOperators(this.localization);\n      /**\n       * The current menu filter.\n       * @type {CompositeFilterDescriptor}\n       */\n\n      this.filter = {\n        filters: [],\n        logic: \"and\"\n      };\n      /**\n       * Determines if the inputs of second criteria will displayed.\n       */\n\n      this.extra = true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hostClasses() {\n      return false;\n    }\n\n    get firstFilter() {\n      return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n    }\n\n    get secondFilter() {\n      return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n    }\n\n    logicChange(value) {\n      this.filter.logic = value;\n    }\n\n    get filterMenuDropDownLabel() {\n      const localizationMsg = this.localization.get('filterMenuLogicDropDownLabel') || '';\n      const columnName = this.column ? this.column.title || this.column.field : '';\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n    localizationChange() {\n      this.logicOperators = logicOperators(this.localization);\n      super.localizationChange();\n    }\n\n  };\n\n  NumericFilterMenuComponent.ɵfac = function NumericFilterMenuComponent_Factory(t) {\n    return new (t || NumericFilterMenuComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  NumericFilterMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NumericFilterMenuComponent,\n    selectors: [[\"kendo-grid-numeric-filter-menu\"]],\n    hostVars: 2,\n    hostBindings: function NumericFilterMenuComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n      }\n    },\n    inputs: {\n      filter: \"filter\",\n      extra: \"extra\",\n      column: \"column\",\n      filterService: \"filterService\",\n      menuTabbingService: \"menuTabbingService\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 15,\n    consts: [[3, \"currentFilter\", \"operators\", \"filterService\", \"column\", \"filter\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\", \"menuTabbingService\", \"isFirstDropDown\"], [\"kendoFilterMenuDropDown\", \"\", \"class\", \"k-filter-and\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"filterMenuDropDownLabel\", \"data\", \"valuePrimitive\", \"value\", \"valueChange\", 4, \"ngIf\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\", \"menuTabbingService\", 4, \"ngIf\"], [\"kendoFilterMenuDropDown\", \"\", \"textField\", \"text\", \"valueField\", \"value\", 1, \"k-filter-and\", 3, \"filterMenuDropDownLabel\", \"data\", \"valuePrimitive\", \"value\", \"valueChange\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\", \"menuTabbingService\"]],\n    template: function NumericFilterMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"kendo-grid-numeric-filter-menu-input\", 0);\n        ɵngcc0.ɵɵtemplate(1, NumericFilterMenuComponent_kendo_dropdownlist_1_Template, 1, 4, \"kendo-dropdownlist\", 1);\n        ɵngcc0.ɵɵtemplate(2, NumericFilterMenuComponent_kendo_grid_numeric_filter_menu_input_2_Template, 1, 12, \"kendo-grid-numeric-filter-menu-input\", 2);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"currentFilter\", ctx.firstFilter)(\"operators\", ctx.operators)(\"filterService\", ctx.filterService)(\"column\", ctx.column)(\"filter\", ctx.filter)(\"format\", ctx.format)(\"decimals\", ctx.decimals)(\"spinners\", ctx.spinners)(\"min\", ctx.min)(\"max\", ctx.max)(\"step\", ctx.step)(\"menuTabbingService\", ctx.menuTabbingService)(\"isFirstDropDown\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.extra);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.extra);\n      }\n    },\n    directives: function () {\n      return [NumericFilterMenuInputComponent, ɵngcc5.NgIf, ɵngcc8.DropDownListComponent, FilterMenuDropDownListDirective];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-filtercell'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], NumericFilterMenuComponent.prototype, \"hostClasses\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], NumericFilterMenuComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], NumericFilterMenuComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], NumericFilterMenuComponent.prototype, \"extra\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", FilterService)], NumericFilterMenuComponent.prototype, \"filterService\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", MenuTabbingService)], NumericFilterMenuComponent.prototype, \"menuTabbingService\", void 0);\n\n  NumericFilterMenuComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], NumericFilterMenuComponent);\n  /**\n   * @hidden\n   */\n\n  return NumericFilterMenuComponent;\n})();\nlet NumericFilterMenuInputComponent = /*#__PURE__*/(() => {\n  let NumericFilterMenuInputComponent = class NumericFilterMenuInputComponent {\n    constructor(localization) {\n      this.localization = localization;\n      this.operators = [];\n      /**\n       * Specifies the value which is used to increment or decrement the component value.\n       * @type {numeric}\n       */\n\n      this.step = 1;\n      /**\n       * Specifies whether the **Up** and **Down** spin buttons will be rendered.\n       * @type {boolean}\n       */\n\n      this.spinners = true;\n    }\n\n    messageFor(key) {\n      return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get columnLabel() {\n      const localizationMsg = this.localization.get('filterInputLabel') || '';\n      const columnName = this.column ? this.column.title || this.column.field : '';\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n  };\n\n  NumericFilterMenuInputComponent.ɵfac = function NumericFilterMenuInputComponent_Factory(t) {\n    return new (t || NumericFilterMenuInputComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  NumericFilterMenuInputComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NumericFilterMenuInputComponent,\n    selectors: [[\"kendo-grid-numeric-filter-menu-input\"]],\n    inputs: {\n      operators: \"operators\",\n      step: \"step\",\n      spinners: \"spinners\",\n      column: \"column\",\n      filter: \"filter\",\n      operator: \"operator\",\n      currentFilter: \"currentFilter\",\n      filterService: \"filterService\",\n      isFirstDropDown: \"isFirstDropDown\",\n      menuTabbingService: \"menuTabbingService\",\n      min: \"min\",\n      max: \"max\",\n      decimals: \"decimals\",\n      format: \"format\"\n    },\n    decls: 3,\n    vars: 20,\n    consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"currentFilter\", \"filterService\", \"isFirstDropDown\", \"menuTabbingService\"], [\"kendoFilterInput\", \"\", 3, \"columnLabel\", \"filterDelay\", \"autoCorrect\", \"value\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\"], [3, \"increment\", \"decrement\"]],\n    template: function NumericFilterMenuInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-menu-input-wrapper\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"kendo-numerictextbox\", 1);\n        ɵngcc0.ɵɵelement(2, \"kendo-numerictextbox-messages\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"currentFilter\", ctx.currentFilter)(\"filterService\", ctx.filterService)(\"isFirstDropDown\", ctx.isFirstDropDown)(\"menuTabbingService\", ctx.menuTabbingService);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"columnLabel\", ctx.columnLabel)(\"filterDelay\", 0)(\"autoCorrect\", true)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value)(\"format\", ctx.format)(\"decimals\", ctx.decimals)(\"spinners\", ctx.spinners)(\"min\", ctx.min)(\"max\", ctx.max)(\"step\", ctx.step);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"increment\", ctx.messageFor(\"filterNumericIncrement\"))(\"decrement\", ctx.messageFor(\"filterNumericDecrement\"));\n      }\n    },\n    directives: [FilterMenuInputWrapperComponent, ɵngcc6.NumericTextBoxComponent, FilterInputDirective, ɵngcc6.NumericTextBoxCustomMessagesComponent],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], NumericFilterMenuInputComponent.prototype, \"operators\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], NumericFilterMenuInputComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], NumericFilterMenuInputComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], NumericFilterMenuInputComponent.prototype, \"operator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], NumericFilterMenuInputComponent.prototype, \"currentFilter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", FilterService)], NumericFilterMenuInputComponent.prototype, \"filterService\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], NumericFilterMenuInputComponent.prototype, \"isFirstDropDown\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", MenuTabbingService)], NumericFilterMenuInputComponent.prototype, \"menuTabbingService\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], NumericFilterMenuInputComponent.prototype, \"step\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], NumericFilterMenuInputComponent.prototype, \"min\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], NumericFilterMenuInputComponent.prototype, \"max\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], NumericFilterMenuInputComponent.prototype, \"spinners\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], NumericFilterMenuInputComponent.prototype, \"decimals\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], NumericFilterMenuInputComponent.prototype, \"format\", void 0);\n\n  NumericFilterMenuInputComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], NumericFilterMenuInputComponent);\n  /**\n   * Represents a date-filter menu component.\n   *\n   * @example\n   *  ```html-no-run\n   *      <kendo-grid-column field=\"OrderDate\" title=\"Order Date\">\n   *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n   *            <kendo-grid-date-filter-menu\n   *                [column]=\"column\"\n   *                [filter]=\"filter\"\n   *                [filterService]=\"filterService\"\n   *                >\n   *            </kendo-grid-date-filter-menu>\n   *          </ng-template>\n   *      </kendo-grid-column>\n   *   ```\n   */\n\n  return NumericFilterMenuInputComponent;\n})();\nlet DateFilterMenuComponent = /*#__PURE__*/(() => {\n  let DateFilterMenuComponent = class DateFilterMenuComponent extends DateFilterComponent {\n    constructor(localization) {\n      super(null, localization);\n      this.logicOperators = logicOperators(this.localization);\n      /**\n       * The current menu filter.\n       * @type {CompositeFilterDescriptor}\n       */\n\n      this.filter = {\n        filters: [],\n        logic: \"and\"\n      };\n      /**\n       * Determines if the inputs of second criteria will be displayed.\n       */\n\n      this.extra = true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hostClasses() {\n      return false;\n    }\n\n    get firstFilter() {\n      return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n    }\n\n    get secondFilter() {\n      return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n    }\n\n    logicChange(value) {\n      this.filter.logic = value;\n    }\n\n    get filterMenuDropDownLabel() {\n      const localizationMsg = this.localization.get('filterMenuLogicDropDownLabel') || '';\n      const columnName = this.column ? this.column.title || this.column.field : '';\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n    localizationChange() {\n      this.logicOperators = logicOperators(this.localization);\n      super.localizationChange();\n    }\n\n  };\n\n  DateFilterMenuComponent.ɵfac = function DateFilterMenuComponent_Factory(t) {\n    return new (t || DateFilterMenuComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  DateFilterMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DateFilterMenuComponent,\n    selectors: [[\"kendo-grid-date-filter-menu\"]],\n    hostVars: 2,\n    hostBindings: function DateFilterMenuComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n      }\n    },\n    inputs: {\n      filter: \"filter\",\n      extra: \"extra\",\n      column: \"column\",\n      filterService: \"filterService\",\n      menuTabbingService: \"menuTabbingService\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 18,\n    consts: [[3, \"currentFilter\", \"operators\", \"filterService\", \"column\", \"filter\", \"activeView\", \"bottomView\", \"topView\", \"format\", \"formatPlaceholder\", \"placeholder\", \"min\", \"max\", \"weekNumber\", \"isFirstDropDown\", \"menuTabbingService\"], [\"kendoFilterMenuDropDown\", \"\", \"class\", \"k-filter-and\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"filterMenuDropDownLabel\", \"data\", \"valuePrimitive\", \"value\", \"valueChange\", 4, \"ngIf\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"activeView\", \"bottomView\", \"topView\", \"format\", \"formatPlaceholder\", \"placeholder\", \"min\", \"max\", \"weekNumber\", \"menuTabbingService\", 4, \"ngIf\"], [\"kendoFilterMenuDropDown\", \"\", \"textField\", \"text\", \"valueField\", \"value\", 1, \"k-filter-and\", 3, \"filterMenuDropDownLabel\", \"data\", \"valuePrimitive\", \"value\", \"valueChange\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"activeView\", \"bottomView\", \"topView\", \"format\", \"formatPlaceholder\", \"placeholder\", \"min\", \"max\", \"weekNumber\", \"menuTabbingService\"]],\n    template: function DateFilterMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"kendo-grid-date-filter-menu-input\", 0);\n        ɵngcc0.ɵɵtemplate(1, DateFilterMenuComponent_kendo_dropdownlist_1_Template, 1, 4, \"kendo-dropdownlist\", 1);\n        ɵngcc0.ɵɵtemplate(2, DateFilterMenuComponent_kendo_grid_date_filter_menu_input_2_Template, 1, 15, \"kendo-grid-date-filter-menu-input\", 2);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"currentFilter\", ctx.firstFilter)(\"operators\", ctx.operators)(\"filterService\", ctx.filterService)(\"column\", ctx.column)(\"filter\", ctx.filter)(\"activeView\", ctx.activeView)(\"bottomView\", ctx.bottomView)(\"topView\", ctx.topView)(\"format\", ctx.format)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"placeholder\", ctx.placeholder)(\"min\", ctx.min)(\"max\", ctx.max)(\"weekNumber\", ctx.weekNumber)(\"isFirstDropDown\", true)(\"menuTabbingService\", ctx.menuTabbingService);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.extra);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.extra);\n      }\n    },\n    directives: function () {\n      return [DateFilterMenuInputComponent, ɵngcc5.NgIf, ɵngcc8.DropDownListComponent, FilterMenuDropDownListDirective];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-filtercell'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], DateFilterMenuComponent.prototype, \"hostClasses\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], DateFilterMenuComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DateFilterMenuComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], DateFilterMenuComponent.prototype, \"extra\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", FilterService)], DateFilterMenuComponent.prototype, \"filterService\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", MenuTabbingService)], DateFilterMenuComponent.prototype, \"menuTabbingService\", void 0);\n\n  DateFilterMenuComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], DateFilterMenuComponent);\n  /**\n   * @hidden\n   */\n\n  return DateFilterMenuComponent;\n})();\nlet BooleanFilterRadioButtonDirective = /*#__PURE__*/(() => {\n  let BooleanFilterRadioButtonDirective = class BooleanFilterRadioButtonDirective {\n    constructor(hostElement, renderer) {\n      this.hostElement = hostElement;\n      this.renderer = renderer;\n    }\n\n    ngAfterViewInit() {\n      this.radioButtonEl = this.hostElement.nativeElement;\n      this.renderer.setAttribute(this.hostElement.nativeElement, 'aria-label', this.columnLabel);\n    }\n\n  };\n\n  BooleanFilterRadioButtonDirective.ɵfac = function BooleanFilterRadioButtonDirective_Factory(t) {\n    return new (t || BooleanFilterRadioButtonDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  BooleanFilterRadioButtonDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: BooleanFilterRadioButtonDirective,\n    selectors: [[\"\", \"kendoFilterMenuRadioButton\", \"\"]],\n    inputs: {\n      columnLabel: \"columnLabel\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String)], BooleanFilterRadioButtonDirective.prototype, \"columnLabel\", void 0);\n\n  BooleanFilterRadioButtonDirective = __decorate([__metadata(\"design:paramtypes\", [ElementRef, Renderer2])], BooleanFilterRadioButtonDirective);\n  /**\n   * Represents a Boolean-filter menu component.\n   *\n   * @example\n   *  ```html-no-run\n   *      <kendo-grid-column field=\"Discontinued\" title=\"Discontinued\">\n   *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n   *            <kendo-grid-boolean-filter-menu\n   *                [column]=\"column\"\n   *                [filter]=\"filter\"\n   *                [filterService]=\"filterService\"\n   *                >\n   *            </kendo-grid-boolean-filter-menu>\n   *          </ng-template>\n   *      </kendo-grid-column>\n   *   ```\n   */\n\n  return BooleanFilterRadioButtonDirective;\n})();\nlet BooleanFilterMenuComponent = /*#__PURE__*/(() => {\n  let BooleanFilterMenuComponent = class BooleanFilterMenuComponent extends BooleanFilterComponent {\n    constructor(localization) {\n      super(null, localization);\n      /**\n       * The current menu filter.\n       * @type {CompositeFilterDescriptor}\n       */\n\n      this.filter = {\n        filters: [],\n        logic: \"and\"\n      };\n      this.idPrefix = guid();\n    }\n    /**\n     * @hidden\n     */\n\n\n    get hostClasses() {\n      return false;\n    }\n\n    ngAfterViewInit() {\n      this.filterService.menuTabbingService.firstFocusable = this.radioButtons.first.radioButtonEl;\n      this.radioButtons.first.radioButtonEl.focus();\n    }\n    /**\n     * @hidden\n     */\n\n\n    radioId(value) {\n      return `${this.idPrefix}_${value}`;\n    }\n    /**\n     * @hidden\n     */\n\n\n    onChange(value, input) {\n      this.applyFilter(this.updateFilter({\n        field: this.column.field,\n        operator: \"eq\",\n        value: value\n      }));\n      this.filterService.menuTabbingService.firstFocusable = input;\n    }\n    /**\n     * @hidden\n     */\n\n\n    isSelected(radioValue) {\n      return this.filtersByField(this.column.field).some(({\n        value\n      }) => value === radioValue);\n    }\n    /**\n     * @hidden\n     */\n\n\n    onShiftTab(e) {\n      if ((!this.menuTabbingService || !this.menuTabbingService.isColumnMenu) && this.filterService.menuTabbingService.lastFocusable) {\n        e.preventDefault();\n        this.filterService.menuTabbingService.lastFocusable.focus();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    get columnLabel() {\n      const localizationMsg = this.localization.get('filterInputLabel') || '';\n      const columnName = this.column.title || this.column.field;\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n  };\n\n  BooleanFilterMenuComponent.ɵfac = function BooleanFilterMenuComponent_Factory(t) {\n    return new (t || BooleanFilterMenuComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  BooleanFilterMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BooleanFilterMenuComponent,\n    selectors: [[\"kendo-grid-boolean-filter-menu\"]],\n    viewQuery: function BooleanFilterMenuComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(BooleanFilterRadioButtonDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.radioButtons = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function BooleanFilterMenuComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n      }\n    },\n    inputs: {\n      filter: \"filter\",\n      filterService: \"filterService\",\n      menuTabbingService: \"menuTabbingService\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"k-radio-list\", \"k-reset\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"radio\", \"kendoFilterMenuRadioButton\", \"\", 1, \"k-radio\", 3, \"columnLabel\", \"name\", \"checked\", \"change\", \"keydown.shift.tab\"], [\"input\", \"\"], [1, \"k-radio-label\"]],\n    template: function BooleanFilterMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵtemplate(1, BooleanFilterMenuComponent_li_1_Template, 5, 6, \"li\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    directives: [ɵngcc5.NgForOf, BooleanFilterRadioButtonDirective],\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-filtercell'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], BooleanFilterMenuComponent.prototype, \"hostClasses\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], BooleanFilterMenuComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", FilterService)], BooleanFilterMenuComponent.prototype, \"filterService\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", MenuTabbingService)], BooleanFilterMenuComponent.prototype, \"menuTabbingService\", void 0);\n\n  __decorate([ViewChildren(BooleanFilterRadioButtonDirective), __metadata(\"design:type\", QueryList)], BooleanFilterMenuComponent.prototype, \"radioButtons\", void 0);\n\n  BooleanFilterMenuComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], BooleanFilterMenuComponent);\n  /**\n   * @hidden\n   *\n   * > List the following components as `entryComponents` in the GridModule.\n   */\n\n  return BooleanFilterMenuComponent;\n})();\n\nconst filterMenuComponentFactory = type => ({\n  \"boolean\": BooleanFilterMenuComponent,\n  \"date\": DateFilterMenuComponent,\n  \"numeric\": NumericFilterMenuComponent,\n  \"text\": StringFilterMenuComponent\n})[type];\n/**\n * @hidden\n */\n\n\nlet FilterMenuHostDirective = /*#__PURE__*/(() => {\n  let FilterMenuHostDirective = class FilterMenuHostDirective extends FilterHostDirective {\n    constructor(host, resolver) {\n      super(host, resolver);\n    }\n\n    componentType() {\n      if (isPresent(this.column) && !isNullOrEmptyString(this.column.filter)) {\n        return filterMenuComponentFactory(this.column.filter);\n      }\n\n      return StringFilterMenuComponent;\n    }\n\n    initComponent(ctx) {\n      super.initComponent(ctx);\n      this.component.instance.filterService = this.filterService;\n      this.component.instance.menuTabbingService = this.menuTabbingService;\n    }\n\n  };\n\n  FilterMenuHostDirective.ɵfac = function FilterMenuHostDirective_Factory(t) {\n    return new (t || FilterMenuHostDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver));\n  };\n\n  FilterMenuHostDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FilterMenuHostDirective,\n    selectors: [[\"\", \"kendoFilterMenuHost\", \"\"]],\n    inputs: {\n      filterService: \"filterService\",\n      menuTabbingService: \"menuTabbingService\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", FilterService)], FilterMenuHostDirective.prototype, \"filterService\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", MenuTabbingService)], FilterMenuHostDirective.prototype, \"menuTabbingService\", void 0);\n\n  FilterMenuHostDirective = __decorate([__metadata(\"design:paramtypes\", [ViewContainerRef, ComponentFactoryResolver])], FilterMenuHostDirective);\n  /**\n   * @hidden\n   */\n\n  return FilterMenuHostDirective;\n})();\nlet DateFilterMenuInputComponent = /*#__PURE__*/(() => {\n  let DateFilterMenuInputComponent = class DateFilterMenuInputComponent {\n    constructor(popupService, localizationService) {\n      this.popupService = popupService;\n      this.localizationService = localizationService;\n      this.operators = [];\n    }\n\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n\n    open(picker) {\n      this.subscription = this.popupService.onClose.pipe(filter(() => picker.isActive)).subscribe(e => e.preventDefault());\n    }\n\n    messageFor(key) {\n      return this.localizationService.get(key);\n    }\n\n    get columnLabel() {\n      const localizationMsg = this.localizationService.get('filterInputLabel') || '';\n      const columnName = this.column ? this.column.title || this.column.field : '';\n      return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n\n  };\n\n  DateFilterMenuInputComponent.ɵfac = function DateFilterMenuInputComponent_Factory(t) {\n    return new (t || DateFilterMenuInputComponent)(ɵngcc0.ɵɵdirectiveInject(SinglePopupService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  DateFilterMenuInputComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DateFilterMenuInputComponent,\n    selectors: [[\"kendo-grid-date-filter-menu-input\"]],\n    inputs: {\n      operators: \"operators\",\n      column: \"column\",\n      filter: \"filter\",\n      operator: \"operator\",\n      currentFilter: \"currentFilter\",\n      filterService: \"filterService\",\n      menuTabbingService: \"menuTabbingService\",\n      format: \"format\",\n      formatPlaceholder: \"formatPlaceholder\",\n      placeholder: \"placeholder\",\n      min: \"min\",\n      max: \"max\",\n      activeView: \"activeView\",\n      bottomView: \"bottomView\",\n      topView: \"topView\",\n      weekNumber: \"weekNumber\",\n      isFirstDropDown: \"isFirstDropDown\"\n    },\n    decls: 4,\n    vars: 22,\n    consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"currentFilter\", \"filterService\", \"isFirstDropDown\", \"menuTabbingService\"], [\"kendoFilterInput\", \"\", 3, \"columnLabel\", \"filterDelay\", \"value\", \"placeholder\", \"formatPlaceholder\", \"format\", \"min\", \"max\", \"activeView\", \"bottomView\", \"topView\", \"weekNumber\", \"open\"], [\"picker\", \"\"], [3, \"toggle\", \"today\"]],\n    template: function DateFilterMenuInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = ɵngcc0.ɵɵgetCurrentView();\n\n        ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-menu-input-wrapper\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"kendo-datepicker\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"open\", function DateFilterMenuInputComponent_Template_kendo_datepicker_open_1_listener() {\n          ɵngcc0.ɵɵrestoreView(_r1);\n\n          const _r0 = ɵngcc0.ɵɵreference(2);\n\n          return ctx.open(_r0);\n        });\n        ɵngcc0.ɵɵelement(3, \"kendo-datepicker-messages\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"currentFilter\", ctx.currentFilter)(\"filterService\", ctx.filterService)(\"isFirstDropDown\", ctx.isFirstDropDown)(\"menuTabbingService\", ctx.menuTabbingService);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"columnLabel\", ctx.columnLabel)(\"filterDelay\", 0)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value)(\"placeholder\", ctx.placeholder)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"format\", ctx.format)(\"min\", ctx.min)(\"max\", ctx.max)(\"activeView\", ctx.activeView)(\"bottomView\", ctx.bottomView)(\"topView\", ctx.topView)(\"weekNumber\", ctx.weekNumber);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"toggle\", ctx.messageFor(\"filterDateToggle\"))(\"today\", ctx.messageFor(\"filterDateToday\"));\n      }\n    },\n    directives: [FilterMenuInputWrapperComponent, ɵngcc9.DatePickerComponent, FilterInputDirective, ɵngcc9.DatePickerCustomMessagesComponent],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], DateFilterMenuInputComponent.prototype, \"operators\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnComponent)], DateFilterMenuInputComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DateFilterMenuInputComponent.prototype, \"filter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DateFilterMenuInputComponent.prototype, \"operator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DateFilterMenuInputComponent.prototype, \"currentFilter\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", FilterService)], DateFilterMenuInputComponent.prototype, \"filterService\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", MenuTabbingService)], DateFilterMenuInputComponent.prototype, \"menuTabbingService\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DateFilterMenuInputComponent.prototype, \"format\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DateFilterMenuInputComponent.prototype, \"formatPlaceholder\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DateFilterMenuInputComponent.prototype, \"placeholder\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Date)], DateFilterMenuInputComponent.prototype, \"min\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Date)], DateFilterMenuInputComponent.prototype, \"max\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DateFilterMenuInputComponent.prototype, \"activeView\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DateFilterMenuInputComponent.prototype, \"bottomView\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DateFilterMenuInputComponent.prototype, \"topView\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], DateFilterMenuInputComponent.prototype, \"weekNumber\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], DateFilterMenuInputComponent.prototype, \"isFirstDropDown\", void 0);\n\n  DateFilterMenuInputComponent = __decorate([__metadata(\"design:paramtypes\", [SinglePopupService, LocalizationService])], DateFilterMenuInputComponent);\n  /**\n   * @hidden\n   */\n\n  return DateFilterMenuInputComponent;\n})();\nlet FilterMenuDropDownListDirective = /*#__PURE__*/(() => {\n  let FilterMenuDropDownListDirective = class FilterMenuDropDownListDirective {\n    constructor(host) {\n      this.host = host;\n\n      this.keydownHandler = e => {\n        if (e.keyCode === Keys.Escape && this.host.isOpen) {\n          e.stopPropagation();\n          this.host.toggle(false);\n        }\n      };\n    }\n\n    ngAfterViewInit() {\n      const wrapperElement = this.host.wrapper.nativeElement;\n      wrapperElement.setAttribute('aria-label', this.filterMenuDropDownLabel);\n      wrapperElement.addEventListener('keydown', this.keydownHandler, true);\n    }\n\n    ngOnDestroy() {\n      this.host.wrapper.nativeElement.removeEventListener('keydown', this.keydownHandler);\n    }\n\n  };\n\n  FilterMenuDropDownListDirective.ɵfac = function FilterMenuDropDownListDirective_Factory(t) {\n    return new (t || FilterMenuDropDownListDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc8.DropDownListComponent));\n  };\n\n  FilterMenuDropDownListDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FilterMenuDropDownListDirective,\n    selectors: [[\"\", \"kendoFilterMenuDropDown\", \"\"]],\n    inputs: {\n      filterMenuDropDownLabel: \"filterMenuDropDownLabel\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String)], FilterMenuDropDownListDirective.prototype, \"filterMenuDropDownLabel\", void 0);\n\n  FilterMenuDropDownListDirective = __decorate([__metadata(\"design:paramtypes\", [DropDownListComponent])], FilterMenuDropDownListDirective);\n  return FilterMenuDropDownListDirective;\n})();\nconst INTERNAL_COMPONENTS$2 = [FilterMenuComponent, FilterMenuContainerComponent, FilterMenuInputWrapperComponent, StringFilterMenuInputComponent, StringFilterMenuComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, NumericFilterMenuInputComponent, DateFilterMenuInputComponent, DateFilterMenuComponent, FilterMenuHostDirective, BooleanFilterMenuComponent, FilterMenuDropDownListDirective, BooleanFilterRadioButtonDirective];\nconst ENTRY_COMPONENTS$1 = [StringFilterMenuComponent, NumericFilterMenuComponent, DateFilterMenuComponent, BooleanFilterMenuComponent];\n/**\n * @hidden\n */\n\nlet FilterMenuModule = /*#__PURE__*/(() => {\n  let FilterMenuModule = class FilterMenuModule {\n    static exports() {\n      return [StringFilterMenuComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, DateFilterMenuComponent, BooleanFilterMenuComponent, FilterMenuDropDownListDirective, BooleanFilterRadioButtonDirective, SharedFilterModule.exports()];\n    }\n\n  };\n\n  FilterMenuModule.ɵfac = function FilterMenuModule_Factory(t) {\n    return new (t || FilterMenuModule)();\n  };\n\n  FilterMenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FilterMenuModule\n  });\n  FilterMenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[SharedFilterModule], SharedFilterModule]\n  });\n  /**\n   * @hidden\n   */\n\n  return FilterMenuModule;\n})();\nlet ColumnListComponent = /*#__PURE__*/(() => {\n  let ColumnListComponent = class ColumnListComponent {\n    constructor(element, ngZone, renderer) {\n      this.element = element;\n      this.ngZone = ngZone;\n      this.renderer = renderer;\n      this.reset = new EventEmitter();\n      this.apply = new EventEmitter();\n      this.columnChange = new EventEmitter();\n      this.autoSync = true;\n      this.allowHideAll = false;\n      this.actionsClass = 'k-action-buttons';\n      this.unlockedCount = 0;\n    }\n\n    get className() {\n      return true;\n    }\n\n    set columns(value) {\n      this._columns = value.filter(column => column.includeInChooser !== false);\n      this.allColumns = value;\n      this.updateColumnState();\n    }\n\n    get columns() {\n      return this._columns;\n    }\n\n    isDisabled(column) {\n      return !(this.allowHideAll || this.hasFiltered || column.hidden || this.columns.find(current => current !== column && !current.hidden)) || this.hasVisibleLocked && !this.hasUnlockedFiltered && this.unlockedCount === 1 && !column.locked && !column.hidden;\n    }\n\n    ngOnInit() {\n      if (!this.element) {\n        return;\n      }\n\n      this.ngZone.runOutsideAngular(() => {\n        this.domSubscriptions = this.renderer.listen(this.element.nativeElement, 'click', e => {\n          if (hasClasses(e.target, 'k-checkbox')) {\n            if (this.autoSync) {\n              const index = parseInt(e.target.getAttribute('data-index'), 10);\n              const column = this.columns[index];\n              const hidden = !e.target.checked;\n\n              if (Boolean(column.hidden) !== hidden) {\n                this.ngZone.run(() => {\n                  column.hidden = hidden;\n                  this.columnChange.emit([column]);\n                });\n              }\n            } else {\n              this.updateDisabled();\n            }\n          }\n        });\n      });\n    }\n\n    ngOnChanges(changes) {\n      if (!this.service) {\n        return;\n      }\n\n      if (changes.isLast && this.isLast) {\n        this.service.menuTabbingService.lastFocusable = this.applyButton.nativeElement;\n      }\n\n      if (changes.isExpanded && this.isExpanded && this.isLast && this.applyButton) {\n        this.service.menuTabbingService.lastFocusable = this.applyButton.nativeElement;\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.domSubscriptions) {\n        this.domSubscriptions();\n      }\n    }\n\n    cancelChanges() {\n      this.forEachCheckBox((element, index) => {\n        element.checked = !this.columns[index].hidden;\n      });\n      this.updateDisabled();\n      this.reset.emit();\n    }\n\n    applyChanges() {\n      const changed = [];\n      this.forEachCheckBox((element, index) => {\n        const column = this.columns[index];\n        const hidden = !element.checked;\n\n        if (Boolean(column.hidden) !== hidden) {\n          column.hidden = hidden;\n          changed.push(column);\n        }\n      });\n      this.updateDisabled();\n      this.apply.emit(changed);\n    }\n\n    onTab(e) {\n      if (this.isLast) {\n        e.preventDefault();\n\n        if (this.service) {\n          this.service.menuTabbingService.firstFocusable.focus();\n        }\n      }\n    }\n\n    forEachCheckBox(callback) {\n      const checkboxes = this.element.nativeElement.getElementsByClassName('k-checkbox');\n      const length = checkboxes.length;\n\n      for (let idx = 0; idx < length; idx++) {\n        callback(checkboxes[idx], idx);\n      }\n    }\n\n    updateDisabled() {\n      if (this.allowHideAll && !this.hasLocked) {\n        return;\n      }\n\n      const checkedItems = [];\n      this.forEachCheckBox((checkbox, index) => {\n        if (checkbox.checked) {\n          checkedItems.push({\n            checkbox,\n            index\n          });\n        }\n\n        checkbox.disabled = false;\n      });\n\n      if (!this.allowHideAll && checkedItems.length === 1 && !this.hasFiltered) {\n        checkedItems[0].checkbox.disabled = true;\n      } else if (this.hasLocked && !this.hasUnlockedFiltered) {\n        const columns = this.columns;\n        const checkedUnlocked = checkedItems.filter(item => !columns[item.index].locked);\n\n        if (checkedUnlocked.length === 1) {\n          checkedUnlocked[0].checkbox.disabled = true;\n        }\n      }\n    }\n\n    updateColumnState() {\n      this.hasLocked = this.allColumns.filter(column => column.locked && (!column.hidden || column.includeInChooser !== false)).length > 0;\n      this.hasVisibleLocked = this.allColumns.filter(column => column.locked && !column.hidden).length > 0;\n      this.unlockedCount = this.columns.filter(column => !column.locked && !column.hidden).length;\n      const filteredColumns = this.allColumns.filter(column => column.includeInChooser === false && !column.hidden);\n\n      if (filteredColumns.length) {\n        this.hasFiltered = filteredColumns.length > 0;\n        this.hasUnlockedFiltered = filteredColumns.filter(column => !column.locked).length > 0;\n      } else {\n        this.hasFiltered = false;\n        this.hasUnlockedFiltered = false;\n      }\n    }\n\n  };\n\n  ColumnListComponent.ɵfac = function ColumnListComponent_Factory(t) {\n    return new (t || ColumnListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  ColumnListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ColumnListComponent,\n    selectors: [[\"kendo-grid-columnlist\"]],\n    viewQuery: function ColumnListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c183, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.applyButton = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function ColumnListComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-column-list-wrapper\", ctx.className);\n      }\n    },\n    inputs: {\n      autoSync: \"autoSync\",\n      allowHideAll: \"allowHideAll\",\n      actionsClass: \"actionsClass\",\n      columns: \"columns\",\n      applyText: \"applyText\",\n      resetText: \"resetText\",\n      isLast: \"isLast\",\n      isExpanded: \"isExpanded\",\n      service: \"service\"\n    },\n    outputs: {\n      reset: \"reset\",\n      apply: \"apply\",\n      columnChange: \"columnChange\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"k-column-list\"], [\"class\", \"k-column-list-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", 4, \"ngIf\"], [1, \"k-column-list-item\"], [\"type\", \"checkbox\", 1, \"k-checkbox\", 3, \"checked\", \"disabled\"], [1, \"k-checkbox-label\"], [3, \"ngClass\"], [\"type\", \"button\", 1, \"k-button\", 3, \"click\"], [\"type\", \"button\", 1, \"k-button\", \"k-primary\", 3, \"keydown.tab\", \"click\"], [\"applyButton\", \"\"]],\n    template: function ColumnListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, ColumnListComponent_label_1_Template, 4, 4, \"label\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, ColumnListComponent_div_2_Template, 6, 3, \"div\", 2);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.columns);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.autoSync);\n      }\n    },\n    directives: [ɵngcc5.NgForOf, ɵngcc5.NgIf, ɵngcc5.NgClass],\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding(\"class.k-column-list-wrapper\"), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ColumnListComponent.prototype, \"className\", null);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ColumnListComponent.prototype, \"reset\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ColumnListComponent.prototype, \"apply\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ColumnListComponent.prototype, \"columnChange\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], ColumnListComponent.prototype, \"columns\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnListComponent.prototype, \"autoSync\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnListComponent.prototype, \"allowHideAll\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ColumnListComponent.prototype, \"applyText\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ColumnListComponent.prototype, \"resetText\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ColumnListComponent.prototype, \"actionsClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnListComponent.prototype, \"isLast\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnListComponent.prototype, \"isExpanded\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnMenuService)], ColumnListComponent.prototype, \"service\", void 0);\n\n  __decorate([ViewChild('applyButton', {\n    static: false\n  }), __metadata(\"design:type\", ElementRef)], ColumnListComponent.prototype, \"applyButton\", void 0);\n\n  ColumnListComponent = __decorate([__metadata(\"design:paramtypes\", [ElementRef, NgZone, Renderer2])], ColumnListComponent);\n  /**\n   * Represents the component for selecting columns in the Grid. To enable the user to show or hide columns,\n   * add the component inside a [ToolbarTemplate]({% slug api_grid_toolbartemplatedirective %}) directive.\n   *\n   * @example\n   * {% meta height:300 %}\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *       <kendo-grid [data]=\"data\">\n   *          <ng-template kendoGridToolbarTemplate>\n   *             <kendo-grid-column-chooser></kendo-grid-column-chooser>\n   *          </ng-template>\n   *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n   *          <kendo-grid-column field=\"Field2\" [hidden]=\"true\"></kendo-grid-column>\n   *       </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n   * }\n   *\n   * ```\n   * {% endmeta %}\n   */\n\n  return ColumnListComponent;\n})();\nlet ColumnChooserComponent = /*#__PURE__*/(() => {\n  let ColumnChooserComponent = class ColumnChooserComponent {\n    constructor(localization, columnInfoService, popupService, ngZone, renderer, changeDetector) {\n      this.localization = localization;\n      this.columnInfoService = columnInfoService;\n      this.popupService = popupService;\n      this.ngZone = ngZone;\n      this.renderer = renderer;\n      this.changeDetector = changeDetector;\n      /**\n       * Specifies if the changes in the visibility of the column will be immediately applied.\n       */\n\n      this.autoSync = false;\n      /**\n       * Specifies if all columns can be hidden.\n       */\n\n      this.allowHideAll = true;\n    }\n\n    get columns() {\n      return this.columnInfoService.leafNamedColumns;\n    }\n\n    ngOnDestroy() {\n      this.close();\n    }\n    /**\n     * @hidden\n     */\n\n\n    toggle(anchor, template) {\n      if (!this.popupRef) {\n        const direction = this.localization.rtl ? 'right' : 'left';\n        this.popupRef = this.popupService.open({\n          anchor: anchor,\n          content: template,\n          positionMode: 'absolute',\n          anchorAlign: {\n            vertical: 'bottom',\n            horizontal: direction\n          },\n          popupAlign: {\n            vertical: 'top',\n            horizontal: direction\n          }\n        });\n        this.renderer.setAttribute(this.popupRef.popupElement, 'dir', this.localization.rtl ? 'rtl' : 'ltr');\n        this.ngZone.runOutsideAngular(() => this.closeClick = this.renderer.listen(\"document\", \"click\", ({\n          target\n        }) => {\n          if (!closest(target, node => node === this.popupRef.popupElement || node === anchor)) {\n            this.close();\n          }\n        }));\n      } else {\n        this.close();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    onApply(changed) {\n      this.close();\n\n      if (changed.length) {\n        this.changeDetector.markForCheck();\n        this.columnInfoService.changeVisibility(changed);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    onChange(changed) {\n      this.changeDetector.markForCheck();\n      this.columnInfoService.changeVisibility(changed);\n    }\n\n    close() {\n      if (this.popupRef) {\n        this.popupRef.close();\n        this.popupRef = null;\n      }\n\n      this.detachClose();\n    }\n\n    detachClose() {\n      if (this.closeClick) {\n        this.closeClick();\n        this.closeClick = null;\n      }\n    }\n\n  };\n\n  ColumnChooserComponent.ɵfac = function ColumnChooserComponent_Factory(t) {\n    return new (t || ColumnChooserComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.PopupService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  ColumnChooserComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ColumnChooserComponent,\n    selectors: [[\"kendo-grid-column-chooser\"]],\n    inputs: {\n      autoSync: \"autoSync\",\n      allowHideAll: \"allowHideAll\"\n    },\n    decls: 5,\n    vars: 1,\n    consts: [[\"type\", \"button\", 1, \"k-button\", \"k-bare\", \"k-button-icon\", 3, \"click\"], [\"anchor\", \"\"], [1, \"k-icon\", \"k-i-columns\"], [\"template\", \"\"], [1, \"k-column-chooser-title\"], [3, \"columns\", \"applyText\", \"resetText\", \"autoSync\", \"allowHideAll\", \"apply\", \"columnChange\"]],\n    template: function ColumnChooserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function ColumnChooserComponent_Template_button_click_0_listener() {\n          ɵngcc0.ɵɵrestoreView(_r6);\n\n          const _r0 = ɵngcc0.ɵɵreference(1);\n\n          const _r1 = ɵngcc0.ɵɵreference(4);\n\n          return ctx.toggle(_r0, _r1);\n        });\n        ɵngcc0.ɵɵelement(2, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, ColumnChooserComponent_ng_template_3_Template, 3, 6, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"title\", ctx.localization.get(\"columns\"));\n      }\n    },\n    directives: [ColumnListComponent],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnChooserComponent.prototype, \"autoSync\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnChooserComponent.prototype, \"allowHideAll\", void 0);\n\n  ColumnChooserComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, ColumnInfoService, PopupService, NgZone, Renderer2, ChangeDetectorRef])], ColumnChooserComponent);\n  /**\n   * @hidden\n   */\n\n  return ColumnChooserComponent;\n})();\nlet ColumnMenuItemBase = /*#__PURE__*/(() => {\n  class ColumnMenuItemBase {\n    constructor() {\n      this.hostClass = true;\n    }\n\n    ngOnInit() {\n      if (isDevMode() && !this.service) {\n        throw new Error('The service input of the predefined column menu components is mandatory.');\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    close() {\n      this.service.close();\n    }\n\n  }\n\n  ColumnMenuItemBase.ɵfac = function ColumnMenuItemBase_Factory(t) {\n    return new (t || ColumnMenuItemBase)();\n  };\n\n  ColumnMenuItemBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ColumnMenuItemBase,\n    hostVars: 2,\n    hostBindings: function ColumnMenuItemBase_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-columnmenu-item-wrapper\", ctx.hostClass);\n      }\n    },\n    inputs: {\n      service: \"service\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", ColumnMenuService)], ColumnMenuItemBase.prototype, \"service\", void 0);\n\n  __decorate([HostBinding('class.k-columnmenu-item-wrapper'), __metadata(\"design:type\", Boolean)], ColumnMenuItemBase.prototype, \"hostClass\", void 0);\n  /* tslint:disable:max-line-length */\n\n  /**\n   * Represents the component for selecting columns in the Grid that can be placed\n   * inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n   *\n   * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n   * > the template to the service input of the `kendo-grid-columnmenu-chooser` component.\n   *\n   * @example\n   * {% meta height:300 %}\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n   *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n   *              <kendo-grid-columnmenu-chooser [service]=\"service\">\n   *              </kendo-grid-columnmenu-chooser>\n   *          </ng-template>\n   *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n   *          <kendo-grid-column field=\"Field2\" [hidden]=\"true\"></kendo-grid-column>\n   *       </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n   * }\n   *\n   * ```\n   * {% endmeta %}\n   */\n\n\n  return ColumnMenuItemBase;\n})();\nlet ColumnMenuChooserComponent = /*#__PURE__*/(() => {\n  let ColumnMenuChooserComponent = class ColumnMenuChooserComponent extends ColumnMenuItemBase {\n    constructor(localization, columnInfoService, changeDetector, hostElement) {\n      super();\n      this.localization = localization;\n      this.columnInfoService = columnInfoService;\n      this.changeDetector = changeDetector;\n      this.hostElement = hostElement;\n      /**\n       * Fires when the content is expanded.\n       */\n\n      this.expand = new EventEmitter();\n      /**\n       * Fires when the content is collapsed.\n       */\n\n      this.collapse = new EventEmitter();\n      /**\n       * Specifies if the content is expanded.\n       */\n\n      this.expanded = false;\n      /**\n       * @hidden\n       */\n\n      this.isLast = false;\n      /**\n       * @hidden\n       */\n\n      this.actionsClass = 'k-columnmenu-actions';\n    }\n\n    get columns() {\n      return this.columnInfoService.leafNamedColumns;\n    }\n    /**\n     * @hidden\n     */\n\n\n    onApply(changed) {\n      this.close();\n\n      if (changed.length) {\n        this.changeDetector.markForCheck();\n        this.columnInfoService.changeVisibility(changed);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    onCollapse() {\n      this.expanded = false;\n\n      if (this.isLast) {\n        this.service.menuTabbingService.lastFocusable = this.hostElement.nativeElement.querySelector('.k-columnmenu-item');\n      }\n\n      this.collapse.emit();\n    }\n    /**\n     * @hidden\n     */\n\n\n    onExpand() {\n      this.expanded = true;\n      this.expand.emit();\n    }\n\n  };\n\n  ColumnMenuChooserComponent.ɵfac = function ColumnMenuChooserComponent_Factory(t) {\n    return new (t || ColumnMenuChooserComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  ColumnMenuChooserComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ColumnMenuChooserComponent,\n    selectors: [[\"kendo-grid-columnmenu-chooser\"]],\n    inputs: {\n      expanded: \"expanded\",\n      isLast: \"isLast\"\n    },\n    outputs: {\n      expand: \"expand\",\n      collapse: \"collapse\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"icon\", \"columns\", 3, \"text\", \"expanded\", \"collapse\", \"expand\"], [\"kendoGridColumnMenuItemContentTemplate\", \"\"], [3, \"applyText\", \"resetText\", \"columns\", \"autoSync\", \"allowHideAll\", \"actionsClass\", \"isLast\", \"isExpanded\", \"service\", \"apply\"]],\n    template: function ColumnMenuChooserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n        ɵngcc0.ɵɵlistener(\"collapse\", function ColumnMenuChooserComponent_Template_kendo_grid_columnmenu_item_collapse_0_listener() {\n          return ctx.onCollapse();\n        })(\"expand\", function ColumnMenuChooserComponent_Template_kendo_grid_columnmenu_item_expand_0_listener() {\n          return ctx.onExpand();\n        });\n        ɵngcc0.ɵɵtemplate(1, ColumnMenuChooserComponent_ng_template_1_Template, 1, 9, \"ng-template\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"text\", ctx.localization.get(\"columns\"))(\"expanded\", ctx.expanded);\n      }\n    },\n    directives: function () {\n      return [ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnListComponent];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ColumnMenuChooserComponent.prototype, \"expand\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ColumnMenuChooserComponent.prototype, \"collapse\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnMenuChooserComponent.prototype, \"expanded\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnMenuChooserComponent.prototype, \"isLast\", void 0);\n\n  ColumnMenuChooserComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, ColumnInfoService, ChangeDetectorRef, ElementRef])], ColumnMenuChooserComponent);\n  /* tslint:disable:max-line-length */\n\n  /**\n   * Represents the component for editing column filters in the Grid that can be placed\n   * inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n   *\n   * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n   * > the template to the service input of the `kendo-grid-columnmenu-filter` component.\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *       <kendo-grid [kendoGridBinding]=\"data\" [columnMenu]=\"true\">\n   *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n   *              <kendo-grid-columnmenu-filter [service]=\"service\">\n   *              </kendo-grid-columnmenu-filter>\n   *          </ng-template>\n   *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n   *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n   *       </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n   * }\n   *\n   * ```\n   */\n\n  return ColumnMenuChooserComponent;\n})();\nlet ColumnMenuFilterComponent = /*#__PURE__*/(() => {\n  let ColumnMenuFilterComponent = class ColumnMenuFilterComponent extends ColumnMenuItemBase {\n    constructor(localization, hostElement) {\n      super();\n      this.localization = localization;\n      this.hostElement = hostElement;\n      /**\n       * Fires when the content is expanded.\n       */\n\n      this.expand = new EventEmitter();\n      /**\n       * Fires when the content is collapsed.\n       */\n\n      this.collapse = new EventEmitter();\n      /**\n       * Specifies if the content is expanded.\n       */\n\n      this.expanded = false;\n      /**\n       * @hidden\n       */\n\n      this.isLast = false;\n      /**\n       * @hidden\n       */\n\n      this.actionsClass = 'k-columnmenu-actions';\n    }\n    /**\n     * @hidden\n     */\n\n\n    onCollapse() {\n      this.expanded = false;\n\n      if (this.isLast) {\n        this.service.menuTabbingService.lastFocusable = this.hostElement.nativeElement.querySelector('.k-columnmenu-item');\n      }\n\n      this.collapse.emit();\n    }\n    /**\n     * @hidden\n     */\n\n\n    onExpand() {\n      this.expanded = true;\n      this.expand.emit();\n    }\n\n  };\n\n  ColumnMenuFilterComponent.ɵfac = function ColumnMenuFilterComponent_Factory(t) {\n    return new (t || ColumnMenuFilterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  ColumnMenuFilterComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ColumnMenuFilterComponent,\n    selectors: [[\"kendo-grid-columnmenu-filter\"]],\n    inputs: {\n      expanded: \"expanded\",\n      isLast: \"isLast\"\n    },\n    outputs: {\n      expand: \"expand\",\n      collapse: \"collapse\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"icon\", \"filter\", 3, \"text\", \"expanded\", \"collapse\", \"expand\"], [\"kendoGridColumnMenuItemContentTemplate\", \"\"], [3, \"column\", \"menuTabbingService\", \"filter\", \"actionsClass\", \"isLast\", \"isExpanded\", \"keydown.shift.tab\", \"close\"]],\n    template: function ColumnMenuFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n        ɵngcc0.ɵɵlistener(\"collapse\", function ColumnMenuFilterComponent_Template_kendo_grid_columnmenu_item_collapse_0_listener() {\n          return ctx.onCollapse();\n        })(\"expand\", function ColumnMenuFilterComponent_Template_kendo_grid_columnmenu_item_expand_0_listener() {\n          return ctx.onExpand();\n        });\n        ɵngcc0.ɵɵtemplate(1, ColumnMenuFilterComponent_ng_template_1_Template, 1, 6, \"ng-template\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"text\", ctx.localization.get(\"filter\"))(\"expanded\", ctx.expanded);\n      }\n    },\n    directives: function () {\n      return [ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, FilterMenuContainerComponent];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ColumnMenuFilterComponent.prototype, \"expand\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ColumnMenuFilterComponent.prototype, \"collapse\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnMenuFilterComponent.prototype, \"expanded\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnMenuFilterComponent.prototype, \"isLast\", void 0);\n\n  ColumnMenuFilterComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, ElementRef])], ColumnMenuFilterComponent);\n  /* tslint:disable:max-line-length */\n\n  /**\n   * Represents the content template of the\n   * [kendo-grid-columnmenu-item]({% slug api_grid_columnmenuitemcomponent %}) component.\n   * Provides an option for specifying the content of a column item.\n   * To define the content template, nest an `<ng-template>` tag with the\n   * `kendoGridColumnMenuItemContentTemplate` directive inside a `<kendo-grid-columnmenu-item>`.\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n   *          <ng-template kendoGridColumnMenuTemplate>\n   *              <kendo-grid-columnmenu-item text=\"Item Text\" [expanded]=\"true\">\n   *                  <ng-template kendoGridColumnMenuItemContentTemplate>\n   *                      Item Content\n   *                  </ng-template>\n   *              </kendo-grid-columnmenu-item>\n   *          </ng-template>\n   *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n   *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n   *       </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n   * }\n   *\n   * ```\n   */\n\n  return ColumnMenuFilterComponent;\n})();\nlet ColumnMenuItemContentTemplateDirective = /*#__PURE__*/(() => {\n  let ColumnMenuItemContentTemplateDirective = class ColumnMenuItemContentTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  ColumnMenuItemContentTemplateDirective.ɵfac = function ColumnMenuItemContentTemplateDirective_Factory(t) {\n    return new (t || ColumnMenuItemContentTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  ColumnMenuItemContentTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ColumnMenuItemContentTemplateDirective,\n    selectors: [[\"\", \"kendoGridColumnMenuItemContentTemplate\", \"\"]]\n  });\n  ColumnMenuItemContentTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], ColumnMenuItemContentTemplateDirective);\n  /**\n   * Represents an item that can be placed inside a\n   * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\" [resizable]=\"true\" #grid>\n   *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\" let-column=\"column\">\n   *              <kendo-grid-columnmenu-item icon=\"arrows-resizing\" text=\"Fit column\"\n   *                  (itemClick)=\"grid.autoFitColumn(column); service.close()\">\n   *              </kendo-grid-columnmenu-item>\n   *          </ng-template>\n   *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n   *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n   *       </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n   * }\n   *\n   * ```\n   */\n\n  return ColumnMenuItemContentTemplateDirective;\n})();\nlet ColumnMenuItemComponent = /*#__PURE__*/(() => {\n  let ColumnMenuItemComponent = class ColumnMenuItemComponent {\n    /**\n     * Represents an item that can be placed inside a\n     * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n     *\n     * @example\n     * ```ts-preview\n     *\n     * _@Component({\n     *     selector: 'my-app',\n     *     template: `\n     *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\" [resizable]=\"true\" #grid>\n     *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\" let-column=\"column\">\n     *              <kendo-grid-columnmenu-item icon=\"arrows-resizing\" text=\"Fit column\"\n     *                  (itemClick)=\"grid.autoFitColumn(column); service.close()\">\n     *              </kendo-grid-columnmenu-item>\n     *          </ng-template>\n     *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n     *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n     *       </kendo-grid>\n     *     `\n     * })\n     *\n     * class AppComponent {\n     *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n     * }\n     *\n     * ```\n     */\n    constructor() {\n      /**\n       * Fires when the item is clicked.\n       */\n      this.itemClick = new EventEmitter();\n      /**\n       * Fires when the content is expanded.\n       */\n\n      this.expand = new EventEmitter();\n      /**\n       * Fires when the content is collapsed.\n       */\n\n      this.collapse = new EventEmitter();\n      this.contentState = 'collapsed';\n    }\n\n    get iconClass() {\n      return `k-i-${this.icon}`;\n    }\n\n    ngOnChanges(changes) {\n      if (changes.expanded) {\n        this.updateContentState();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    onClick(e) {\n      this.itemClick.emit(e);\n\n      if (this.contentTemplate) {\n        this.expanded = !this.expanded;\n        this.updateContentState();\n\n        if (this.expanded) {\n          this.expand.emit();\n        } else {\n          this.collapse.emit();\n        }\n      }\n    }\n\n    updateContentState() {\n      this.contentState = this.expanded ? 'expanded' : 'collapsed';\n    }\n\n  };\n\n  ColumnMenuItemComponent.ɵfac = function ColumnMenuItemComponent_Factory(t) {\n    return new (t || ColumnMenuItemComponent)();\n  };\n\n  ColumnMenuItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ColumnMenuItemComponent,\n    selectors: [[\"kendo-grid-columnmenu-item\"]],\n    contentQueries: function ColumnMenuItemComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnMenuItemContentTemplateDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n      }\n    },\n    inputs: {\n      expanded: \"expanded\",\n      icon: \"icon\",\n      text: \"text\",\n      selected: \"selected\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      itemClick: \"itemClick\",\n      expand: \"expand\",\n      collapse: \"collapse\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 8,\n    consts: [[\"role\", \"button\", 1, \"k-columnmenu-item\", 3, \"click\", \"keydown.enter\"], [\"class\", \"k-icon\", 3, \"ngClass\", 4, \"ngIf\"], [\"style\", \"overflow:hidden;\", \"class\", \"k-columnmenu-item-content\", 4, \"ngIf\"], [1, \"k-icon\", 3, \"ngClass\"], [1, \"k-columnmenu-item-content\", 2, \"overflow\", \"hidden\"], [3, \"ngTemplateOutlet\"]],\n    template: function ColumnMenuItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function ColumnMenuItemComponent_Template_div_click_0_listener($event) {\n          return ctx.onClick($event);\n        })(\"keydown.enter\", function ColumnMenuItemComponent_Template_div_keydown_enter_0_listener($event) {\n          return ctx.onClick($event);\n        });\n        ɵngcc0.ɵɵtemplate(1, ColumnMenuItemComponent_span_1_Template, 1, 1, \"span\", 1);\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, ColumnMenuItemComponent_div_3_Template, 3, 2, \"div\", 2);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-state-selected\", ctx.selected)(\"k-state-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.expanded);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.icon);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.text, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.contentTemplate);\n      }\n    },\n    directives: [ɵngcc5.NgIf, ɵngcc5.NgClass, ɵngcc5.NgTemplateOutlet],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('state', [state('collapsed', style({\n        display: 'none'\n      })), state('expanded', style({\n        display: 'block'\n      })), transition('collapsed => expanded', [style({\n        height: '0px',\n        display: 'block'\n      }), animate('100ms ease-in', style({\n        height: '*'\n      }))]), transition('expanded => collapsed', [style({\n        height: '*'\n      }), animate('100ms ease-in', style({\n        height: '0px'\n      }))])])]\n    }\n  });\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ColumnMenuItemComponent.prototype, \"itemClick\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ColumnMenuItemComponent.prototype, \"expand\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ColumnMenuItemComponent.prototype, \"collapse\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ColumnMenuItemComponent.prototype, \"icon\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ColumnMenuItemComponent.prototype, \"text\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnMenuItemComponent.prototype, \"selected\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnMenuItemComponent.prototype, \"disabled\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnMenuItemComponent.prototype, \"expanded\", void 0);\n\n  __decorate([ContentChild(ColumnMenuItemContentTemplateDirective, {\n    static: false\n  }), __metadata(\"design:type\", ColumnMenuItemContentTemplateDirective)], ColumnMenuItemComponent.prototype, \"contentTemplate\", void 0);\n  /* tslint:disable:max-line-length */\n\n  /**\n   * Represents a column-menu item for sorting Grid columns that can be placed inside a\n   * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n   * Allows the user to sort the column.\n   *\n   * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n   * > the template to the service input of the `kendo-grid-columnmenu-sort` component.\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *       <kendo-grid [kendoGridBinding]=\"data\" [sortable]=\"true\" [columnMenu]=\"true\">\n   *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n   *              <kendo-grid-columnmenu-sort [service]=\"service\">\n   *              </kendo-grid-columnmenu-sort>\n   *          </ng-template>\n   *          <kendo-grid-column field=\"Field1\" [width]=\"100\"></kendo-grid-column>\n   *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n   *       </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }, { Field1: 'Foo1', Field2: 'Bar1' }];\n   * }\n   *\n   * ```\n   */\n\n\n  return ColumnMenuItemComponent;\n})();\nlet ColumnMenuSortComponent = /*#__PURE__*/(() => {\n  let ColumnMenuSortComponent = class ColumnMenuSortComponent extends ColumnMenuItemBase {\n    constructor(localization, sortService, renderer) {\n      super();\n      this.localization = localization;\n      this.sortService = sortService;\n      this.renderer = renderer;\n    }\n\n    get sortedAsc() {\n      const descriptor = this.descriptor;\n      return descriptor && (!descriptor.dir || descriptor.dir === 'asc');\n    }\n\n    get sortedDesc() {\n      const descriptor = this.descriptor;\n      return descriptor && descriptor.dir === 'desc';\n    }\n    /**\n     * @hidden\n     */\n\n\n    toggleSort(dir) {\n      const field = this.service.column.field;\n      const {\n        mode,\n        allowUnsort\n      } = normalize$1(this.service.sortable);\n      const descriptor = this.descriptor;\n      const sort = mode === 'multiple' ? this.service.sort.filter(s => s.field !== field) : [];\n\n      if (descriptor && descriptor.dir === dir) {\n        if (!allowUnsort) {\n          return;\n        }\n      } else {\n        sort.push({\n          field,\n          dir\n        });\n      }\n\n      this.sortService.sort(sort);\n      this.close();\n    }\n\n    get descriptor() {\n      return [].concat(this.service.sort || []).find(s => s.field === this.service.column.field);\n    }\n\n  };\n\n  ColumnMenuSortComponent.ɵfac = function ColumnMenuSortComponent_Factory(t) {\n    return new (t || ColumnMenuSortComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(SortService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  ColumnMenuSortComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ColumnMenuSortComponent,\n    selectors: [[\"kendo-grid-columnmenu-sort\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 4,\n    consts: [[\"icon\", \"sort-asc-sm\", 3, \"text\", \"selected\", \"itemClick\"], [\"icon\", \"sort-desc-sm\", 3, \"text\", \"selected\", \"itemClick\"]],\n    template: function ColumnMenuSortComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n        ɵngcc0.ɵɵlistener(\"itemClick\", function ColumnMenuSortComponent_Template_kendo_grid_columnmenu_item_itemClick_0_listener() {\n          return ctx.toggleSort(\"asc\");\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(1, \"kendo-grid-columnmenu-item\", 1);\n        ɵngcc0.ɵɵlistener(\"itemClick\", function ColumnMenuSortComponent_Template_kendo_grid_columnmenu_item_itemClick_1_listener() {\n          return ctx.toggleSort(\"desc\");\n        });\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"text\", ctx.localization.get(\"sortAscending\"))(\"selected\", ctx.sortedAsc);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"text\", ctx.localization.get(\"sortDescending\"))(\"selected\", ctx.sortedDesc);\n      }\n    },\n    directives: [ColumnMenuItemComponent],\n    encapsulation: 2\n  });\n  ColumnMenuSortComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, SortService, Renderer2])], ColumnMenuSortComponent);\n  /* tslint:disable:max-line-length */\n\n  /**\n   * Represents a column-menu item that can be placed inside a\n   * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n   * Allows the user to lock or unlock the columns.\n   *\n   * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n   * > the template to the service input of the `kendo-grid-columnmenu-lock` component.\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n   *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n   *              <kendo-grid-columnmenu-lock [service]=\"service\">\n   *              </kendo-grid-columnmenu-lock>\n   *          </ng-template>\n   *          <kendo-grid-column field=\"Field1\" [width]=\"100\"></kendo-grid-column>\n   *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n   *       </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n   * }\n   *\n   * ```\n   */\n\n  return ColumnMenuSortComponent;\n})();\nlet ColumnMenuLockComponent = /*#__PURE__*/(() => {\n  let ColumnMenuLockComponent = class ColumnMenuLockComponent extends ColumnMenuItemBase {\n    constructor(localization, columnInfoService, changeDetector) {\n      super();\n      this.localization = localization;\n      this.columnInfoService = columnInfoService;\n      this.changeDetector = changeDetector;\n    }\n\n    get text() {\n      return this.localization.get(this.locked ? 'unlock' : 'lock');\n    }\n\n    get icon() {\n      return this.locked ? 'unlock' : 'lock';\n    }\n\n    get disabled() {\n      return !this.locked && this.columnInfoService.unlockedRootCount < 2;\n    }\n    /**\n     * @hidden\n     */\n\n\n    toggleColumn() {\n      this.toggleHierarchy(!this.locked);\n      this.close();\n      this.changeDetector.markForCheck();\n    }\n\n    toggleHierarchy(locked) {\n      let root = this.service.column;\n\n      while (root.parent) {\n        root = root.parent;\n      }\n\n      const columns = [root];\n      const allChanged = [];\n\n      while (columns.length) {\n        const column = columns.shift();\n        column.locked = locked;\n        allChanged.push(column);\n\n        if (column.hasChildren) {\n          columns.push(...column.childrenArray);\n        }\n      }\n\n      this.columnInfoService.changeLocked(allChanged);\n    }\n\n    get locked() {\n      return this.service.column.locked;\n    }\n\n  };\n\n  ColumnMenuLockComponent.ɵfac = function ColumnMenuLockComponent_Factory(t) {\n    return new (t || ColumnMenuLockComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  ColumnMenuLockComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ColumnMenuLockComponent,\n    selectors: [[\"kendo-grid-columnmenu-lock\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 3,\n    consts: [[3, \"text\", \"icon\", \"disabled\", \"itemClick\"]],\n    template: function ColumnMenuLockComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n        ɵngcc0.ɵɵlistener(\"itemClick\", function ColumnMenuLockComponent_Template_kendo_grid_columnmenu_item_itemClick_0_listener() {\n          return ctx.toggleColumn();\n        });\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"text\", ctx.text)(\"icon\", ctx.icon)(\"disabled\", ctx.disabled);\n      }\n    },\n    directives: [ColumnMenuItemComponent],\n    encapsulation: 2\n  });\n  ColumnMenuLockComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, ColumnInfoService, ChangeDetectorRef])], ColumnMenuLockComponent);\n  /* tslint:disable:max-line-length */\n\n  /**\n   * Represents the component for editing column filters in the Grid that can be placed\n   * inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n   *\n   * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n   * > the template to the service input of the `kendo-grid-columnmenu-filter` component.\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *       <kendo-grid [kendoGridBinding]=\"data\" [columnMenu]=\"true\">\n   *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n   *              <kendo-grid-columnmenu-filter [service]=\"service\">\n   *              </kendo-grid-columnmenu-filter>\n   *          </ng-template>\n   *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n   *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n   *       </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n   * }\n   *\n   * ```\n   */\n\n  return ColumnMenuLockComponent;\n})();\nlet ColumnMenuPositionComponent = /*#__PURE__*/(() => {\n  let ColumnMenuPositionComponent = class ColumnMenuPositionComponent extends ColumnMenuItemBase {\n    constructor(localization, hostElement) {\n      super();\n      this.localization = localization;\n      this.hostElement = hostElement;\n      /**\n       * Fires when the content is expanded.\n       */\n\n      this.expand = new EventEmitter();\n      /**\n       * Fires when the content is collapsed.\n       */\n\n      this.collapse = new EventEmitter();\n      /**\n       * Specifies if the content is expanded.\n       */\n\n      this.expanded = false;\n      /**\n       * @hidden\n       */\n\n      this.actionsClass = 'k-columnmenu-actions';\n      this._isLast = false;\n    }\n    /**\n     * @hidden\n     */\n\n\n    set isLast(value) {\n      this.service.menuTabbingService.lastFocusable = this.getLastFocusableItem();\n      this._isLast = value;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get isLast() {\n      return this._isLast;\n    }\n    /**\n     * @hidden\n     */\n\n\n    onTab(e, isLastItem) {\n      if (this.isLast && isLastItem) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        if (this.service) {\n          this.service.menuTabbingService.firstFocusable.focus();\n        }\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    onCollapse() {\n      this.expanded = false;\n\n      if (this.isLast) {\n        this.service.menuTabbingService.lastFocusable = this.getLastFocusableItem();\n      }\n\n      this.collapse.emit();\n    }\n    /**\n     * @hidden\n     */\n\n\n    onExpand() {\n      this.expanded = true;\n\n      if (this.isLast) {\n        this.service.menuTabbingService.lastFocusable = this.getLastFocusableItem();\n      }\n\n      this.expand.emit();\n    }\n\n    getLastFocusableItem() {\n      const menuItems = this.hostElement.nativeElement.querySelectorAll('.k-columnmenu-item');\n      const lastFocusableIndex = this.expanded ? menuItems.length - 1 : 0;\n      return menuItems[lastFocusableIndex];\n    }\n\n  };\n\n  ColumnMenuPositionComponent.ɵfac = function ColumnMenuPositionComponent_Factory(t) {\n    return new (t || ColumnMenuPositionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  ColumnMenuPositionComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ColumnMenuPositionComponent,\n    selectors: [[\"kendo-grid-columnmenu-position\"]],\n    inputs: {\n      expanded: \"expanded\",\n      isLast: \"isLast\",\n      showLock: \"showLock\",\n      showStick: \"showStick\"\n    },\n    outputs: {\n      expand: \"expand\",\n      collapse: \"collapse\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"icon\", \"set-column-position\", 3, \"text\", \"expanded\", \"keydown.tab\", \"collapse\", \"expand\"], [\"kendoGridColumnMenuItemContentTemplate\", \"\"], [3, \"service\", \"keydown.tab\", 4, \"ngIf\"], [3, \"service\", \"keydown.tab\"]],\n    template: function ColumnMenuPositionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n        ɵngcc0.ɵɵlistener(\"keydown.tab\", function ColumnMenuPositionComponent_Template_kendo_grid_columnmenu_item_keydown_tab_0_listener($event) {\n          return ctx.onTab($event, !ctx.expanded);\n        })(\"collapse\", function ColumnMenuPositionComponent_Template_kendo_grid_columnmenu_item_collapse_0_listener() {\n          return ctx.onCollapse();\n        })(\"expand\", function ColumnMenuPositionComponent_Template_kendo_grid_columnmenu_item_expand_0_listener() {\n          return ctx.onExpand();\n        });\n        ɵngcc0.ɵɵtemplate(1, ColumnMenuPositionComponent_ng_template_1_Template, 2, 2, \"ng-template\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"text\", ctx.localization.get(\"setColumnPosition\"))(\"expanded\", ctx.expanded);\n      }\n    },\n    directives: function () {\n      return [ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ɵngcc5.NgIf, ColumnMenuLockComponent, ColumnMenuStickComponent];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ColumnMenuPositionComponent.prototype, \"expand\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ColumnMenuPositionComponent.prototype, \"collapse\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnMenuPositionComponent.prototype, \"expanded\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnMenuPositionComponent.prototype, \"showLock\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ColumnMenuPositionComponent.prototype, \"showStick\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], ColumnMenuPositionComponent.prototype, \"isLast\", null);\n\n  ColumnMenuPositionComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, ElementRef])], ColumnMenuPositionComponent);\n  /**\n   * @hidden\n   */\n\n  return ColumnMenuPositionComponent;\n})();\nlet ColumnMenuItemDirective = /*#__PURE__*/(() => {\n  let ColumnMenuItemDirective = class ColumnMenuItemDirective {\n    constructor(hostElement, renderer, ngZone) {\n      this.hostElement = hostElement;\n      this.renderer = renderer;\n      this.ngZone = ngZone;\n      this._isFirst = false;\n      this._isLast = false;\n      this.subs = new Subscription();\n\n      this.onTab = e => {\n        if (e.keyCode !== Keys.Tab) {\n          return;\n        }\n\n        if (this.isFirst && e.shiftKey && e.target === this.columnMenuItems[0]) {\n          e.preventDefault();\n          this.menuItemComponent.service.menuTabbingService.lastFocusable.focus();\n        }\n\n        if (this.isLast && !e.shiftKey) {\n          const lastColumnMenuItem = this.getLastColumnMenuItem();\n          const isExpanded = this.menuItemComponent.expanded;\n\n          if (lastColumnMenuItem === e.target && !isExpanded) {\n            e.preventDefault();\n            this.menuItemComponent.service.menuTabbingService.firstFocusable.focus();\n          }\n        }\n      };\n    }\n\n    set isFirst(value) {\n      if (value) {\n        const focusableElement = this.columnMenuItems[0];\n        this.menuItemComponent.service.menuTabbingService.firstFocusable = focusableElement;\n        this.ngZone.runOutsideAngular(() => {\n          const firstItemKeydownSub = this.renderer.listen(focusableElement, 'keydown', this.onTab);\n          this.subs.add(firstItemKeydownSub);\n        });\n      }\n\n      this._isFirst = value;\n    }\n\n    get isFirst() {\n      return this._isFirst;\n    }\n\n    set isLast(value) {\n      if (!this.columnMenuItems) {\n        return;\n      }\n\n      if (value) {\n        const lastFocusableElement = this.getLastColumnMenuItem();\n        this.menuItemComponent.service.menuTabbingService.lastFocusable = lastFocusableElement;\n        this.ngZone.runOutsideAngular(() => {\n          const lastItemKeydownSub = this.renderer.listen(lastFocusableElement, 'keydown', this.onTab);\n          this.subs.add(lastItemKeydownSub);\n        });\n\n        if (this.isExpandableItem()) {\n          this.menuItemComponent.isLast = true;\n        }\n      }\n\n      this._isLast = value;\n    }\n\n    get isLast() {\n      return this._isLast;\n    }\n\n    ngAfterViewInit() {\n      this.columnMenuItems = this.hostElement.nativeElement.querySelectorAll('.k-columnmenu-item');\n      [].slice.apply(this.columnMenuItems).forEach(el => this.renderer.setAttribute(el, 'tabindex', '0'));\n\n      if (this.menuItemComponent instanceof ColumnMenuFilterComponent) {\n        this.menuItemComponent.service.menuTabbingService.isColumnMenu = true;\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.subs) {\n        this.subs.unsubscribe();\n      }\n    }\n\n    getLastColumnMenuItem() {\n      return this.columnMenuItems.length === 1 ? this.columnMenuItems[0] : this.columnMenuItems[1];\n    }\n\n    isExpandableItem() {\n      return this.menuItemComponent instanceof ColumnMenuFilterComponent || this.menuItemComponent instanceof ColumnMenuChooserComponent || this.menuItemComponent instanceof ColumnMenuPositionComponent;\n    }\n\n  };\n\n  ColumnMenuItemDirective.ɵfac = function ColumnMenuItemDirective_Factory(t) {\n    return new (t || ColumnMenuItemDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  ColumnMenuItemDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ColumnMenuItemDirective,\n    selectors: [[\"\", \"kendoGridColumnMenuItem\", \"\"]],\n    inputs: {\n      menuItemComponent: [\"kendoGridColumnMenuItem\", \"menuItemComponent\"]\n    }\n  });\n\n  __decorate([Input('kendoGridColumnMenuItem'), __metadata(\"design:type\", Object)], ColumnMenuItemDirective.prototype, \"menuItemComponent\", void 0);\n\n  ColumnMenuItemDirective = __decorate([__metadata(\"design:paramtypes\", [ElementRef, Renderer2, NgZone])], ColumnMenuItemDirective);\n  /**\n   * @hidden\n   */\n\n  return ColumnMenuItemDirective;\n})();\nlet ColumnMenuContainerComponent = /*#__PURE__*/(() => {\n  let ColumnMenuContainerComponent = class ColumnMenuContainerComponent {\n    constructor(service, ngZone) {\n      this.service = service;\n      this.ngZone = ngZone;\n    }\n\n    ngAfterContentInit() {\n      if (!this.columnMenuItems.length) {\n        return;\n      }\n\n      this.columnMenuItems.first.isFirst = true;\n      this.columnMenuItems.last.isLast = true;\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => this.service.menuTabbingService.firstFocusable.focus());\n    }\n\n  };\n\n  ColumnMenuContainerComponent.ɵfac = function ColumnMenuContainerComponent_Factory(t) {\n    return new (t || ColumnMenuContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ColumnMenuService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  ColumnMenuContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ColumnMenuContainerComponent,\n    selectors: [[\"kendo-grid-columnmenu-container\"]],\n    contentQueries: function ColumnMenuContainerComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnMenuItemDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnMenuItems = _t);\n      }\n    },\n    ngContentSelectors: _c146,\n    decls: 1,\n    vars: 0,\n    template: function ColumnMenuContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n\n  __decorate([ContentChildren(ColumnMenuItemDirective, {\n    descendants: true\n  }), __metadata(\"design:type\", QueryList)], ColumnMenuContainerComponent.prototype, \"columnMenuItems\", void 0);\n\n  ColumnMenuContainerComponent = __decorate([__metadata(\"design:paramtypes\", [ColumnMenuService, NgZone])], ColumnMenuContainerComponent);\n  /* tslint:disable:max-line-length */\n\n  /**\n   * Represents a column-menu item that can be placed inside a\n   * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n   * Allows the user to stick or unstick the columns.\n   *\n   * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n   * > the template to the service input of the `kendo-grid-columnmenu-stick` component.\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n   *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n   *              <kendo-grid-columnmenu-stick [service]=\"service\">\n   *              </kendo-grid-columnmenu-stick>\n   *          </ng-template>\n   *          <kendo-grid-column field=\"Field1\" [width]=\"100\"></kendo-grid-column>\n   *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n   *       </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n   * }\n   *\n   * ```\n   */\n\n  return ColumnMenuContainerComponent;\n})();\nlet ColumnMenuStickComponent = /*#__PURE__*/(() => {\n  let ColumnMenuStickComponent = class ColumnMenuStickComponent extends ColumnMenuItemBase {\n    constructor(localization, columnInfoService, changeDetector) {\n      super();\n      this.localization = localization;\n      this.columnInfoService = columnInfoService;\n      this.changeDetector = changeDetector;\n    }\n\n    get text() {\n      return this.localization.get(this.sticky ? 'unstick' : 'stick');\n    }\n\n    get icon() {\n      return this.sticky ? 'unstick' : 'stick';\n    }\n\n    get disabled() {\n      return !this.sticky && this.columnInfoService.unlockedRootCount < 2;\n    }\n    /**\n     * @hidden\n     */\n\n\n    toggleColumn() {\n      this.toggleHierarchy(!this.sticky);\n      this.close();\n      this.changeDetector.markForCheck();\n    }\n\n    toggleHierarchy(sticky) {\n      let root = this.service.column;\n\n      while (root.parent) {\n        root = root.parent;\n      }\n\n      const columns = [root];\n      const allChanged = [];\n\n      while (columns.length) {\n        const column = columns.shift();\n        column.sticky = sticky;\n        allChanged.push(column);\n\n        if (column.hasChildren) {\n          columns.push(...column.childrenArray);\n        }\n      }\n\n      this.columnInfoService.changeStuck(allChanged);\n    }\n\n    get sticky() {\n      return this.service.column.sticky;\n    }\n\n  };\n\n  ColumnMenuStickComponent.ɵfac = function ColumnMenuStickComponent_Factory(t) {\n    return new (t || ColumnMenuStickComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  ColumnMenuStickComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ColumnMenuStickComponent,\n    selectors: [[\"kendo-grid-columnmenu-stick\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 3,\n    consts: [[3, \"text\", \"icon\", \"disabled\", \"itemClick\"]],\n    template: function ColumnMenuStickComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n        ɵngcc0.ɵɵlistener(\"itemClick\", function ColumnMenuStickComponent_Template_kendo_grid_columnmenu_item_itemClick_0_listener() {\n          return ctx.toggleColumn();\n        });\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"text\", ctx.text)(\"icon\", ctx.icon)(\"disabled\", ctx.disabled);\n      }\n    },\n    directives: [ColumnMenuItemComponent],\n    encapsulation: 2\n  });\n  ColumnMenuStickComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, ColumnInfoService, ChangeDetectorRef])], ColumnMenuStickComponent);\n  return ColumnMenuStickComponent;\n})();\nconst COMPONENTS$1 = [ColumnListComponent, ColumnChooserComponent, ColumnMenuChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuSortComponent, ColumnMenuComponent, ColumnMenuLockComponent, ColumnMenuTemplateDirective, ColumnMenuContainerComponent, ColumnMenuItemDirective, ColumnMenuStickComponent, ColumnMenuPositionComponent];\n/**\n * @hidden\n */\n\nlet ColumnMenuModule = /*#__PURE__*/(() => {\n  let ColumnMenuModule = class ColumnMenuModule {\n    static exports() {\n      return [ColumnChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuSortComponent, ColumnMenuLockComponent, ColumnMenuStickComponent, ColumnMenuPositionComponent, ColumnMenuChooserComponent, ColumnMenuTemplateDirective, ColumnMenuContainerComponent, ColumnMenuItemDirective, ColumnMenuComponent];\n    }\n\n  };\n\n  ColumnMenuModule.ɵfac = function ColumnMenuModule_Factory(t) {\n    return new (t || ColumnMenuModule)();\n  };\n\n  ColumnMenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ColumnMenuModule\n  });\n  ColumnMenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FilterMenuModule]]\n  });\n  return ColumnMenuModule;\n})();\nconst exportedModules$2 = [HeaderComponent, HeaderTemplateDirective, ColumnHandleDirective, SelectAllCheckboxDirective];\nconst importedModules$2 = [CommonModule, GroupModule, RowFilterModule, FilterMenuModule, SharedModule, DragAndDropModule, ColumnMenuModule];\n/**\n * @hidden\n */\n\nlet HeaderModule = /*#__PURE__*/(() => {\n  let HeaderModule = class HeaderModule {\n    static exports() {\n      return [HeaderTemplateDirective, SelectAllCheckboxDirective];\n    }\n\n  };\n\n  HeaderModule.ɵfac = function HeaderModule_Factory(t) {\n    return new (t || HeaderModule)();\n  };\n\n  HeaderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: HeaderModule\n  });\n  HeaderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[...importedModules$2]]\n  });\n  return HeaderModule;\n})();\nvar CommandColumnComponent_1;\n/**\n * Represents the command columns of the Grid. You have to define the content of the\n * column inside an `<ng-template>` tag. The template context is set to the current\n * data item. For more information and examples on using the passed fields\n * and the command directives, refer to the article on\n * [editing the Grid in Angular Reactive Forms]({% slug editing_reactive_forms_grid %}).\n *\n * The following additional fields are passed:\n * - `columnIndex`&mdash;The current column index.\n * - `rowIndex`&mdash;The current data row index. If inside a new item row, `rowIndex`is `-1`.\n * - `dataItem`&mdash;The current data item.\n * - `column`&mdash;The current column instance.\n * - `isNew`&mdash;The state of the current item.\n *\n * Usually, the template contains CRUD command directives such as:\n * - [EditCommandDirective]({% slug api_grid_editcommanddirective %})\n * - [RemoveCommandDirective]({% slug api_grid_removecommanddirective %})\n * - [CancelCommandDirective]({% slug api_grid_cancelcommanddirective %})\n * - [SaveCommandDirective]({% slug api_grid_savecommanddirective %})\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n *          </kendo-grid-column>\n *          <kendo-grid-command-column title=\"command\" width=\"220\">\n *               <ng-template kendoGridCellTemplate>\n *                   <button kendoGridEditCommand class=\"k-primary\">Edit</button>\n *                   <button kendoGridRemoveCommand>Remove</button>\n *               </ng-template>\n *           </kendo-grid-command-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\nlet CommandColumnComponent = CommandColumnComponent_1 = class CommandColumnComponent extends ColumnBase$1 {\n  constructor(parent) {\n    super(parent);\n    this.parent = parent;\n  }\n\n  get templateRef() {\n    return this.template ? this.template.templateRef : undefined;\n  }\n\n};\n\nCommandColumnComponent.ɵfac = function CommandColumnComponent_Factory(t) {\n  return new (t || CommandColumnComponent)(ɵngcc0.ɵɵdirectiveInject(ColumnBase$1, 13));\n};\n\nCommandColumnComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CommandColumnComponent,\n  selectors: [[\"kendo-grid-command-column\"]],\n  contentQueries: function CommandColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: ColumnBase$1,\n    useExisting: forwardRef(() => CommandColumnComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function CommandColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([ContentChild(CellTemplateDirective, {\n  static: false\n}), __metadata(\"design:type\", CellTemplateDirective)], CommandColumnComponent.prototype, \"template\", void 0);\n\nCommandColumnComponent = CommandColumnComponent_1 = __decorate([__param(0, SkipSelf()), __param(0, Host()), __param(0, Optional()), __metadata(\"design:paramtypes\", [ColumnBase$1])], CommandColumnComponent);\nvar CheckboxColumnComponent_1;\n/**\n * Represents the checkbox for selecting columns in the Grid. If the column is\n * defined as empty, it renders a default checkbox for row selection.\n * You can also define the content of the column inside an `<ng-template>` tag.\n * The input requires you to include the `SelectionCheckbox` option.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `columnIndex`&mdash;The current column index.\n * - `rowIndex`&mdash;The current data row index. If inside a new item row, it will be `-1`.\n * - `dataItem`&mdash;The current data item.\n * - `column`&mdash;The current column instance.\n * - `isNew`&mdash;The state of the current item.\n *\n * For more examples, refer to:\n * - [Selecting or deselecting all items on a page]({% slug selection_grid %}#toc-select-all-feature)\n * - [Persisting the selection]({% slug selection_grid %}#toc-in-combination-with-the-select-all-feature)\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\" [selectable]=\"{enabled: true, checkboxOnly: true}\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-checkbox-column title=\"Default checkbox\">\n *          </kendo-grid-checkbox-column>\n *          <kendo-grid-checkbox-column title=\"Custom checkbox\">\n *            <ng-template kendoGridCellTemplate let-idx=\"rowIndex\">\n *              Select row <input [kendoGridSelectionCheckbox]=\"idx\" />\n *            </ng-template>\n *          </kendo-grid-checkbox-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\nlet CheckboxColumnComponent = CheckboxColumnComponent_1 = class CheckboxColumnComponent extends ColumnBase$1 {\n  constructor(parent) {\n    super(parent);\n    this.parent = parent;\n    /*\n     * @hidden\n     */\n\n    this.isCheckboxColumn = true;\n  }\n\n  get templateRef() {\n    return this.template ? this.template.templateRef : undefined;\n  }\n\n};\n\nCheckboxColumnComponent.ɵfac = function CheckboxColumnComponent_Factory(t) {\n  return new (t || CheckboxColumnComponent)(ɵngcc0.ɵɵdirectiveInject(ColumnBase$1, 13));\n};\n\nCheckboxColumnComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CheckboxColumnComponent,\n  selectors: [[\"kendo-grid-checkbox-column\"]],\n  contentQueries: function CheckboxColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  inputs: {\n    showSelectAll: \"showSelectAll\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: ColumnBase$1,\n    useExisting: forwardRef(() => CheckboxColumnComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function CheckboxColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], CheckboxColumnComponent.prototype, \"showSelectAll\", void 0);\n\n__decorate([ContentChild(CellTemplateDirective, {\n  static: false\n}), __metadata(\"design:type\", CellTemplateDirective)], CheckboxColumnComponent.prototype, \"template\", void 0);\n\nCheckboxColumnComponent = CheckboxColumnComponent_1 = __decorate([__param(0, SkipSelf()), __param(0, Host()), __param(0, Optional()), __metadata(\"design:paramtypes\", [ColumnBase$1])], CheckboxColumnComponent);\n/**\n * Represents the row-selection checkbox of the Grid. The directive expects the\n * index of the current row as an input parameter. Inside the\n * [CheckboxColumnComponent]({% slug api_grid_checkboxcolumncomponent %}), apply the\n * directive to an `input` element. When the user clicks the checkbox that is associated\n * with the directive, a [selectionChange]({% slug api_grid_gridcomponent %}#toc-selectionChange)\n * event is triggered.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\" [selectable]=\"{enabled: true, checkboxOnly: true}\">\n *          <kendo-grid-checkbox-column title=\"Custom checkbox\">\n *            <ng-template kendoGridCellTemplate let-idx=\"rowIndex\">\n *              Select row <input [kendoGridSelectionCheckbox]=\"idx\" />\n *            </ng-template>\n *          </kendo-grid-checkbox-column>\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\nlet SelectionCheckboxDirective = /*#__PURE__*/(() => {\n  let SelectionCheckboxDirective = class SelectionCheckboxDirective {\n    constructor(selectionService, el, renderer, ngZone) {\n      this.selectionService = selectionService;\n      this.el = el;\n      this.renderer = renderer;\n      this.ngZone = ngZone;\n      this.type = \"checkbox\";\n      this.ngZone.runOutsideAngular(() => {\n        this.destroyClick = this.renderer.listen(this.el.nativeElement, \"click\", this.onClick.bind(this));\n        this.destroyKeyDown = this.renderer.listen(this.el.nativeElement, \"keydown\", this.onKeyDown.bind(this));\n      });\n    }\n\n    ngAfterContentChecked() {\n      this.setCheckedState();\n    }\n\n    ngOnDestroy() {\n      if (this.destroyClick) {\n        this.destroyClick();\n      }\n\n      if (this.destroyKeyDown) {\n        this.destroyKeyDown();\n      }\n    }\n\n    onClick() {\n      if (this.selectionService.options.enabled) {\n        this.ngZone.run(() => {\n          const ev = this.selectionService.toggleByIndex(this.itemIndex);\n          ev.ctrlKey = true;\n          ev.shiftKey = false;\n          this.selectionService.changes.emit(ev);\n        });\n      }\n    }\n\n    onKeyDown(e) {\n      if (e.keyCode === Keys.Enter) {\n        this.onClick();\n      }\n    }\n    /*\n     * @hidden\n     */\n\n\n    setCheckedState() {\n      this.renderer.setProperty(this.el.nativeElement, \"checked\", this.selectionService.isSelected(this.itemIndex));\n    }\n\n  };\n\n  SelectionCheckboxDirective.ɵfac = function SelectionCheckboxDirective_Factory(t) {\n    return new (t || SelectionCheckboxDirective)(ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  SelectionCheckboxDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: SelectionCheckboxDirective,\n    selectors: [[\"\", \"kendoGridSelectionCheckbox\", \"\"]],\n    hostVars: 1,\n    hostBindings: function SelectionCheckboxDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"type\", ctx.type);\n      }\n    },\n    inputs: {\n      itemIndex: [\"kendoGridSelectionCheckbox\", \"itemIndex\"]\n    }\n  });\n\n  __decorate([Input(\"kendoGridSelectionCheckbox\"), __metadata(\"design:type\", Number)], SelectionCheckboxDirective.prototype, \"itemIndex\", void 0);\n\n  __decorate([HostBinding('attr.type'), __metadata(\"design:type\", String)], SelectionCheckboxDirective.prototype, \"type\", void 0);\n\n  SelectionCheckboxDirective = __decorate([__metadata(\"design:paramtypes\", [SelectionService, ElementRef, Renderer2, NgZone])], SelectionCheckboxDirective);\n  return SelectionCheckboxDirective;\n})();\n\nconst columnCellIndex = (cell, cells) => {\n  let cellIndex = 0;\n\n  for (let idx = 0; idx < cells.length; idx++) {\n    if (cells[idx] === cell) {\n      return cellIndex;\n    }\n\n    if (!hasClasses(cells[idx], 'k-hierarchy-cell k-group-cell')) {\n      cellIndex++;\n    }\n  }\n};\n/**\n * @hidden\n */\n\n\nlet TableBodyComponent = /*#__PURE__*/(() => {\n  let TableBodyComponent = class TableBodyComponent {\n    constructor(detailsService, groupsService, changeNotification, editService, localization, ngZone, renderer, element, domEvents, selectionService, cellSelectionService, columnInfoService, navigationService) {\n      this.detailsService = detailsService;\n      this.groupsService = groupsService;\n      this.changeNotification = changeNotification;\n      this.editService = editService;\n      this.localization = localization;\n      this.ngZone = ngZone;\n      this.renderer = renderer;\n      this.element = element;\n      this.domEvents = domEvents;\n      this.selectionService = selectionService;\n      this.cellSelectionService = cellSelectionService;\n      this.columnInfoService = columnInfoService;\n      this.navigationService = navigationService;\n      this.columns = [];\n      this.groups = [];\n      this.skip = 0;\n      this.noRecordsText = this.localization.get('noRecords');\n      this.isLocked = false;\n      this.skipGroupDecoration = false;\n      this.showGroupFooters = false;\n      this.lockedColumnsCount = 0;\n      this.totalColumnsCount = 0;\n      this.trackBy = defaultTrackBy;\n\n      this.rowClass = () => null;\n\n      this.cellKeydownSubscription = this.navigationService.cellKeydown.subscribe(args => this.cellKeydownHandler(args));\n      this.trackByWrapper = this.trackByWrapper.bind(this);\n      this.trackByColumns = this.trackByColumns.bind(this);\n    }\n\n    get newDataItem() {\n      return this.editService.newDataItem;\n    } // Number of unlocked columns in the next table, if any\n\n\n    get unlockedColumnsCount() {\n      return this.totalColumnsCount - this.lockedColumnsCount - (this.allColumns || this.columns).length;\n    }\n\n    isAriaSelected(item, column) {\n      return this.cellSelectionService.isCellSelected(item, column) || this.isRowSelected(item) ? 'true' : 'false';\n    }\n\n    toggleRow(index, dataItem) {\n      this.detailsService.toggleRow(index, dataItem);\n      return false;\n    }\n\n    isExpanded(viewItem) {\n      return this.detailsService.isExpanded(viewItem.index, viewItem.data);\n    }\n\n    detailButtonStyles(viewItem) {\n      const expanded = this.isExpanded(viewItem);\n      return expanded ? 'k-i-minus' : 'k-i-plus';\n    }\n\n    detailButtonTitle(viewItem) {\n      const messageKey = this.isExpanded(viewItem) ? 'detailCollapse' : 'detailExpand';\n      return this.localization.get(messageKey);\n    }\n\n    isGroup(item) {\n      return item.type === 'group';\n    }\n\n    isDataItem(item) {\n      return !this.isGroup(item) && !this.isFooter(item);\n    }\n\n    isFooter(item) {\n      return item.type === 'footer';\n    }\n\n    isFooterItemInExpandedGroup(item) {\n      const footerItem = {\n        data: item.data,\n        index: item.groupIndex,\n        parentGroup: item.group.parentGroup\n      };\n      return this.isInExpandedGroup(footerItem);\n    }\n\n    isDataItemInExpandedGroup(item) {\n      const dataItem = {\n        data: item.group.data,\n        index: item.groupIndex,\n        parentGroup: item.group.parentGroup\n      };\n      return this.isInExpandedGroup(dataItem);\n    }\n\n    isInExpandedGroup(item) {\n      return this.groupsService.isInExpandedGroup(item);\n    }\n\n    isParentGroupExpanded(item) {\n      return this.groupsService.isInExpandedGroup(item.parentGroup);\n    }\n\n    isOdd(item) {\n      return item.index % 2 !== 0;\n    }\n\n    isSelectable() {\n      return this.selectable && this.selectable.enabled !== false;\n    }\n\n    isRowSelected(item) {\n      return this.selectionService.isSelected(item.index);\n    }\n\n    trackByWrapper(index, item) {\n      if (item.type === 'data') {\n        item.isEditing = this.editService.hasEdited(item.index);\n      }\n\n      return this.trackBy(index, item);\n    }\n\n    trackByColumns(index, item) {\n      return this.virtualColumns ? index : item;\n    }\n\n    ngDoCheck() {\n      if (this.hasGroupHeaderColumn) {\n        this.groupHeaderColumns = columnsToRender(this.skipGroupDecoration ? this.columns : this.columns.toArray().slice(1));\n      } else {\n        this.groupHeaderColumns = [];\n      }\n\n      if (this.isLocked) {\n        this.groupHeaderSlaveCellsCount = this.hasGroupHeaderColumn ? this.columnsContainer.nonLockedColumnsToRender.length : 1;\n      } else {\n        this.groupHeaderSlaveCellsCount = 0;\n      }\n    }\n\n    ngAfterViewChecked() {\n      if (this.rowSticky) {\n        this.applyStickyRowsStyling();\n      }\n    }\n\n    ngOnChanges(changes) {\n      if (isChanged('columns', changes, false)) {\n        this.changeNotification.notify();\n      }\n    }\n\n    logicalRowIndex(rowIndex) {\n      let pos = this.skip + rowIndex;\n\n      if (this.hasDetailTemplate) {\n        pos *= 2;\n      }\n\n      const absoluteRowIndex = 1 + pos;\n      const addRowOffset = this.editService.hasNewItem ? 1 : 0;\n      const filterRowOffset = hasFilterRow(this.filterable) ? 1 : 0;\n      const headerRowCount = this.columnInfoService.totalLevels + filterRowOffset + addRowOffset;\n      return absoluteRowIndex + headerRowCount;\n    }\n\n    addRowLogicalIndex() {\n      return this.columnInfoService.totalLevels + 1 + (hasFilterRow(this.filterable) ? 1 : 0);\n    }\n\n    logicalColIndex(column) {\n      if (!isPresent(column.leafIndex)) {\n        return -1;\n      }\n\n      return column.leafIndex + (this.hasDetailTemplate ? 1 : 0);\n    }\n\n    ngOnInit() {\n      this.ngZone.runOutsideAngular(() => {\n        const clickHandler = this.clickHandler.bind(this);\n        const mousedownSubscription = this.renderer.listen(this.element.nativeElement, 'mousedown', clickHandler);\n        const mouseupSubscription = this.renderer.listen(this.element.nativeElement, 'mouseup', clickHandler);\n        const clickSubscription = this.renderer.listen(this.element.nativeElement, 'click', clickHandler);\n        const contextmenuSubscription = this.renderer.listen(this.element.nativeElement, 'contextmenu', clickHandler);\n        const touchstartSubscription = this.renderer.listen(this.element.nativeElement, 'touchstart', clickHandler);\n        const touchendSubscription = this.renderer.listen(this.element.nativeElement, 'touchend', clickHandler);\n\n        this.clickSubscription = () => {\n          mousedownSubscription();\n          mouseupSubscription();\n          clickSubscription();\n          contextmenuSubscription();\n        };\n\n        this.touchSubscription = () => {\n          touchstartSubscription();\n          touchendSubscription();\n        };\n      });\n      let originalNoRecordText = this.localization.get('noRecords');\n      this.localization.changes.subscribe(() => {\n        if (this.noRecordsText === originalNoRecordText) {\n          this.noRecordsText = this.localization.get('noRecords');\n          originalNoRecordText = this.noRecordsText;\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      if (this.clickSubscription) {\n        this.clickSubscription();\n      }\n\n      if (this.touchSubscription) {\n        this.touchSubscription();\n      }\n\n      this.cellKeydownSubscription.unsubscribe();\n      clearTimeout(this.clickTimeout);\n    }\n\n    isEditingCell(index, column) {\n      return this.editService.isEditing() && this.editService.isEditedColumn(index, column);\n    }\n\n    isEditingRow(index) {\n      return this.editService.isEditing() && this.editService.hasEdited(index);\n    }\n\n    get hasGroupHeaderColumn() {\n      return this.columnsContainer.hasGroupHeaderColumn;\n    }\n\n    get columnsContainer() {\n      return this.columnInfoService.columnsContainer;\n    }\n\n    get columnsSpan() {\n      return columnsSpan(this.columns);\n    }\n\n    get allColumnsSpan() {\n      return columnsSpan(this.allColumns || this.columns);\n    }\n\n    get colSpan() {\n      return this.columnsSpan + this.groups.length + (this.hasDetailTemplate ? 1 : 0);\n    }\n\n    get footerColumns() {\n      return this.isLocked ? this.columnsContainer.lockedColumnsToRender : this.columnsContainer.nonLockedColumnsToRender;\n    }\n\n    showGroupHeader(item) {\n      return !item.data.skipHeader;\n    }\n\n    addStickyColumnStyles(column) {\n      const stickyStyles = this.columnInfoService.stickyColumnsStyles(column);\n      return Object.assign({}, column.style, stickyStyles);\n    }\n\n    resizeHandler() {\n      this.applyStickyRowsStyling();\n    }\n\n    get hasDetailTemplate() {\n      return isPresent(this.detailTemplate);\n    }\n\n    clickHandler(eventArg) {\n      const element = this.element.nativeElement;\n      const target = this.eventTarget(eventArg);\n      let cell, row, body, gridElement;\n      let currentTarget = target;\n\n      do {\n        cell = closest(currentTarget, matchesNodeName('td'));\n        row = closest(cell, matchesNodeName('tr'));\n        body = closest(row, matchesNodeName('tbody'));\n        currentTarget = body;\n        gridElement = closestInScope(currentTarget, matchesClasses('k-grid'), element);\n      } while (body && body !== element && !gridElement);\n\n      if (cell && !hasClasses(cell, NON_DATA_CELL_CLASSES) && !hasClasses(row, NON_DATA_ROW_CLASSES) && body === element && !gridElement) {\n        this.editService.preventCellClose();\n        const focusable = target !== cell && isFocusableWithTabKey(target, false);\n\n        if (!focusable && !matchesNodeName('label')(target) && !hasClasses(target, IGNORE_TARGET_CLASSSES) && !closestInScope(target, matchesClasses(IGNORE_CONTAINER_CLASSES), cell)) {\n          const args = this.cellClickArgs(cell, row, eventArg);\n\n          if (eventArg.type === 'mousedown' || eventArg.type === 'touchstart') {\n            this.domEvents.cellMousedown.emit(args);\n          } else if (eventArg.type === 'mouseup' || eventArg.type === 'touchend') {\n            this.domEvents.cellMouseup.emit(args);\n          } else {\n            if (args.isEditedColumn || !this.editService.closeCell(eventArg)) {\n              if (eventArg.type === 'click') {\n                this.clickTimeout = setTimeout(() => {\n                  this.emitCellClick(args);\n                }, 0);\n              } else {\n                this.emitCellClick(args);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    emitCellClick(args) {\n      this.domEvents.cellClick.emit(Object.assign(args, {\n        isEdited: args.isEditedRow || args.isEditedColumn\n      }));\n    }\n\n    cellKeydownHandler(args) {\n      if (args.keyCode === Keys.Enter) {\n        this.clickHandler(args);\n      }\n    }\n\n    cellClickArgs(cell, row, eventArg) {\n      const index = columnCellIndex(cell, row.cells);\n      const column = this.columns.toArray()[index];\n      const columnIndex = this.lockedColumnsCount + index;\n      let rowIndex = row.getAttribute('data-kendo-grid-item-index');\n      rowIndex = rowIndex ? parseInt(rowIndex, 10) : -1;\n      const dataItem = rowIndex === -1 ? this.editService.newDataItem : this.data.at(rowIndex - this.skip);\n      const isEditedColumn = this.editService.isEditedColumn(rowIndex, column);\n      const isEditedRow = this.editService.isEdited(rowIndex);\n      const type = eventArg.type === 'keydown' ? 'click' : eventArg.type;\n      return {\n        column: column,\n        columnIndex: columnIndex,\n        dataItem: dataItem,\n        isEditedColumn: isEditedColumn,\n        isEditedRow: isEditedRow,\n        originalEvent: eventArg,\n        rowIndex: rowIndex,\n        type: type\n      };\n    }\n\n    eventTarget(args) {\n      if (args.type === 'touchend') {\n        const touch = args.changedTouches[0];\n        return document.elementFromPoint(touch.clientX, touch.clientY);\n      }\n\n      return args.target;\n    }\n\n    applyStickyRowsStyling() {\n      const stickyRows = nodesToArray(this.element.nativeElement.querySelectorAll('.k-grid-row-sticky'));\n      const length = stickyRows.length;\n\n      if (length) {\n        let accumulatedHeight = 0;\n        const stickyRowsOffsets = [];\n        stickyRows.forEach(row => {\n          const rowHeight = row.getBoundingClientRect().height;\n          stickyRowsOffsets.push({\n            accumulatedHeight,\n            rowHeight\n          });\n          accumulatedHeight += rowHeight;\n        });\n        stickyRows.forEach((row, index) => {\n          this.renderer.setStyle(row, 'top', `${stickyRowsOffsets[index].accumulatedHeight}px`);\n          this.renderer.setStyle(row, 'bottom', `${accumulatedHeight - stickyRowsOffsets[index].accumulatedHeight - stickyRowsOffsets[index].rowHeight}px`);\n        });\n      }\n    }\n\n  };\n\n  TableBodyComponent.ɵfac = function TableBodyComponent_Factory(t) {\n    return new (t || TableBodyComponent)(ɵngcc0.ɵɵdirectiveInject(DetailsService), ɵngcc0.ɵɵdirectiveInject(GroupsService), ɵngcc0.ɵɵdirectiveInject(ChangeNotificationService), ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DomEventsService), ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(CellSelectionService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService), ɵngcc0.ɵɵdirectiveInject(NavigationService));\n  };\n\n  TableBodyComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TableBodyComponent,\n    selectors: [[\"\", \"kendoGridTableBody\", \"\"]],\n    inputs: {\n      columns: \"columns\",\n      groups: \"groups\",\n      skip: \"skip\",\n      noRecordsText: \"noRecordsText\",\n      isLocked: \"isLocked\",\n      skipGroupDecoration: \"skipGroupDecoration\",\n      showGroupFooters: \"showGroupFooters\",\n      lockedColumnsCount: \"lockedColumnsCount\",\n      totalColumnsCount: \"totalColumnsCount\",\n      trackBy: \"trackBy\",\n      rowClass: \"rowClass\",\n      allColumns: \"allColumns\",\n      detailTemplate: \"detailTemplate\",\n      noRecordsTemplate: \"noRecordsTemplate\",\n      data: \"data\",\n      selectable: \"selectable\",\n      filterable: \"filterable\",\n      isLoading: \"isLoading\",\n      isVirtual: \"isVirtual\",\n      loadingTemplate: \"loadingTemplate\",\n      virtualColumns: \"virtualColumns\",\n      rowSticky: \"rowSticky\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    attrs: _c184,\n    decls: 4,\n    vars: 5,\n    consts: [[3, \"ngIf\"], [\"class\", \"k-grid-norecords\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [3, \"resize\", 4, \"ngIf\"], [\"kendoGridLogicalRow\", \"\", 1, \"k-grid-add-row\", \"k-grid-edit-row\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"], [\"class\", \"k-hierarchy-cell\", \"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 3, \"logicalRowIndex\", \"logicalColIndex\", 4, \"ngIf\"], [\"kendoGridCell\", \"\", \"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", 3, \"rowIndex\", \"columnIndex\", \"isNew\", \"column\", \"dataItem\", \"k-grid-content-sticky\", \"ngClass\", \"left\", \"ngStyle\", \"logicalRowIndex\", \"logicalColIndex\", \"colSpan\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"k-group-cell\", \"role\", \"presentation\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\", 1, \"k-group-cell\"], [\"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 1, \"k-hierarchy-cell\", 3, \"logicalRowIndex\", \"logicalColIndex\"], [\"kendoGridCell\", \"\", \"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", 3, \"rowIndex\", \"columnIndex\", \"isNew\", \"column\", \"dataItem\", \"ngClass\", \"ngStyle\", \"logicalRowIndex\", \"logicalColIndex\", \"colSpan\"], [1, \"k-grid-norecords\"], [3, \"ngIf\", \"templateContext\"], [4, \"ngIf\"], [\"kendoGridGroupHeader\", \"\", \"kendoGridLogicalRow\", \"\", 3, \"columns\", \"groups\", \"item\", \"hasDetails\", \"skipGroupDecoration\", \"hasGroupHeaderColumn\", \"groupHeaderColumns\", \"rowIndex\", \"totalColumnsCount\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", 4, \"ngIf\"], [\"kendoGridLogicalRow\", \"\", 3, \"dataRowIndex\", \"dataItem\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", \"k-grid-row-sticky\", \"ngClass\", \"k-alt\", \"k-master-row\", \"k-grid-edit-row\", \"k-state-selected\", 4, \"ngIf\"], [\"class\", \"k-detail-row\", \"kendoGridLogicalRow\", \"\", 3, \"k-alt\", \"dataRowIndex\", \"dataItem\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", 4, \"ngIf\"], [\"class\", \"k-group-footer\", \"kendoGridLogicalRow\", \"\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", 4, \"ngIf\"], [\"kendoGridGroupHeader\", \"\", \"kendoGridLogicalRow\", \"\", 3, \"columns\", \"groups\", \"item\", \"hasDetails\", \"skipGroupDecoration\", \"hasGroupHeaderColumn\", \"groupHeaderColumns\", \"rowIndex\", \"totalColumnsCount\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"], [\"kendoGridLogicalRow\", \"\", 3, \"dataRowIndex\", \"dataItem\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", \"ngClass\"], [\"class\", \"k-hierarchy-cell\", \"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"dataItem\", \"detailExpandCell\", 4, \"ngIf\"], [\"kendoGridCell\", \"\", \"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", 3, \"rowIndex\", \"columnIndex\", \"column\", \"dataItem\", \"isLoading\", \"isVirtual\", \"loadingTemplate\", \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"colIndex\", \"colSpan\", \"k-grid-content-sticky\", \"k-touch-action-none\", \"k-touch-action-auto\", \"ngClass\", \"k-grid-edit-cell\", \"ngStyle\", \"k-state-selected\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 1, \"k-hierarchy-cell\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"dataItem\", \"detailExpandCell\"], [\"class\", \"k-icon\", \"href\", \"#\", \"tabindex\", \"-1\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"tabindex\", \"-1\", 1, \"k-icon\", 3, \"ngClass\", \"click\"], [\"kendoGridCell\", \"\", \"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", 3, \"rowIndex\", \"columnIndex\", \"column\", \"dataItem\", \"isLoading\", \"isVirtual\", \"loadingTemplate\", \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"colIndex\", \"colSpan\", \"ngClass\", \"ngStyle\"], [\"kendoGridLogicalRow\", \"\", 1, \"k-detail-row\", 3, \"dataRowIndex\", \"dataItem\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\"], [\"class\", \"k-group-cell\", 4, \"ngFor\", \"ngForOf\"], [1, \"k-hierarchy-cell\"], [\"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", \"aria-selected\", \"false\", 1, \"k-detail-cell\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"dataItem\", \"colIndex\", \"colSpan\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"k-group-cell\"], [\"kendoGridLogicalRow\", \"\", 1, \"k-group-footer\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"], [\"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\"], [3, \"templateContext\"], [3, \"resize\"]],\n    template: function TableBodyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TableBodyComponent_ng_template_0_Template, 4, 8, \"ng-template\", 0);\n        ɵngcc0.ɵɵtemplate(1, TableBodyComponent_tr_1_Template, 4, 6, \"tr\", 1);\n        ɵngcc0.ɵɵtemplate(2, TableBodyComponent_ng_template_2_Template, 4, 4, \"ng-template\", 2);\n        ɵngcc0.ɵɵtemplate(3, TableBodyComponent_kendo_resize_sensor_3_Template, 1, 0, \"kendo-resize-sensor\", 3);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.editService.hasNewItem);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", (ctx.data == null ? null : ctx.data.length) === 0 || ctx.data == null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.data)(\"ngForTrackBy\", ctx.trackByWrapper);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.rowSticky);\n      }\n    },\n    directives: function () {\n      return [ɵngcc5.NgIf, ɵngcc5.NgForOf, LogicalRowDirective, LogicalCellDirective, CellComponent, ɵngcc5.NgClass, ɵngcc5.NgStyle, TemplateContextDirective, GroupHeaderComponent, ɵngcc5.NgTemplateOutlet, ɵngcc2.ResizeSensorComponent];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], TableBodyComponent.prototype, \"columns\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], TableBodyComponent.prototype, \"allColumns\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], TableBodyComponent.prototype, \"groups\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", DetailTemplateDirective)], TableBodyComponent.prototype, \"detailTemplate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", NoRecordsTemplateDirective)], TableBodyComponent.prototype, \"noRecordsTemplate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], TableBodyComponent.prototype, \"data\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], TableBodyComponent.prototype, \"skip\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], TableBodyComponent.prototype, \"selectable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], TableBodyComponent.prototype, \"filterable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], TableBodyComponent.prototype, \"noRecordsText\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], TableBodyComponent.prototype, \"isLocked\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], TableBodyComponent.prototype, \"isLoading\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], TableBodyComponent.prototype, \"isVirtual\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", TemplateRef)], TableBodyComponent.prototype, \"loadingTemplate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], TableBodyComponent.prototype, \"skipGroupDecoration\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], TableBodyComponent.prototype, \"showGroupFooters\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], TableBodyComponent.prototype, \"lockedColumnsCount\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], TableBodyComponent.prototype, \"totalColumnsCount\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], TableBodyComponent.prototype, \"virtualColumns\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Function)], TableBodyComponent.prototype, \"trackBy\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Function)], TableBodyComponent.prototype, \"rowSticky\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Function)], TableBodyComponent.prototype, \"rowClass\", void 0);\n\n  TableBodyComponent = __decorate([__metadata(\"design:paramtypes\", [DetailsService, GroupsService, ChangeNotificationService, EditService, LocalizationService, NgZone, Renderer2, ElementRef, DomEventsService, SelectionService, CellSelectionService, ColumnInfoService, NavigationService])], TableBodyComponent);\n  /**\n   * @hidden\n   */\n\n  return TableBodyComponent;\n})();\nlet CellComponent = /*#__PURE__*/(() => {\n  let CellComponent = class CellComponent {\n    constructor(editService, idService, localizationService, cellContext) {\n      this.editService = editService;\n      this.idService = idService;\n      this.localizationService = localizationService;\n      this.cellContext = cellContext;\n      this.isNew = false;\n      this.isLoading = false;\n      this.isVirtual = false;\n      this._templateContext = {};\n      this._editTemplateContext = {};\n    }\n\n    get commandCellClass() {\n      return this.isCommand(this.column);\n    }\n\n    set rowIndex(index) {\n      this._rowIndex = index;\n      this.updateCellContext();\n    }\n\n    get rowIndex() {\n      return this._rowIndex;\n    }\n\n    get isEdited() {\n      if (!(this.editService.isEditing() || this.isNew) || !this.isColumnEditable) {\n        return false;\n      }\n\n      const editContext = this.editService.columnContext(this.rowIndex, this.column);\n      return this.isFieldEditable(editContext, this.column);\n    }\n\n    get showLoading() {\n      return this.isVirtual && this.isLoading;\n    }\n\n    get formGroup() {\n      return this.editService.context(this.rowIndex).group;\n    }\n\n    get templateContext() {\n      return this._templateContext;\n    }\n\n    get editTemplateContext() {\n      this._editTemplateContext.$implicit = this.formGroup;\n      this._editTemplateContext.isNew = this.isNew;\n      this._editTemplateContext.column = this.column;\n      this._editTemplateContext.dataItem = this.dataItem;\n      this._editTemplateContext.formGroup = this.formGroup;\n      this._editTemplateContext.rowIndex = this.rowIndex;\n      return this._editTemplateContext;\n    }\n\n    get format() {\n      if (isColumnComponent(this.column) && !isNullOrEmptyString(this.column.format)) {\n        return extractFormat(this.column.format);\n      }\n\n      return undefined;\n    }\n\n    get isBoundColumn() {\n      return this.column.field && !this.column.templateRef;\n    }\n\n    get isCheckboxColumn() {\n      return isCheckboxColumn(this.column) && !this.column.templateRef;\n    }\n\n    get selectionCheckboxId() {\n      return this.idService.selectionCheckboxId(this.rowIndex);\n    }\n\n    get selectionCheckboxLabel() {\n      return this.localizationService.get('selectionCheckboxLabel');\n    }\n\n    get isSpanColumn() {\n      return isSpanColumn(this.column) && !this.column.templateRef;\n    }\n\n    get childColumns() {\n      return columnsToRender([this.column]);\n    }\n\n    get isColumnEditable() {\n      if (!this.column || this.isCommand(this.column)) {\n        return false;\n      }\n\n      return this.column.editable !== false;\n    }\n\n    ngDoCheck() {\n      this.updateCellContext();\n    }\n\n    ngOnChanges(_changes) {\n      this.updateTemplateContext();\n    }\n\n    ngAfterContentChecked() {\n      this.updateTemplateContext();\n    }\n\n    isCommand(column) {\n      return column instanceof CommandColumnComponent;\n    }\n\n    isFieldEditable(editContext, column) {\n      if (!isPresent(editContext)) {\n        return false;\n      }\n\n      if (isPresent(column.editTemplate)) {\n        return true;\n      }\n\n      return isPresent(editContext.group) && isPresent(editContext.group.get(column.field));\n    }\n\n    updateCellContext() {\n      if (this.cellContext) {\n        this.cellContext.rowIndex = this._rowIndex;\n      }\n    }\n\n    updateTemplateContext() {\n      if (!this.column.templateRef) {\n        return;\n      }\n\n      const context = this._templateContext;\n      context.isNew = this.isNew;\n      context.column = this.column;\n      context.dataItem = this.dataItem;\n      context.rowIndex = this.rowIndex;\n      context.columnIndex = this.columnIndex;\n      context.$implicit = this.dataItem;\n    }\n\n  };\n\n  CellComponent.ɵfac = function CellComponent_Factory(t) {\n    return new (t || CellComponent)(ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(IdService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT, 8));\n  };\n\n  CellComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CellComponent,\n    selectors: [[\"\", \"kendoGridCell\", \"\"]],\n    hostVars: 2,\n    hostBindings: function CellComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-command-cell\", ctx.commandCellClass);\n      }\n    },\n    inputs: {\n      isNew: \"isNew\",\n      isLoading: \"isLoading\",\n      isVirtual: \"isVirtual\",\n      rowIndex: \"rowIndex\",\n      column: \"column\",\n      columnIndex: \"columnIndex\",\n      loadingTemplate: \"loadingTemplate\",\n      dataItem: \"dataItem\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    attrs: _c189,\n    decls: 3,\n    vars: 3,\n    consts: [[3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [3, \"ngIf\", \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"k-checkbox\", 3, \"kendoGridSelectionCheckbox\"], [4, \"ngIf\"], [\"class\", \"k-skeleton-text k-skeleton\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"k-skeleton-text\", \"k-skeleton\"], [3, \"ngSwitch\", 4, \"ngIf\"], [\"kendoGridFocusable\", \"\", 3, \"format\", \"formControl\", 4, \"ngSwitchCase\"], [\"type\", \"checkbox\", \"class\", \"k-checkbox\", \"kendoGridFocusable\", \"\", 3, \"formControl\", 4, \"ngSwitchCase\"], [\"type\", \"text\", \"class\", \"k-textbox\", \"kendoGridFocusable\", \"\", 3, \"formControl\", 4, \"ngSwitchDefault\"], [\"kendoGridFocusable\", \"\", 3, \"format\", \"formControl\"], [\"type\", \"checkbox\", \"kendoGridFocusable\", \"\", 1, \"k-checkbox\", 3, \"formControl\"], [\"type\", \"text\", \"kendoGridFocusable\", \"\", 1, \"k-textbox\", 3, \"formControl\"]],\n    template: function CellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CellComponent_ng_container_1_Template, 4, 2, \"ng-container\", 1);\n        ɵngcc0.ɵɵtemplate(2, CellComponent_ng_container_2_Template, 3, 2, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementContainerEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.isEdited);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n      }\n    },\n    directives: [ɵngcc5.NgSwitch, ɵngcc5.NgSwitchCase, ɵngcc5.NgIf, ɵngcc5.NgTemplateOutlet, ɵngcc5.NgForOf, FocusableDirective, SelectionCheckboxDirective, ɵngcc5.NgSwitchDefault, ɵngcc6.NumericTextBoxComponent, ɵngcc7.NgControlStatus, ɵngcc7.FormControlDirective, ɵngcc9.DatePickerComponent, ɵngcc7.CheckboxControlValueAccessor, ɵngcc7.DefaultValueAccessor],\n    pipes: [FieldAccessorPipe],\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-command-cell'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], CellComponent.prototype, \"commandCellClass\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], CellComponent.prototype, \"column\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], CellComponent.prototype, \"columnIndex\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], CellComponent.prototype, \"isNew\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], CellComponent.prototype, \"isLoading\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], CellComponent.prototype, \"isVirtual\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", TemplateRef)], CellComponent.prototype, \"loadingTemplate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], CellComponent.prototype, \"rowIndex\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], CellComponent.prototype, \"dataItem\", void 0);\n\n  CellComponent = __decorate([__param(3, Optional()), __param(3, Inject(CELL_CONTEXT)), __metadata(\"design:paramtypes\", [EditService, IdService, LocalizationService, Object])], CellComponent);\n  /**\n   * Represents the `edit` command of the Grid. You can apply this directive to any `button`\n   * element inside a [CommandColumnComponent]({% slug api_grid_commandcolumncomponent %}).\n   * When an associated button with the directive is clicked, the\n   * [edit]({% slug api_grid_gridcomponent %}#toc-edit) event\n   * is triggered ([see example]({% slug editing_grid %})).\n   *\n   * > When the row is in the edit mode, the button with `kendoGridEditCommand` is automatically hidden.\n   *\n   * @example\n   * ```html-no-run\n   * <kendo-grid>\n   *   <kendo-grid-command-column title=\"command\">\n   *     <ng-template kendoGridCellTemplate>\n   *       <button kendoGridEditCommand class=\"k-primary\">Edit</button>\n   *     </ng-template>\n   *   </kendo-grid-command-column>\n   * </kendo-grid>\n   * ```\n   *\n   */\n\n  return CellComponent;\n})();\nlet EditCommandDirective = /*#__PURE__*/(() => {\n  let EditCommandDirective = class EditCommandDirective extends Button {\n    constructor(editService, cellContext, element, renderer, localization, ngZone) {\n      super(element, renderer, null, localization, ngZone);\n      this.editService = editService;\n      this.cellContext = cellContext;\n      /**\n       * @hidden\n       */\n\n      this.commandClass = true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get visible() {\n      return this.isEdited ? 'none' : '';\n    }\n    /**\n     * @hidden\n     */\n\n\n    onClick(e) {\n      e.preventDefault();\n      this.editService.beginEdit(this.rowIndex);\n    }\n\n    ngDoCheck() {\n      if (this.cellContext) {\n        this.rowIndex = this.cellContext.rowIndex;\n        this.isEdited = this.editService.isEdited(this.rowIndex);\n      }\n    }\n\n  };\n\n  EditCommandDirective.ɵfac = function EditCommandDirective_Factory(t) {\n    return new (t || EditCommandDirective)(ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  EditCommandDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: EditCommandDirective,\n    selectors: [[\"\", \"kendoGridEditCommand\", \"\"]],\n    hostVars: 4,\n    hostBindings: function EditCommandDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function EditCommandDirective_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.visible);\n        ɵngcc0.ɵɵclassProp(\"k-grid-edit-command\", ctx.commandClass);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([HostBinding('style.display'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], EditCommandDirective.prototype, \"visible\", null);\n\n  __decorate([HostBinding('class.k-grid-edit-command'), __metadata(\"design:type\", Boolean)], EditCommandDirective.prototype, \"commandClass\", void 0);\n\n  __decorate([HostListener('click', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], EditCommandDirective.prototype, \"onClick\", null);\n\n  EditCommandDirective = __decorate([__param(1, Inject(CELL_CONTEXT)), __metadata(\"design:paramtypes\", [EditService, Object, ElementRef, Renderer2, LocalizationService, NgZone])], EditCommandDirective);\n  /**\n   * Represents the `cancel` command of the Grid. You can apply this directive to any `button`\n   * element inside a [CommandColumnComponent]({% slug api_grid_commandcolumncomponent %}).\n   * When an associated button with the directive is clicked, the\n   * [cancel]({% slug api_grid_gridcomponent %}#toc-cancel) event\n   * is triggered ([see example]({% slug editing_grid %})).\n   *\n   * > When the row is not in the edit mode, the button with the `kendoGridCancelCommand` is automatically hidden.\n   *\n   * @example\n   * ```html-no-run\n   * <kendo-grid>\n   *   <kendo-grid-command-column title=\"command\">\n   *     <ng-template kendoGridCellTemplate>\n   *       <button kendoGridCancelCommand>Cancel changes</button>\n   *     </ng-template>\n   *   </kendo-grid-command-column>\n   * </kendo-grid>\n   * ```\n   *\n   * You can control the content of the button based on the state of the row.\n   *\n   * @example\n   * ```html-no-run\n   * <kendo-grid>\n   *   <kendo-grid-command-column title=\"command\">\n   *     <ng-template kendoGridCellTemplate let-isNew=\"isNew\">\n   *       <button kendoGridCancelCommand>{{isNew ? 'Discard' : 'Cancel changes'}}</button>\n   *     </ng-template>\n   *   </kendo-grid-command-column>\n   * </kendo-grid>\n   * ```\n   */\n\n  return EditCommandDirective;\n})();\nlet CancelCommandDirective = /*#__PURE__*/(() => {\n  let CancelCommandDirective = class CancelCommandDirective extends Button {\n    constructor(editService, cellContext, element, renderer, localization, ngZone) {\n      super(element, renderer, null, localization, ngZone);\n      this.editService = editService;\n      this.cellContext = cellContext;\n      /**\n       * @hidden\n       */\n\n      this.commandClass = true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get visible() {\n      return !this.isEdited ? 'none' : '';\n    }\n    /**\n     * @hidden\n     */\n\n\n    onClick(e) {\n      e.preventDefault();\n\n      if (this.isEdited) {\n        this.editService.endEdit(this.rowIndex);\n      }\n    }\n\n    ngDoCheck() {\n      if (this.cellContext) {\n        this.rowIndex = this.cellContext.rowIndex;\n        this.isEdited = this.editService.isEdited(this.rowIndex);\n      }\n    }\n\n  };\n\n  CancelCommandDirective.ɵfac = function CancelCommandDirective_Factory(t) {\n    return new (t || CancelCommandDirective)(ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  CancelCommandDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: CancelCommandDirective,\n    selectors: [[\"\", \"kendoGridCancelCommand\", \"\"]],\n    hostVars: 4,\n    hostBindings: function CancelCommandDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CancelCommandDirective_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.visible);\n        ɵngcc0.ɵɵclassProp(\"k-grid-cancel-command\", ctx.commandClass);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([HostBinding('style.display'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], CancelCommandDirective.prototype, \"visible\", null);\n\n  __decorate([HostBinding('class.k-grid-cancel-command'), __metadata(\"design:type\", Boolean)], CancelCommandDirective.prototype, \"commandClass\", void 0);\n\n  __decorate([HostListener('click', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], CancelCommandDirective.prototype, \"onClick\", null);\n\n  CancelCommandDirective = __decorate([__param(1, Inject(CELL_CONTEXT)), __metadata(\"design:paramtypes\", [EditService, Object, ElementRef, Renderer2, LocalizationService, NgZone])], CancelCommandDirective);\n  /**\n   * Represents the `save` command of the Grid. You can apply this directive to any `button`\n   * element inside a [CommandColumnComponent]({% slug api_grid_commandcolumncomponent %}).\n   * When an associated button with the directive is clicked, the\n   * [save]({% slug api_grid_gridcomponent %}#toc-save) event\n   * is triggered ([see example]({% slug editing_grid %})).\n   *\n   * > When the row is not in the edit mode, the button with `kendoGridSaveCommand` is automatically hidden.\n   *\n   * @example\n   * ```html-no-run\n   * <kendo-grid>\n   *   <kendo-grid-command-column title=\"command\">\n   *     <ng-template kendoGridCellTemplate>\n   *       <button kendoGridSaveCommand>Save changes</button>\n   *     </ng-template>\n   *   </kendo-grid-command-column>\n   * </kendo-grid>\n   * ```\n   *\n   * You can control the content of the button based on the state of the row.\n   *\n   * @example\n   * ```html-no-run\n   * <kendo-grid>\n   *   <kendo-grid-command-column title=\"command\">\n   *     <ng-template kendoGridCellTemplate let-isNew=\"isNew\">\n   *       <button kendoGridSaveCommand>{{isNew ? 'Add' : 'Update'}}</button>\n   *     </ng-template>\n   *   </kendo-grid-command-column>\n   * </kendo-grid>\n   * ```\n   */\n\n  return CancelCommandDirective;\n})();\nlet SaveCommandDirective = /*#__PURE__*/(() => {\n  let SaveCommandDirective = class SaveCommandDirective extends Button {\n    constructor(editService, cellContext, element, renderer, localization, ngZone) {\n      super(element, renderer, null, localization, ngZone);\n      this.editService = editService;\n      this.cellContext = cellContext;\n      /**\n       * @hidden\n       */\n\n      this.commandClass = true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get visible() {\n      return !this.isEdited ? 'none' : '';\n    }\n    /**\n     * @hidden\n     */\n\n\n    onClick(e) {\n      e.preventDefault();\n\n      if (this.isEdited) {\n        this.editService.save(this.rowIndex);\n      }\n    }\n\n    ngDoCheck() {\n      if (this.cellContext) {\n        this.rowIndex = this.cellContext.rowIndex;\n        this.isEdited = this.editService.isEdited(this.rowIndex);\n      }\n    }\n\n  };\n\n  SaveCommandDirective.ɵfac = function SaveCommandDirective_Factory(t) {\n    return new (t || SaveCommandDirective)(ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  SaveCommandDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: SaveCommandDirective,\n    selectors: [[\"\", \"kendoGridSaveCommand\", \"\"]],\n    hostVars: 4,\n    hostBindings: function SaveCommandDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function SaveCommandDirective_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.visible);\n        ɵngcc0.ɵɵclassProp(\"k-grid-save-command\", ctx.commandClass);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([HostBinding('style.display'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], SaveCommandDirective.prototype, \"visible\", null);\n\n  __decorate([HostBinding('class.k-grid-save-command'), __metadata(\"design:type\", Boolean)], SaveCommandDirective.prototype, \"commandClass\", void 0);\n\n  __decorate([HostListener('click', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], SaveCommandDirective.prototype, \"onClick\", null);\n\n  SaveCommandDirective = __decorate([__param(1, Inject(CELL_CONTEXT)), __metadata(\"design:paramtypes\", [EditService, Object, ElementRef, Renderer2, LocalizationService, NgZone])], SaveCommandDirective);\n  /**\n   * Represents the `remove` command of the Grid. You can apply this directive to any `button` element\n   * inside a [CommandColumnComponent]({% slug api_grid_commandcolumncomponent %}).\n   * When an associated button with the directive is clicked, the\n   * [remove event]({% slug api_grid_gridcomponent %}#toc-remove)\n   * is triggered ([see example]({% slug editing_reactive_forms_grid %})).\n   *\n   * > When the row is in the edit mode, the button with the `kendoGridRemoveCommand` is automatically hidden.\n   *\n   * @example\n   * ```html-no-run\n   * <kendo-grid>\n   *   <kendo-grid-command-column title=\"command\">\n   *     <ng-template kendoGridCellTemplate>\n   *       <button kendoGridRemoveCommand>Remove row</button>\n   *     </ng-template>\n   *   </kendo-grid-command-column>\n   * </kendo-grid>\n   * ```\n   */\n\n  return SaveCommandDirective;\n})();\nlet RemoveCommandDirective = /*#__PURE__*/(() => {\n  let RemoveCommandDirective = class RemoveCommandDirective extends Button {\n    constructor(editService, cellContext, element, renderer, localization, ngZone) {\n      super(element, renderer, null, localization, ngZone);\n      this.editService = editService;\n      this.cellContext = cellContext;\n      /**\n       * @hidden\n       */\n\n      this.commandClass = true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get visible() {\n      return this.isEdited ? 'none' : '';\n    }\n    /**\n     * @hidden\n     */\n\n\n    onClick(e) {\n      e.preventDefault();\n      this.editService.remove(this.rowIndex);\n    }\n\n    ngDoCheck() {\n      if (this.cellContext) {\n        this.rowIndex = this.cellContext.rowIndex;\n        this.isEdited = this.editService.isEdited(this.rowIndex);\n      }\n    }\n\n  };\n\n  RemoveCommandDirective.ɵfac = function RemoveCommandDirective_Factory(t) {\n    return new (t || RemoveCommandDirective)(ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  RemoveCommandDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: RemoveCommandDirective,\n    selectors: [[\"\", \"kendoGridRemoveCommand\", \"\"]],\n    hostVars: 4,\n    hostBindings: function RemoveCommandDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function RemoveCommandDirective_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.visible);\n        ɵngcc0.ɵɵclassProp(\"k-grid-remove-command\", ctx.commandClass);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([HostBinding('style.display'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], RemoveCommandDirective.prototype, \"visible\", null);\n\n  __decorate([HostBinding('class.k-grid-remove-command'), __metadata(\"design:type\", Boolean)], RemoveCommandDirective.prototype, \"commandClass\", void 0);\n\n  __decorate([HostListener('click', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], RemoveCommandDirective.prototype, \"onClick\", null);\n\n  RemoveCommandDirective = __decorate([__param(1, Inject(CELL_CONTEXT)), __metadata(\"design:paramtypes\", [EditService, Object, ElementRef, Renderer2, LocalizationService, NgZone])], RemoveCommandDirective);\n  /**\n   * Represents the command for adding a new item to the Grid. You can apply this directive to any\n   * `button` element inside a [ToolbarTemplate]({% slug api_grid_commandcolumncomponent %}).\n   * When an associated button with the directive is clicked, the\n   * [add]({% slug api_grid_gridcomponent %}#toc-add) event is triggered\n   * ([see example]({% slug editing_grid %})).\n   *\n   * @example\n   * ```html-no-run\n   * <kendo-grid>\n   *    <ng-template kendoGridToolbarTemplate>\n   *       <button kendoGridAddCommand>Add new</button>\n   *    </ng-template>\n   * </kendo-grid>\n   * ```\n   */\n\n  return RemoveCommandDirective;\n})();\nlet AddCommandDirective = /*#__PURE__*/(() => {\n  let AddCommandDirective = class AddCommandDirective extends Button {\n    constructor(editService, element, renderer, localization, ngZone) {\n      super(element, renderer, null, localization, ngZone);\n      this.editService = editService;\n    }\n    /**\n     * @hidden\n     */\n\n\n    onClick(e) {\n      e.preventDefault();\n      this.editService.beginAdd();\n    }\n    /**\n     * @hidden\n     */\n\n\n    get commandClass() {\n      return true;\n    }\n\n  };\n\n  AddCommandDirective.ɵfac = function AddCommandDirective_Factory(t) {\n    return new (t || AddCommandDirective)(ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  AddCommandDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AddCommandDirective,\n    selectors: [[\"\", \"kendoGridAddCommand\", \"\"]],\n    hostVars: 2,\n    hostBindings: function AddCommandDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function AddCommandDirective_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-grid-add-command\", ctx.commandClass);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([HostListener('click', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], AddCommandDirective.prototype, \"onClick\", null);\n\n  __decorate([HostBinding('class.k-grid-add-command'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], AddCommandDirective.prototype, \"commandClass\", null);\n\n  AddCommandDirective = __decorate([__metadata(\"design:paramtypes\", [EditService, ElementRef, Renderer2, LocalizationService, NgZone])], AddCommandDirective);\n  return AddCommandDirective;\n})();\nconst exported$1 = [CommandColumnComponent, CheckboxColumnComponent, SelectionCheckboxDirective, CellTemplateDirective, EditTemplateDirective, TableBodyComponent, NoRecordsTemplateDirective, CellComponent, EditCommandDirective, CancelCommandDirective, SaveCommandDirective, RemoveCommandDirective, AddCommandDirective, CellLoadingTemplateDirective];\nconst importedModules$3 = [CommonModule, ReactiveFormsModule, FormsModule, SharedModule, GroupModule, NumericTextBoxModule, DatePickerModule, ResizeSensorModule];\n/**\n * @hidden\n */\n\nlet BodyModule = /*#__PURE__*/(() => {\n  let BodyModule = class BodyModule {\n    static exports() {\n      return [CommandColumnComponent, CheckboxColumnComponent, SelectionCheckboxDirective, CellTemplateDirective, NoRecordsTemplateDirective, EditTemplateDirective, EditCommandDirective, CancelCommandDirective, SaveCommandDirective, RemoveCommandDirective, AddCommandDirective, CellLoadingTemplateDirective];\n    }\n\n  };\n\n  BodyModule.ɵfac = function BodyModule_Factory(t) {\n    return new (t || BodyModule)();\n  };\n\n  BodyModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: BodyModule\n  });\n  BodyModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[...importedModules$3]]\n  });\n  /**\n   * @hidden\n   */\n\n  return BodyModule;\n})();\nlet FooterComponent = /*#__PURE__*/(() => {\n  let FooterComponent = class FooterComponent {\n    constructor(columnInfoService) {\n      this.columnInfoService = columnInfoService;\n      this.columns = [];\n      this.groups = [];\n      this.lockedColumnsCount = 0;\n      this.logicalRowIndex = 0;\n    }\n\n    get footerClass() {\n      return !this.scrollable;\n    }\n\n    get columnsToRender() {\n      return columnsToRender(this.columns || []);\n    }\n\n    logicalColumnIndex(column) {\n      const index = column.leafIndex;\n\n      if (isPresent(index)) {\n        return index + (isPresent(this.detailTemplate) ? 1 : 0);\n      }\n\n      return -1;\n    }\n\n    addStickyStyles(column) {\n      const stickyStyles = this.columnInfoService.stickyColumnsStyles(column);\n      return Object.assign({}, column.style, stickyStyles);\n    }\n\n  };\n\n  FooterComponent.ɵfac = function FooterComponent_Factory(t) {\n    return new (t || FooterComponent)(ɵngcc0.ɵɵdirectiveInject(ColumnInfoService));\n  };\n\n  FooterComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FooterComponent,\n    selectors: [[\"\", \"kendoGridFooter\", \"\"]],\n    hostVars: 2,\n    hostBindings: function FooterComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-grid-footer\", ctx.footerClass);\n      }\n    },\n    inputs: {\n      columns: \"columns\",\n      groups: \"groups\",\n      lockedColumnsCount: \"lockedColumnsCount\",\n      logicalRowIndex: \"logicalRowIndex\",\n      detailTemplate: \"detailTemplate\",\n      scrollable: \"scrollable\"\n    },\n    attrs: _c191,\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ngIf\"], [\"kendoGridLogicalRow\", \"\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"], [\"role\", \"presentation\", 3, \"k-group-cell\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\", 3, \"k-hierarchy-cell\", 4, \"ngIf\"], [\"kendoGridLogicalCell\", \"\", \"role\", \"columnfooter\", \"aria-selected\", \"false\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"k-grid-footer-sticky\", \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\"], [\"kendoGridLogicalCell\", \"\", \"role\", \"columnfooter\", \"aria-selected\", \"false\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"ngClass\", \"ngStyle\"], [3, \"templateContext\"]],\n    template: function FooterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, FooterComponent_ng_template_0_Template, 4, 9, \"ng-template\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", true);\n      }\n    },\n    directives: [ɵngcc5.NgIf, LogicalRowDirective, ɵngcc5.NgForOf, LogicalCellDirective, ɵngcc5.NgClass, ɵngcc5.NgStyle, TemplateContextDirective],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], FooterComponent.prototype, \"columns\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], FooterComponent.prototype, \"groups\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", DetailTemplateDirective)], FooterComponent.prototype, \"detailTemplate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], FooterComponent.prototype, \"scrollable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], FooterComponent.prototype, \"lockedColumnsCount\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], FooterComponent.prototype, \"logicalRowIndex\", void 0);\n\n  __decorate([HostBinding('class.k-grid-footer'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], FooterComponent.prototype, \"footerClass\", null);\n\n  FooterComponent = __decorate([__metadata(\"design:paramtypes\", [ColumnInfoService])], FooterComponent);\n  return FooterComponent;\n})();\nconst exportedModules$3 = [FooterComponent];\nconst importedModules$4 = [CommonModule, SharedModule];\n/**\n * @hidden\n */\n\nlet FooterModule = /*#__PURE__*/(() => {\n  let FooterModule = class FooterModule {\n    static exports() {\n      return [];\n    }\n\n  };\n\n  FooterModule.ɵfac = function FooterModule_Factory(t) {\n    return new (t || FooterModule)();\n  };\n\n  FooterModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FooterModule\n  });\n  FooterModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[...importedModules$4]]\n  });\n  /**\n   * @hidden\n   */\n\n  return FooterModule;\n})();\nlet ToolbarComponent = /*#__PURE__*/(() => {\n  let ToolbarComponent = class ToolbarComponent {\n    constructor(grid) {\n      this.grid = grid;\n      this.context = {};\n    }\n\n    set position(value) {\n      this.context.position = value;\n    }\n\n    get toolbarTemplateRef() {\n      return this.grid.toolbarTemplate ? this.grid.toolbarTemplate.templateRef : undefined;\n    }\n\n  };\n\n  ToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) {\n    return new (t || ToolbarComponent)(ɵngcc0.ɵɵdirectiveInject(GridComponent));\n  };\n\n  ToolbarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ToolbarComponent,\n    selectors: [[\"kendo-grid-toolbar\"]],\n    inputs: {\n      position: \"position\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function ToolbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ToolbarComponent_0_Template, 1, 2, undefined, 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.toolbarTemplateRef);\n      }\n    },\n    directives: [ɵngcc5.NgIf, ɵngcc5.NgTemplateOutlet],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], ToolbarComponent.prototype, \"position\", null);\n\n  ToolbarComponent = __decorate([__metadata(\"design:paramtypes\", [GridComponent])], ToolbarComponent);\n  /**\n   * @hidden\n   */\n\n  return ToolbarComponent;\n})();\n\nclass LocalEditService {\n  constructor(grid, localDataChangesService) {\n    this.grid = grid;\n    this.localDataChangesService = localDataChangesService;\n  }\n\n  create(item) {\n    if (this.hasLocalData && this.grid.skip) {\n      this.localDataChangesService.data.splice(this.grid.skip, 0, item);\n    } else {\n      this.data.unshift(item);\n    }\n\n    this.dataChanged();\n  }\n\n  update(_item) {} // tslint:disable-line:no-empty\n\n\n  remove(item) {\n    const data = this.data;\n\n    for (let idx = 0; idx < data.length; idx++) {\n      if (item === data[idx]) {\n        data.splice(idx, 1);\n        this.dataChanged({\n          action: 'remove',\n          item: item\n        });\n        break;\n      }\n    }\n  }\n\n  assignValues(target, source) {\n    Object.assign(target, source);\n  }\n\n  dataChanged(args = {}) {\n    if (this.hasLocalData) {\n      this.localDataChangesService.changes.emit(args);\n    }\n  }\n\n  get hasLocalData() {\n    return Array.isArray(this.localDataChangesService.data);\n  }\n\n  get data() {\n    if (this.hasLocalData) {\n      return this.localDataChangesService.data;\n    }\n\n    const data = this.grid.data;\n\n    if (Array.isArray(data)) {\n      return data;\n    }\n\n    if (isDevMode()) {\n      throw new Error('The default edit service of the editing directives works only when binding to plain array.' + 'Please provide an editService.');\n    }\n\n    return [];\n  }\n\n}\n/**\n * @hidden\n */\n\n\nlet EditingDirectiveBase = /*#__PURE__*/(() => {\n  class EditingDirectiveBase {\n    constructor(grid, localDataChangesService) {\n      this.grid = grid;\n      this.localDataChangesService = localDataChangesService;\n      this.defaultEditService = this.createDefaultService();\n    } // Consider adding support for the dependency injection of the service to allow for specifying a generic service without code.\n    // The Input should still be kept.\n\n    /**\n     * The edit service that will handle the operations.\n     */\n\n\n    set editService(value) {\n      this.userEditService = value;\n    }\n\n    get editService() {\n      return this.userEditService || this.defaultEditService;\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnInit() {\n      this.subscriptions = this.grid.add.subscribe(this.addHandler.bind(this));\n      this.subscriptions.add(this.grid.remove.subscribe(this.removeHandler.bind(this)));\n      this.subscriptions.add(this.grid.cancel.subscribe(this.cancelHandler.bind(this)));\n      this.subscriptions.add(this.grid.save.subscribe(this.saveHandler.bind(this)));\n      this.subscriptions.add(this.grid.dataStateChange.subscribe(this.onStateChange.bind(this)));\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n\n    createDefaultService() {\n      return new LocalEditService(this.grid, this.localDataChangesService);\n    }\n\n    addHandler() {\n      this.grid.addRow(this.createModel({\n        isNew: true\n      }));\n    }\n\n    saveHandler(args) {\n      const item = this.saveModel(args);\n\n      if (item) {\n        if (args.isNew) {\n          this.editService.create(item);\n        } else {\n          this.editService.update(item);\n        }\n      }\n\n      this.grid.closeRow(args.rowIndex);\n    }\n\n    cancelHandler({\n      rowIndex\n    }) {\n      this.closeEditor(rowIndex);\n    }\n\n    removeHandler({\n      dataItem\n    }) {\n      const removeItem = shouldRemove => {\n        if (shouldRemove) {\n          this.editService.remove(dataItem);\n        }\n      };\n\n      if (this.removeConfirmation) {\n        const result = this.removeConfirmation(dataItem);\n\n        if (result instanceof Promise) {\n          result.then(removeItem);\n        } else if (result instanceof Observable) {\n          result.pipe(take(1)).subscribe(removeItem);\n        } else {\n          removeItem(result);\n        }\n      } else {\n        removeItem(true);\n      }\n    }\n\n    onStateChange() {\n      this.closeEditor();\n    }\n\n    closeEditor(rowIndex) {\n      this.grid.closeRow(rowIndex);\n    }\n\n  }\n\n  EditingDirectiveBase.ɵfac = function EditingDirectiveBase_Factory(t) {\n    ɵngcc0.ɵɵinvalidFactory();\n  };\n\n  EditingDirectiveBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: EditingDirectiveBase,\n    inputs: {\n      editService: \"editService\",\n      removeConfirmation: \"removeConfirmation\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], EditingDirectiveBase.prototype, \"editService\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Function)], EditingDirectiveBase.prototype, \"removeConfirmation\", void 0);\n  /**\n   * @hidden\n   */\n\n\n  return EditingDirectiveBase;\n})();\n\nclass LocalRowEditService extends LocalEditService {\n  update(_item) {\n    this.dataChanged();\n  }\n\n}\n/**\n * @hidden\n */\n\n\nlet RowEditingDirectiveBase = /*#__PURE__*/(() => {\n  class RowEditingDirectiveBase extends EditingDirectiveBase {\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n      super.ngOnInit();\n      this.subscriptions.add(this.grid.edit.subscribe(this.editHandler.bind(this)));\n    }\n\n    createDefaultService() {\n      return new LocalRowEditService(this.grid, this.localDataChangesService);\n    }\n\n    addHandler() {\n      this.closeEditor();\n      super.addHandler();\n    }\n\n    editHandler(args) {\n      this.closeEditor();\n      this.rowIndex = args.rowIndex;\n      this.grid.editRow(args.rowIndex, this.createModel(args));\n    }\n\n    saveHandler(args) {\n      super.saveHandler(args);\n      this.clean();\n    }\n\n    closeEditor(rowIndex = this.rowIndex) {\n      super.closeEditor(rowIndex);\n      this.clean();\n    }\n\n    clean() {\n      delete this.rowIndex;\n    }\n\n  }\n\n  RowEditingDirectiveBase.ɵfac = /*@__PURE__*/function () {\n    let ɵRowEditingDirectiveBase_BaseFactory;\n    return function RowEditingDirectiveBase_Factory(t) {\n      return (ɵRowEditingDirectiveBase_BaseFactory || (ɵRowEditingDirectiveBase_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(RowEditingDirectiveBase)))(t || RowEditingDirectiveBase);\n    };\n  }();\n\n  RowEditingDirectiveBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: RowEditingDirectiveBase,\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  /**\n   * A directive which encapsulates the editing operations of the Grid when using\n   * the Template-Driven Angular Forms ([see example]({% slug editing_directives_grid %}#toc-the-template-directive)).\n   */\n\n  return RowEditingDirectiveBase;\n})();\nlet TemplateEditingDirective = /*#__PURE__*/(() => {\n  let TemplateEditingDirective = class TemplateEditingDirective extends RowEditingDirectiveBase {\n    constructor(grid, localDataChangesService) {\n      super(grid, localDataChangesService);\n      this.grid = grid;\n      this.localDataChangesService = localDataChangesService;\n    }\n\n    editHandler(args) {\n      super.editHandler(args);\n      this.dataItem = args.dataItem;\n      this.originalValues = {};\n      this.editService.assignValues(this.originalValues, this.dataItem);\n    }\n\n    closeEditor(rowIndex) {\n      if (this.dataItem) {\n        this.editService.assignValues(this.dataItem, this.originalValues);\n      }\n\n      super.closeEditor(rowIndex);\n    }\n\n    createModel(args) {\n      if (args.isNew) {\n        return this.createNewItem();\n      }\n    }\n\n    saveModel(args) {\n      return args.dataItem;\n    }\n\n    clean() {\n      super.clean();\n      delete this.dataItem;\n    }\n\n  };\n\n  TemplateEditingDirective.ɵfac = function TemplateEditingDirective_Factory(t) {\n    return new (t || TemplateEditingDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent), ɵngcc0.ɵɵdirectiveInject(LocalDataChangesService));\n  };\n\n  TemplateEditingDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TemplateEditingDirective,\n    selectors: [[\"\", \"kendoGridTemplateEditing\", \"\"]],\n    inputs: {\n      createNewItem: [\"kendoGridTemplateEditing\", \"createNewItem\"]\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Input('kendoGridTemplateEditing'), __metadata(\"design:type\", Function)], TemplateEditingDirective.prototype, \"createNewItem\", void 0);\n\n  TemplateEditingDirective = __decorate([__metadata(\"design:paramtypes\", [GridComponent, LocalDataChangesService])], TemplateEditingDirective);\n  /**\n   * @hidden\n   */\n\n  return TemplateEditingDirective;\n})();\n\nconst markAllAsTouched = control => {\n  control.markAsTouched();\n\n  if (control.hasOwnProperty('controls')) {\n    let controls = control.controls;\n\n    for (let inner in controls) {\n      if (controls.hasOwnProperty(inner)) {\n        markAllAsTouched(controls[inner]);\n      }\n    }\n  }\n};\n/**\n * A directive which encapsulates the editing operations of the Grid when using the\n * Reactive Forms ([see example]({% slug editing_directives_grid %}#toc-the-reactive-directive)).\n */\n\n\nlet ReactiveEditingDirective = /*#__PURE__*/(() => {\n  let ReactiveEditingDirective = class ReactiveEditingDirective extends RowEditingDirectiveBase {\n    constructor(grid, localDataChangesService) {\n      super(grid, localDataChangesService);\n      this.grid = grid;\n      this.localDataChangesService = localDataChangesService;\n    }\n\n    createModel(args) {\n      return this.createFormGroup(args);\n    }\n\n    saveModel({\n      dataItem,\n      formGroup,\n      isNew\n    }) {\n      if (!formGroup.dirty && !isNew) {\n        return;\n      }\n\n      if (formGroup.valid) {\n        this.editService.assignValues(dataItem, formGroup.value);\n        return dataItem;\n      }\n\n      markAllAsTouched(formGroup);\n    }\n\n  };\n\n  ReactiveEditingDirective.ɵfac = function ReactiveEditingDirective_Factory(t) {\n    return new (t || ReactiveEditingDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent), ɵngcc0.ɵɵdirectiveInject(LocalDataChangesService));\n  };\n\n  ReactiveEditingDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ReactiveEditingDirective,\n    selectors: [[\"\", \"kendoGridReactiveEditing\", \"\"]],\n    inputs: {\n      createFormGroup: [\"kendoGridReactiveEditing\", \"createFormGroup\"]\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Input('kendoGridReactiveEditing'), __metadata(\"design:type\", Function)], ReactiveEditingDirective.prototype, \"createFormGroup\", void 0);\n\n  ReactiveEditingDirective = __decorate([__metadata(\"design:paramtypes\", [GridComponent, LocalDataChangesService])], ReactiveEditingDirective);\n  /**\n   * A directive which encapsulates the editing operations of the Grid when using the in-cell\n   * editing with Reactive Forms ([see example]({% slug editing_directives_grid %}#toc-the-incell-directive)).\n   */\n\n  return ReactiveEditingDirective;\n})();\nlet InCellEditingDirective = /*#__PURE__*/(() => {\n  let InCellEditingDirective = class InCellEditingDirective extends EditingDirectiveBase {\n    constructor(grid, localDataChangesService, cdr) {\n      super(grid, localDataChangesService);\n      this.grid = grid;\n      this.localDataChangesService = localDataChangesService;\n      this.cdr = cdr;\n    } // Need mixin\n\n\n    createModel(args) {\n      return this.createFormGroup(args);\n    }\n\n    saveModel({\n      dataItem,\n      formGroup,\n      isNew\n    }) {\n      if (!formGroup.dirty && !isNew) {\n        return;\n      }\n\n      if (formGroup.valid) {\n        this.editService.assignValues(dataItem, formGroup.value);\n        return dataItem;\n      }\n\n      markAllAsTouched(formGroup);\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnInit() {\n      super.ngOnInit();\n      this.subscriptions.add(this.grid.cellClick.subscribe(this.cellClickHandler.bind(this)));\n      this.subscriptions.add(this.grid.cellClose.subscribe(this.cellCloseHandler.bind(this)));\n    }\n\n    removeHandler(args) {\n      super.removeHandler(args);\n      this.grid.cancelCell();\n    }\n\n    cellClickHandler(args) {\n      if (!args.isEdited && args.type !== 'contextmenu') {\n        this.grid.editCell(args.rowIndex, args.columnIndex, this.createFormGroup(args));\n        this.cdr.markForCheck();\n      }\n    }\n\n    cellCloseHandler(args) {\n      const {\n        formGroup,\n        dataItem\n      } = args;\n\n      if (!formGroup.valid) {\n        args.preventDefault();\n      } else if (formGroup.dirty) {\n        this.editService.assignValues(dataItem, formGroup.value);\n        this.editService.update(dataItem);\n      }\n    }\n\n  };\n\n  InCellEditingDirective.ɵfac = function InCellEditingDirective_Factory(t) {\n    return new (t || InCellEditingDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent), ɵngcc0.ɵɵdirectiveInject(LocalDataChangesService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  InCellEditingDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: InCellEditingDirective,\n    selectors: [[\"\", \"kendoGridInCellEditing\", \"\"]],\n    inputs: {\n      createFormGroup: [\"kendoGridInCellEditing\", \"createFormGroup\"]\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Input('kendoGridInCellEditing'), __metadata(\"design:type\", Function)], InCellEditingDirective.prototype, \"createFormGroup\", void 0);\n\n  InCellEditingDirective = __decorate([__metadata(\"design:paramtypes\", [GridComponent, LocalDataChangesService, ChangeDetectorRef])], InCellEditingDirective);\n  return InCellEditingDirective;\n})();\n\nconst hasGroups = items => items && items.length && items[0].field && items[0].items;\n\nconst groupDescriptorsPresent = descriptors => isPresent(descriptors) && descriptors.length > 0;\n\nconst processGroups = (data, state$$1) => process(data, state$$1).data;\n\nconst removeParentDescriptors = (parents, owner) => g => g.field !== owner.field && !parents.some(y => y.field === g.field);\n\nconst findGroup = (groupIndex, groups) => {\n  const parents = [];\n  return {\n    group: groupIndex.split(\"_\").reduce((acc, x) => {\n      const idx = parseInt(x, 10);\n\n      if (acc.items) {\n        parents.push(acc);\n        return acc.items[idx];\n      }\n\n      return isArray(acc) ? acc[idx] : acc;\n    }, groups),\n    parents\n  };\n};\n\nconst findChildren = (data, parents) => {\n  const filters = parents.map(p => ({\n    field: p.field,\n    operator: \"eq\",\n    value: p.value\n  }));\n  return filterBy(data, {\n    filters: filters,\n    logic: \"and\"\n  });\n};\n/**\n * @hidden\n */\n\n\nconst count = (groups, includeFooters = false) => groups.reduce((acc, group) => {\n  if (!group.skipHeader) {\n    acc++;\n  }\n\n  if (group.items) {\n    const children = count(group.items, includeFooters);\n\n    if (includeFooters && children && !group.hideFooter) {\n      acc++;\n    }\n\n    acc += children;\n  }\n\n  return acc;\n}, 0) // tslint:disable-line:align\n;\n/**\n * @hidden\n */\n\n\nconst slice = (groups, skip, take$$1, includeFooters = false) => {\n  if (!isPresent(take$$1)) {\n    return groups;\n  }\n\n  const result = [];\n\n  for (let idx = 0, length = groups.length; idx < length; idx++) {\n    if (take$$1 <= 0) {\n      break;\n    }\n\n    const group = groups[idx];\n    const groupItems = group.items;\n    let itemCount = count(groupItems, includeFooters);\n\n    if (includeFooters && groupItems.length) {\n      itemCount++;\n    }\n\n    const skipHeader = skip > 0;\n\n    if (skip) {\n      skip--;\n\n      if (itemCount && skip >= itemCount) {\n        skip -= itemCount;\n        continue;\n      }\n    }\n\n    if (!skipHeader || itemCount) {\n      const items = [];\n      let hideFooter = true;\n\n      if (!skipHeader) {\n        take$$1--;\n      }\n\n      if (take$$1) {\n        if (hasGroups(groupItems)) {\n          const children = slice(groupItems, skip, take$$1, includeFooters);\n          items.push(...children);\n          take$$1 -= count(children, includeFooters);\n        } else {\n          items.push(...groupItems.slice(skip, Math.min(skip + take$$1, groupItems.length)));\n          take$$1 -= items.length;\n        }\n\n        if (take$$1 && includeFooters) {\n          hideFooter = false;\n          take$$1--;\n        }\n\n        skip = 0;\n      }\n\n      result.push({\n        aggregates: group.aggregates,\n        field: group.field,\n        hideFooter,\n        items,\n        offset: idx,\n        skipHeader,\n        value: group.value\n      });\n    }\n  }\n\n  return result;\n};\n\nconst skippedHeaders = groupItem => {\n  let total = 0;\n\n  while (groupItem) {\n    if (groupItem.skipHeader) {\n      total++;\n    }\n\n    groupItem = groupItem.items && groupItem.items[0] || null;\n  }\n\n  return total;\n};\n/**\n * A directive which encapsulates the in-memory handling of grouping with virtual scrolling.\n */\n\n\nlet GroupBindingDirective = /*#__PURE__*/(() => {\n  let GroupBindingDirective = class GroupBindingDirective extends DataBindingDirective {\n    constructor(grid, changeDetector, localDataChangesService) {\n      super(grid, changeDetector, localDataChangesService);\n    }\n    /**\n     * The array of data which will be used to populate the Grid.\n     */\n\n\n    set kendoGridGroupBinding(value) {\n      this.groups = null;\n      this.grid.resetGroupsState();\n      this.data = value;\n    }\n    /**\n     * @hidden\n     */\n\n\n    set data(value) {\n      this.originalData = value || [];\n      this.dataChanged = true;\n    }\n    /**\n     * Defines the descriptors by which the data will be sorted.\n     */\n\n\n    set sort(value) {\n      const clear = this.state.sort !== value;\n      this.grid.sort = this.state.sort = value;\n\n      if (clear) {\n        this.groups = null;\n        this.grid.resetGroupsState();\n      }\n    }\n    /**\n     * Defines the descriptor by which the data will be filtered.\n     */\n\n\n    set filter(value) {\n      const clear = diffFilters(this.state.filter, value);\n\n      if (clear) {\n        this.state.filter = value;\n        this.grid.filter = cloneFilters(value);\n        this.groups = null;\n        this.grid.resetGroupsState();\n      }\n    }\n    /**\n     * Defines the descriptors by which the data will be grouped.\n     */\n\n\n    set group(value) {\n      // don't clear if no groups are present in previous and current value\n      const groupsPresent = groupDescriptorsPresent(this.state.group) || groupDescriptorsPresent(value);\n      const clear = this.state.group !== value && groupsPresent;\n      this.grid.group = this.state.group = value;\n\n      if (clear) {\n        this.groups = null;\n        this.grid.resetGroupsState();\n        this.skip = 0;\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnInit() {\n      super.ngOnInit();\n      this.grid.groupExpand.subscribe(this.groupExpand.bind(this));\n      this.grid.groupCollapse.subscribe(this.groupCollapse.bind(this));\n    }\n\n    ngAfterContentInit() {\n      if (isDevMode() && this.grid.isGroupExpanded) {\n        throw new Error('Using the `kendoGridGroupBinding` directive in combination with the `kendoGridExpandGroupBy` directive ' + 'or the `isGroupExpanded` callback is not supported. To use grouping with the `kendoGridGroupBinding` directive, ' + 'set the Grid `groupable` property to `true`.');\n      }\n    }\n\n    groupExpand({\n      groupIndex\n    }) {\n      this.grid.expandGroupChildren(groupIndex);\n      const {\n        group,\n        parents\n      } = findGroup(groupIndex, this.groups);\n\n      if (!group.items.length) {\n        const descriptors = this.state.group.filter(removeParentDescriptors(parents, group));\n        const children = findChildren(this.originalData, parents.concat(group));\n        group.items = processGroups(children, {\n          filter: this.state.filter,\n          group: descriptors,\n          sort: this.state.sort\n        });\n      }\n\n      this.grid.data = this.dataResult(this.state.skip, this.state.take);\n    }\n\n    groupCollapse({\n      groupIndex\n    }) {\n      const {\n        group\n      } = findGroup(groupIndex, this.groups);\n\n      if (group) {\n        group.items = [];\n      }\n\n      this.grid.data = this.dataResult(this.state.skip, this.state.take);\n    }\n\n    process(state$$1) {\n      if (state$$1.group && state$$1.group.length) {\n        const groups = this.processGroups(state$$1);\n        this.grid.skip -= skippedHeaders(groups.data[0]);\n        return groups;\n      } else {\n        this.groups = null;\n      }\n\n      return super.process(state$$1);\n    }\n\n    processGroups(state$$1) {\n      if (!this.groups || !this.groups.length) {\n        this.groups = processGroups(this.originalData, {\n          filter: state$$1.filter,\n          group: state$$1.group,\n          sort: state$$1.sort\n        });\n      }\n\n      return this.dataResult(state$$1.skip, state$$1.take);\n    }\n\n    dataResult(skip, take$$1) {\n      const includeFooters = this.grid.showGroupFooters;\n      return {\n        data: slice(this.groups, skip, take$$1, includeFooters),\n        total: count(this.groups, includeFooters)\n      };\n    }\n\n    applyState({\n      skip,\n      take: take$$1,\n      sort,\n      group,\n      filter: filter$$1\n    }) {\n      this.skip = skip;\n      this.state.take = take$$1; // this.pageSize = take; // do need to update take as the process with slice correctly\n\n      this.sort = sort;\n      this.group = group;\n      this.filter = filter$$1;\n    }\n\n  };\n\n  GroupBindingDirective.ɵfac = function GroupBindingDirective_Factory(t) {\n    return new (t || GroupBindingDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(LocalDataChangesService));\n  };\n\n  GroupBindingDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: GroupBindingDirective,\n    selectors: [[\"\", \"kendoGridGroupBinding\", \"\"]],\n    inputs: {\n      kendoGridGroupBinding: \"kendoGridGroupBinding\",\n      sort: \"sort\",\n      filter: \"filter\",\n      group: \"group\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Input(\"kendoGridGroupBinding\"), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], GroupBindingDirective.prototype, \"kendoGridGroupBinding\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], GroupBindingDirective.prototype, \"sort\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], GroupBindingDirective.prototype, \"filter\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], GroupBindingDirective.prototype, \"group\", null);\n\n  GroupBindingDirective = __decorate([__metadata(\"design:paramtypes\", [GridComponent, ChangeDetectorRef, LocalDataChangesService])], GroupBindingDirective);\n  return GroupBindingDirective;\n})();\nconst exportedModules$4 = [GridComponent, ToolbarTemplateDirective, ToolbarComponent, GridSpacerComponent, DataBindingDirective, SelectionDirective, CustomMessagesComponent, GroupBindingDirective, TemplateEditingDirective, ReactiveEditingDirective, InCellEditingDirective, ExpandDetailsDirective, ExpandGroupDirective, ...GroupModule.exports(), ...SharedModule.exports(), ...BodyModule.exports(), ...HeaderModule.exports(), ...FooterModule.exports(), ...PagerModule.exports(), ...RowFilterModule.exports(), ...FilterMenuModule.exports(), ...ColumnMenuModule.exports()];\nconst declarations = [GridComponent, ListComponent, ToolbarComponent, LocalizedMessagesDirective, CustomMessagesComponent, DataBindingDirective, ToolbarTemplateDirective, SelectionDirective, TemplateEditingDirective, ReactiveEditingDirective, InCellEditingDirective, ExpandDetailsDirective, ExpandGroupDirective, GroupBindingDirective, GridMarqueeDirective, GridSpacerComponent];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Grid component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid module\n * import { GridModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule], // import Grid module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\nlet GridModule = /*#__PURE__*/(() => {\n  let GridModule = class GridModule {};\n\n  GridModule.ɵfac = function GridModule_Factory(t) {\n    return new (t || GridModule)();\n  };\n\n  GridModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: GridModule\n  });\n  GridModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, GroupModule, SharedModule, BodyModule, HeaderModule, FooterModule, PagerModule, RowFilterModule, FilterMenuModule, ResizeSensorModule, ColumnMenuModule]]\n  });\n  return GridModule;\n})();\nlet PDFMarginComponent = /*#__PURE__*/(() => {\n  let PDFMarginComponent = class PDFMarginComponent extends PDFExportMarginComponent {};\n\n  PDFMarginComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵPDFMarginComponent_BaseFactory;\n    return function PDFMarginComponent_Factory(t) {\n      return (ɵPDFMarginComponent_BaseFactory || (ɵPDFMarginComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(PDFMarginComponent)))(t || PDFMarginComponent);\n    };\n  }();\n\n  PDFMarginComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PDFMarginComponent,\n    selectors: [[\"kendo-grid-pdf-margin\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function PDFMarginComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  /**\n   * Represents the PDF page template of the Grid that helps to customize the PDF pages. To define a page template,\n   * nest an `<ng-template>` tag with the `kendoGridPDFTemplate` directive inside `<kendo-grid-pdf>`.\n   *\n   * The template context provides the following fields:\n   * - `pageNumber`&mdash;Defines PDF page number.\n   * - `totalPages`&mdash;Defines the total number of PDF pages.\n   *\n   * @example\n   * ```ts-preview\n   *\n   * _@Component({\n   *     selector: 'my-app',\n   *     template: `\n   *         <kendo-grid [data]=\"gridData\">\n   *             <ng-template kendoGridToolbarTemplate>\n   *                 <button kendoGridPDFCommand icon=\"file-pdf\">Export to PDF</button>\n   *             </ng-template>\n   *             <kendo-grid-column field=\"ProductName\">\n   *             </kendo-grid-column>\n   *              <kendo-grid-column field=\"UnitPrice\">\n   *             </kendo-grid-column>\n   *             <kendo-grid-pdf fileName=\"Products.pdf\" paperSize=\"A4\" [margin]=\"{ top: '1cm', left: '1cm', right: '1cm', bottom: '1cm' }\">\n   *                 <ng-template kendoGridPDFTemplate let-pageNum=\"pageNum\" let-totalPages=\"totalPages\">\n   *                     <div style=\"position: absolute;top: 5px; left: 5px;\">\n   *                         Page {{ pageNum }} of {{ totalPages }}\n   *                     </div>\n   *                 </ng-template>\n   *             </kendo-grid-pdf>\n   *         </kendo-grid>\n   *     `\n   * })\n   *\n   * class AppComponent {\n   *     public gridData = [{\n   *         \"ProductID\": 1,\n   *         \"ProductName\": \"Chai\",\n   *         \"UnitPrice\": 18.0000\n   *       }, {\n   *         \"ProductID\": 2,\n   *         \"ProductName\": \"Chang\",\n   *         \"UnitPrice\": 19.0000\n   *       }\n   *     ];\n   * }\n   *\n   * ```\n   */\n\n  return PDFMarginComponent;\n})();\nlet PDFTemplateDirective = /*#__PURE__*/(() => {\n  let PDFTemplateDirective = class PDFTemplateDirective extends PDFExportTemplateDirective {\n    constructor(templateRef) {\n      super(templateRef);\n    }\n\n  };\n\n  PDFTemplateDirective.ɵfac = function PDFTemplateDirective_Factory(t) {\n    return new (t || PDFTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  PDFTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: PDFTemplateDirective,\n    selectors: [[\"\", \"kendoGridPDFTemplate\", \"\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  PDFTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], PDFTemplateDirective);\n  /**\n   * @hidden\n   */\n\n  return PDFTemplateDirective;\n})();\nconst HEADER_CLASS = 'k-grid-header';\n/**\n * @hidden\n */\n\nconst FOOTER_CLASS = 'k-grid-footer';\nconst GRID_LIST = 'KENDO-GRID-LIST';\nconst TABLE = 'TABLE';\nconst matchesList = matchesNodeName(GRID_LIST);\nconst matchesTable = matchesNodeName(TABLE);\n\nconst suffix = locked => locked ? 'locked' : 'wrap';\n/**\n * @hidden\n */\n\n\nclass GridQuery {\n  constructor(element) {\n    this.element = element;\n    this.list = findElement(element, matchesList);\n  }\n\n  content(locked) {\n    return findElement(this.list, matchesClasses(`k-grid-content${locked ? '-locked' : ''}`));\n  }\n\n  header(locked) {\n    this.headerWrap = this.headerWrap || findElement(this.element, matchesClasses(HEADER_CLASS));\n    return findElement(this.headerWrap, matchesClasses(`${HEADER_CLASS}-${suffix(locked)}`));\n  }\n\n  footer(locked) {\n    this.footerWrap = this.footerWrap || findElement(this.element, matchesClasses(FOOTER_CLASS));\n    return findElement(this.footerWrap, matchesClasses(`${FOOTER_CLASS}-${suffix(locked)}`));\n  }\n\n  table() {\n    return findElement(this.element, matchesTable);\n  }\n\n}\n\nconst FIRST_CLASS = 'k-first';\nconst INPUTS = ['input', 'select', 'textarea', 'option'];\n/** @hidden */\n\nconst cloneNode = node => {\n  const clone = node.cloneNode(false);\n\n  if (node._kendoExportVisual) {\n    clone._kendoExportVisual = node._kendoExportVisual;\n  }\n\n  if (INPUTS.indexOf(String(node.nodeName).toLowerCase()) >= 0) {\n    clone.removeAttribute(\"id\");\n    clone.removeAttribute(\"name\");\n    clone.value = node.value;\n    clone.checked = node.checked;\n    clone.selected = node.selected;\n  }\n\n  let child = node.firstChild;\n\n  while (child) {\n    clone.appendChild(cloneNode(child));\n    child = child.nextSibling;\n  }\n\n  return clone;\n};\n\nconst appendNodes = (element, nodes) => {\n  const length = nodes.length;\n\n  for (let idx = 0; idx < length; idx++) {\n    element.appendChild(cloneNode(nodes[idx]));\n  }\n};\n\nconst wrapTable = table => {\n  const wrapper = document.createElement('div');\n  wrapper.className = 'k-widget k-grid';\n  wrapper.appendChild(table);\n  return wrapper;\n};\n\nconst createTableElement = sources => {\n  const sourceCount = sources.length;\n  const element = cloneNode(sources[0]);\n  const rowsCount = element.rows.length;\n\n  if (sourceCount > 1) {\n    for (let rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n      for (let sourceIdx = 1; sourceIdx < sourceCount; sourceIdx++) {\n        appendNodes(element.rows[rowIdx], sources[sourceIdx].rows[rowIdx].cells);\n      }\n    }\n  }\n\n  return element;\n};\n\nconst setFirstCellClass = (header, headers) => {\n  if (headers.length > 1 && header.rows.length > 1) {\n    for (let idx = 1; idx < header.rows.length; idx++) {\n      const firstCellIndex = headers[0].rows[idx].cells.length;\n      const cell = header.rows[idx].cells[firstCellIndex];\n\n      if (String(cell.className).indexOf(FIRST_CLASS) === -1) {\n        cell.className += ` ${FIRST_CLASS}`;\n      }\n    }\n  }\n};\n\nconst createTable = (colGroups, headers, bodies, footers) => {\n  const table = document.createElement('table');\n  const colGroup = colGroups[0].cloneNode(true);\n\n  for (let idx = 1; idx < colGroups.length; idx++) {\n    appendNodes(colGroup, colGroups[idx].querySelectorAll('col'));\n  }\n\n  const header = createTableElement(headers);\n  const body = createTableElement(bodies);\n  header.className = HEADER_CLASS;\n  setFirstCellClass(header, headers);\n  table.appendChild(colGroup);\n  table.appendChild(header);\n  table.appendChild(body);\n\n  if (footers.length) {\n    const footer = createTableElement(footers);\n    footer.className = FOOTER_CLASS;\n    table.appendChild(footer);\n  }\n\n  return wrapTable(table);\n};\n/**\n * @hidden\n */\n\n\nconst exportElement = wrapper => {\n  const query = new GridQuery(wrapper);\n  const content = query.content();\n  let result;\n\n  if (content) {\n    const colGroups = [content.querySelector('colgroup')];\n    const headers = [query.header().querySelector('thead')];\n    const bodies = [content.querySelector('tbody')];\n    const footer = query.footer();\n    const footers = [];\n\n    if (footer) {\n      footers.push(footer.querySelector('tfoot'));\n    }\n\n    const lockedContent = query.content(true);\n\n    if (lockedContent) {\n      colGroups.unshift(lockedContent.querySelector('colgroup'));\n      headers.unshift(query.header(true).querySelector('thead'));\n      bodies.unshift(lockedContent.querySelector('tbody'));\n\n      if (footer) {\n        footers.unshift(query.footer(true).querySelector('tfoot'));\n      }\n    }\n\n    result = createTable(colGroups, headers, bodies, footers);\n  } else {\n    result = wrapTable(query.table().cloneNode(true));\n  }\n\n  return result;\n};\n\nconst createElement$1 = (tagName, className) => {\n  const element = document.createElement(tagName);\n\n  if (className) {\n    element.className = className;\n  }\n\n  return element;\n};\n\nconst createDiv = className => {\n  return createElement$1('div', className);\n};\n/**\n * Configures the settings for the export of Grid in PDF ([see example]({% slug pdfexport_grid %})).\n */\n\n\nlet PDFComponent = /*#__PURE__*/(() => {\n  let PDFComponent = class PDFComponent extends PDFExportComponent {\n    constructor(pdfService, suspendService, ngZone, element) {\n      super(element);\n      this.pdfService = pdfService;\n      this.suspendService = suspendService;\n      this.ngZone = ngZone;\n      /**\n       * The delay in milliseconds before exporting the Grid content.\n       * Useful for scenarios which involve exporting complex components used in the Grid\n       * templates such as charts or data-bound components with asynchronous data retrieval ([see example]({% slug pdfexport_grid %}#toc-exporting-all-pages)).\n       *\n       * @default 0\n       */\n\n      this.delay = 0;\n      this.columns = new QueryList();\n      this.saveSubscription = pdfService.savePDF.subscribe(this.savePDF.bind(this));\n      this.drawSubscription = pdfService.drawPDF.subscribe(this.drawPDF.bind(this));\n      this.reset = this.reset.bind(this);\n      this.draw = this.draw.bind(this);\n    }\n\n    ngOnDestroy() {\n      this.saveSubscription.unsubscribe();\n      this.drawSubscription.unsubscribe();\n      this.reset();\n    }\n    /**\n     * @hidden\n     */\n\n\n    saveAs(_) {\n      throw new Error('Not supported. Use GridComponent.saveAsPDF');\n    }\n    /**\n     * @hidden\n     */\n\n\n    export() {\n      throw new Error('Not supported. Use GridComponent.drawPDF');\n    }\n\n    savePDF(component) {\n      this.createPDF(component, this.draw);\n    }\n\n    drawPDF({\n      component,\n      promise\n    }) {\n      this.createPDF(component, () => {\n        this.createExportGroup(promise);\n      });\n    }\n\n    createPDF(component, callback) {\n      const pageSize = component.pageSize;\n      const total = component.view.total;\n      const columns = this.columns.toArray();\n\n      if (columns.length) {\n        this.originalColumns = component.columns.toArray();\n      }\n\n      this.component = component;\n      this.suspendService.scroll = true;\n      this.pdfService.exporting = true;\n      this.initProgress();\n      this.renderAllPages = this.allPages && pageSize < total;\n\n      if (this.renderAllPages) {\n        this.skip = component.skip;\n        this.pageSize = pageSize;\n        this.changePage(0, total, callback, columns);\n      } else if (columns.length || component.virtualColumns) {\n        this.changeColumns(columns, callback);\n      } else {\n        callback();\n      }\n    }\n\n    initProgress() {\n      const wrapperElement = this.component.wrapper.nativeElement;\n      const progress = this.progress = createDiv('k-loading-pdf-mask');\n      const overlay = cloneNode(wrapperElement);\n      progress.appendChild(overlay);\n      progress.appendChild(createDiv('k-loading-color'));\n      progress.appendChild(createElement$1('span', 'k-i-loading k-icon'));\n      this.originalHeight = wrapperElement.style.height;\n      this.originalOverflow = wrapperElement.style.overflow;\n      wrapperElement.style.height = wrapperElement.offsetHeight + 'px';\n      wrapperElement.style.overflow = 'hidden';\n      wrapperElement.appendChild(progress);\n      this.applyScroll(overlay);\n    }\n\n    applyScroll(overlay) {\n      const query = new GridQuery(this.component.wrapper.nativeElement);\n      const content = query.content();\n\n      if (content) {\n        const overlayQuery = new GridQuery(overlay);\n        const overlayContent = overlayQuery.content();\n        overlayContent.scrollTop = content.scrollTop;\n        overlayContent.scrollLeft = content.scrollLeft;\n        overlayQuery.header().scrollLeft = query.header().scrollLeft;\n        const footer = query.footer();\n\n        if (footer) {\n          overlayQuery.footer().scrollLeft = footer.scrollLeft;\n        }\n\n        const lockedContent = query.content(true);\n\n        if (lockedContent) {\n          const overlayLockedContent = overlayQuery.content(true);\n          overlayLockedContent.scrollTop = lockedContent.scrollTop;\n          overlayLockedContent.scrollLeft = lockedContent.scrollLeft;\n        }\n      }\n    }\n\n    draw() {\n      this.createExportElement(element => {\n        this.save(element, this.fileName);\n      });\n    }\n\n    createExportGroup(promise) {\n      this.createExportElement(element => {\n        this.exportElement(element).then(group => promise.resolve(group));\n      });\n    }\n\n    createExportElement(callback) {\n      this.ngZone.runOutsideAngular(() => {\n        const container = this.container = createDiv('k-grid-pdf-export-element');\n        const element = exportElement(this.component.wrapper.nativeElement);\n        container.appendChild(element);\n        document.body.appendChild(container);\n        callback(element);\n      });\n    }\n\n    drawOptions() {\n      const options = super.drawOptions();\n      options._destructive = true;\n      return options;\n    }\n\n    cleanup() {\n      super.cleanup();\n      this.pdfService.exporting = false;\n\n      if (this.component) {\n        const originalColumns = this.originalColumns;\n        delete this.originalColumns;\n\n        if (this.renderAllPages) {\n          this.changePage(this.skip, this.pageSize, this.reset, originalColumns);\n        } else if (originalColumns || this.component.virtualColumns) {\n          this.changeColumns(originalColumns, this.reset);\n        } else {\n          this.reset();\n        }\n      } else {\n        this.reset();\n      }\n\n      this.removeContainer();\n    }\n\n    removeContainer() {\n      if (this.container) {\n        document.body.removeChild(this.container);\n        delete this.container;\n      }\n    }\n\n    changePage(skip, _take, callback, columns) {\n      this.ngZone.run(() => {\n        this.pdfService.dataChanged.pipe(take(1)).subscribe(() => {\n          if (columns && columns.length || this.component.virtualColumns) {\n            this.changeColumns(columns, callback);\n          } else {\n            this.onStable(callback);\n          }\n        });\n        this.component.notifyPageChange('pdf', {\n          skip: skip,\n          take: _take\n        });\n      });\n    }\n\n    changeColumns(columns, callback) {\n      this.ngZone.run(() => {\n        this.onStable(callback);\n\n        if (columns && columns.length) {\n          this.component.columns.reset(columns);\n        }\n      });\n    }\n\n    reset() {\n      this.suspendService.scroll = false;\n      this.renderAllPages = false;\n\n      if (!this.component) {\n        return;\n      }\n\n      const wrapperElement = this.component.wrapper.nativeElement;\n      wrapperElement.removeChild(this.progress);\n      wrapperElement.style.height = this.originalHeight;\n      wrapperElement.style.overflow = this.originalOverflow;\n      delete this.progress;\n      delete this.component;\n    }\n\n    onStable(callback) {\n      // not sure if it is an actual scenario. occurs in the tests.\n      // onStable is triggered in the same pass without the change detection.\n      // thus, the callback is called before the changes are applied without the timeout.\n      setTimeout(() => {\n        let onStable = this.ngZone.onStable.asObservable().pipe(take(1));\n\n        if (this.delay > 0) {\n          onStable = onStable.pipe(delay(this.delay));\n        }\n\n        onStable.subscribe(callback);\n      }, 0); // tslint:disable-line: align\n    }\n\n  };\n\n  PDFComponent.ɵfac = function PDFComponent_Factory(t) {\n    return new (t || PDFComponent)(ɵngcc0.ɵɵdirectiveInject(PDFService), ɵngcc0.ɵɵdirectiveInject(SuspendService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  PDFComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PDFComponent,\n    selectors: [[\"kendo-grid-pdf\"]],\n    contentQueries: function PDFComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, PDFMarginComponent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, PDFTemplateDirective, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnBase$1, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.marginComponent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.pageTemplateDirective = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columns = _t);\n      }\n    },\n    inputs: {\n      delay: \"delay\",\n      allPages: \"allPages\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function PDFComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], PDFComponent.prototype, \"allPages\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], PDFComponent.prototype, \"delay\", void 0);\n\n  __decorate([ContentChildren(ColumnBase$1), __metadata(\"design:type\", QueryList)], PDFComponent.prototype, \"columns\", void 0);\n\n  __decorate([ContentChild(PDFMarginComponent, {\n    static: false\n  }), __metadata(\"design:type\", PDFMarginComponent)], PDFComponent.prototype, \"marginComponent\", void 0);\n\n  __decorate([ContentChild(PDFTemplateDirective, {\n    static: false\n  }), __metadata(\"design:type\", PDFTemplateDirective)], PDFComponent.prototype, \"pageTemplateDirective\", void 0);\n\n  PDFComponent = __decorate([__metadata(\"design:paramtypes\", [PDFService, SuspendService, NgZone, ElementRef])], PDFComponent);\n  /**\n   * Represents the `export-to-PDF` command of the Grid.\n   * You can apply this directive to any `button` element inside a\n   * [ToolbarTemplate]({% slug api_grid_commandcolumncomponent %}).\n   * When the user clicks a button that is associated with the directive, the\n   * [pdfExport]({% slug api_grid_gridcomponent %}#toc-pdfexport) event\n   * fires ([see example]({% slug pdfexport_grid %})).\n   *\n   * @example\n   * ```html-no-run\n   * <kendo-grid>\n   *      <ng-template kendoGridToolbarTemplate>\n   *          <button kendoGridPDFCommand>Export to PDF</button>\n   *      </ng-template>\n   *      <kendo-grid-pdf fileName=\"Grid.pdf\">\n   *      </kendo-grid-pdf>\n   * </kendo-grid>\n   * ```\n   */\n\n  return PDFComponent;\n})();\nlet PDFCommandDirective = /*#__PURE__*/(() => {\n  let PDFCommandDirective = class PDFCommandDirective extends Button {\n    constructor(pdfService, element, renderer, localization, ngZone) {\n      super(element, renderer, null, localization, ngZone);\n      this.pdfService = pdfService;\n      this.ngZone = ngZone;\n    }\n    /**\n     * @hidden\n     */\n\n\n    onClick(e) {\n      e.preventDefault();\n      this.pdfService.exportClick.emit();\n    }\n    /**\n     * @hidden\n     */\n\n\n    get pdfClass() {\n      return true;\n    }\n\n  };\n\n  PDFCommandDirective.ɵfac = function PDFCommandDirective_Factory(t) {\n    return new (t || PDFCommandDirective)(ɵngcc0.ɵɵdirectiveInject(PDFService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  PDFCommandDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: PDFCommandDirective,\n    selectors: [[\"\", \"kendoGridPDFCommand\", \"\"]],\n    hostVars: 2,\n    hostBindings: function PDFCommandDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function PDFCommandDirective_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-grid-pdf\", ctx.pdfClass);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([HostListener('click', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], PDFCommandDirective.prototype, \"onClick\", null);\n\n  __decorate([HostBinding('class.k-grid-pdf'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], PDFCommandDirective.prototype, \"pdfClass\", null);\n\n  PDFCommandDirective = __decorate([__metadata(\"design:paramtypes\", [PDFService, ElementRef, Renderer2, LocalizationService, NgZone])], PDFCommandDirective);\n  return PDFCommandDirective;\n})();\nconst exportedModules$5 = [PDFComponent, PDFMarginComponent, PDFCommandDirective, PDFTemplateDirective];\nconst declarations$1 = [PDFComponent, PDFMarginComponent, PDFCommandDirective, PDFTemplateDirective];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Grid PDF component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid and PDF modules\n * import { GridModule, PDFModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule, PDFModule], // import Grid and PDF modules\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\nlet PDFModule = /*#__PURE__*/(() => {\n  let PDFModule = class PDFModule {};\n\n  PDFModule.ɵfac = function PDFModule_Factory(t) {\n    return new (t || PDFModule)();\n  };\n\n  PDFModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: PDFModule\n  });\n  PDFModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  /**\n   * Arguments for the `excelExport` event.\n   */\n\n  return PDFModule;\n})();\n\nclass ExcelExportEvent extends PreventableEvent {\n  constructor(workbook) {\n    super();\n    this.workbook = workbook;\n  }\n\n}\n/* tslint:disable object-literal-sort-keys */\n\n\nconst fetchComponentData = component => {\n  return {\n    data: component.view.map(item => item),\n    group: component.group\n  };\n};\n\nconst toExcelColumn = column => {\n  return {\n    title: column.title,\n    field: column.field,\n    locked: Boolean(column.locked),\n    width: column.width,\n    level: column.level,\n    hidden: !column.isVisible,\n    groupHeaderTemplate: column.groupHeaderTemplate,\n    groupHeaderColumnTemplate: column.groupHeaderColumnTemplate,\n    groupFooterTemplate: column.groupFooterTemplate,\n    footerTemplate: column.footerTemplate\n  };\n};\n\nconst toExcelColumns = columns => {\n  const result = [];\n  sortColumns(columns).forEach(column => {\n    if (column.isSpanColumn) {\n      result.push(...toExcelColumns(column.childrenArray));\n    } else {\n      const excelColumn = toExcelColumn(column);\n\n      if (column.isColumnGroup) {\n        excelColumn.children = [excelColumn].concat(toExcelColumns(column.childrenArray));\n      }\n\n      result.push(excelColumn);\n    }\n  });\n  return result;\n};\n\nconst componentColumns = component => {\n  const columns = toExcelColumns(component.columns.toArray());\n  return orderBy(columns, [{\n    field: 'locked',\n    dir: 'desc'\n  }]);\n};\n/**\n * Configures the settings for the export of Grid in Excel ([see example]({% slug excelexport_grid %})).\n */\n\n\nlet ExcelComponent = /*#__PURE__*/(() => {\n  let ExcelComponent = class ExcelComponent {\n    constructor(excelService, localization, zone) {\n      this.localization = localization;\n      this.zone = zone;\n      /**\n       * Specifies the file name of the exported Excel file.\n       * @default \"Export.xlsx\"\n       */\n\n      this.fileName = 'Export.xlsx';\n      /**\n       * @hidden\n       */\n\n      this.columns = new QueryList();\n      this.saveSubscription = excelService.saveToExcel.subscribe(this.save.bind(this));\n    }\n\n    ngOnDestroy() {\n      this.saveSubscription.unsubscribe();\n\n      if (this.dataSubscription) {\n        this.dataSubscription.unsubscribe();\n      }\n    }\n\n    save(component) {\n      const data = (this.fetchData || fetchComponentData)(component);\n\n      const exportData = result => {\n        delete this.dataSubscription;\n        this.exportData(component, result);\n      };\n\n      if (data instanceof Promise) {\n        data.then(exportData);\n      } else if (data instanceof Observable) {\n        this.dataSubscription = data.pipe(take(1)).subscribe(exportData);\n      } else {\n        exportData(data);\n      }\n    }\n\n    exportData(component, result) {\n      const options = workbookOptions({\n        columns: this.columns.length ? this.columns : componentColumns(component),\n        data: result.data,\n        group: result.group,\n        filterable: this.filterable,\n        creator: this.creator,\n        date: this.date,\n        paddingCellOptions: this.paddingCellOptions,\n        headerPaddingCellOptions: this.headerPaddingCellOptions,\n        rtl: this.localization.rtl,\n        collapsible: this.collapsible\n      });\n      const args = new ExcelExportEvent(options);\n      component.excelExport.emit(args);\n\n      if (!args.isDefaultPrevented()) {\n        this.zone.runOutsideAngular(() => this.saveFile(options));\n      }\n    }\n\n    saveFile(options) {\n      toDataURL(options).then(dataURL => {\n        saveAs(dataURL, this.fileName, {\n          forceProxy: this.forceProxy,\n          proxyURL: this.proxyURL\n        });\n      });\n    }\n\n  };\n\n  ExcelComponent.ɵfac = function ExcelComponent_Factory(t) {\n    return new (t || ExcelComponent)(ɵngcc0.ɵɵdirectiveInject(ExcelService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  ExcelComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ExcelComponent,\n    selectors: [[\"kendo-grid-excel\"]],\n    contentQueries: function ExcelComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnBase, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columns = _t);\n      }\n    },\n    inputs: {\n      fileName: \"fileName\",\n      filterable: \"filterable\",\n      creator: \"creator\",\n      date: \"date\",\n      forceProxy: \"forceProxy\",\n      proxyURL: \"proxyURL\",\n      fetchData: \"fetchData\",\n      paddingCellOptions: \"paddingCellOptions\",\n      headerPaddingCellOptions: \"headerPaddingCellOptions\",\n      collapsible: \"collapsible\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function ExcelComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ExcelComponent.prototype, \"fileName\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ExcelComponent.prototype, \"filterable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ExcelComponent.prototype, \"creator\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Date)], ExcelComponent.prototype, \"date\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ExcelComponent.prototype, \"forceProxy\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ExcelComponent.prototype, \"proxyURL\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Function)], ExcelComponent.prototype, \"fetchData\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ExcelComponent.prototype, \"paddingCellOptions\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], ExcelComponent.prototype, \"headerPaddingCellOptions\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ExcelComponent.prototype, \"collapsible\", void 0);\n\n  __decorate([ContentChildren(ColumnBase, {\n    descendants: true\n  }), __metadata(\"design:type\", QueryList)], ExcelComponent.prototype, \"columns\", void 0);\n\n  ExcelComponent = __decorate([__metadata(\"design:paramtypes\", [ExcelService, LocalizationService, NgZone])], ExcelComponent);\n  /**\n   * Represents the `export-to-Excel` command of the Grid. You can apply this\n   * directive to any `button` element inside a\n   * [ToolbarTemplate]({% slug api_grid_commandcolumncomponent %}).\n   * When the user clicks a button associated with the directive, the\n   * [excelExport]({% slug api_grid_gridcomponent %}#toc-excelexport) event\n   * fires ([see example]({% slug excelexport_grid %})).\n   *\n   * @example\n   * ```html-no-run\n   * <kendo-grid>\n   *      <ng-template kendoGridToolbarTemplate>\n   *          <button kendoGridExcelCommand>Export to PDF</button>\n   *      </ng-template>\n   *      <kendo-grid-excel fileName=\"Grid.xlsx\">\n   *      </kendo-grid-excel>\n   * </kendo-grid>\n   * ```\n   */\n\n  return ExcelComponent;\n})();\nlet ExcelCommandDirective = /*#__PURE__*/(() => {\n  let ExcelCommandDirective = class ExcelCommandDirective extends Button {\n    constructor(excelService, element, renderer, localization, ngZone) {\n      super(element, renderer, null, localization, ngZone);\n      this.excelService = excelService;\n      this.ngZone = ngZone;\n    }\n    /**\n     * @hidden\n     */\n\n\n    onClick(e) {\n      e.preventDefault();\n      this.excelService.exportClick.emit();\n    }\n    /**\n     * @hidden\n     */\n\n\n    get excelClass() {\n      return true;\n    }\n\n  };\n\n  ExcelCommandDirective.ɵfac = function ExcelCommandDirective_Factory(t) {\n    return new (t || ExcelCommandDirective)(ɵngcc0.ɵɵdirectiveInject(ExcelService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  ExcelCommandDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ExcelCommandDirective,\n    selectors: [[\"\", \"kendoGridExcelCommand\", \"\"]],\n    hostVars: 2,\n    hostBindings: function ExcelCommandDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ExcelCommandDirective_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-grid-excel\", ctx.excelClass);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([HostListener('click', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], ExcelCommandDirective.prototype, \"onClick\", null);\n\n  __decorate([HostBinding('class.k-grid-excel'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ExcelCommandDirective.prototype, \"excelClass\", null);\n\n  ExcelCommandDirective = __decorate([__metadata(\"design:paramtypes\", [ExcelService, ElementRef, Renderer2, LocalizationService, NgZone])], ExcelCommandDirective);\n  return ExcelCommandDirective;\n})();\nconst declarations$2 = [ExcelComponent, ExcelCommandDirective];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Excel component of the Grid.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid and Excel modules\n * import { GridModule, ExcelModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule, ExcelModule], // import Grid and Excel modules\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\nlet ExcelModule = /*#__PURE__*/(() => {\n  let ExcelModule = class ExcelModule {};\n\n  ExcelModule.ɵfac = function ExcelModule_Factory(t) {\n    return new (t || ExcelModule)();\n  };\n\n  ExcelModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ExcelModule\n  });\n  ExcelModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [ExcelExportModule]\n  });\n  return ExcelModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SharedModule, {\n    declarations: function () {\n      return [ColumnComponent, ColumnGroupComponent, LogicalCellDirective, LogicalRowDirective, FocusableDirective, FooterTemplateDirective, ColGroupComponent, ResizableContainerDirective, TemplateContextDirective, FieldAccessorPipe, DetailTemplateDirective, SpanColumnComponent, TableDirective, LoadingComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [ColumnComponent, ColumnGroupComponent, LogicalCellDirective, LogicalRowDirective, FocusableDirective, FooterTemplateDirective, ColGroupComponent, ResizableContainerDirective, TemplateContextDirective, FieldAccessorPipe, DetailTemplateDirective, SpanColumnComponent, TableDirective, LoadingComponent, DraggableModule, EventsModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SharedFilterModule, {\n    declarations: [FilterCellOperatorsComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, AfterFilterOperatorComponent, AfterEqFilterOperatorComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, FilterInputDirective],\n    imports: [CommonModule, ReactiveFormsModule, FormsModule, DropDownListModule, AutoCompleteModule, InputsModule, DatePickerModule, PopupModule, SharedModule],\n    exports: [FilterCellOperatorsComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, AfterFilterOperatorComponent, AfterEqFilterOperatorComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, CommonModule, ReactiveFormsModule, FormsModule, DropDownListModule, AutoCompleteModule, InputsModule, DatePickerModule, PopupModule, SharedModule, FilterInputDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RowFilterModule, {\n    declarations: [FilterRowComponent, FilterCellComponent, FilterCellTemplateDirective, StringFilterCellComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, BooleanFilterCellComponent, FilterCellHostDirective, FilterCellWrapperComponent, DateFilterCellComponent],\n    imports: [SharedFilterModule],\n    exports: [FilterRowComponent, FilterCellComponent, FilterCellTemplateDirective, StringFilterCellComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, BooleanFilterCellComponent, FilterCellHostDirective, FilterCellWrapperComponent, DateFilterCellComponent, SharedFilterModule]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PagerModule, {\n    declarations: [PagerComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, PagerTemplateDirective, PagerDropDownListDirective, PagerInputDirective],\n    imports: [CommonModule, InputsModule, LabelModule, DropDownsModule, ResizeSensorModule, SharedModule],\n    exports: [PagerComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, PagerTemplateDirective, PagerDropDownListDirective, PagerInputDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragAndDropModule, {\n    declarations: [DraggableColumnDirective, DropTargetDirective],\n    exports: [DraggableColumnDirective, DropTargetDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GroupModule, {\n    declarations: function () {\n      return [GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective, GroupHeaderComponent, GroupPanelComponent, GroupIndicatorComponent];\n    },\n    imports: function () {\n      return [CommonModule, SharedModule, DragAndDropModule];\n    },\n    exports: function () {\n      return [GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective, GroupHeaderComponent, GroupPanelComponent, GroupIndicatorComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FilterMenuModule, {\n    declarations: [FilterMenuComponent, FilterMenuContainerComponent, FilterMenuInputWrapperComponent, StringFilterMenuInputComponent, StringFilterMenuComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, NumericFilterMenuInputComponent, DateFilterMenuInputComponent, DateFilterMenuComponent, FilterMenuHostDirective, BooleanFilterMenuComponent, FilterMenuDropDownListDirective, BooleanFilterRadioButtonDirective],\n    imports: [SharedFilterModule],\n    exports: [FilterMenuComponent, FilterMenuContainerComponent, FilterMenuInputWrapperComponent, StringFilterMenuInputComponent, StringFilterMenuComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, NumericFilterMenuInputComponent, DateFilterMenuInputComponent, DateFilterMenuComponent, FilterMenuHostDirective, BooleanFilterMenuComponent, FilterMenuDropDownListDirective, BooleanFilterRadioButtonDirective, SharedFilterModule]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ColumnMenuModule, {\n    declarations: function () {\n      return [ColumnListComponent, ColumnChooserComponent, ColumnMenuChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuSortComponent, ColumnMenuComponent, ColumnMenuLockComponent, ColumnMenuTemplateDirective, ColumnMenuContainerComponent, ColumnMenuItemDirective, ColumnMenuStickComponent, ColumnMenuPositionComponent];\n    },\n    imports: function () {\n      return [CommonModule, FilterMenuModule];\n    },\n    exports: function () {\n      return [ColumnListComponent, ColumnChooserComponent, ColumnMenuChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuSortComponent, ColumnMenuComponent, ColumnMenuLockComponent, ColumnMenuTemplateDirective, ColumnMenuContainerComponent, ColumnMenuItemDirective, ColumnMenuStickComponent, ColumnMenuPositionComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HeaderModule, {\n    declarations: [HeaderComponent, HeaderTemplateDirective, ColumnHandleDirective, SelectAllCheckboxDirective],\n    imports: [CommonModule, GroupModule, RowFilterModule, FilterMenuModule, SharedModule, DragAndDropModule, ColumnMenuModule],\n    exports: [HeaderComponent, HeaderTemplateDirective, ColumnHandleDirective, SelectAllCheckboxDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BodyModule, {\n    declarations: [CommandColumnComponent, CheckboxColumnComponent, SelectionCheckboxDirective, CellTemplateDirective, EditTemplateDirective, TableBodyComponent, NoRecordsTemplateDirective, CellComponent, EditCommandDirective, CancelCommandDirective, SaveCommandDirective, RemoveCommandDirective, AddCommandDirective, CellLoadingTemplateDirective],\n    imports: [CommonModule, ReactiveFormsModule, FormsModule, SharedModule, GroupModule, NumericTextBoxModule, DatePickerModule, ResizeSensorModule],\n    exports: [CommandColumnComponent, CheckboxColumnComponent, SelectionCheckboxDirective, CellTemplateDirective, EditTemplateDirective, TableBodyComponent, NoRecordsTemplateDirective, CellComponent, EditCommandDirective, CancelCommandDirective, SaveCommandDirective, RemoveCommandDirective, AddCommandDirective, CellLoadingTemplateDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FooterModule, {\n    declarations: [FooterComponent],\n    imports: [CommonModule, SharedModule],\n    exports: [FooterComponent]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GridModule, {\n    declarations: function () {\n      return [GridComponent, ListComponent, ToolbarComponent, LocalizedMessagesDirective, CustomMessagesComponent, DataBindingDirective, ToolbarTemplateDirective, SelectionDirective, TemplateEditingDirective, ReactiveEditingDirective, InCellEditingDirective, ExpandDetailsDirective, ExpandGroupDirective, GroupBindingDirective, GridMarqueeDirective, GridSpacerComponent];\n    },\n    imports: function () {\n      return [CommonModule, GroupModule, SharedModule, BodyModule, HeaderModule, FooterModule, PagerModule, RowFilterModule, FilterMenuModule, ResizeSensorModule, ColumnMenuModule];\n    },\n    exports: function () {\n      return [GridComponent, ToolbarTemplateDirective, ToolbarComponent, GridSpacerComponent, DataBindingDirective, SelectionDirective, CustomMessagesComponent, GroupBindingDirective, TemplateEditingDirective, ReactiveEditingDirective, InCellEditingDirective, ExpandDetailsDirective, ExpandGroupDirective, GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective, ColumnComponent, SpanColumnComponent, ColumnGroupComponent, FooterTemplateDirective, DetailTemplateDirective, FocusableDirective, CommandColumnComponent, CheckboxColumnComponent, SelectionCheckboxDirective, CellTemplateDirective, NoRecordsTemplateDirective, EditTemplateDirective, EditCommandDirective, CancelCommandDirective, SaveCommandDirective, RemoveCommandDirective, AddCommandDirective, CellLoadingTemplateDirective, HeaderTemplateDirective, SelectAllCheckboxDirective, PagerComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, PagerTemplateDirective, PagerDropDownListDirective, PagerInputDirective, FilterRowComponent, FilterCellComponent, FilterCellTemplateDirective, FilterCellOperatorsComponent, StringFilterCellComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, BooleanFilterCellComponent, DateFilterCellComponent, FilterCellOperatorsComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, AfterFilterOperatorComponent, AfterEqFilterOperatorComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, StringFilterMenuComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, DateFilterMenuComponent, BooleanFilterMenuComponent, FilterMenuDropDownListDirective, BooleanFilterRadioButtonDirective, FilterCellOperatorsComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, AfterFilterOperatorComponent, AfterEqFilterOperatorComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, ColumnChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuSortComponent, ColumnMenuLockComponent, ColumnMenuStickComponent, ColumnMenuPositionComponent, ColumnMenuChooserComponent, ColumnMenuTemplateDirective, ColumnMenuContainerComponent, ColumnMenuItemDirective, ColumnMenuComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PDFModule, {\n    declarations: [PDFComponent, PDFMarginComponent, PDFCommandDirective, PDFTemplateDirective],\n    exports: [PDFComponent, PDFMarginComponent, PDFCommandDirective, PDFTemplateDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ExcelModule, {\n    declarations: function () {\n      return [ExcelComponent, ExcelCommandDirective];\n    },\n    exports: function () {\n      return [ExcelComponent, ExcelCommandDirective, ExcelExportModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ColumnChooserComponent, ColumnListComponent, ColumnMenuChooserComponent, ColumnMenuContainerComponent, ColumnMenuFilterComponent, ColumnMenuItemBase, ColumnMenuItemContentTemplateDirective, ColumnMenuItemComponent, ColumnMenuItemDirective, ColumnMenuLockComponent, ColumnMenuPositionComponent, ColumnMenuSortComponent, ColumnMenuStickComponent, ColumnMenuTemplateDirective, ColumnMenuModule, ColumnMenuService, ColumnHandleDirective, ColumnResizingService, TableDirective, ColumnInfoService, DomEventsService, IdService, PreventableEvent, SortService, ChangeNotificationService, ColumnReorderService, DragAndDropModule, DragAndDropService, DragHintService, DraggableColumnDirective, DropCueService, DropTargetDirective, EditingDirectiveBase, RowEditingDirectiveBase, AddCommandDirective, CancelCommandDirective, EditCommandDirective, EditService as EditService$1, LocalDataChangesService, RemoveCommandDirective, SaveCommandDirective, ExcelCommandDirective, BooleanFilterComponent, BooleanFilterCellComponent, FilterCellHostDirective, FilterCellOperatorsComponent, FilterCellWrapperComponent, DateFilterComponent, FilterHostDirective, FilterInputWrapperComponent, FilterInputDirective, FilterRowComponent, DateFilterMenuInputComponent, FilterMenuContainerComponent, FilterMenuDropDownListDirective, FilterMenuHostDirective, FilterMenuInputWrapperComponent, FilterMenuComponent, BooleanFilterRadioButtonDirective, MenuTabbingService, NumericFilterMenuInputComponent, StringFilterMenuInputComponent, NumericFilterComponent, FilterOperatorBase, SharedFilterModule, StringFilterComponent, GroupHeaderComponent, GroupIndicatorComponent, GroupInfoService, GroupPanelComponent, GroupsService, BrowserSupportService, ResizeService, ResponsiveService, LocalizedMessagesDirective, Messages, FocusGroup, FOCUS_ROOT_ACTIVE, FocusRoot, LogicalCellDirective, LogicalRowDirective, NavigationService, PagerContextService, PagerDropDownListDirective, PagerElementComponent, PagerInputDirective, PDFCommandDirective, PDFTemplateDirective, CellComponent, CELL_CONTEXT, EMPTY_CELL_CONTEXT, FieldAccessorPipe, DetailsService, DEFAULT_SCROLLER_FACTORY, SCROLLER_FACTORY_TOKEN, ScrollRequestService, ScrollSyncService, ScrollerService, CellSelectionService, GridMarqueeDirective, SelectAllCheckboxDirective, SelectionCheckboxDirective, Selection, SelectionService, GridModule, SharedModule, GridComponent, ColumnBase$1 as ColumnBase, ColumnComponent, CommandColumnComponent, SpanColumnComponent, ColumnGroupComponent, CheckboxColumnComponent, ToolbarComponent, ToolbarTemplateDirective, CellTemplateDirective, CellLoadingTemplateDirective, HeaderTemplateDirective, FooterTemplateDirective, PagerTemplateDirective, GridSpacerComponent, ExpandDetailsDirective, ExpandGroupDirective, DetailTemplateDirective, DetailExpandEvent, DetailCollapseEvent, GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective, ResizableContainerDirective, TemplateContextDirective, NoRecordsTemplateDirective, DataBindingDirective, SelectionDirective, FilterService, FilterCellTemplateDirective, FilterCellComponent, StringFilterCellComponent, DateFilterCellComponent, BaseFilterCellComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, StringFilterMenuComponent, DateFilterMenuComponent, BooleanFilterMenuComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, AfterEqFilterOperatorComponent, AfterFilterOperatorComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, RowFilterModule, FilterMenuModule, BodyModule, GroupModule, HeaderModule, FooterModule, PagerModule, TemplateEditingDirective, ReactiveEditingDirective, InCellEditingDirective, EditTemplateDirective, ColGroupComponent, HeaderComponent, ListComponent, FooterComponent, TableBodyComponent, PagerComponent, CustomMessagesComponent, LoadingComponent, PDFModule, PDFComponent, PDFMarginComponent, PDFService, ExcelModule, ExcelComponent, ExcelService, ExcelExportEvent, CellCloseEvent, SuspendService, GroupBindingDirective, slice, count, Skip, ColumnReorderEvent, FocusableDirective, ColumnVisibilityChangeEvent, ColumnMenuComponent, ColumnLockedChangeEvent, ColumnStickyChangeEvent, SinglePopupService, PopupCloseEvent }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OzBJQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQU13QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzswSkFHcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzsrS0FHNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O3FJQUFFO0FBQ0Ysd0JBRUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7d1hBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBVUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OzJJQUFFO0FBQ0YsMEJBRUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7aUpBR2tCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzt1SUFBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztvSkFHbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztzS0FHeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OzZKQUFFO0FBQ0YsZ0NBRUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7MEpBQUU7QUFDRiwrQkFFRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztzS0FBRTtBQUNGLG1DQUVHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztXQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FJRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7cUpBQUU7QUFDRixvQ0FJRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7MEtBQUU7QUFDRiwyQ0FJRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7NExBQUU7QUFDRixpREFJRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7cUpBQUU7QUFDRixvQ0FJRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OzBLQUFFO0FBQ0YsMkNBSUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OzJKQUFFO0FBQ0Ysc0NBSUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OzJKQUFFO0FBQ0Ysc0NBSUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7dUtBQUU7QUFDRiwwQ0FJRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7OztzakJBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzt1S0FBRTtBQUNGLDBDQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzt1S0FBRTtBQUNGLDBDQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2lKQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBV0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztxSkFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBV0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7OztzSkFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBV0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OzROQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzt5S0FBRTtBQUNGLG9DQUVHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OzJQQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs4SEFBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O3FMQUFFO0FBQ0Ysd0NBRUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztvS0FBRTtBQUNGLHlDQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O2dLQUd1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7aUpBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O29KQUFFO0FBQ0YscUNBSUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O3dJQUdlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztvSkFHbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OzZKQUdzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs4SUFHaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztnTUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FJRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OzZKQUFFO0FBQ0YsZ0NBRUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O2lKQUdrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7eUtBRzBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Z0tBQUU7QUFDRixpQ0FFRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztnS0FHdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzt1SkFBRTtBQUNGLDhCQUVHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O29KQUdtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O3NLQUd5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7cUlBQUU7QUFDRix3QkFFRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs2SkFHc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzsrR0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7MEtBQUU7QUFDRiwyQ0FJRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tuQkFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFzZkc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MFBBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkF5R0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzsyVEFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7MExBQUU7QUFDRixpQ0FJRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7eWNBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUtHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OytaQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBS0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7a2xGQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O2tEQUFFO0FBQ0Ysd0VBVUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozt5SkFBRTtBQUNGLGtFQVdHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7MktBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQTRCRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozt3S0FBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFxQndCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzt5SEFBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7O1dBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztnVUFBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozt1TkFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FrQ0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O3dJQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OzttTUFBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7O2lHQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQWNHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OzBOQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7OztzTEFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FvQkc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswSEFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQThCRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7OzJIQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBa0JHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7MEdBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7K0lBQUU7QUFDRix5Q0F3Qkc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O3NhQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7dUxBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQW1DRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O3dFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQVlzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs2QkFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBU0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7MlFBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7cU1BQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBSUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O3dJQUFFO0FBQ0YseUJBRUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O2lEQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBU0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztzUkFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7dUhBQUU7QUFDRixnQ0FLRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OzJFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFJRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7d0hBT2lCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztpS0FBRTtBQUNGLGtGQVdHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7dUtBQUU7QUFDRiw4RkFXRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O2lLQUFFO0FBQ0Ysa0ZBV0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs4SkFBRTtBQUNGLDRFQVdHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Z0tBQUU7QUFDRixnRkFXRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O21LQUFFO0FBQ0Ysc0ZBV0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztrS0FBRTtBQUNGLG9GQVdHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7K0pBQUU7QUFDRiw4RUFXRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O2lLQUFFO0FBQ0Ysa0ZBV0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OzttS0FBRTtBQUNGLHNGQVdHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Z0tBQUU7QUFDRixnRkFXRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O3lLQUFFO0FBQ0Ysa0dBV0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs2SkFBRTtBQUNGLDBFQVdHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7c0tBQUU7QUFDRiw0RkFXRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OzhKQUFFO0FBQ0YsNEVBV0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztnS0FBRTtBQUNGLGdGQVdHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7aUtBQUU7QUFDRixrRkFXRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OytKQUFFO0FBQ0YsOEVBV0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7O3NDQU91QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OzBMQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7c01BQUU7QUFDRixzQ0FJRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7c0hBUW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OytJQUFFO0FBQ0Ysa0NBRUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztnS0FBRTtBQUNGLHlDQUVHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs2UkFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBcURHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztxR0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttR0FBRTtBQUNGLHdDQTJDRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O21HQUFFO0FBQ0Ysd0NBNkNHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnSUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0E4REc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswS0FBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBNkJHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7aURBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FNRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7cUtBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBbUJHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O2dHQU9nQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7OzZMQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBb0VHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztzT0FBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBSUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7dU5BQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBNkNHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7OztpREFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFnQjRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztnR0FBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OzttRUFNc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7eUhBT2dCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O2lIQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQXlCRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs2SkFBRTtBQUNGLGdDQUVHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dWQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQTZERztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Mm1CQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkEwTkc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OzZEQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztpSUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBQQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0E4Q0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7O2tJQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBa0JHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7dUtBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBdUJHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7OzsrS0FBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBbUNHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7O2dMQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FrREc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7OztnTEFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FvQ0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7NktBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQXdERztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7ME5BQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUVHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7OzhGQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBc0JHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs0UkFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FJRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O3dLQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQXdDRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzsyT0FBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBRUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7dUhBUXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dGQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FlRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7O2dFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQXlCRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7MkNBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7eUpBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQTJCRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7OztrS0FBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBeUJHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzt3TUFBRTtBQUNGLHFEQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQThDNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7OztvRUFBRTtBQUNGLHNDQWtCRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7b0VBQUU7QUFDRixzQ0FZRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7b01BQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQTBCRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7NE9BQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUVHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7OzZCQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FPRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O29FQUFFO0FBQ0YsdUNBUUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OzsrR0FPcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7aUdBT2lCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozt3SkFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBV0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7O3lKQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQVdHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OytFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7OztpU0FBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBNk5HO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs4WkFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkEyRUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OzBEQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBSUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OzBEQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBSUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OzBEQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBSUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OzBEQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBSUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7MERBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBSUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7K0ZBT2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7OzZLQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQThDRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztpR0FPaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztpRkFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFZRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O3FMQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O3dKQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzt1UkFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBSUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzsyUkFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBSUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzttUkFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBSUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O2dUQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUVHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7O2NBbUJlO0FBQ2Y7QUFDQTtBQUNBOzt3UkFNdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztpTUFBRTtBQUNGLG1DQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozt3TUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFLRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OzswREFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FJRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OzJEQU1jO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7MllBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBS0c7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OzBEQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUlHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIxIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IF9fZGVjb3JhdGUsIF9fbWV0YWRhdGEsIF9fcGFyYW0gfSBmcm9tICd0c2xpYic7XG5pbXBvcnQgeyBJbmplY3Rpb25Ub2tlbiwgSG9zdEJpbmRpbmcsIElucHV0LCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5qZWN0YWJsZSwgT3B0aW9uYWwsIEluamVjdCwgRGlyZWN0aXZlLCBTa2lwU2VsZiwgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBOZ1pvbmUsIENoYW5nZURldGVjdG9yUmVmLCBUZW1wbGF0ZVJlZiwgUXVlcnlMaXN0LCBDb250ZW50Q2hpbGRyZW4sIENvbnRlbnRDaGlsZCwgZm9yd2FyZFJlZiwgSG9zdCwgT3V0cHV0LCBpc0Rldk1vZGUsIFNlY3VyaXR5Q29udGV4dCwgVmlld0NoaWxkLCBWaWV3Q2hpbGRyZW4sIFZpZXdFbmNhcHN1bGF0aW9uLCBTZWxmLCBWaWV3Q29udGFpbmVyUmVmLCBQaXBlLCBOZ01vZHVsZSwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBIb3N0TGlzdGVuZXIsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpc0RvY3VtZW50QXZhaWxhYmxlLCBLZXlzLCBEcmFnZ2FibGVEaXJlY3RpdmUsIGlzQ2hhbmdlZCwgYW55Q2hhbmdlZCwgaGFzT2JzZXJ2ZXJzLCBSZXNpemVTZW5zb3JDb21wb25lbnQsIEtlbmRvSW5wdXQsIERyYWdnYWJsZU1vZHVsZSwgRXZlbnRzTW9kdWxlLCBSZXNpemVTZW5zb3JNb2R1bGUsIGd1aWQgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1jb21tb24nO1xuaW1wb3J0IHsgbWVyZ2UsIG9mLCBTdWJqZWN0LCBTdWJzY3JpcHRpb24sIGZyb20sIGludGVydmFsLCBmcm9tRXZlbnQsIHppcCwgQmVoYXZpb3JTdWJqZWN0LCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25TZXJ2aWNlLCBMMTBOX1BSRUZJWCwgQ29tcG9uZW50TWVzc2FnZXMgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sMTBuJztcbmltcG9ydCB7IHN3aXRjaE1hcCwgdGFrZSwgZmlsdGVyLCB0YWtlVW50aWwsIG1hcCwgc3dpdGNoTWFwVG8sIGRlbGF5LCBhdWRpdFRpbWUsIGRpc3RpbmN0VW50aWxDaGFuZ2VkLCB0YXAsIHRocm90dGxlVGltZSwgZGVib3VuY2VUaW1lLCBidWZmZXJDb3VudCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBGb3JtQ29udHJvbCwgRm9ybUdyb3VwLCBOR19WQUxVRV9BQ0NFU1NPUiwgUmVhY3RpdmVGb3Jtc01vZHVsZSwgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyB2YWxpZGF0ZVBhY2thZ2UgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tbGljZW5zaW5nJztcbmltcG9ydCB7IG9yZGVyQnksIHByb2Nlc3MsIGlzQ29tcG9zaXRlRmlsdGVyRGVzY3JpcHRvciwgZmlsdGVyQnkgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tZGF0YS1xdWVyeSc7XG5pbXBvcnQgeyBQb3B1cFNlcnZpY2UsIFBvcHVwTW9kdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItcG9wdXAnO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBnZXR0ZXIgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tY29tbW9uJztcbmltcG9ydCB7IERyb3BEb3duTGlzdENvbXBvbmVudCwgRHJvcERvd25MaXN0TW9kdWxlLCBBdXRvQ29tcGxldGVNb2R1bGUsIERyb3BEb3duc01vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWRyb3Bkb3ducyc7XG5pbXBvcnQgeyBJbnB1dHNNb2R1bGUsIE51bWVyaWNUZXh0Qm94Q29tcG9uZW50LCBOdW1lcmljVGV4dEJveE1vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWlucHV0cyc7XG5pbXBvcnQgeyBEYXRlUGlja2VyTW9kdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItZGF0ZWlucHV0cyc7XG5pbXBvcnQgeyBJbnRsU2VydmljZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWludGwnO1xuaW1wb3J0IHsgTGFiZWxNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sYWJlbCc7XG5pbXBvcnQgeyB0cmlnZ2VyLCBzdGF0ZSwgc3R5bGUsIHRyYW5zaXRpb24sIGFuaW1hdGUgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWJ1dHRvbnMnO1xuaW1wb3J0IHsgUERGRXhwb3J0TWFyZ2luQ29tcG9uZW50LCBQREZFeHBvcnRUZW1wbGF0ZURpcmVjdGl2ZSwgUERGRXhwb3J0Q29tcG9uZW50IH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItcGRmLWV4cG9ydCc7XG5pbXBvcnQgeyBzYXZlQXMgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tZmlsZS1zYXZlcic7XG5pbXBvcnQgeyB3b3JrYm9va09wdGlvbnMsIHRvRGF0YVVSTCwgQ29sdW1uQmFzZSwgRXhjZWxFeHBvcnRNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1leGNlbC1leHBvcnQnO1xuXG5jb25zdCBFTVBUWV9SRUdFWCA9IC9eXFxzKiQvO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGlzUHJlc2VudCA9ICh2YWx1ZSkgPT4gdmFsdWUgIT09IG51bGwgJiYgdmFsdWUgIT09IHVuZGVmaW5lZDtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBpc0JsYW5rID0gKHZhbHVlKSA9PiB2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGlzQXJyYXkgPSAodmFsdWUpID0+IEFycmF5LmlzQXJyYXkodmFsdWUpO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGlzVHJ1dGh5ID0gKHZhbHVlKSA9PiAhIXZhbHVlO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGlzTnVsbE9yRW1wdHlTdHJpbmcgPSAodmFsdWUpID0+IGlzQmxhbmsodmFsdWUpIHx8IEVNUFRZX1JFR0VYLnRlc3QodmFsdWUpO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IG9ic2VydmUgPSAobGlzdCkgPT4gbWVyZ2Uob2YobGlzdCksIGxpc3QuY2hhbmdlcyk7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgaXNVbml2ZXJzYWwgPSAoKSA9PiB0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGlzU3RyaW5nID0gKHZhbHVlKSA9PiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGlzTnVtYmVyID0gKHZhbHVlKSA9PiB0eXBlb2YgdmFsdWUgPT09IFwibnVtYmVyXCIgJiYgIWlzTmFOKHZhbHVlKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBleHRyYWN0Rm9ybWF0ID0gKGZvcm1hdCkgPT4ge1xuICAgIGlmIChpc1N0cmluZyhmb3JtYXQpICYmICFpc051bGxPckVtcHR5U3RyaW5nKGZvcm1hdCkgJiYgZm9ybWF0LnN0YXJ0c1dpdGgoJ3swOicpKSB7XG4gICAgICAgIHJldHVybiBmb3JtYXQuc2xpY2UoMywgZm9ybWF0Lmxlbmd0aCAtIDEpO1xuICAgIH1cbiAgICByZXR1cm4gZm9ybWF0O1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBub3QgPSAoZm4pID0+ICguLi5hcmdzKSA9PiAhZm4uYXBwbHkobnVsbCwgYXJncyk7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3Qgb3IgPSAoLi4uY29uZGl0aW9ucykgPT4gKHZhbHVlKSA9PiBjb25kaXRpb25zLnJlZHVjZSgoYWNjLCB4KSA9PiBhY2MgfHwgeCh2YWx1ZSksIGZhbHNlKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBhbmQgPSAoLi4uY29uZGl0aW9ucykgPT4gKHZhbHVlKSA9PiBjb25kaXRpb25zLnJlZHVjZSgoYWNjLCB4KSA9PiBhY2MgJiYgeCh2YWx1ZSksIHRydWUpO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IFNraXAgPSBuZXcgSW5qZWN0aW9uVG9rZW4oXCJTa2lwXCIpOyAvLyB0c2xpbnQ6ZGlzYWJsZS1saW5lOnZhcmlhYmxlLW5hbWVcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBjcmVhdGVQcm9taXNlID0gKCkgPT4ge1xuICAgIGxldCByZXNvbHZlRm4sIHJlamVjdEZuO1xuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIHJlc29sdmVGbiA9IChkYXRhKSA9PiB7XG4gICAgICAgICAgICByZXNvbHZlKGRhdGEpO1xuICAgICAgICAgICAgcmV0dXJuIHByb21pc2U7XG4gICAgICAgIH07XG4gICAgICAgIHJlamVjdEZuID0gKGRhdGEpID0+IHtcbiAgICAgICAgICAgIHJlamVjdChkYXRhKTtcbiAgICAgICAgICAgIHJldHVybiBwcm9taXNlO1xuICAgICAgICB9O1xuICAgIH0pO1xuICAgIHByb21pc2UucmVzb2x2ZSA9IHJlc29sdmVGbjtcbiAgICBwcm9taXNlLnJlamVjdCA9IHJlamVjdEZuO1xuICAgIHJldHVybiBwcm9taXNlO1xufTtcbi8qKiBAaGlkZGVuICovXG5jb25zdCBpdGVyYXRvciA9IGdldEl0ZXJhdG9yKCk7XG4vLyBUT0RPOiBNb3ZlIHRvIGtlbmRvLWNvbW1vblxuZnVuY3Rpb24gZ2V0SXRlcmF0b3IoKSB7XG4gICAgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgU3ltYm9sLml0ZXJhdG9yKSB7XG4gICAgICAgIHJldHVybiBTeW1ib2wuaXRlcmF0b3I7XG4gICAgfVxuICAgIGNvbnN0IGtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhNYXAucHJvdG90eXBlKTtcbiAgICBjb25zdCBwcm90byA9IE1hcC5wcm90b3R5cGU7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIGNvbnN0IGtleSA9IGtleXNbaV07XG4gICAgICAgIGlmIChrZXkgIT09ICdlbnRyaWVzJyAmJiBrZXkgIT09ICdzaXplJyAmJiBwcm90b1trZXldID09PSBwcm90by5lbnRyaWVzKSB7XG4gICAgICAgICAgICByZXR1cm4ga2V5O1xuICAgICAgICB9XG4gICAgfVxufVxuY29uc3QgRlJBTUVfRFVSQVRJT04gPSAxMDAwIC8gNjA7XG5jb25zdCB3bmQgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IHt9O1xuLyoqIEBoaWRkZW4gKi9cbmNvbnN0IHJlcXVlc3RBbmltYXRpb25GcmFtZSA9IHduZC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHwgd25kLm1zUmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8IChjYWxsYmFjayA9PiBzZXRUaW1lb3V0KGNhbGxiYWNrLCBGUkFNRV9EVVJBVElPTikpO1xuLyoqIEBoaWRkZW4gKi9cbmNvbnN0IGNhbmNlbEFuaW1hdGlvbkZyYW1lID0gd25kLmNhbmNlbEFuaW1hdGlvbkZyYW1lIHx8IHduZC5tc0NhbmNlbFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCBjbGVhclRpbWVvdXQ7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgZGV0ZWN0SUUgPSAoKSA9PiB7XG4gICAgaWYgKCFpc0RvY3VtZW50QXZhaWxhYmxlKCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuICAgIGNvbnN0IG1zaWUgPSB1YS5pbmRleE9mKCdNU0lFICcpO1xuICAgIGNvbnN0IHRyaWRlbnQgPSB1YS5pbmRleE9mKCdUcmlkZW50LycpO1xuICAgIHJldHVybiBtc2llID4gMCB8fCB0cmlkZW50ID4gMDtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3Qgbm9kZXNUb0FycmF5ID0gKG5vZGVzKSA9PiBbXS5zbGljZS5jYWxsKG5vZGVzKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCByZXBsYWNlTWVzc2FnZVBsYWNlaG9sZGVyID0gKG1lc3NhZ2UsIG5hbWUsIHZhbHVlKSA9PiBtZXNzYWdlLnJlcGxhY2UobmV3IFJlZ0V4cChgXFx7XFxcXHMqJHtuYW1lfVxcXFxzKlxcfWAsICdnJyksIHZhbHVlKTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBLZW5kbyBVSSBHcmlkU3BhY2VyIGNvbXBvbmVudCBmb3IgQW5ndWxhci5cbiAqIFVzZWQgdG8gZ2l2ZSBhZGRpdGlvbmFsIHdoaXRlIHNwYWNlIGJldHdlZW4gdGhlIFBhZ2VyIGlubmVyIGVsZW1lbnRzLFxuICogYW5kIHByb3ZpZGVzIGEgd2F5IGZvciBjdXN0b21pemluZyB0aGUgc3BhY2VyIHdpZHRoLlxuICogSXQgY2FuIGFsc28gYmUgdXNlZCBpbiBhbnkgZmxleCBjb250YWluZXIgd2l0aGluIHRoZSBHcmlkLlxuICovXG5sZXQgR3JpZFNwYWNlckNvbXBvbmVudCA9IGNsYXNzIEdyaWRTcGFjZXJDb21wb25lbnQge1xuICAgIC8qKlxuICAgICAqIFJlcHJlc2VudHMgdGhlIEtlbmRvIFVJIEdyaWRTcGFjZXIgY29tcG9uZW50IGZvciBBbmd1bGFyLlxuICAgICAqIFVzZWQgdG8gZ2l2ZSBhZGRpdGlvbmFsIHdoaXRlIHNwYWNlIGJldHdlZW4gdGhlIFBhZ2VyIGlubmVyIGVsZW1lbnRzLFxuICAgICAqIGFuZCBwcm92aWRlcyBhIHdheSBmb3IgY3VzdG9taXppbmcgdGhlIHNwYWNlciB3aWR0aC5cbiAgICAgKiBJdCBjYW4gYWxzbyBiZSB1c2VkIGluIGFueSBmbGV4IGNvbnRhaW5lciB3aXRoaW4gdGhlIEdyaWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuaG9zdENsYXNzID0gdHJ1ZTtcbiAgICB9XG4gICAgZ2V0IHNpemVkQ2xhc3MoKSB7XG4gICAgICAgIHJldHVybiBpc1ByZXNlbnQodGhpcy53aWR0aCk7XG4gICAgfVxuICAgIGdldCBmbGV4QmFzaXNTdHlsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMud2lkdGg7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLXNwYWNlcicpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgR3JpZFNwYWNlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiaG9zdENsYXNzXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnY2xhc3Muay1zcGFjZXItc2l6ZWQnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgR3JpZFNwYWNlckNvbXBvbmVudC5wcm90b3R5cGUsIFwic2l6ZWRDbGFzc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdzdHlsZS5mbGV4QmFzaXMnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBHcmlkU3BhY2VyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmbGV4QmFzaXNTdHlsZVwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIEdyaWRTcGFjZXJDb21wb25lbnQucHJvdG90eXBlLCBcIndpZHRoXCIsIHZvaWQgMCk7XG5HcmlkU3BhY2VyQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLXNwYWNlciwga2VuZG8tcGFnZXItc3BhY2VyJyxcbiAgICAgICAgdGVtcGxhdGU6IGBgXG4gICAgfSlcbl0sIEdyaWRTcGFjZXJDb21wb25lbnQpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IERvbUV2ZW50c1NlcnZpY2UgPSBjbGFzcyBEb21FdmVudHNTZXJ2aWNlIHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuY2VsbENsaWNrID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLmNlbGxNb3VzZWRvd24gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuY2VsbE1vdXNldXAgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuY2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMua2V5ZG93biA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5mb2N1cyA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5mb2N1c0luID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLmZvY3VzT3V0ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLndpbmRvd0JsdXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgfVxufTtcbkRvbUV2ZW50c1NlcnZpY2UgPSBfX2RlY29yYXRlKFtcbiAgICBJbmplY3RhYmxlKClcbl0sIERvbUV2ZW50c1NlcnZpY2UpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IExvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlID0gY2xhc3MgTG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2Uge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5jaGFuZ2VzID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIH1cbn07XG5Mb2NhbERhdGFDaGFuZ2VzU2VydmljZSA9IF9fZGVjb3JhdGUoW1xuICAgIEluamVjdGFibGUoKVxuXSwgTG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2UpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgRk9DVVNfUk9PVF9BQ1RJVkUgPSBuZXcgSW5qZWN0aW9uVG9rZW4oJ2ZvY3VzLXJvb3QtaW5pdGlhbC1hY3RpdmUtc3RhdGUnKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgRm9jdXNSb290ID0gY2xhc3MgRm9jdXNSb290IHtcbiAgICBjb25zdHJ1Y3RvcihhY3RpdmUgPSBmYWxzZSkge1xuICAgICAgICB0aGlzLmFjdGl2ZSA9IGFjdGl2ZTtcbiAgICAgICAgdGhpcy5ncm91cHMgPSBuZXcgU2V0KCk7XG4gICAgfVxuICAgIHJlZ2lzdGVyR3JvdXAoZ3JvdXApIHtcbiAgICAgICAgaWYgKHRoaXMuYWN0aXZlKSB7XG4gICAgICAgICAgICB0aGlzLmdyb3Vwcy5hZGQoZ3JvdXApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHVucmVnaXN0ZXJHcm91cChncm91cCkge1xuICAgICAgICBpZiAodGhpcy5hY3RpdmUpIHtcbiAgICAgICAgICAgIHRoaXMuZ3JvdXBzLmRlbGV0ZShncm91cCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWN0aXZhdGUoKSB7XG4gICAgICAgIGlmICh0aGlzLmFjdGl2ZSkge1xuICAgICAgICAgICAgdGhpcy5ncm91cHMuZm9yRWFjaChmID0+IGYuYWN0aXZhdGUoKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGVhY3RpdmF0ZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuYWN0aXZlKSB7XG4gICAgICAgICAgICB0aGlzLmdyb3Vwcy5mb3JFYWNoKGYgPT4gZi5kZWFjdGl2YXRlKCkpO1xuICAgICAgICB9XG4gICAgfVxufTtcbkZvY3VzUm9vdCA9IF9fZGVjb3JhdGUoW1xuICAgIEluamVjdGFibGUoKSxcbiAgICBfX3BhcmFtKDAsIE9wdGlvbmFsKCkpLCBfX3BhcmFtKDAsIEluamVjdChGT0NVU19ST09UX0FDVElWRSkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbQm9vbGVhbl0pXG5dLCBGb2N1c1Jvb3QpO1xuXG5jb25zdCBmb2N1c2FibGVSZWdleCA9IC9eKD86YXxpbnB1dHxzZWxlY3R8b3B0aW9ufHRleHRhcmVhfGJ1dHRvbnxvYmplY3QpJC9pO1xuY29uc3QgTk9ERV9OQU1FX1BSRURJQ0FURVMgPSB7fTtcbmNvbnN0IHRvQ2xhc3NMaXN0ID0gKGNsYXNzTmFtZXMpID0+IFN0cmluZyhjbGFzc05hbWVzKS50cmltKCkuc3BsaXQoJyAnKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBoYXNDbGFzc2VzID0gKGVsZW1lbnQsIGNsYXNzTmFtZXMpID0+IHtcbiAgICBjb25zdCBuYW1lc0xpc3QgPSB0b0NsYXNzTGlzdChjbGFzc05hbWVzKTtcbiAgICByZXR1cm4gQm9vbGVhbih0b0NsYXNzTGlzdChlbGVtZW50LmNsYXNzTmFtZSkuZmluZCgoY2xhc3NOYW1lKSA9PiBuYW1lc0xpc3QuaW5kZXhPZihjbGFzc05hbWUpID49IDApKTtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgbWF0Y2hlc0NsYXNzZXMgPSAoY2xhc3NOYW1lcykgPT4gKGVsZW1lbnQpID0+IGhhc0NsYXNzZXMoZWxlbWVudCwgY2xhc3NOYW1lcyk7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgbWF0Y2hlc05vZGVOYW1lID0gKG5vZGVOYW1lKSA9PiB7XG4gICAgaWYgKCFOT0RFX05BTUVfUFJFRElDQVRFU1tub2RlTmFtZV0pIHtcbiAgICAgICAgTk9ERV9OQU1FX1BSRURJQ0FURVNbbm9kZU5hbWVdID0gKGVsZW1lbnQpID0+IFN0cmluZyhlbGVtZW50Lm5vZGVOYW1lKS50b0xvd2VyQ2FzZSgpID09PSBub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIH1cbiAgICByZXR1cm4gTk9ERV9OQU1FX1BSRURJQ0FURVNbbm9kZU5hbWVdO1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBjbG9zZXN0ID0gKG5vZGUsIHByZWRpY2F0ZSkgPT4ge1xuICAgIHdoaWxlIChub2RlICYmICFwcmVkaWNhdGUobm9kZSkpIHtcbiAgICAgICAgbm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgcmV0dXJuIG5vZGU7XG59O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGNsb3Nlc3RJblNjb3BlID0gKG5vZGUsIHByZWRpY2F0ZSwgc2NvcGUpID0+IHtcbiAgICB3aGlsZSAobm9kZSAmJiBub2RlICE9PSBzY29wZSAmJiAhcHJlZGljYXRlKG5vZGUpKSB7XG4gICAgICAgIG5vZGUgPSBub2RlLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIGlmIChub2RlICE9PSBzY29wZSkge1xuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICB9XG59O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGNvbnRhaW5zID0gKHBhcmVudCwgbm9kZSwgbWF0Y2hTZWxmID0gZmFsc2UpID0+IHtcbiAgICBjb25zdCBvdXRzaWRlID0gIWNsb3Nlc3Qobm9kZSwgKGNoaWxkKSA9PiBjaGlsZCA9PT0gcGFyZW50KTtcbiAgICBpZiAob3V0c2lkZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IGVsID0gY2xvc2VzdChub2RlLCAoY2hpbGQpID0+IGNoaWxkID09PSBub2RlKTtcbiAgICByZXR1cm4gZWwgJiYgKG1hdGNoU2VsZiB8fCBlbCAhPT0gcGFyZW50KTtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgaXNWaXNpYmxlID0gKGVsZW1lbnQpID0+IHtcbiAgICBjb25zdCByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBjb25zdCBoYXNTaXplID0gcmVjdC53aWR0aCA+IDAgJiYgcmVjdC5oZWlnaHQgPiAwO1xuICAgIGNvbnN0IGhhc1Bvc2l0aW9uID0gcmVjdC54ICE9PSAwICYmIHJlY3QueSAhPT0gMDtcbiAgICAvLyBFbGVtZW50cyBjYW4gaGF2ZSB6ZXJvIHNpemUgZHVlIHRvIHN0eWxpbmcsIGJ1dCB0aGV5IHdpbGwgc3RpbGwgY291bnQgYXMgdmlzaWJsZS5cbiAgICAvLyBGb3IgZXhhbXBsZSwgdGhlIHNlbGVjdGlvbiBjaGVja2JveCBoYXMgbm8gc2l6ZSwgYnV0IGlzIG1hZGUgdmlzaWJsZSB0aHJvdWdoIHN0eWxpbmcuXG4gICAgcmV0dXJuIChoYXNTaXplIHx8IGhhc1Bvc2l0aW9uKSAmJiB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KS52aXNpYmlsaXR5ICE9PSAnaGlkZGVuJztcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgaXNGb2N1c2FibGUgPSAoZWxlbWVudCkgPT4ge1xuICAgIGlmICghZWxlbWVudC50YWdOYW1lKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgdGFnTmFtZSA9IGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIGNvbnN0IGhhc1RhYkluZGV4ID0gQm9vbGVhbihlbGVtZW50LmdldEF0dHJpYnV0ZSgndGFiSW5kZXgnKSk7XG4gICAgY29uc3QgZm9jdXNhYmxlID0gIWVsZW1lbnQuZGlzYWJsZWQgJiYgZm9jdXNhYmxlUmVnZXgudGVzdCh0YWdOYW1lKTtcbiAgICByZXR1cm4gZm9jdXNhYmxlIHx8IGhhc1RhYkluZGV4O1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBpc0ZvY3VzYWJsZVdpdGhUYWJLZXkgPSAoZWxlbWVudCwgY2hlY2tWaXNpYmlsaXR5ID0gdHJ1ZSkgPT4ge1xuICAgIGlmICghaXNGb2N1c2FibGUoZWxlbWVudCkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCB2aXNpYmxlID0gIWNoZWNrVmlzaWJpbGl0eSB8fCBpc1Zpc2libGUoZWxlbWVudCk7XG4gICAgY29uc3QgYXJpYUhpZGRlbiA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicpID09PSAndHJ1ZSc7XG4gICAgY29uc3QgdGFiSW5kZXggPSBlbGVtZW50LmdldEF0dHJpYnV0ZSgndGFiSW5kZXgnKTtcbiAgICByZXR1cm4gdmlzaWJsZSAmJiAhYXJpYUhpZGRlbiAmJiB0YWJJbmRleCAhPT0gJy0xJztcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgZmluZEVsZW1lbnQgPSAobm9kZSwgcHJlZGljYXRlLCBtYXRjaFNlbGYgPSB0cnVlKSA9PiB7XG4gICAgaWYgKCFub2RlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKG1hdGNoU2VsZiAmJiBwcmVkaWNhdGUobm9kZSkpIHtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxuICAgIG5vZGUgPSBub2RlLmZpcnN0Q2hpbGQ7XG4gICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IDEpIHtcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBmaW5kRWxlbWVudChub2RlLCBwcmVkaWNhdGUpO1xuICAgICAgICAgICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBub2RlID0gbm9kZS5uZXh0U2libGluZztcbiAgICB9XG59O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGZpbmRMYXN0RWxlbWVudCA9IChub2RlLCBwcmVkaWNhdGUsIG1hdGNoU2VsZiA9IHRydWUpID0+IHtcbiAgICBsZXQgbGFzdCA9IG51bGw7XG4gICAgZmluZEVsZW1lbnQobm9kZSwgKG5vZGUpID0+IHtcbiAgICAgICAgaWYgKHByZWRpY2F0ZShub2RlKSkge1xuICAgICAgICAgICAgbGFzdCA9IG5vZGU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0sIG1hdGNoU2VsZik7XG4gICAgcmV0dXJuIGxhc3Q7XG59O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGZpbmRGb2N1c2FibGUgPSAoZWxlbWVudCwgY2hlY2tWaXNpYmlsaXR5ID0gdHJ1ZSkgPT4ge1xuICAgIHJldHVybiBmaW5kRWxlbWVudChlbGVtZW50LCAobm9kZSkgPT4gaXNGb2N1c2FibGVXaXRoVGFiS2V5KG5vZGUsIGNoZWNrVmlzaWJpbGl0eSkpO1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBmaW5kRm9jdXNhYmxlQ2hpbGQgPSAoZWxlbWVudCwgY2hlY2tWaXNpYmlsaXR5ID0gdHJ1ZSkgPT4ge1xuICAgIHJldHVybiBmaW5kRWxlbWVudChlbGVtZW50LCAobm9kZSkgPT4gaXNGb2N1c2FibGVXaXRoVGFiS2V5KG5vZGUsIGNoZWNrVmlzaWJpbGl0eSksIGZhbHNlKTtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgZmluZExhc3RGb2N1c2FibGVDaGlsZCA9IChlbGVtZW50LCBjaGVja1Zpc2liaWxpdHkgPSB0cnVlKSA9PiB7XG4gICAgcmV0dXJuIGZpbmRMYXN0RWxlbWVudChlbGVtZW50LCAobm9kZSkgPT4gaXNGb2N1c2FibGVXaXRoVGFiS2V5KG5vZGUsIGNoZWNrVmlzaWJpbGl0eSksIGZhbHNlKTtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gcnRsU2Nyb2xsUG9zaXRpb24ocG9zaXRpb24sIGVsZW1lbnQsIGluaXRpYWwpIHtcbiAgICBsZXQgcmVzdWx0ID0gcG9zaXRpb247XG4gICAgaWYgKGluaXRpYWwgPCAwKSB7XG4gICAgICAgIHJlc3VsdCA9IC1wb3NpdGlvbjtcbiAgICB9XG4gICAgZWxzZSBpZiAoaW5pdGlhbCA+IDApIHtcbiAgICAgICAgcmVzdWx0ID0gZWxlbWVudC5zY3JvbGxXaWR0aCAtIGVsZW1lbnQub2Zmc2V0V2lkdGggLSBwb3NpdGlvbjtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cblxuY29uc3QgaXNCdXR0b24gPSBtYXRjaGVzTm9kZU5hbWUoJ2J1dHRvbicpO1xuY29uc3QgaXNJbnB1dFRhZyA9IG1hdGNoZXNOb2RlTmFtZSgnaW5wdXQnKTtcbmNvbnN0IG5hdmlnYWJsZVJlZ2V4ID0gLyhidXR0b258Y2hlY2tib3h8Y29sb3J8ZmlsZXxyYWRpb3xyZXNldHxzdWJtaXQpL2k7XG5jb25zdCBpc05hdmlnYWJsZUlucHV0ID0gZWxlbWVudCA9PiBpc0lucHV0VGFnKGVsZW1lbnQpICYmIG5hdmlnYWJsZVJlZ2V4LnRlc3QoZWxlbWVudC50eXBlKTtcbmNvbnN0IGlzTmF2aWdhYmxlID0gZWxlbWVudCA9PiAhZWxlbWVudC5kaXNhYmxlZCAmJiAoaXNCdXR0b24oZWxlbWVudCkgfHwgaXNOYXZpZ2FibGVJbnB1dChlbGVtZW50KSk7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY2xhc3MgRGVmYXVsdEZvY3VzYWJsZUVsZW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKGhvc3QsIHJlbmRlcmVyKSB7XG4gICAgICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gaG9zdC5uYXRpdmVFbGVtZW50O1xuICAgICAgICB0aGlzLmZvY3VzYWJsZSA9IGZpbmRGb2N1c2FibGUodGhpcy5lbGVtZW50LCBmYWxzZSkgfHwgdGhpcy5lbGVtZW50O1xuICAgIH1cbiAgICBnZXQgZW5hYmxlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZm9jdXNhYmxlICYmICF0aGlzLmZvY3VzYWJsZS5kaXNhYmxlZDtcbiAgICB9XG4gICAgZ2V0IHZpc2libGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZvY3VzYWJsZSAmJiBpc1Zpc2libGUodGhpcy5mb2N1c2FibGUpO1xuICAgIH1cbiAgICBpc05hdmlnYWJsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FuRm9jdXMoKSAmJiBpc05hdmlnYWJsZSh0aGlzLmVsZW1lbnQpO1xuICAgIH1cbiAgICB0b2dnbGUoYWN0aXZlKSB7XG4gICAgICAgIHRoaXMucmVuZGVyZXIuc2V0QXR0cmlidXRlKHRoaXMuZm9jdXNhYmxlLCAndGFiSW5kZXgnLCBhY3RpdmUgPyAnMCcgOiAnLTEnKTtcbiAgICB9XG4gICAgZm9jdXMoKSB7XG4gICAgICAgIGlmICh0aGlzLmZvY3VzYWJsZSkge1xuICAgICAgICAgICAgdGhpcy5mb2N1c2FibGUuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYW5Gb2N1cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmlzaWJsZSAmJiB0aGlzLmVuYWJsZWQ7XG4gICAgfVxuICAgIGhhc0ZvY3VzKCkge1xuICAgICAgICByZXR1cm4gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAhPT0gdGhpcy5lbGVtZW50ICYmIGNsb3Nlc3QoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCwgZSA9PiBlID09PSB0aGlzLmVsZW1lbnQpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IENFTExfQ09OVEVYVCA9IG5ldyBJbmplY3Rpb25Ub2tlbignZ3JpZC1jZWxsLWNvbnRleHQnKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBFTVBUWV9DRUxMX0NPTlRFWFQgPSB7fTtcblxuLyoqXG4gKiBBIGRpcmVjdGl2ZSB0aGF0IGNvbnRyb2xzIHRoZSB3YXkgZm9jdXNhYmxlIGVsZW1lbnRzIHJlY2VpdmVcbiAqIFtmb2N1cyBpbiBhIG5hdmlnYWJsZSBHcmlkXSh7JSBzbHVnIGtleWJvYXJkX25hdmlnYXRpb25fZ3JpZCAlfSkuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqIF9AQ29tcG9uZW50KHtcbiAqICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiay10ZXh0Ym94XCIgcGxhY2Vob2xkZXI9XCJUYWIgc3RvcCAjMFwiIHN0eWxlPVwibWFyZ2luLWJvdHRvbTogOHB4O1wiIC8+XG4gKiAgICAgIDxrZW5kby1ncmlkIFtkYXRhXT1cImRhdGFcIiBbbmF2aWdhYmxlXT1cInRydWVcIj5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIlByb2R1Y3RJRFwiIHRpdGxlPVwiUHJvZHVjdCBJRFwiIHdpZHRoPVwiMTAwXCI+XG4gKiAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIiB0aXRsZT1cIlByb2R1Y3QgTmFtZVwiIHdpZHRoPVwiMTUwXCI+XG4gKiAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRDZWxsVGVtcGxhdGUgbGV0LWRhdGFJdGVtPlxuICogICAgICAgICAgICAgICAgICA8IS0tIFRoZSBmaXJzdCBmb2N1c2FibGUgZWxlbWVudCB3aWxsIGJlIGZvY3VzZWQgd2hlbiBwcmVzc2luZyBFbnRlciBvbiB0aGUgY2VsbCAtLT5cbiAqICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJrLXRleHRib3hcIiBrZW5kb0dyaWRGb2N1c2FibGUgW3ZhbHVlXT1cImRhdGFJdGVtLlByb2R1Y3ROYW1lXCIgc3R5bGU9XCJtYXJnaW4tcmlnaHQ6IDhweDtcIiAvPlxuICogICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiay1idXR0b25cIiBrZW5kb0dyaWRGb2N1c2FibGU+VXBkYXRlPC9idXR0b24+XG4gKiAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gd2lkdGg9XCIxMDBcIj5cbiAqICAgICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkQ2VsbFRlbXBsYXRlPlxuICogICAgICAgICAgICAgICAgICA8IS0tIEEgc2luZ2xlIGZvY3VzYWJsZSBlbGVtZW50IHdpbGwgYmUgZm9jdXNlZCBkdXJpbmcgbmF2aWdhdGlvbiAtLT5cbiAqICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImstYnV0dG9uXCIga2VuZG9HcmlkRm9jdXNhYmxlPkRlbGV0ZTwvYnV0dG9uPlxuICogICAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICA8L2tlbmRvLWdyaWQ+XG4gKiAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiay10ZXh0Ym94XCIgcGxhY2Vob2xkZXI9XCJUYWIgc3RvcCAjMlwiIHN0eWxlPVwibWFyZ2luLXRvcDogOHB4O1wiIC8+XG4gKiAgICBgXG4gKiB9KVxuICpcbiAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKiAgICAgcHVibGljIHJlYWRvbmx5IGRhdGE6IGFueSA9IFt7XG4gKiAgICAgICAgIFwiUHJvZHVjdElEXCI6IDEsXG4gKiAgICAgICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFpXCIsXG4gKiAgICAgICAgIFwiVW5pdFByaWNlXCI6IDE4LjAwMDAsXG4gKiAgICAgICAgIFwiRGlzY29udGludWVkXCI6IHRydWVcbiAqICAgICB9LCB7XG4gKiAgICAgICAgIFwiUHJvZHVjdElEXCI6IDIsXG4gKiAgICAgICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFuZ1wiLFxuICogICAgICAgICBcIlVuaXRQcmljZVwiOiAxOS4wMDAwLFxuICogICAgICAgICBcIkRpc2NvbnRpbnVlZFwiOiBmYWxzZVxuICogICAgIH1dO1xuICogfVxuICogYGBgXG4gKi9cbmxldCBGb2N1c2FibGVEaXJlY3RpdmUgPSBjbGFzcyBGb2N1c2FibGVEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKGNlbGxDb250ZXh0LCBob3N0RWxlbWVudCwgcmVuZGVyZXIpIHtcbiAgICAgICAgdGhpcy5jZWxsQ29udGV4dCA9IGNlbGxDb250ZXh0O1xuICAgICAgICB0aGlzLmhvc3RFbGVtZW50ID0gaG9zdEVsZW1lbnQ7XG4gICAgICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICAgICAgdGhpcy5hY3RpdmUgPSB0cnVlO1xuICAgICAgICB0aGlzLl9lbmFibGVkID0gdHJ1ZTtcbiAgICAgICAgaWYgKHRoaXMuY2VsbENvbnRleHQpIHtcbiAgICAgICAgICAgIHRoaXMuZ3JvdXAgPSB0aGlzLmNlbGxDb250ZXh0LmZvY3VzR3JvdXA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZ3JvdXApIHtcbiAgICAgICAgICAgIHRoaXMuZ3JvdXAucmVnaXN0ZXJFbGVtZW50KHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBzZXQgZW5hYmxlZCh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgPT09ICcnKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YWx1ZSA9IEJvb2xlYW4odmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2YWx1ZSAhPT0gdGhpcy5lbmFibGVkKSB7XG4gICAgICAgICAgICB0aGlzLl9lbmFibGVkID0gdmFsdWU7XG4gICAgICAgICAgICBpZiAodGhpcy5lbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50LnRvZ2dsZSh0aGlzLmFjdGl2ZSAmJiB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IGVuYWJsZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9lbmFibGVkO1xuICAgIH1cbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgICAgIGlmICghdGhpcy5lbGVtZW50KSB7XG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQgPSBuZXcgRGVmYXVsdEZvY3VzYWJsZUVsZW1lbnQodGhpcy5ob3N0RWxlbWVudCwgdGhpcy5yZW5kZXJlcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZ3JvdXAgJiYgdGhpcy5lbGVtZW50KSB7XG4gICAgICAgICAgICB0aGlzLnRvZ2dsZSh0aGlzLmdyb3VwLmlzQWN0aXZlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgaWYgKHRoaXMuZ3JvdXApIHtcbiAgICAgICAgICAgIHRoaXMuZ3JvdXAudW5yZWdpc3RlckVsZW1lbnQodGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHRvZ2dsZShhY3RpdmUpIHtcbiAgICAgICAgaWYgKHRoaXMuZWxlbWVudCAmJiBhY3RpdmUgIT09IHRoaXMuYWN0aXZlKSB7XG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQudG9nZ2xlKHRoaXMuZW5hYmxlZCAmJiBhY3RpdmUpO1xuICAgICAgICAgICAgdGhpcy5hY3RpdmUgPSBhY3RpdmU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGNhbkZvY3VzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbmFibGVkICYmIHRoaXMuZWxlbWVudCAmJiB0aGlzLmVsZW1lbnQuY2FuRm9jdXMoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGlzTmF2aWdhYmxlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbmFibGVkICYmIHRoaXMuZWxlbWVudCAmJiB0aGlzLmVsZW1lbnQuaXNOYXZpZ2FibGUoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGZvY3VzKCkge1xuICAgICAgICBpZiAodGhpcy5lbmFibGVkICYmIHRoaXMuZWxlbWVudCkge1xuICAgICAgICAgICAgdGhpcy5lbGVtZW50LmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGhhc0ZvY3VzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbmFibGVkICYmIHRoaXMuZWxlbWVudCAmJiB0aGlzLmVsZW1lbnQuaGFzRm9jdXMoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlZ2lzdGVyRWxlbWVudChlbGVtZW50KSB7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCdrZW5kb0dyaWRGb2N1c2FibGUnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pXG5dLCBGb2N1c2FibGVEaXJlY3RpdmUucHJvdG90eXBlLCBcImVuYWJsZWRcIiwgbnVsbCk7XG5Gb2N1c2FibGVEaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0dyaWRGb2N1c2FibGVdJyArIGAsXG4gICAgICAgIFtrZW5kb0dyaWRFZGl0Q29tbWFuZF0sXG4gICAgICAgIFtrZW5kb0dyaWRSZW1vdmVDb21tYW5kXSxcbiAgICAgICAgW2tlbmRvR3JpZFNhdmVDb21tYW5kXSxcbiAgICAgICAgW2tlbmRvR3JpZENhbmNlbENvbW1hbmRdLFxuICAgICAgICBba2VuZG9HcmlkU2VsZWN0aW9uQ2hlY2tib3hdXG4gICAgYFxuICAgIH0pLFxuICAgIF9fcGFyYW0oMCwgT3B0aW9uYWwoKSksIF9fcGFyYW0oMCwgSW5qZWN0KENFTExfQ09OVEVYVCkpLCBfX3BhcmFtKDAsIFNraXBTZWxmKCkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0LCBFbGVtZW50UmVmLFxuICAgICAgICBSZW5kZXJlcjJdKVxuXSwgRm9jdXNhYmxlRGlyZWN0aXZlKTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNsYXNzIEdyaWRGb2N1c2FibGVFbGVtZW50IHtcbiAgICBjb25zdHJ1Y3RvcihuYXZpZ2F0aW9uU2VydmljZSkge1xuICAgICAgICB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlID0gbmF2aWdhdGlvblNlcnZpY2U7XG4gICAgfVxuICAgIGZvY3VzKCkge1xuICAgICAgICB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmZvY3VzQ2VsbCgpO1xuICAgIH1cbiAgICB0b2dnbGUoYWN0aXZlKSB7XG4gICAgICAgIHRoaXMubmF2aWdhdGlvblNlcnZpY2UudG9nZ2xlKGFjdGl2ZSk7XG4gICAgfVxuICAgIGNhbkZvY3VzKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaGFzRm9jdXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmhhc0ZvY3VzKCk7XG4gICAgfVxuICAgIGlzTmF2aWdhYmxlKCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY2xhc3MgTmF2aWdhdGlvbkN1cnNvciB7XG4gICAgY29uc3RydWN0b3IobW9kZWwpIHtcbiAgICAgICAgdGhpcy5tb2RlbCA9IG1vZGVsO1xuICAgICAgICB0aGlzLmNoYW5nZXMgPSBuZXcgU3ViamVjdCgpO1xuICAgICAgICB0aGlzLmFjdGl2ZVJvdyA9IDA7XG4gICAgICAgIHRoaXMuYWN0aXZlQ29sID0gMDtcbiAgICAgICAgdGhpcy52aXJ0dWFsQ29sID0gMDtcbiAgICAgICAgdGhpcy52aXJ0dWFsUm93ID0gMDtcbiAgICB9XG4gICAgZ2V0IHJvdygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubW9kZWwuZmluZFJvdyh0aGlzLmFjdGl2ZVJvdyk7XG4gICAgfVxuICAgIGdldCBjZWxsKCkge1xuICAgICAgICBjb25zdCByb3cgPSB0aGlzLnJvdztcbiAgICAgICAgaWYgKHJvdykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubW9kZWwuZmluZENlbGwodGhpcy5hY3RpdmVDb2wsIHJvdyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IGRhdGFSb3dJbmRleCgpIHtcbiAgICAgICAgY29uc3Qgcm93ID0gdGhpcy5yb3c7XG4gICAgICAgIGlmIChyb3cpIHtcbiAgICAgICAgICAgIHJldHVybiByb3cuZGF0YVJvd0luZGV4O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAtMTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQXNzdW1lcyBhbmQgYW5ub3VuY2VzIGEgbmV3IGN1cnNvciBwb3NpdGlvbi5cbiAgICAgKi9cbiAgICByZXNldChyb3dJbmRleCA9IHRoaXMuYWN0aXZlUm93LCBjb2xJbmRleCA9IHRoaXMuYWN0aXZlQ29sLCBmb3JjZSA9IHRydWUpIHtcbiAgICAgICAgaWYgKHRoaXMuYWN0aXZhdGUocm93SW5kZXgsIGNvbEluZGV4LCBmb3JjZSkpIHtcbiAgICAgICAgICAgIHRoaXMudmlydHVhbFJvdyA9IHJvd0luZGV4O1xuICAgICAgICAgICAgdGhpcy52aXJ0dWFsQ29sID0gY29sSW5kZXg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWN0aXZhdGUocm93SW5kZXgsIGNvbEluZGV4LCBmb3JjZSkge1xuICAgICAgICBpZiAoIWZvcmNlICYmIHRoaXMuaXNBY3RpdmVSYW5nZShyb3dJbmRleCwgY29sSW5kZXgpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcHJldkNvbEluZGV4ID0gdGhpcy5hY3RpdmVDb2w7XG4gICAgICAgIGNvbnN0IHByZXZSb3dJbmRleCA9IHRoaXMuYWN0aXZlUm93O1xuICAgICAgICB0aGlzLmFjdGl2ZUNvbCA9IGNvbEluZGV4O1xuICAgICAgICB0aGlzLmFjdGl2ZVJvdyA9IHJvd0luZGV4O1xuICAgICAgICB0aGlzLmNoYW5nZXMubmV4dCh7XG4gICAgICAgICAgICBjb2xJbmRleCxcbiAgICAgICAgICAgIHByZXZDb2xJbmRleCxcbiAgICAgICAgICAgIHByZXZSb3dJbmRleCxcbiAgICAgICAgICAgIHJvd0luZGV4XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaXNBY3RpdmVSYW5nZShyb3dJbmRleCwgY29sSW5kZXgpIHtcbiAgICAgICAgaWYgKHRoaXMuYWN0aXZlUm93ICE9PSByb3dJbmRleCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNlbGwgPSB0aGlzLmNlbGw7XG4gICAgICAgIGNvbnN0IHsgc3RhcnQsIGVuZCB9ID0gdGhpcy5tb2RlbC5jZWxsUmFuZ2UoY2VsbCk7XG4gICAgICAgIHJldHVybiAhQm9vbGVhbihjZWxsKSB8fCAoc3RhcnQgPD0gY29sSW5kZXggJiYgY29sSW5kZXggPD0gZW5kKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQXNzdW1lcyBhIG5ldyBjdXJzb3IgcG9zaXRpb24gd2l0aG91dCBhbm5vdW5jaW5nIGl0LlxuICAgICAqL1xuICAgIGFzc3VtZShyb3dJbmRleCA9IHRoaXMuYWN0aXZlUm93LCBjb2xJbmRleCA9IHRoaXMuYWN0aXZlQ29sKSB7XG4gICAgICAgIHRoaXMudmlydHVhbFJvdyA9IHJvd0luZGV4O1xuICAgICAgICB0aGlzLnZpcnR1YWxDb2wgPSBjb2xJbmRleDtcbiAgICAgICAgdGhpcy5hY3RpdmVDb2wgPSBjb2xJbmRleDtcbiAgICAgICAgdGhpcy5hY3RpdmVSb3cgPSByb3dJbmRleDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQW5ub3VuY2VzIGEgY3VycmVudCBjdXJzb3IgcG9zaXRpb24gdG8gc3Vic2NyaWJlcnMuXG4gICAgICovXG4gICAgYW5ub3VuY2UoKSB7XG4gICAgICAgIHRoaXMuY2hhbmdlcy5uZXh0KHtcbiAgICAgICAgICAgIGNvbEluZGV4OiB0aGlzLmFjdGl2ZUNvbCxcbiAgICAgICAgICAgIHByZXZDb2xJbmRleDogdGhpcy5hY3RpdmVDb2wsXG4gICAgICAgICAgICBwcmV2Um93SW5kZXg6IHRoaXMuYWN0aXZlUm93LFxuICAgICAgICAgICAgcm93SW5kZXg6IHRoaXMuYWN0aXZlUm93XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhY3RpdmF0ZVZpcnR1YWxDZWxsKGNlbGwpIHtcbiAgICAgICAgY29uc3Qgcm93UmFuZ2UgPSB0aGlzLm1vZGVsLnJvd1JhbmdlKGNlbGwpO1xuICAgICAgICBjb25zdCBjZWxsUmFuZ2UgPSB0aGlzLm1vZGVsLmNlbGxSYW5nZShjZWxsKTtcbiAgICAgICAgY29uc3QgYWN0aXZlQ29sID0gdGhpcy5hY3RpdmVDb2w7XG4gICAgICAgIGNvbnN0IGFjdGl2ZVJvdyA9IHRoaXMuYWN0aXZlUm93O1xuICAgICAgICBpZiAocm93UmFuZ2Uuc3RhcnQgPD0gYWN0aXZlUm93ICYmIGFjdGl2ZVJvdyA8PSByb3dSYW5nZS5lbmQgJiZcbiAgICAgICAgICAgIGNlbGxSYW5nZS5zdGFydCA8PSBhY3RpdmVDb2wgJiYgYWN0aXZlQ29sIDw9IGNlbGxSYW5nZS5lbmQpIHtcbiAgICAgICAgICAgIHRoaXMuYWN0aXZlUm93ID0gY2VsbC5yb3dJbmRleDtcbiAgICAgICAgICAgIHRoaXMuYWN0aXZlQ29sID0gY2VsbC5jb2xJbmRleDtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlzQWN0aXZlKHJvd0luZGV4LCBjb2xJbmRleCkge1xuICAgICAgICByZXR1cm4gdGhpcy5hY3RpdmVDb2wgPT09IGNvbEluZGV4ICYmIHRoaXMuYWN0aXZlUm93ID09PSByb3dJbmRleDtcbiAgICB9XG4gICAgbW92ZVVwKG9mZnNldCA9IDEpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub2Zmc2V0Um93KC1vZmZzZXQpO1xuICAgIH1cbiAgICBtb3ZlRG93bihvZmZzZXQgPSAxKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9mZnNldFJvdyhvZmZzZXQpO1xuICAgIH1cbiAgICBtb3ZlTGVmdChvZmZzZXQgPSAxKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9mZnNldENvbCgtb2Zmc2V0KTtcbiAgICB9XG4gICAgbW92ZVJpZ2h0KG9mZnNldCA9IDEpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub2Zmc2V0Q29sKG9mZnNldCk7XG4gICAgfVxuICAgIGxhc3RDZWxsSW5kZXgocm93KSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1ldGFkYXRhLmNvbHVtbnMubGVhZkNvbHVtbnNUb1JlbmRlci5sZW5ndGggLSAxICtcbiAgICAgICAgICAgICh0aGlzLm1ldGFkYXRhLmhhc0RldGFpbFRlbXBsYXRlICYmICghcm93IHx8ICFyb3cuZ3JvdXBJdGVtKSA/IDEgOiAwKTtcbiAgICB9XG4gICAgb2Zmc2V0Q29sKG9mZnNldCkge1xuICAgICAgICBjb25zdCBwcmV2Um93ID0gdGhpcy5tb2RlbC5maW5kUm93KHRoaXMudmlydHVhbFJvdyk7XG4gICAgICAgIGNvbnN0IGxhc3RJbmRleCA9IHRoaXMubGFzdENlbGxJbmRleChwcmV2Um93KTtcbiAgICAgICAgY29uc3QgdmlydHVhbENvbCA9IHRoaXMudmlydHVhbENvbDtcbiAgICAgICAgdGhpcy52aXJ0dWFsQ29sID0gTWF0aC5tYXgoMCwgTWF0aC5taW4odmlydHVhbENvbCArIG9mZnNldCwgbGFzdEluZGV4KSk7XG4gICAgICAgIGxldCBuZXh0Q29sSW5kZXggPSB0aGlzLnZpcnR1YWxDb2w7XG4gICAgICAgIGxldCBuZXh0Um93SW5kZXggPSB0aGlzLnZpcnR1YWxSb3c7XG4gICAgICAgIGxldCBjZWxsID0gdGhpcy5tb2RlbC5maW5kQ2VsbCh0aGlzLnZpcnR1YWxDb2wsIHByZXZSb3cpO1xuICAgICAgICBpZiAoIWNlbGwgJiYgdGhpcy5tZXRhZGF0YS52aXJ0dWFsQ29sdW1ucykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYWN0aXZhdGUobmV4dFJvd0luZGV4LCBuZXh0Q29sSW5kZXgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjZWxsLmNvbFNwYW4gPiAxICYmIGNlbGwuY29sSW5kZXggPD0gdmlydHVhbENvbCAmJiB2aXJ0dWFsQ29sIDwgY2VsbC5jb2xJbmRleCArIGNlbGwuY29sU3Bhbikge1xuICAgICAgICAgICAgbmV4dENvbEluZGV4ID0gb2Zmc2V0ID4gMCA/IE1hdGgubWluKGNlbGwuY29sSW5kZXggKyBjZWxsLmNvbFNwYW4sIGxhc3RJbmRleCkgOiBNYXRoLm1heCgwLCBjZWxsLmNvbEluZGV4ICsgb2Zmc2V0KTtcbiAgICAgICAgICAgIGNvbnN0IG5leHRDZWxsID0gdGhpcy5tb2RlbC5maW5kQ2VsbChuZXh0Q29sSW5kZXgsIHByZXZSb3cpO1xuICAgICAgICAgICAgaWYgKGNlbGwgIT09IG5leHRDZWxsKSB7XG4gICAgICAgICAgICAgICAgY2VsbCA9IG5leHRDZWxsO1xuICAgICAgICAgICAgICAgIHRoaXMudmlydHVhbENvbCA9IGNlbGwuY29sSW5kZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnZpcnR1YWxDb2wgPSB2aXJ0dWFsQ29sO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmFjdGl2YXRlKGNlbGwucm93SW5kZXgsIGNlbGwuY29sSW5kZXgpO1xuICAgIH1cbiAgICBvZmZzZXRSb3cob2Zmc2V0KSB7XG4gICAgICAgIGxldCBuZXh0Q29sSW5kZXggPSB0aGlzLnZpcnR1YWxDb2w7XG4gICAgICAgIGlmICh0aGlzLm1ldGFkYXRhICYmIHRoaXMubWV0YWRhdGEuaXNWaXJ0dWFsKSB7XG4gICAgICAgICAgICBjb25zdCBtYXhJbmRleCA9IHRoaXMubWV0YWRhdGEubWF4TG9naWNhbFJvd0luZGV4O1xuICAgICAgICAgICAgbGV0IG5leHRJbmRleCA9IE1hdGgubWF4KDAsIE1hdGgubWluKHRoaXMuYWN0aXZlUm93ICsgb2Zmc2V0LCBtYXhJbmRleCkpO1xuICAgICAgICAgICAgaWYgKHRoaXMubWV0YWRhdGEuaGFzRGV0YWlsVGVtcGxhdGUgJiYgIXRoaXMubW9kZWwuZmluZFJvdyhuZXh0SW5kZXgpKSB7XG4gICAgICAgICAgICAgICAgbmV4dEluZGV4ID0gb2Zmc2V0ID4gMCA/IG5leHRJbmRleCArIDEgOiBuZXh0SW5kZXggLSAxO1xuICAgICAgICAgICAgICAgIG5leHRJbmRleCA9IE1hdGgubWF4KDAsIE1hdGgubWluKG5leHRJbmRleCwgbWF4SW5kZXgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLm1ldGFkYXRhLmhhc0RldGFpbFRlbXBsYXRlICYmIG5leHRJbmRleCA9PT0gbWF4SW5kZXgpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5tb2RlbC5sYXN0Um93LmluZGV4ICE9PSBtYXhJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBEb24ndCBhdHRlbXB0IHRvIG5hdmlnYXRlIHBhc3QgdGhlIGxhc3QgY29sbGFwc2VkIHJvdy5cbiAgICAgICAgICAgICAgICAgICAgbmV4dEluZGV4LS07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgbmV4dFJvdyA9IHRoaXMubW9kZWwuZmluZFJvdyhuZXh0SW5kZXgpO1xuICAgICAgICAgICAgaWYgKG5leHRSb3cpIHtcbiAgICAgICAgICAgICAgICAvLyByZW1vdmUgZHVwbGljYXRpb25cbiAgICAgICAgICAgICAgICBsZXQgY2VsbCA9IHRoaXMubW9kZWwuZmluZENlbGwodGhpcy52aXJ0dWFsQ29sLCBuZXh0Um93KTtcbiAgICAgICAgICAgICAgICBpZiAoY2VsbC5yb3dJbmRleCA8PSB0aGlzLnZpcnR1YWxSb3cgJiYgb2Zmc2V0ID4gMCAmJiBjZWxsLnJvd1NwYW4gPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGNlbGwgPSB0aGlzLm1vZGVsLmZpbmRDZWxsKHRoaXMudmlydHVhbENvbCwgdGhpcy5tb2RlbC5maW5kUm93KGNlbGwucm93SW5kZXggKyBjZWxsLnJvd1NwYW4gLSAxICsgb2Zmc2V0KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG5leHRJbmRleCA9IGNlbGwucm93SW5kZXg7XG4gICAgICAgICAgICAgICAgbmV4dENvbEluZGV4ID0gY2VsbC5jb2xJbmRleDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMudmlydHVhbFJvdyA9IG5leHRJbmRleDtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFjdGl2YXRlKG5leHRJbmRleCwgbmV4dENvbEluZGV4KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBuZXh0Um93ID0gdGhpcy5tb2RlbC5maW5kUm93KHRoaXMudmlydHVhbFJvdyArIG9mZnNldCkgfHwgdGhpcy5tb2RlbC5uZXh0Um93KHRoaXMudmlydHVhbFJvdywgb2Zmc2V0KTtcbiAgICAgICAgaWYgKCFuZXh0Um93KSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGNlbGwgPSB0aGlzLm1vZGVsLmZpbmRDZWxsKHRoaXMudmlydHVhbENvbCwgbmV4dFJvdyk7XG4gICAgICAgIGlmIChjZWxsICYmIGNlbGwucm93SW5kZXggPD0gdGhpcy52aXJ0dWFsUm93ICYmIG9mZnNldCA+IDAgJiYgY2VsbC5yb3dTcGFuID4gMSkgeyAvLyBzcGFubmVkIGNlbGwgZ28gdG8gbmV4dFxuICAgICAgICAgICAgY29uc3QgbmV4dFBvcyA9IGNlbGwucm93SW5kZXggKyBjZWxsLnJvd1NwYW4gLSAxICsgb2Zmc2V0O1xuICAgICAgICAgICAgY2VsbCA9IHRoaXMubW9kZWwuZmluZENlbGwodGhpcy52aXJ0dWFsQ29sLCB0aGlzLm1vZGVsLmZpbmRSb3cobmV4dFBvcykpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghY2VsbCAmJiB0aGlzLm1ldGFkYXRhLnZpcnR1YWxDb2x1bW5zKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hY3RpdmF0ZSh0aGlzLnZpcnR1YWxSb3cgKyBvZmZzZXQsIHRoaXMudmlydHVhbENvbCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52aXJ0dWFsUm93ID0gY2VsbC5yb3dJbmRleDtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWN0aXZhdGUodGhpcy52aXJ0dWFsUm93LCBjZWxsLmNvbEluZGV4KTtcbiAgICB9XG59XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBJdGVtTWFwIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5jb3VudCA9IDA7XG4gICAgICAgIHRoaXMuaXRlbXMgPSB7fTtcbiAgICB9XG4gICAgZ2V0IGZpcnN0KCkge1xuICAgICAgICBpZiAodGhpcy5jb3VudCA+IDApIHtcbiAgICAgICAgICAgIGxldCByZXN1bHQ7XG4gICAgICAgICAgICB0aGlzLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gaXRlbTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgbGFzdCgpIHtcbiAgICAgICAgaWYgKHRoaXMuY291bnQgPiAwKSB7XG4gICAgICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModGhpcy5pdGVtcyk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5pdGVtc1trZXlzW2tleXMubGVuZ3RoIC0gMV1dO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlbW92ZUl0ZW0oa2V5KSB7XG4gICAgICAgIGlmICh0aGlzLml0ZW1zW2tleV0pIHtcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLml0ZW1zW2tleV07XG4gICAgICAgICAgICB0aGlzLmNvdW50LS07XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2V0SXRlbShrZXksIGl0ZW0pIHtcbiAgICAgICAgaWYgKCF0aGlzLml0ZW1zW2tleV0pIHtcbiAgICAgICAgICAgIHRoaXMuY291bnQrKztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLml0ZW1zW2tleV0gPSBpdGVtO1xuICAgIH1cbiAgICBnZXRJdGVtKGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5pdGVtc1trZXldO1xuICAgIH1cbiAgICB0b0FycmF5KCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgICAgdGhpcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goaXRlbSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBmb3JFYWNoKGNhbGxiYWNrKSB7XG4gICAgICAgIGZvciAobGV0IGtleSBpbiB0aGlzLml0ZW1zKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5pdGVtcy5oYXNPd25Qcm9wZXJ0eShrZXkpICYmIGNhbGxiYWNrKHRoaXMuaXRlbXNba2V5XSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5pdGVtc1trZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGZpbmQoY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZm9yRWFjaChjYWxsYmFjayk7XG4gICAgfVxufVxuXG4vKipcbiAqIEBoaWRkZW5cbiAqXG4gKiBDb250YWlucyBpbmZvcm1hdGlvbiBmb3IgdGhlIGN1cnJlbnRseSByZW5kZXJlZCByb3dzIGFuZCBjZWxscy5cbiAqL1xuY2xhc3MgTmF2aWdhdGlvbk1vZGVsIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5yb3dzID0gbmV3IEl0ZW1NYXAoKTtcbiAgICB9XG4gICAgZ2V0IGZpcnN0Um93KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yb3dzLmZpcnN0O1xuICAgIH1cbiAgICBnZXQgbGFzdFJvdygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucm93cy5sYXN0O1xuICAgIH1cbiAgICByZWdpc3RlckNlbGwoY2VsbCkge1xuICAgICAgICBjb25zdCByb3cgPSB0aGlzLnJvd3MuZ2V0SXRlbShjZWxsLmxvZ2ljYWxSb3dJbmRleCk7XG4gICAgICAgIGlmICghcm93KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29sSW5kZXggPSBjZWxsLmxvZ2ljYWxDb2xJbmRleDtcbiAgICAgICAgY29uc3QgbW9kZWxDZWxsID0ge1xuICAgICAgICAgICAgdWlkOiBjZWxsLnVpZCxcbiAgICAgICAgICAgIGNvbEluZGV4LFxuICAgICAgICAgICAgcm93SW5kZXg6IHJvdy5pbmRleCxcbiAgICAgICAgICAgIGNvbFNwYW46IGNlbGwuY29sU3BhbixcbiAgICAgICAgICAgIHJvd1NwYW46IGNlbGwucm93U3BhbixcbiAgICAgICAgICAgIGRldGFpbEV4cGFuZENlbGw6IGNlbGwuZGV0YWlsRXhwYW5kQ2VsbCxcbiAgICAgICAgICAgIGRhdGFJdGVtOiByb3cuZGF0YUl0ZW0sXG4gICAgICAgICAgICBkYXRhUm93SW5kZXg6IHJvdy5kYXRhUm93SW5kZXgsXG4gICAgICAgICAgICBmb2N1c0dyb3VwOiBjZWxsLmZvY3VzR3JvdXBcbiAgICAgICAgfTtcbiAgICAgICAgcm93LmNlbGxzLnNldEl0ZW0oY29sSW5kZXgsIG1vZGVsQ2VsbCk7XG4gICAgICAgIGlmIChjZWxsLmdyb3VwSXRlbSkge1xuICAgICAgICAgICAgcm93Lmdyb3VwSXRlbSA9IGNlbGwuZ3JvdXBJdGVtO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtb2RlbENlbGw7XG4gICAgfVxuICAgIHVucmVnaXN0ZXJDZWxsKGluZGV4LCByb3dJbmRleCwgY2VsbCkge1xuICAgICAgICBjb25zdCByb3cgPSB0aGlzLnJvd3MuZ2V0SXRlbShyb3dJbmRleCk7XG4gICAgICAgIGlmIChyb3cpIHtcbiAgICAgICAgICAgIGNvbnN0IG1hdGNoID0gcm93LmNlbGxzLmdldEl0ZW0oaW5kZXgpO1xuICAgICAgICAgICAgaWYgKG1hdGNoICYmIG1hdGNoLnVpZCA9PT0gY2VsbC51aWQpIHtcbiAgICAgICAgICAgICAgICByb3cuY2VsbHMucmVtb3ZlSXRlbShpbmRleCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVnaXN0ZXJSb3cocm93KSB7XG4gICAgICAgIGNvbnN0IG1vZGVsUm93ID0ge1xuICAgICAgICAgICAgdWlkOiByb3cudWlkLFxuICAgICAgICAgICAgaW5kZXg6IHJvdy5sb2dpY2FsUm93SW5kZXgsXG4gICAgICAgICAgICBkYXRhSXRlbTogcm93LmRhdGFJdGVtLFxuICAgICAgICAgICAgZGF0YVJvd0luZGV4OiByb3cuZGF0YVJvd0luZGV4LFxuICAgICAgICAgICAgY2VsbHM6IG5ldyBJdGVtTWFwKClcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5yb3dzLnNldEl0ZW0ocm93LmxvZ2ljYWxSb3dJbmRleCwgbW9kZWxSb3cpO1xuICAgIH1cbiAgICB1cGRhdGVSb3cocm93KSB7XG4gICAgICAgIGNvbnN0IGN1cnJlbnQgPSB0aGlzLnJvd3MuZ2V0SXRlbShyb3cubG9naWNhbFJvd0luZGV4KTtcbiAgICAgICAgaWYgKGN1cnJlbnQpIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oY3VycmVudCwge1xuICAgICAgICAgICAgICAgIGRhdGFJdGVtOiByb3cuZGF0YUl0ZW0sXG4gICAgICAgICAgICAgICAgZGF0YVJvd0luZGV4OiByb3cuZGF0YVJvd0luZGV4XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB1bnJlZ2lzdGVyUm93KGluZGV4LCByb3cpIHtcbiAgICAgICAgY29uc3QgbWF0Y2ggPSB0aGlzLnJvd3MuZ2V0SXRlbShpbmRleCk7XG4gICAgICAgIGlmIChtYXRjaCAmJiBtYXRjaC51aWQgPT09IHJvdy51aWQpIHtcbiAgICAgICAgICAgIHRoaXMucm93cy5yZW1vdmVJdGVtKGluZGV4KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjZWxsUmFuZ2UoY2VsbCkge1xuICAgICAgICBpZiAoY2VsbCkge1xuICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSBjZWxsLmNvbEluZGV4O1xuICAgICAgICAgICAgY29uc3QgZW5kID0gY2VsbC5jb2xJbmRleCArIChjZWxsLmNvbFNwYW4gfHwgMSkgLSAxO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzdGFydCxcbiAgICAgICAgICAgICAgICBlbmRcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICByb3dSYW5nZShjZWxsKSB7XG4gICAgICAgIGlmIChjZWxsKSB7XG4gICAgICAgICAgICBjb25zdCBzdGFydCA9IGNlbGwucm93SW5kZXg7XG4gICAgICAgICAgICBjb25zdCBlbmQgPSBjZWxsLnJvd0luZGV4ICsgKGNlbGwucm93U3BhbiB8fCAxKSAtIDE7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN0YXJ0LFxuICAgICAgICAgICAgICAgIGVuZFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIG5leHRSb3cocm93SW5kZXgsIG9mZnNldCkge1xuICAgICAgICBjb25zdCByb3dzID0gdGhpcy5yb3dzLnRvQXJyYXkoKTtcbiAgICAgICAgY29uc3Qgcm93ID0gdGhpcy5yb3dzLmdldEl0ZW0ocm93SW5kZXgpO1xuICAgICAgICBjb25zdCBwb3NpdGlvbiA9IHJvd3MuaW5kZXhPZihyb3cpO1xuICAgICAgICBjb25zdCBuZXh0ID0gcm93c1twb3NpdGlvbiArIG9mZnNldF07XG4gICAgICAgIHJldHVybiBuZXh0O1xuICAgIH1cbiAgICBmaW5kUm93KGluZGV4KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJvd3MuZ2V0SXRlbShpbmRleCk7XG4gICAgfVxuICAgIGZpbmRDZWxsKGluZGV4LCByb3cpIHtcbiAgICAgICAgaWYgKCFyb3cpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByb3dJbmRleCA9IHJvdy5pbmRleDtcbiAgICAgICAgbGV0IGNlbGwgPSByb3cuY2VsbHMuZ2V0SXRlbShpbmRleCk7XG4gICAgICAgIGxldCBjdXJyZW50SW5kZXggPSByb3dJbmRleDtcbiAgICAgICAgd2hpbGUgKCFjZWxsICYmIHJvdykge1xuICAgICAgICAgICAgcm93ID0gdGhpcy5yb3dzLmdldEl0ZW0oY3VycmVudEluZGV4KTtcbiAgICAgICAgICAgIGNlbGwgPSB0aGlzLnJvd0NlbGwoaW5kZXgsIHJvdyk7XG4gICAgICAgICAgICBjdXJyZW50SW5kZXgtLTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2VsbCAmJiByb3dJbmRleCA8PSByb3cuaW5kZXggKyAoY2VsbC5yb3dTcGFuIHx8IDEpIC0gMSkge1xuICAgICAgICAgICAgcmV0dXJuIGNlbGw7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcm93Q2VsbChpbmRleCwgcm93KSB7XG4gICAgICAgIGlmICghcm93IHx8ICFyb3cuY2VsbHMuY291bnQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBmaXJzdENlbGwgPSByb3cuY2VsbHMuZmlyc3Q7XG4gICAgICAgIGxldCBjZWxsLCBjdXJyZW50SW5kZXggPSBpbmRleDtcbiAgICAgICAgd2hpbGUgKCFjZWxsICYmIGN1cnJlbnRJbmRleCA+PSBmaXJzdENlbGwuY29sSW5kZXgpIHtcbiAgICAgICAgICAgIGNlbGwgPSByb3cuY2VsbHMuZ2V0SXRlbShjdXJyZW50SW5kZXgpO1xuICAgICAgICAgICAgY3VycmVudEluZGV4LS07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNlbGwgJiYgaW5kZXggPD0gY2VsbC5jb2xJbmRleCArIChjZWxsLmNvbFNwYW4gfHwgMSkgLSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gY2VsbDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNsYXNzIFByZXZlbnRhYmxlRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnByZXZlbnRlZCA9IGZhbHNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQcmV2ZW50cyB0aGUgZGVmYXVsdCBhY3Rpb24gZm9yIGEgc3BlY2lmaWVkIGV2ZW50LlxuICAgICAqIEluIHRoaXMgd2F5LCB0aGUgc291cmNlIGNvbXBvbmVudCBzdXBwcmVzc2VzXG4gICAgICogdGhlIGJ1aWx0LWluIGJlaGF2aW9yIHRoYXQgZm9sbG93cyB0aGUgZXZlbnQuXG4gICAgICovXG4gICAgcHJldmVudERlZmF1bHQoKSB7XG4gICAgICAgIHRoaXMucHJldmVudGVkID0gdHJ1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGV2ZW50IHdhcyBwcmV2ZW50ZWRcbiAgICAgKiBieSBhbnkgb2YgaXRzIHN1YnNjcmliZXJzLlxuICAgICAqXG4gICAgICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBkZWZhdWx0IGFjdGlvbiB3YXMgcHJldmVudGVkLlxuICAgICAqIE90aGVyd2lzZSwgcmV0dXJucyBgZmFsc2VgLlxuICAgICAqL1xuICAgIGlzRGVmYXVsdFByZXZlbnRlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJldmVudGVkO1xuICAgIH1cbn1cblxuLyoqXG4gKiBBcmd1bWVudHMgZm9yIHRoZSBgY2VsbENsb3NlYCBldmVudC5cbiAqL1xuY2xhc3MgQ2VsbENsb3NlRXZlbnQgZXh0ZW5kcyBQcmV2ZW50YWJsZUV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAaGlkZGVuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmFjdGlvbiA9ICdjZWxsQ2xvc2UnO1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIG9wdGlvbnMpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGlzRXF1YWwgPSAoaW5kZXgpID0+IChpdGVtKSA9PiBpdGVtLmluZGV4ID09PSBpbmRleDtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBpc05vdEVxdWFsID0gKGluZGV4KSA9PiAoaXRlbSkgPT4gaXRlbS5pbmRleCAhPT0gaW5kZXg7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgaXNOZXdSb3cgPSAoaW5kZXgpID0+IGluZGV4ID09PSAtMSB8fCBpbmRleCA9PT0gdW5kZWZpbmVkO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBFZGl0U2VydmljZSA9IGNsYXNzIEVkaXRTZXJ2aWNlIHtcbiAgICBjb25zdHJ1Y3RvcihuZ1pvbmUpIHtcbiAgICAgICAgdGhpcy5uZ1pvbmUgPSBuZ1pvbmU7XG4gICAgICAgIHRoaXMuY2hhbmdlcyA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5lZGl0ZWRJbmRpY2VzID0gW107XG4gICAgICAgIHRoaXMua2VlcEVkaXRDZWxsID0gZmFsc2U7XG4gICAgICAgIHRoaXMuY2xvc2luZ0NlbGwgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jaGFuZ2VkU291cmNlID0gbmV3IFN1YmplY3QoKTtcbiAgICAgICAgdGhpcy5jaGFuZ2VkID0gdGhpcy5jaGFuZ2VkU291cmNlLmFzT2JzZXJ2YWJsZSgpLnBpcGUoc3dpdGNoTWFwKCgpID0+IHRoaXMubmdab25lLm9uU3RhYmxlLmFzT2JzZXJ2YWJsZSgpLnBpcGUodGFrZSgxKSkpKTtcbiAgICB9XG4gICAgZWRpdFJvdyhpbmRleCwgZ3JvdXAgPSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhpcy5lZGl0ZWRJbmRpY2VzLnB1c2goeyBpbmRleCwgZ3JvdXAgfSk7XG4gICAgICAgIHRoaXMub25DaGFuZ2VkKCk7XG4gICAgfVxuICAgIGFkZFJvdyhncm91cCkge1xuICAgICAgICB0aGlzLm5ld0l0ZW1Hcm91cCA9IHsgZ3JvdXAgfTtcbiAgICAgICAgdGhpcy5vbkNoYW5nZWQoKTtcbiAgICB9XG4gICAgZWRpdENlbGwocm93SW5kZXgsIGNvbHVtbiwgZ3JvdXApIHtcbiAgICAgICAgaWYgKGlzTmV3Um93KHJvd0luZGV4KSB8fCBjb2x1bW4uZWRpdGFibGUgPT09IGZhbHNlIHx8ICEoY29sdW1uLmVkaXRUZW1wbGF0ZSB8fCBjb2x1bW4uZmllbGQpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcmV2ZW50Q2VsbENsb3NlKCk7XG4gICAgICAgIGlmICghdGhpcy5jbG9zZUNlbGwoKSkge1xuICAgICAgICAgICAgdGhpcy5lZGl0Um93KHJvd0luZGV4LCBncm91cCk7XG4gICAgICAgICAgICB0aGlzLmNvbHVtbiA9IGNvbHVtbjtcbiAgICAgICAgICAgIHRoaXMub25DaGFuZ2VkKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaXNFZGl0aW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lZGl0ZWRJbmRpY2VzLmxlbmd0aCA+IDA7XG4gICAgfVxuICAgIGlzRWRpdGluZ0NlbGwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzRWRpdGluZygpICYmIHRoaXMuY29sdW1uICE9PSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGdldCBoYXNOZXdJdGVtKCkge1xuICAgICAgICByZXR1cm4gaXNQcmVzZW50KHRoaXMubmV3SXRlbUdyb3VwKTtcbiAgICB9XG4gICAgZ2V0IG5ld0RhdGFJdGVtKCkge1xuICAgICAgICBpZiAodGhpcy5oYXNOZXdJdGVtKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5uZXdJdGVtR3JvdXAuZ3JvdXAudmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICBjbG9zZShpbmRleCkge1xuICAgICAgICBpZiAoaXNOZXdSb3coaW5kZXgpKSB7XG4gICAgICAgICAgICB0aGlzLm5ld0l0ZW1Hcm91cCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVkaXRlZEluZGljZXMgPSB0aGlzLmVkaXRlZEluZGljZXMuZmlsdGVyKGlzTm90RXF1YWwoaW5kZXgpKTtcbiAgICAgICAgZGVsZXRlIHRoaXMuY29sdW1uO1xuICAgICAgICB0aGlzLm9uQ2hhbmdlZCgpO1xuICAgIH1cbiAgICBjbG9zZUNlbGwob3JpZ2luYWxFdmVudCkge1xuICAgICAgICBpZiAodGhpcy5jb2x1bW4gJiYgIXRoaXMuY2xvc2luZ0NlbGwpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5nWm9uZS5ydW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgaW5kZXgsIGdyb3VwIH0gPSB0aGlzLmVkaXRlZEluZGljZXNbMF07XG4gICAgICAgICAgICAgICAgY29uc3QgYXJncyA9IG5ldyBDZWxsQ2xvc2VFdmVudCh7XG4gICAgICAgICAgICAgICAgICAgIGNvbHVtbjogdGhpcy5jb2x1bW4sXG4gICAgICAgICAgICAgICAgICAgIGZvcm1Hcm91cDogZ3JvdXAsXG4gICAgICAgICAgICAgICAgICAgIG9yaWdpbmFsRXZlbnQ6IG9yaWdpbmFsRXZlbnQsXG4gICAgICAgICAgICAgICAgICAgIHJvd0luZGV4OiBpbmRleFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2luZ0NlbGwgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlcy5lbWl0KGFyZ3MpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2luZ0NlbGwgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBpZiAoIWFyZ3MuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYW5jZWxDZWxsKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBhcmdzLmlzRGVmYXVsdFByZXZlbnRlZCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2FuY2VsQ2VsbCgpIHtcbiAgICAgICAgaWYgKHRoaXMuY29sdW1uKSB7XG4gICAgICAgICAgICB0aGlzLmVkaXRlZEluZGljZXMgPSBbXTtcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLmNvbHVtbjtcbiAgICAgICAgICAgIHRoaXMub25DaGFuZ2VkKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2hvdWxkQ2xvc2VDZWxsKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW4gJiYgIXRoaXMua2VlcEVkaXRDZWxsO1xuICAgIH1cbiAgICBwcmV2ZW50Q2VsbENsb3NlKCkge1xuICAgICAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICAgICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMua2VlcENlbGxUaW1lb3V0KTtcbiAgICAgICAgICAgIHRoaXMua2VlcEVkaXRDZWxsID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMua2VlcENlbGxUaW1lb3V0ID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMua2VlcEVkaXRDZWxsID0gZmFsc2U7XG4gICAgICAgICAgICB9LCAwKTsgLy8gdHNsaW50OmRpc2FibGUtbGluZTphbGlnblxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29udGV4dChpbmRleCkge1xuICAgICAgICBpZiAoaXNOZXdSb3coaW5kZXgpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5uZXdJdGVtR3JvdXA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuZmluZEJ5SW5kZXgoaW5kZXgpO1xuICAgIH1cbiAgICBjb2x1bW5Db250ZXh0KGluZGV4LCBjb2x1bW4pIHtcbiAgICAgICAgaWYgKGlzTmV3Um93KGluZGV4KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubmV3SXRlbUdyb3VwO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5jb2x1bW4gfHwgY29sdW1uID09PSB0aGlzLmNvbHVtbikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmluZEJ5SW5kZXgoaW5kZXgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlzRWRpdGVkKGluZGV4KSB7XG4gICAgICAgIGlmIChpc05ld1JvdyhpbmRleCkgJiYgaXNQcmVzZW50KHRoaXMubmV3SXRlbUdyb3VwKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICF0aGlzLmNvbHVtbiAmJiBpc1ByZXNlbnQodGhpcy5maW5kQnlJbmRleChpbmRleCkpO1xuICAgIH1cbiAgICBoYXNFZGl0ZWQoaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIGlzUHJlc2VudCh0aGlzLmNvbnRleHQoaW5kZXgpKTtcbiAgICB9XG4gICAgaXNFZGl0ZWRDb2x1bW4oaW5kZXgsIGNvbHVtbikge1xuICAgICAgICBpZiAodGhpcy5jb2x1bW4gJiYgdGhpcy5jb2x1bW4gPT09IGNvbHVtbikge1xuICAgICAgICAgICAgcmV0dXJuIGlzUHJlc2VudCh0aGlzLmZpbmRCeUluZGV4KGluZGV4KSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBiZWdpbkVkaXQocm93SW5kZXgpIHtcbiAgICAgICAgdGhpcy5jaGFuZ2VzLmVtaXQoeyBhY3Rpb246ICdlZGl0Jywgcm93SW5kZXggfSk7XG4gICAgfVxuICAgIGJlZ2luQWRkKCkge1xuICAgICAgICB0aGlzLmNoYW5nZXMuZW1pdCh7IGFjdGlvbjogJ2FkZCcgfSk7XG4gICAgfVxuICAgIGVuZEVkaXQocm93SW5kZXgpIHtcbiAgICAgICAgY29uc3QgeyBncm91cDogZm9ybUdyb3VwIH0gPSB0aGlzLmNvbnRleHQocm93SW5kZXgpO1xuICAgICAgICB0aGlzLmNoYW5nZXMuZW1pdCh7IGFjdGlvbjogJ2NhbmNlbCcsIHJvd0luZGV4LCBmb3JtR3JvdXAsIGlzTmV3OiBpc05ld1Jvdyhyb3dJbmRleCkgfSk7XG4gICAgfVxuICAgIHNhdmUocm93SW5kZXgpIHtcbiAgICAgICAgY29uc3QgeyBncm91cDogZm9ybUdyb3VwIH0gPSB0aGlzLmNvbnRleHQocm93SW5kZXgpO1xuICAgICAgICB0aGlzLmNoYW5nZXMuZW1pdCh7IGFjdGlvbjogJ3NhdmUnLCByb3dJbmRleCwgZm9ybUdyb3VwLCBpc05ldzogaXNOZXdSb3cocm93SW5kZXgpIH0pO1xuICAgIH1cbiAgICByZW1vdmUocm93SW5kZXgpIHtcbiAgICAgICAgdGhpcy5jaGFuZ2VzLmVtaXQoeyBhY3Rpb246ICdyZW1vdmUnLCByb3dJbmRleCB9KTtcbiAgICB9XG4gICAgZmluZEJ5SW5kZXgoaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWRpdGVkSW5kaWNlcy5maW5kKGlzRXF1YWwoaW5kZXgpKTtcbiAgICB9XG4gICAgb25DaGFuZ2VkKCkge1xuICAgICAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNoYW5nZWRTb3VyY2UubmV4dCgpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuRWRpdFNlcnZpY2UgPSBfX2RlY29yYXRlKFtcbiAgICBJbmplY3RhYmxlKCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtOZ1pvbmVdKVxuXSwgRWRpdFNlcnZpY2UpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgZ2V0R3JvdXBSb3dBcmdzID0gKGdyb3VwSXRlbSkgPT4ge1xuICAgIGlmICghaXNQcmVzZW50KGdyb3VwSXRlbSkpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7IGdyb3VwOiBncm91cEl0ZW0uZGF0YSwgZ3JvdXBJbmRleDogZ3JvdXBJdGVtLmluZGV4LCBwYXJlbnRHcm91cDogZ2V0R3JvdXBSb3dBcmdzKGdyb3VwSXRlbS5wYXJlbnRHcm91cCkgfTtcbn07XG5cbmNvbnN0IGlzQ2hpbGRJbmRleCA9ICh0YXJnZXRJbmRleCwgcGFyZW50SW5kZXgpID0+IHBhcmVudEluZGV4ICE9PSB0YXJnZXRJbmRleCAmJiB0YXJnZXRJbmRleC5zdGFydHNXaXRoKHBhcmVudEluZGV4KTtcbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgR3JvdXBzU2VydmljZSA9IGNsYXNzIEdyb3Vwc1NlcnZpY2Uge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5jaGFuZ2VzID0gbmV3IFN1YmplY3QoKTtcbiAgICAgICAgdGhpcy5yb3dTdGF0ZSA9IG5ldyBTZXQoKTtcbiAgICB9XG4gICAgcmVzZXQoKSB7XG4gICAgICAgIHRoaXMucm93U3RhdGUuY2xlYXIoKTtcbiAgICB9XG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICB9XG4gICAgaXNFeHBhbmRlZChncm91cEFyZ3MpIHtcbiAgICAgICAgaWYgKHRoaXMudXNlckNhbGxiYWNrKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy51c2VyQ2FsbGJhY2soZ3JvdXBBcmdzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gIXRoaXMucm93U3RhdGUuaGFzKGdyb3VwQXJncy5ncm91cEluZGV4KTtcbiAgICB9XG4gICAgaXNJbkV4cGFuZGVkR3JvdXAoZ3JvdXBJdGVtKSB7XG4gICAgICAgIGxldCBleHBhbmRlZCA9IHRydWU7XG4gICAgICAgIHdoaWxlIChncm91cEl0ZW0gJiYgZXhwYW5kZWQpIHtcbiAgICAgICAgICAgIGV4cGFuZGVkID0gdGhpcy5pc0V4cGFuZGVkKHtcbiAgICAgICAgICAgICAgICBncm91cDogZ3JvdXBJdGVtLmRhdGEsXG4gICAgICAgICAgICAgICAgZ3JvdXBJbmRleDogZ3JvdXBJdGVtLmluZGV4LFxuICAgICAgICAgICAgICAgIHBhcmVudEdyb3VwOiBnZXRHcm91cFJvd0FyZ3MoZ3JvdXBJdGVtLnBhcmVudEdyb3VwKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBncm91cEl0ZW0gPSBncm91cEl0ZW0ucGFyZW50R3JvdXA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGV4cGFuZGVkO1xuICAgIH1cbiAgICB0b2dnbGVSb3coZ3JvdXBJdGVtKSB7XG4gICAgICAgIGNvbnN0IHBhcmVudEdyb3VwID0gZ2V0R3JvdXBSb3dBcmdzKGdyb3VwSXRlbS5wYXJlbnRHcm91cCk7XG4gICAgICAgIGNvbnN0IGV4cGFuZCA9ICF0aGlzLmlzRXhwYW5kZWQoeyBncm91cDogZ3JvdXBJdGVtLmRhdGEsIGdyb3VwSW5kZXg6IGdyb3VwSXRlbS5pbmRleCwgcGFyZW50R3JvdXAgfSk7XG4gICAgICAgIHRoaXMuY2hhbmdlcy5uZXh0KHsgZ3JvdXA6IGdyb3VwSXRlbS5kYXRhLCBleHBhbmQsIGdyb3VwSW5kZXg6IGdyb3VwSXRlbS5pbmRleCwgcGFyZW50R3JvdXAgfSk7XG4gICAgICAgIC8vIGlmIHVzZXJjYWxsYmFjayBpcyBnaXZlbiwgdGhlIHJvd1N0YXRlIHNob3VsZCBiZSBpZ25vcmVkXG4gICAgICAgIGlmICh0aGlzLnVzZXJDYWxsYmFjaykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChleHBhbmQpIHtcbiAgICAgICAgICAgIHRoaXMucm93U3RhdGUuZGVsZXRlKGdyb3VwSXRlbS5pbmRleCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnJvd1N0YXRlLmFkZChncm91cEl0ZW0uaW5kZXgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGV4cGFuZENoaWxkcmVuKHBhcmVudEluZGV4KSB7XG4gICAgICAgIHRoaXMucm93U3RhdGUuZm9yRWFjaChpbmRleCA9PiBpc0NoaWxkSW5kZXgoaW5kZXgsIHBhcmVudEluZGV4KSAmJiB0aGlzLnJvd1N0YXRlLmRlbGV0ZShpbmRleCkpO1xuICAgIH1cbn07XG5Hcm91cHNTZXJ2aWNlID0gX19kZWNvcmF0ZShbXG4gICAgSW5qZWN0YWJsZSgpXG5dLCBHcm91cHNTZXJ2aWNlKTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNsYXNzIFBhZ2VyQ29udGV4dFNlcnZpY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmNoYW5nZXMgPSBuZXcgU3ViamVjdCgpO1xuICAgICAgICB0aGlzLnBhZ2VDaGFuZ2UgPSBuZXcgU3ViamVjdCgpO1xuICAgIH1cbiAgICBnZXQgY3VycmVudFBhZ2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNraXAgLyB0aGlzLnBhZ2VTaXplO1xuICAgIH1cbiAgICBub3RpZnlDaGFuZ2VzKGNoYW5nZXMpIHtcbiAgICAgICAgdGhpcy50b3RhbCA9IGNoYW5nZXMudG90YWw7XG4gICAgICAgIHRoaXMucGFnZVNpemUgPSBjaGFuZ2VzLnBhZ2VTaXplO1xuICAgICAgICB0aGlzLnNraXAgPSBjaGFuZ2VzLnNraXA7XG4gICAgICAgIHRoaXMuY2hhbmdlcy5uZXh0KGNoYW5nZXMpO1xuICAgIH1cbiAgICBjaGFuZ2VQYWdlKHBhZ2UpIHtcbiAgICAgICAgdGhpcy5wYWdlQ2hhbmdlLm5leHQoeyBza2lwOiBwYWdlICogdGhpcy5wYWdlU2l6ZSwgdGFrZTogdGhpcy5wYWdlU2l6ZSB9KTtcbiAgICB9XG4gICAgY2hhbmdlUGFnZVNpemUodmFsdWUpIHtcbiAgICAgICAgdGhpcy5wYWdlQ2hhbmdlLm5leHQoeyBza2lwOiAwLCB0YWtlOiB2YWx1ZSB9KTtcbiAgICB9XG4gICAgbmV4dFBhZ2UoKSB7XG4gICAgICAgIGNvbnN0IG5leHRQYWdlID0gdGhpcy5jdXJyZW50UGFnZSArIDE7XG4gICAgICAgIGlmIChuZXh0UGFnZSAqIHRoaXMucGFnZVNpemUgPCB0aGlzLnRvdGFsKSB7XG4gICAgICAgICAgICB0aGlzLmNoYW5nZVBhZ2UobmV4dFBhZ2UpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHByZXZQYWdlKCkge1xuICAgICAgICBjb25zdCBwcmV2UGFnZSA9IHRoaXMuY3VycmVudFBhZ2UgLSAxO1xuICAgICAgICBpZiAocHJldlBhZ2UgKiB0aGlzLnBhZ2VTaXplID49IDApIHtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlUGFnZShwcmV2UGFnZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogQXJndW1lbnRzIGZvciB0aGUgYGRldGFpbENvbGxhcHNlYCBldmVudC5cbiAqL1xuY2xhc3MgRGV0YWlsQ29sbGFwc2VFdmVudCBleHRlbmRzIFByZXZlbnRhYmxlRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKGFyZ3MpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBhcmdzKTtcbiAgICB9XG59XG5cbi8qKlxuICogQXJndW1lbnRzIGZvciB0aGUgYGRldGFpbEV4cGFuZGAgZXZlbnQuXG4gKi9cbmNsYXNzIERldGFpbEV4cGFuZEV2ZW50IGV4dGVuZHMgUHJldmVudGFibGVFdmVudCB7XG4gICAgY29uc3RydWN0b3IoYXJncykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIGFyZ3MpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBEZXRhaWxzU2VydmljZSA9IGNsYXNzIERldGFpbHNTZXJ2aWNlIHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuY2hhbmdlcyA9IG5ldyBTdWJqZWN0KCk7XG4gICAgICAgIHRoaXMucm93U3RhdGUgPSBuZXcgU2V0KCk7XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLnJvd1N0YXRlLmNsZWFyKCk7XG4gICAgfVxuICAgIGlzRXhwYW5kZWQoaW5kZXgsIGRhdGFJdGVtKSB7XG4gICAgICAgIGlmICh0aGlzLnVzZXJDYWxsYmFjaykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudXNlckNhbGxiYWNrKHsgaW5kZXgsIGRhdGFJdGVtIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnJvd1N0YXRlLmhhcyhpbmRleCk7XG4gICAgfVxuICAgIHRvZ2dsZVJvdyhpbmRleCwgZGF0YUl0ZW0pIHtcbiAgICAgICAgaWYgKHRoaXMuaXNFeHBhbmRlZChpbmRleCwgZGF0YUl0ZW0pKSB7XG4gICAgICAgICAgICB0aGlzLmNvbGxhcHNlUm93KGluZGV4LCBkYXRhSXRlbSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmV4cGFuZFJvdyhpbmRleCwgZGF0YUl0ZW0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGV4cGFuZFJvdyhpbmRleCwgZGF0YUl0ZW0pIHtcbiAgICAgICAgY29uc3QgcHJldmVudGVkID0gdGhpcy5lbWl0RXZlbnQoeyBkYXRhSXRlbSwgaW5kZXgsIGV4cGFuZDogdHJ1ZSB9KTtcbiAgICAgICAgaWYgKCFwcmV2ZW50ZWQgJiYgIXRoaXMudXNlckNhbGxiYWNrKSB7XG4gICAgICAgICAgICB0aGlzLnJvd1N0YXRlLmFkZChpbmRleCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29sbGFwc2VSb3coaW5kZXgsIGRhdGFJdGVtKSB7XG4gICAgICAgIGNvbnN0IHByZXZlbnRlZCA9IHRoaXMuZW1pdEV2ZW50KHsgZGF0YUl0ZW0sIGluZGV4LCBleHBhbmQ6IGZhbHNlIH0pO1xuICAgICAgICBpZiAoIXByZXZlbnRlZCAmJiAhdGhpcy51c2VyQ2FsbGJhY2spIHtcbiAgICAgICAgICAgIHRoaXMucm93U3RhdGUuZGVsZXRlKGluZGV4KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbWl0RXZlbnQoYXJncykge1xuICAgICAgICBjb25zdCBldmVudEFyZyA9IG5ldyAoYXJncy5leHBhbmQgPyBEZXRhaWxFeHBhbmRFdmVudCA6IERldGFpbENvbGxhcHNlRXZlbnQpKGFyZ3MpO1xuICAgICAgICB0aGlzLmNoYW5nZXMubmV4dChldmVudEFyZyk7XG4gICAgICAgIHJldHVybiBldmVudEFyZy5pc0RlZmF1bHRQcmV2ZW50ZWQoKTtcbiAgICB9XG59O1xuRGV0YWlsc1NlcnZpY2UgPSBfX2RlY29yYXRlKFtcbiAgICBJbmplY3RhYmxlKClcbl0sIERldGFpbHNTZXJ2aWNlKTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBTY3JvbGxSZXF1ZXN0U2VydmljZSA9IGNsYXNzIFNjcm9sbFJlcXVlc3RTZXJ2aWNlIHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMucmVxdWVzdHMgPSBuZXcgU3ViamVjdCgpO1xuICAgIH1cbiAgICBzY3JvbGxUbyhyZXF1ZXN0KSB7XG4gICAgICAgIHRoaXMucmVxdWVzdHMubmV4dChyZXF1ZXN0KTtcbiAgICB9XG59O1xuU2Nyb2xsUmVxdWVzdFNlcnZpY2UgPSBfX2RlY29yYXRlKFtcbiAgICBJbmplY3RhYmxlKClcbl0sIFNjcm9sbFJlcXVlc3RTZXJ2aWNlKTtcblxuY29uc3QgaXNJblNhbWVHcmlkID0gKGVsZW1lbnQsIGdyaWRFbGVtZW50KSA9PiBjbG9zZXN0KGVsZW1lbnQsIG1hdGNoZXNOb2RlTmFtZSgna2VuZG8tZ3JpZCcpKSA9PT0gZ3JpZEVsZW1lbnQ7XG5jb25zdCBtYXRjaEhlYWRlckNlbGwgPSBtYXRjaGVzTm9kZU5hbWUoJ3RoJyk7XG5jb25zdCBtYXRjaERhdGFDZWxsID0gbWF0Y2hlc05vZGVOYW1lKCd0ZCcpO1xuY29uc3QgbWF0Y2hGb290ZXJDZWxsID0gbWF0Y2hlc05vZGVOYW1lKCcuay1ncmlkLWZvb3RlciB0ZCcpO1xuY29uc3QgbWF0Y2hDZWxsID0gKGVsZW1lbnQpID0+IG1hdGNoRGF0YUNlbGwoZWxlbWVudCkgfHwgbWF0Y2hIZWFkZXJDZWxsKGVsZW1lbnQpIHx8IG1hdGNoRm9vdGVyQ2VsbChlbGVtZW50KTtcbmNvbnN0IGdyaWRDZWxsID0gKGVsZW1lbnQsIGdyaWRFbGVtZW50KSA9PiB7XG4gICAgbGV0IHRhcmdldCA9IGNsb3Nlc3QoZWxlbWVudCwgbWF0Y2hDZWxsKTtcbiAgICB3aGlsZSAodGFyZ2V0ICYmICFpc0luU2FtZUdyaWQodGFyZ2V0LCBncmlkRWxlbWVudCkpIHtcbiAgICAgICAgdGFyZ2V0ID0gY2xvc2VzdCh0YXJnZXQucGFyZW50RWxlbWVudCwgbWF0Y2hDZWxsKTtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn07XG5jb25zdCB0YXJnZXRDZWxsID0gKHRhcmdldCwgZ3JpZEVsZW1lbnQpID0+IHtcbiAgICBjb25zdCBjZWxsID0gZ3JpZENlbGwodGFyZ2V0LCBncmlkRWxlbWVudCk7XG4gICAgY29uc3Qgcm93ID0gY2xvc2VzdChjZWxsLCBtYXRjaGVzTm9kZU5hbWUoJ3RyJykpO1xuICAgIGlmIChjZWxsICYmIHJvdykge1xuICAgICAgICBsZXQgcm93SW5kZXggPSByb3cuZ2V0QXR0cmlidXRlKCdhcmlhLXJvd2luZGV4Jyk7XG4gICAgICAgIHJvd0luZGV4ID0gcm93SW5kZXggPyBwYXJzZUludChyb3dJbmRleCwgMTApIC0gMSA6IG51bGw7XG4gICAgICAgIGxldCBjb2xJbmRleCA9IGNlbGwuZ2V0QXR0cmlidXRlKCdhcmlhLWNvbGluZGV4Jyk7XG4gICAgICAgIGNvbEluZGV4ID0gY29sSW5kZXggPyBwYXJzZUludChjb2xJbmRleCwgMTApIC0gMSA6IG51bGw7XG4gICAgICAgIGlmIChyb3dJbmRleCAhPT0gbnVsbCAmJiBjb2xJbmRleCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIHsgY29sSW5kZXgsIHJvd0luZGV4LCBlbGVtZW50OiBjZWxsIH07XG4gICAgICAgIH1cbiAgICB9XG59O1xuY29uc3QgaXNBcnJvd0tleSA9IGtleUNvZGUgPT4ga2V5Q29kZSA9PT0gS2V5cy5BcnJvd0xlZnQgfHwga2V5Q29kZSA9PT0gS2V5cy5BcnJvd1JpZ2h0IHx8XG4gICAga2V5Q29kZSA9PT0gS2V5cy5BcnJvd1VwIHx8IGtleUNvZGUgPT09IEtleXMuQXJyb3dEb3duO1xuY29uc3QgaXNOYXZpZ2F0aW9uS2V5ID0ga2V5Q29kZSA9PiBpc0Fycm93S2V5KGtleUNvZGUpIHx8XG4gICAga2V5Q29kZSA9PT0gS2V5cy5QYWdlVXAgfHwga2V5Q29kZSA9PT0gS2V5cy5QYWdlRG93biB8fFxuICAgIGtleUNvZGUgPT09IEtleXMuSG9tZSB8fCBrZXlDb2RlID09PSBLZXlzLkVuZDtcbmNvbnN0IGlzSW5wdXQgPSBtYXRjaGVzTm9kZU5hbWUoJ2lucHV0Jyk7XG5jb25zdCBpc1RleHRJbnB1dCA9IGVsZW1lbnQgPT4gZWxlbWVudCAmJiBpc0lucHV0KGVsZW1lbnQpICYmIGVsZW1lbnQudHlwZS50b0xvd2VyQ2FzZSgpID09PSAndGV4dCc7XG5jb25zdCBpc1ByaW50YWJsZUNoYXJhY3RlciA9IChzdHIpID0+IHN0ci5sZW5ndGggPT09IDEgJiYgc3RyLm1hdGNoKC9cXFMvKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBOYXZpZ2F0aW9uVmlld3BvcnQge1xuICAgIGNvbnN0cnVjdG9yKGZpcnN0SXRlbUluZGV4LCBsYXN0SXRlbUluZGV4KSB7XG4gICAgICAgIHRoaXMuZmlyc3RJdGVtSW5kZXggPSBmaXJzdEl0ZW1JbmRleDtcbiAgICAgICAgdGhpcy5sYXN0SXRlbUluZGV4ID0gbGFzdEl0ZW1JbmRleDtcbiAgICB9XG4gICAgY29udGFpbnNSb3coZGF0YVJvd0luZGV4KSB7XG4gICAgICAgIGNvbnN0IGhlYWRlclJvdyA9IGRhdGFSb3dJbmRleCA8IDA7XG4gICAgICAgIHJldHVybiBoZWFkZXJSb3cgfHwgKGRhdGFSb3dJbmRleCA+PSB0aGlzLmZpcnN0SXRlbUluZGV4ICYmIGRhdGFSb3dJbmRleCA8PSB0aGlzLmxhc3RJdGVtSW5kZXgpO1xuICAgIH1cbiAgICBpbnRlcnNlY3RzKHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgcmV0dXJuIChzdGFydCA8PSB0aGlzLmZpcnN0SXRlbUluZGV4ICYmIHRoaXMubGFzdEl0ZW1JbmRleCA8PSBlbmQpIHx8XG4gICAgICAgICAgICAodGhpcy5maXJzdEl0ZW1JbmRleCA8PSBzdGFydCAmJiBzdGFydCA8PSB0aGlzLmxhc3RJdGVtSW5kZXgpIHx8XG4gICAgICAgICAgICAodGhpcy5maXJzdEl0ZW1JbmRleCA8PSBlbmQgJiYgZW5kIDw9IHRoaXMubGFzdEl0ZW1JbmRleCk7XG4gICAgfVxufVxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBOYXZpZ2F0aW9uU2VydmljZSA9IGNsYXNzIE5hdmlnYXRpb25TZXJ2aWNlIHtcbiAgICBjb25zdHJ1Y3Rvcih6b25lLCBkb21FdmVudHMsIHBhZ2VyQ29udGV4dFNlcnZpY2UsIHNjcm9sbFJlcXVlc3RTZXJ2aWNlLCBncm91cHNTZXJ2aWNlLCBkZXRhaWxzU2VydmljZSwgZm9jdXNSb290LCBlZGl0U2VydmljZSwgY2QsIGxvY2FsaXphdGlvbiwgZm9jdXNhYmxlUGFyZW50KSB7XG4gICAgICAgIHRoaXMuem9uZSA9IHpvbmU7XG4gICAgICAgIHRoaXMuZG9tRXZlbnRzID0gZG9tRXZlbnRzO1xuICAgICAgICB0aGlzLnBhZ2VyQ29udGV4dFNlcnZpY2UgPSBwYWdlckNvbnRleHRTZXJ2aWNlO1xuICAgICAgICB0aGlzLnNjcm9sbFJlcXVlc3RTZXJ2aWNlID0gc2Nyb2xsUmVxdWVzdFNlcnZpY2U7XG4gICAgICAgIHRoaXMuZ3JvdXBzU2VydmljZSA9IGdyb3Vwc1NlcnZpY2U7XG4gICAgICAgIHRoaXMuZGV0YWlsc1NlcnZpY2UgPSBkZXRhaWxzU2VydmljZTtcbiAgICAgICAgdGhpcy5mb2N1c1Jvb3QgPSBmb2N1c1Jvb3Q7XG4gICAgICAgIHRoaXMuZWRpdFNlcnZpY2UgPSBlZGl0U2VydmljZTtcbiAgICAgICAgdGhpcy5jZCA9IGNkO1xuICAgICAgICB0aGlzLmxvY2FsaXphdGlvbiA9IGxvY2FsaXphdGlvbjtcbiAgICAgICAgdGhpcy5mb2N1c2FibGVQYXJlbnQgPSBmb2N1c2FibGVQYXJlbnQ7XG4gICAgICAgIHRoaXMuY2VsbEtleWRvd24gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuYWN0aXZlUm93SW5kZXggPSAwO1xuICAgICAgICB0aGlzLmFsaXZlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuYWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5tb2RlID0gMCAvKiBTdGFuZGJ5ICovO1xuICAgICAgICB0aGlzLm1vZGVsID0gbmV3IE5hdmlnYXRpb25Nb2RlbCgpO1xuICAgICAgICB0aGlzLmN1cnNvciA9IG5ldyBOYXZpZ2F0aW9uQ3Vyc29yKHRoaXMubW9kZWwpO1xuICAgICAgICB0aGlzLmNoYW5nZXMgPSB0aGlzLmN1cnNvci5jaGFuZ2VzO1xuICAgIH1cbiAgICBzZXQgbWV0YWRhdGEodmFsdWUpIHtcbiAgICAgICAgdGhpcy5tZXRhID0gdmFsdWU7XG4gICAgICAgIHRoaXMuY3Vyc29yLm1ldGFkYXRhID0gdmFsdWU7XG4gICAgfVxuICAgIGdldCBtZXRhZGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWV0YTtcbiAgICB9XG4gICAgZ2V0IGVuYWJsZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFsaXZlO1xuICAgIH1cbiAgICBnZXQgYWN0aXZlQ2VsbCgpIHtcbiAgICAgICAgaWYgKHRoaXMubW9kZSAhPT0gMCAvKiBTdGFuZGJ5ICovKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jdXJzb3IuY2VsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgYWN0aXZlUm93KCkge1xuICAgICAgICBpZiAodGhpcy5tb2RlICE9PSAwIC8qIFN0YW5kYnkgKi8pIHtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmN1cnNvci5yb3csIHtcbiAgICAgICAgICAgICAgICBjZWxsczogdGhpcy5jdXJzb3Iucm93LmNlbGxzLnRvQXJyYXkoKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IGFjdGl2ZURhdGFSb3coKSB7XG4gICAgICAgIHJldHVybiBNYXRoLm1heCgwLCB0aGlzLmFjdGl2ZVJvd0luZGV4IC0gdGhpcy5tZXRhLmhlYWRlclJvd3MpO1xuICAgIH1cbiAgICBpbml0KG1ldGEpIHtcbiAgICAgICAgdGhpcy5hbGl2ZSA9IHRydWU7XG4gICAgICAgIHRoaXMuZm9jdXNSb290LmFjdGl2ZSA9IHRydWU7XG4gICAgICAgIHRoaXMubWV0YWRhdGEgPSBtZXRhO1xuICAgICAgICBjb25zdCBvblN0YWJsZVN1YnNjcmliZXIgPSAoLi4ub3BlcmF0b3JzKSA9PiAoYXJncykgPT4gdGhpcy56b25lLmlzU3RhYmxlID9cbiAgICAgICAgICAgIGZyb20oW3RydWVdKS5waXBlKG1hcCgoKSA9PiBhcmdzKSkgOlxuICAgICAgICAgICAgdGhpcy56b25lLm9uU3RhYmxlLnBpcGUodGFrZSgxKSwgbWFwKCgpID0+IGFyZ3MpLCAuLi5vcGVyYXRvcnMpO1xuICAgICAgICBjb25zdCBvblN0YWJsZSA9IG9uU3RhYmxlU3Vic2NyaWJlcigpO1xuICAgICAgICB0aGlzLnN1YnMgPSBuZXcgU3Vic2NyaXB0aW9uKCk7XG4gICAgICAgIHRoaXMuc3Vicy5hZGQodGhpcy5jdXJzb3IuY2hhbmdlc1xuICAgICAgICAgICAgLnN1YnNjcmliZShhcmdzID0+IHRoaXMub25DdXJzb3JDaGFuZ2VzKGFyZ3MpKSk7XG4gICAgICAgIHRoaXMuc3Vicy5hZGQodGhpcy5kb21FdmVudHMuZm9jdXMucGlwZShzd2l0Y2hNYXAob25TdGFibGUpKVxuICAgICAgICAgICAgLnN1YnNjcmliZSgoYXJncykgPT4gdGhpcy5uYXZpZ2F0ZVRvKGFyZ3MudGFyZ2V0KSkpO1xuICAgICAgICB0aGlzLnN1YnMuYWRkKHRoaXMuZG9tRXZlbnRzLmZvY3VzT3V0LnBpcGUoZmlsdGVyKCgpID0+IHRoaXMubW9kZSAhPT0gMCAvKiBTdGFuZGJ5ICovKSwgc3dpdGNoTWFwKG9uU3RhYmxlU3Vic2NyaWJlcih0YWtlVW50aWwodGhpcy5kb21FdmVudHMuZm9jdXMpKSkpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKGFyZ3MgPT4gdGhpcy5vbkZvY3VzT3V0KGFyZ3MpKSk7XG4gICAgICAgIHRoaXMuc3Vicy5hZGQodGhpcy5kb21FdmVudHMud2luZG93Qmx1ci5waXBlKGZpbHRlcigoKSA9PiB0aGlzLm1vZGUgIT09IDAgLyogU3RhbmRieSAqLykpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKCgpID0+IHRoaXMub25XaW5kb3dCbHVyKCkpKTtcbiAgICAgICAgdGhpcy5zdWJzLmFkZChcbiAgICAgICAgLy8gQ2xvc2luZyB0aGUgZWRpdG9yIHdpbGwgbm90IGFsd2F5cyB0cmlnZ2VyIGZvY3Vzb3V0IGluIEZpcmVmb3guXG4gICAgICAgIC8vIFRvIGdldCBhcm91bmQgdGhpcywgd2UgZW5zdXJlIHRoYXQgdGhlIGNlbGwgaXMgY2xvc2VkIGFmdGVyIGVkaXRpbmcuXG4gICAgICAgIHRoaXMuZWRpdFNlcnZpY2UuY2hhbmdlcy5waXBlKGZpbHRlcihlID0+IGUuYWN0aW9uICE9PSAnZWRpdCcgJiYgdGhpcy5tb2RlID09PSAyIC8qIENvbnRlbnQgKi8pLCBmaWx0ZXIoKGUpID0+IGUuYWN0aW9uID09PSAnY2VsbENsb3NlJyAmJiAhZS5wcmV2ZW50ZWQpLCBzd2l0Y2hNYXAob25TdGFibGUpKVxuICAgICAgICAgICAgLnN1YnNjcmliZSgoKSA9PiB0aGlzLmxlYXZlQ2VsbCgpKSk7XG4gICAgICAgIHRoaXMuc3Vicy5hZGQodGhpcy5wYWdlckNvbnRleHRTZXJ2aWNlLnBhZ2VDaGFuZ2VcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoKCkgPT4gdGhpcy5jdXJzb3IucmVzZXQoMCwgMCkpKTtcbiAgICAgICAgdGhpcy5zdWJzLmFkZCh0aGlzLmRvbUV2ZW50cy5rZXlkb3duXG4gICAgICAgICAgICAuc3Vic2NyaWJlKGFyZ3MgPT4gdGhpcy5vbktleWRvd24oYXJncykpKTtcbiAgICAgICAgdGhpcy5zdWJzLmFkZCh0aGlzLmRvbUV2ZW50cy5rZXlkb3duLnBpcGUoZmlsdGVyKGFyZ3MgPT4gYXJncy5rZXlDb2RlID09PSBLZXlzLlRhYiAmJiB0aGlzLm1vZGUgPT09IDIgLyogQ29udGVudCAqLyksIHN3aXRjaE1hcFRvKHRoaXMuZG9tRXZlbnRzLmZvY3VzT3V0LnBpcGUodGFrZVVudGlsKFxuICAgICAgICAvLyBUaW1lb3V0IGlmIGZvY3VzT3V0IGRvZXNuJ3QgZmlyZSB2ZXJ5IHNvb25cbiAgICAgICAgaW50ZXJ2YWwoMCkucGlwZSh0YWtlKDEpKSkpKSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoKCkgPT4gdGhpcy5vblRhYm91dCgpKSk7XG4gICAgICAgIGlmICh0aGlzLmZvY3VzYWJsZVBhcmVudCkge1xuICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IG5ldyBHcmlkRm9jdXNhYmxlRWxlbWVudCh0aGlzKTtcbiAgICAgICAgICAgIHRoaXMuZm9jdXNhYmxlUGFyZW50LnJlZ2lzdGVyRWxlbWVudChlbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmRlYWN0aXZhdGVFbGVtZW50cygpO1xuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgaWYgKHRoaXMuc3Vicykge1xuICAgICAgICAgICAgdGhpcy5zdWJzLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hbGl2ZSA9IGZhbHNlO1xuICAgIH1cbiAgICByZWdpc3RlckNlbGwoY2VsbCkge1xuICAgICAgICBpZiAoY2VsbC5sb2dpY2FsUm93SW5kZXggIT09IHRoaXMucGVuZGluZ1Jvd0luZGV4KSB7XG4gICAgICAgICAgICBjb25zdCBtb2RlbENlbGwgPSB0aGlzLm1vZGVsLnJlZ2lzdGVyQ2VsbChjZWxsKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnZpcnR1YWxDZWxsICYmIHRoaXMuY3Vyc29yLmFjdGl2YXRlVmlydHVhbENlbGwobW9kZWxDZWxsKSkge1xuICAgICAgICAgICAgICAgIHRoaXMudmlydHVhbENlbGwgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZWdpc3RlckNlbGxPbkN1cnJlbnRSb3coY2VsbCkge1xuICAgICAgICBpZiAoY2VsbC5sb2dpY2FsUm93SW5kZXggPT09IHRoaXMucGVuZGluZ1Jvd0luZGV4KSB7XG4gICAgICAgICAgICB0aGlzLm1vZGVsLnJlZ2lzdGVyQ2VsbChjZWxsKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB1bnJlZ2lzdGVyQ2VsbChpbmRleCwgcm93SW5kZXgsIGNlbGwpIHtcbiAgICAgICAgdGhpcy5tb2RlbC51bnJlZ2lzdGVyQ2VsbChpbmRleCwgcm93SW5kZXgsIGNlbGwpO1xuICAgIH1cbiAgICByZWdpc3RlclJvdyhyb3cpIHtcbiAgICAgICAgdGhpcy5tb2RlbC5yZWdpc3RlclJvdyhyb3cpO1xuICAgICAgICB0aGlzLnBlbmRpbmdSb3dJbmRleCA9IHJvdy5sb2dpY2FsUm93SW5kZXg7XG4gICAgfVxuICAgIHVwZGF0ZVJvdyhyb3cpIHtcbiAgICAgICAgdGhpcy5tb2RlbC51cGRhdGVSb3cocm93KTtcbiAgICB9XG4gICAgdW5yZWdpc3RlclJvdyhpbmRleCwgcm93KSB7XG4gICAgICAgIHRoaXMubW9kZWwudW5yZWdpc3RlclJvdyhpbmRleCwgcm93KTtcbiAgICAgICAgY29uc3QgbGFzdFJvdyA9IHRoaXMubW9kZWwubGFzdFJvdztcbiAgICAgICAgaWYgKGxhc3RSb3cgJiYgdGhpcy5tb2RlID09PSAwIC8qIFN0YW5kYnkgKi8pIHtcbiAgICAgICAgICAgIGNvbnN0IG1heEluZGV4ID0gKHRoaXMubmVlZHNWaWV3cG9ydCgpICYmIHRoaXMudmlld3BvcnQpID8gdGhpcy52aWV3cG9ydC5sYXN0SXRlbUluZGV4IDogbGFzdFJvdy5pbmRleDtcbiAgICAgICAgICAgIGlmICh0aGlzLmFjdGl2ZVJvd0luZGV4ID4gbWF4SW5kZXgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnNvci5yZXNldCgwLCAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBpc0NlbGxGb2N1c2FibGUoY2VsbCkge1xuICAgICAgICByZXR1cm4gdGhpcy5hbGl2ZSAmJlxuICAgICAgICAgICAgdGhpcy5hY3RpdmUgJiZcbiAgICAgICAgICAgIHRoaXMubW9kZSAhPT0gMiAvKiBDb250ZW50ICovICYmXG4gICAgICAgICAgICB0aGlzLmN1cnNvci5pc0FjdGl2ZShjZWxsLmxvZ2ljYWxSb3dJbmRleCwgY2VsbC5sb2dpY2FsQ29sSW5kZXgpO1xuICAgIH1cbiAgICBpc0NlbGxGb2N1c2VkKGNlbGwpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubW9kZSA9PT0gMSAvKiBDdXJzb3IgKi8gJiYgdGhpcy5pc0NlbGxGb2N1c2FibGUoY2VsbCk7XG4gICAgfVxuICAgIG5hdmlnYXRlVG8oZWwpIHtcbiAgICAgICAgaWYgKCF0aGlzLmFsaXZlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY2VsbCA9IHRhcmdldENlbGwoZWwsIHRoaXMubWV0YS5ncmlkRWxlbWVudC5uYXRpdmVFbGVtZW50KTtcbiAgICAgICAgaWYgKCFjZWxsKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb2xkTW9kZSA9IHRoaXMubW9kZTtcbiAgICAgICAgY29uc3QgZm9jdXNJbkNlbGwgPSBjb250YWlucyhjZWxsLmVsZW1lbnQsIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpO1xuICAgICAgICBjb25zdCBmb2N1c0luQWN0aXZlUm93Q29udGVudCA9IHRoaXMubW9kZSA9PT0gMiAvKiBDb250ZW50ICovICYmXG4gICAgICAgICAgICB0aGlzLmFjdGl2ZVJvd0luZGV4ID09PSBjZWxsLnJvd0luZGV4ICYmXG4gICAgICAgICAgICBlbCAhPT0gY2VsbC5lbGVtZW50O1xuICAgICAgICBpZiAoZm9jdXNJbkNlbGwpIHtcbiAgICAgICAgICAgIHRoaXMubW9kZSA9IDIgLyogQ29udGVudCAqLztcbiAgICAgICAgICAgIHRoaXMuY3Vyc29yLnJlc2V0KGNlbGwucm93SW5kZXgsIGNlbGwuY29sSW5kZXgpO1xuICAgICAgICAgICAgdGhpcy5hY3RpdmF0ZVJvdygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKCFmb2N1c0luQWN0aXZlUm93Q29udGVudCkge1xuICAgICAgICAgICAgdGhpcy5tb2RlID0gMSAvKiBDdXJzb3IgKi87XG4gICAgICAgICAgICB0aGlzLmRlYWN0aXZhdGVFbGVtZW50cygpO1xuICAgICAgICAgICAgY29uc3QgYWxyZWFkeUFjdGl2ZSA9IHRoaXMuY3Vyc29yLmlzQWN0aXZlKGNlbGwucm93SW5kZXgsIGNlbGwuY29sSW5kZXgpO1xuICAgICAgICAgICAgY29uc3QgaXNDdXJzb3IgPSBvbGRNb2RlID09PSAxIC8qIEN1cnNvciAqLyAmJiBhbHJlYWR5QWN0aXZlO1xuICAgICAgICAgICAgaWYgKCFpc0N1cnNvcikge1xuICAgICAgICAgICAgICAgIHRoaXMuY3Vyc29yLnJlc2V0KGNlbGwucm93SW5kZXgsIGNlbGwuY29sSW5kZXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHRyeUZvY3VzKGVsKSB7XG4gICAgICAgIHRoaXMuYWN0aXZhdGVFbGVtZW50cygpO1xuICAgICAgICBjb25zdCBmb2N1c2FibGUgPSBmaW5kRm9jdXNhYmxlQ2hpbGQoZWwpO1xuICAgICAgICBpZiAoZm9jdXNhYmxlKSB7XG4gICAgICAgICAgICBjb25zdCBjZWxsID0gdGFyZ2V0Q2VsbChmb2N1c2FibGUsIHRoaXMubWV0YS5ncmlkRWxlbWVudC5uYXRpdmVFbGVtZW50KTtcbiAgICAgICAgICAgIGlmIChjZWxsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jdXJzb3IucmVzZXQoY2VsbC5yb3dJbmRleCwgY2VsbC5jb2xJbmRleCk7XG4gICAgICAgICAgICAgICAgdGhpcy5kZWFjdGl2YXRlRWxlbWVudHMoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmVudGVyQ2VsbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9jdXNhYmxlLmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmRlYWN0aXZhdGVFbGVtZW50cygpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAhIWZvY3VzYWJsZTtcbiAgICB9XG4gICAgbmVlZHNWaWV3cG9ydCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWV0YSAmJiB0aGlzLm1ldGEuaXNWaXJ0dWFsO1xuICAgIH1cbiAgICBzZXRWaWV3cG9ydChmaXJzdEl0ZW1JbmRleCwgbGFzdEl0ZW1JbmRleCkge1xuICAgICAgICB0aGlzLnZpZXdwb3J0ID0gbmV3IE5hdmlnYXRpb25WaWV3cG9ydChmaXJzdEl0ZW1JbmRleCwgbGFzdEl0ZW1JbmRleCk7XG4gICAgICAgIGlmICh0aGlzLm1ldGEgJiYgdGhpcy5tZXRhLmlzVmlydHVhbCAmJiB0aGlzLmFjdGl2ZURhdGFSb3cgPiAtMSkge1xuICAgICAgICAgICAgY29uc3QgZGF0YVJvd0luZGV4ID0gdGhpcy5hY3RpdmVEYXRhUm93O1xuICAgICAgICAgICAgY29uc3QgYWhlYWQgPSBmaXJzdEl0ZW1JbmRleCAtIGRhdGFSb3dJbmRleDtcbiAgICAgICAgICAgIGNvbnN0IGJlaGluZCA9IGRhdGFSb3dJbmRleCAtIGxhc3RJdGVtSW5kZXg7XG4gICAgICAgICAgICBpZiAoYWhlYWQgPiAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jdXJzb3IucmVzZXQoZmlyc3RJdGVtSW5kZXggKyB0aGlzLm1ldGEuaGVhZGVyUm93cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChiZWhpbmQgPiAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jdXJzb3IucmVzZXQobGFzdEl0ZW1JbmRleCAtIHRoaXMubWV0YS5oZWFkZXJSb3dzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBzZXRDb2x1bW5WaWV3cG9ydChmaXJzdEl0ZW1JbmRleCwgbGFzdEl0ZW1JbmRleCkge1xuICAgICAgICB0aGlzLmNvbHVtblZpZXdwb3J0ID0gbmV3IE5hdmlnYXRpb25WaWV3cG9ydChmaXJzdEl0ZW1JbmRleCwgbGFzdEl0ZW1JbmRleCk7XG4gICAgfVxuICAgIGZvY3VzQ2VsbChyb3dJbmRleCA9IHVuZGVmaW5lZCwgY29sSW5kZXggPSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhpcy5tb2RlID0gMSAvKiBDdXJzb3IgKi87XG4gICAgICAgIHRoaXMuY3Vyc29yLnJlc2V0KHJvd0luZGV4LCBjb2xJbmRleCk7XG4gICAgICAgIHJldHVybiB0aGlzLmFjdGl2ZUNlbGw7XG4gICAgfVxuICAgIGZvY3VzQ2VsbEJ5RWxlbWVudChlbCkge1xuICAgICAgICBjb25zdCBjZWxsID0gdGFyZ2V0Q2VsbChlbCwgdGhpcy5tZXRhLmdyaWRFbGVtZW50Lm5hdGl2ZUVsZW1lbnQpO1xuICAgICAgICBpZiAoY2VsbCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZm9jdXNDZWxsKGNlbGwucm93SW5kZXgsIGNlbGwuY29sSW5kZXgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvY3VzTmV4dENlbGwod3JhcCA9IHRydWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZm9jdXNBZGphY2VudENlbGwodHJ1ZSwgd3JhcCk7XG4gICAgfVxuICAgIGZvY3VzUHJldkNlbGwod3JhcCA9IHRydWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZm9jdXNBZGphY2VudENlbGwoZmFsc2UsIHdyYXApO1xuICAgIH1cbiAgICB0b2dnbGUoYWN0aXZlKSB7XG4gICAgICAgIHRoaXMuYWN0aXZlID0gYWN0aXZlO1xuICAgICAgICB0aGlzLmN1cnNvci5hbm5vdW5jZSgpO1xuICAgIH1cbiAgICBoYXNGb2N1cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubW9kZSA9PT0gMSAvKiBDdXJzb3IgKi8gfHwgdGhpcy5tb2RlID09PSAyIC8qIENvbnRlbnQgKi87XG4gICAgfVxuICAgIGF1dG9Gb2N1c0NlbGwoc3RhcnQsIGVuZCkge1xuICAgICAgICByZXR1cm4gIXRoaXMubWV0YS52aXJ0dWFsQ29sdW1ucyB8fCBlbmQgPCB0aGlzLm1ldGEuY29sdW1ucy5sb2NrZWRMZWFmQ29sdW1ucy5sZW5ndGggfHwgdGhpcy5jb2x1bW5WaWV3cG9ydC5pbnRlcnNlY3RzKHN0YXJ0LCBlbmQpO1xuICAgIH1cbiAgICBmb2N1c0FkamFjZW50Q2VsbChmd2QsIHdyYXApIHtcbiAgICAgICAgdGhpcy5mb2N1c0NlbGwoKTtcbiAgICAgICAgbGV0IHN1Y2Nlc3MgPSBmd2QgPyB0aGlzLm1vdmVDdXJzb3JGd2QoKSA6IHRoaXMubW92ZUN1cnNvckJ3ZCgpO1xuICAgICAgICBpZiAod3JhcCAmJiAhc3VjY2Vzcykge1xuICAgICAgICAgICAgc3VjY2VzcyA9IGZ3ZCA/IHRoaXMuY3Vyc29yLm1vdmVEb3duKDEpIDogdGhpcy5jdXJzb3IubW92ZVVwKDEpO1xuICAgICAgICAgICAgaWYgKHN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByb3cgPSB0aGlzLmN1cnNvci5yb3c7XG4gICAgICAgICAgICAgICAgY29uc3QgY29sSWR4ID0gZndkID8gMCA6IHRoaXMuY3Vyc29yLmxhc3RDZWxsSW5kZXgocm93KTtcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnNvci5yZXNldChyb3cuaW5kZXgsIGNvbElkeCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHN1Y2Nlc3MpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFjdGl2ZUNlbGw7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLm1vZGUgPSAwIC8qIFN0YW5kYnkgKi87XG4gICAgICAgICAgICB0aGlzLmN1cnNvci5hbm5vdW5jZSgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBlbnRlckNlbGwoKSB7XG4gICAgICAgIGNvbnN0IGNlbGwgPSB0aGlzLmN1cnNvci5jZWxsO1xuICAgICAgICBpZiAoIWNlbGwpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBncm91cCA9IGNlbGwuZm9jdXNHcm91cDtcbiAgICAgICAgY29uc3QgZm9jdXNhYmxlID0gZ3JvdXAgJiYgZ3JvdXAuY2FuRm9jdXMoKTtcbiAgICAgICAgdGhpcy5tb2RlID0gZm9jdXNhYmxlID8gMiAvKiBDb250ZW50ICovIDogMSAvKiBDdXJzb3IgKi87XG4gICAgICAgIHRoaXMuY3Vyc29yLmFubm91bmNlKCk7XG4gICAgICAgIGlmIChmb2N1c2FibGUpIHtcbiAgICAgICAgICAgIHRoaXMuYWN0aXZhdGVSb3coKTtcbiAgICAgICAgICAgIGdyb3VwLmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbGVhdmVDZWxsKCkge1xuICAgICAgICBjb25zdCBjZWxsID0gdGhpcy5jdXJzb3IuY2VsbDtcbiAgICAgICAgaWYgKCFjZWxsKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZ3JvdXAgPSBjZWxsLmZvY3VzR3JvdXA7XG4gICAgICAgIGNvbnN0IGZvY3VzYWJsZSA9IGdyb3VwICYmIGdyb3VwLmNhbkZvY3VzKCk7XG4gICAgICAgIGlmICghZm9jdXNhYmxlKSB7XG4gICAgICAgICAgICB0aGlzLmRlYWN0aXZhdGVFbGVtZW50cygpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubW9kZSA9IDEgLyogQ3Vyc29yICovO1xuICAgICAgICB0aGlzLmN1cnNvci5hbm5vdW5jZSgpO1xuICAgIH1cbiAgICBhY3RpdmF0ZUVsZW1lbnRzKCkge1xuICAgICAgICB0aGlzLmZvY3VzUm9vdC5hY3RpdmF0ZSgpO1xuICAgIH1cbiAgICBkZWFjdGl2YXRlRWxlbWVudHMoKSB7XG4gICAgICAgIHRoaXMuZm9jdXNSb290LmRlYWN0aXZhdGUoKTtcbiAgICB9XG4gICAgYWN0aXZhdGVSb3coKSB7XG4gICAgICAgIHRoaXMuY3Vyc29yLnJvdy5jZWxsc1xuICAgICAgICAgICAgLmZvckVhY2goY2VsbCA9PiBjZWxsLmZvY3VzR3JvdXAgJiYgY2VsbC5mb2N1c0dyb3VwLmFjdGl2YXRlKCkpO1xuICAgIH1cbiAgICBtb3ZlQ3Vyc29yRndkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2NhbGl6YXRpb24ucnRsID8gdGhpcy5jdXJzb3IubW92ZUxlZnQoKSA6IHRoaXMuY3Vyc29yLm1vdmVSaWdodCgpO1xuICAgIH1cbiAgICBtb3ZlQ3Vyc29yQndkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2NhbGl6YXRpb24ucnRsID8gdGhpcy5jdXJzb3IubW92ZVJpZ2h0KCkgOiB0aGlzLmN1cnNvci5tb3ZlTGVmdCgpO1xuICAgIH1cbiAgICBvbkN1cnNvcktleWRvd24oYXJncykge1xuICAgICAgICBsZXQgcHJldmVudERlZmF1bHQgPSBmYWxzZTtcbiAgICAgICAgY29uc3QgbW9kaWZpZXIgPSBhcmdzLmN0cmxLZXkgfHwgYXJncy5tZXRhS2V5O1xuICAgICAgICBjb25zdCBzdGVwID0gbW9kaWZpZXIgPyA1IDogMTtcbiAgICAgICAgaWYgKCF0aGlzLm9uQ2VsbEtleWRvd24oYXJncykpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByb3cgPSB0aGlzLmN1cnNvci5yb3c7XG4gICAgICAgIHN3aXRjaCAoYXJncy5rZXlDb2RlKSB7XG4gICAgICAgICAgICBjYXNlIEtleXMuQXJyb3dEb3duOlxuICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0ID0gdGhpcy5jdXJzb3IubW92ZURvd24oc3RlcCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEtleXMuQXJyb3dVcDpcbiAgICAgICAgICAgICAgICBwcmV2ZW50RGVmYXVsdCA9IHRoaXMuY3Vyc29yLm1vdmVVcChzdGVwKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgS2V5cy5BcnJvd1JpZ2h0OlxuICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0ID0gdGhpcy5tb3ZlQ3Vyc29yRndkKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEtleXMuQXJyb3dMZWZ0OlxuICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0ID0gdGhpcy5tb3ZlQ3Vyc29yQndkKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEtleXMuUGFnZURvd246XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMubWV0YWRhdGEuaXNWaXJ0dWFsICYmIHRoaXMudmlld3BvcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IG5leHRJdGVtSW5kZXggPSB0aGlzLm1ldGEuaGVhZGVyUm93cyArIHRoaXMudmlld3BvcnQubGFzdEl0ZW1JbmRleCArIDE7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm1ldGFkYXRhLmhhc0RldGFpbFRlbXBsYXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXh0SXRlbUluZGV4Kys7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbmV4dEl0ZW1JbmRleCA9IE1hdGgubWluKHRoaXMubWV0YS5tYXhMb2dpY2FsUm93SW5kZXgsIG5leHRJdGVtSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnNvci5yZXNldChuZXh0SXRlbUluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgcHJldmVudERlZmF1bHQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0aGlzLm1ldGFkYXRhLmhhc1BhZ2VyKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuem9uZS5ydW4oKCkgPT4gdGhpcy5wYWdlckNvbnRleHRTZXJ2aWNlLm5leHRQYWdlKCkpO1xuICAgICAgICAgICAgICAgICAgICBwcmV2ZW50RGVmYXVsdCA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBLZXlzLlBhZ2VVcDpcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5tZXRhZGF0YS5pc1ZpcnR1YWwgJiYgdGhpcy52aWV3cG9ydCkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgdmlld3BvcnRTaXplID0gdGhpcy52aWV3cG9ydC5sYXN0SXRlbUluZGV4IC0gdGhpcy52aWV3cG9ydC5maXJzdEl0ZW1JbmRleDtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGZpcnN0SXRlbUluZGV4ID0gdGhpcy52aWV3cG9ydC5maXJzdEl0ZW1JbmRleDtcbiAgICAgICAgICAgICAgICAgICAgbGV0IG5leHRJdGVtSW5kZXggPSBNYXRoLm1heCh0aGlzLm1ldGEuaGVhZGVyUm93cywgZmlyc3RJdGVtSW5kZXggLSB2aWV3cG9ydFNpemUgLSAxKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJzb3IucmVzZXQobmV4dEl0ZW1JbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5tZXRhZGF0YS5oYXNQYWdlcikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnpvbmUucnVuKCgpID0+IHRoaXMucGFnZXJDb250ZXh0U2VydmljZS5wcmV2UGFnZSgpKTtcbiAgICAgICAgICAgICAgICAgICAgcHJldmVudERlZmF1bHQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgS2V5cy5Ib21lOlxuICAgICAgICAgICAgICAgIGlmIChtb2RpZmllcikge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5tZXRhLmlzVmlydHVhbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJzb3IucmVzZXQodGhpcy5tZXRhLmhlYWRlclJvd3MsIDAsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3Vyc29yLnJlc2V0KHRoaXMubW9kZWwuZmlyc3RSb3cuaW5kZXgsIDAsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJzb3IucmVzZXQocm93LmluZGV4LCAwLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgS2V5cy5FbmQ6XG4gICAgICAgICAgICAgICAgaWYgKG1vZGlmaWVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm1ldGEuaXNWaXJ0dWFsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbGFzdFJvd0luZGV4ID0gdGhpcy5tZXRhLm1heExvZ2ljYWxSb3dJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm1ldGEuaGFzRGV0YWlsVGVtcGxhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0Um93SW5kZXgtLTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3Vyc29yLnJlc2V0KGxhc3RSb3dJbmRleCwgdGhpcy5jdXJzb3IubGFzdENlbGxJbmRleCgpLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnNvci5yZXNldCh0aGlzLm1vZGVsLmxhc3RSb3cuaW5kZXgsIHRoaXMuY3Vyc29yLmxhc3RDZWxsSW5kZXgodGhpcy5tb2RlbC5sYXN0Um93KSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBsYXN0SW5kZXggPSB0aGlzLmN1cnNvci5sYXN0Q2VsbEluZGV4KHJvdyk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNlbGwgPSB0aGlzLm1vZGVsLmZpbmRDZWxsKGxhc3RJbmRleCwgcm93KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNlbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3Vyc29yLnJlc2V0KGNlbGwucm93SW5kZXgsIGNlbGwuY29sSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJzb3IucmVzZXQocm93LmluZGV4LCBsYXN0SW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgS2V5cy5FbnRlcjpcbiAgICAgICAgICAgIGNhc2UgS2V5cy5GMjpcbiAgICAgICAgICAgICAgICBjb25zdCBncm91cEl0ZW0gPSByb3cuZ3JvdXBJdGVtO1xuICAgICAgICAgICAgICAgIGlmIChncm91cEl0ZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy56b25lLnJ1bigoKSA9PiB0aGlzLmdyb3Vwc1NlcnZpY2UudG9nZ2xlUm93KGdyb3VwSXRlbSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0aGlzLmN1cnNvci5jZWxsLmRldGFpbEV4cGFuZENlbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy56b25lLnJ1bigoKSA9PiB0aGlzLmRldGFpbHNTZXJ2aWNlLnRvZ2dsZVJvdyhyb3cuZGF0YVJvd0luZGV4LCByb3cuZGF0YUl0ZW0pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZW50ZXJDZWxsKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5jdXJzb3IuY2VsbC5mb2N1c0dyb3VwLmlzTmF2aWdhYmxlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgaWYgKCFhcmdzLmN0cmxLZXkgJiYgIWFyZ3MuYWx0S2V5ICYmIGlzUHJpbnRhYmxlQ2hhcmFjdGVyKGFyZ3Mua2V5KSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVudGVyQ2VsbCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAocHJldmVudERlZmF1bHQpIHtcbiAgICAgICAgICAgIGFyZ3MucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvbkNvbnRlbnRLZXlkb3duKGFyZ3MpIHtcbiAgICAgICAgaWYgKCF0aGlzLm9uQ2VsbEtleWRvd24oYXJncykpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb25maXJtID0gIWFyZ3MuZGVmYXVsdFByZXZlbnRlZCAmJiBhcmdzLmtleUNvZGUgPT09IEtleXMuRW50ZXIgJiYgaXNUZXh0SW5wdXQoYXJncy5zcmNFbGVtZW50KTtcbiAgICAgICAgaWYgKGFyZ3Mua2V5Q29kZSA9PT0gS2V5cy5Fc2NhcGUgfHwgYXJncy5rZXlDb2RlID09PSBLZXlzLkYyIHx8IGNvbmZpcm0pIHtcbiAgICAgICAgICAgIHRoaXMubGVhdmVDZWxsKCk7XG4gICAgICAgICAgICB0aGlzLmN1cnNvci5yZXNldCgpO1xuICAgICAgICAgICAgYXJncy5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc05hdmlnYXRpb25LZXkoYXJncy5rZXlDb2RlKSAmJiB0aGlzLmN1cnNvci5jZWxsLmZvY3VzR3JvdXAuaXNOYXZpZ2FibGUoKSkge1xuICAgICAgICAgICAgdGhpcy5vbkN1cnNvcktleWRvd24oYXJncyk7XG4gICAgICAgICAgICBpZiAoYXJncy5kZWZhdWx0UHJldmVudGVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sZWF2ZUNlbGwoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBvbkNlbGxLZXlkb3duKGFyZ3MpIHtcbiAgICAgICAgaWYgKHRoaXMuZWRpdFNlcnZpY2UuaXNFZGl0aW5nQ2VsbCgpKSB7XG4gICAgICAgICAgICBjb25zdCBjb25maXJtID0gYXJncy5rZXlDb2RlID09PSBLZXlzLkVudGVyO1xuICAgICAgICAgICAgY29uc3QgY2FuY2VsID0gYXJncy5rZXlDb2RlID09PSBLZXlzLkVzY2FwZTtcbiAgICAgICAgICAgIGNvbnN0IG5hdmlnYXRlID0gaXNOYXZpZ2F0aW9uS2V5KGFyZ3Mua2V5Q29kZSk7XG4gICAgICAgICAgICBpZiAoY29uZmlybSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZWRpdFNlcnZpY2UuY2xvc2VDZWxsKGFyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoY2FuY2VsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lZGl0U2VydmljZS5jYW5jZWxDZWxsKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5jZC5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChuYXZpZ2F0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNlbGxLZXlkb3duLmVtaXQoYXJncyk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBvbkN1cnNvckNoYW5nZXMoYXJncykge1xuICAgICAgICB0aGlzLmFjdGl2ZVJvd0luZGV4ID0gYXJncy5yb3dJbmRleDtcbiAgICAgICAgY29uc3QgZGF0YVJvd0luZGV4ID0gdGhpcy5hY3RpdmVEYXRhUm93O1xuICAgICAgICBpZiAodGhpcy5tZXRhICYmICh0aGlzLm1ldGEuaXNWaXJ0dWFsICYmXG4gICAgICAgICAgICBhcmdzLnJvd0luZGV4ID49IHRoaXMubWV0YS5oZWFkZXJSb3dzICYmXG4gICAgICAgICAgICB0aGlzLnZpZXdwb3J0ICYmXG4gICAgICAgICAgICAhdGhpcy52aWV3cG9ydC5jb250YWluc1JvdyhkYXRhUm93SW5kZXgpICYmIGRhdGFSb3dJbmRleCA+IC0xKSkge1xuICAgICAgICAgICAgdGhpcy5zY3JvbGxSZXF1ZXN0U2VydmljZS5zY3JvbGxUbyh7IHJvdzogZGF0YVJvd0luZGV4IH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm1ldGEudmlydHVhbENvbHVtbnMgJiYgYXJncy5jb2xJbmRleCA+PSB0aGlzLm1ldGEuY29sdW1ucy5sb2NrZWRMZWFmQ29sdW1ucy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNvbnN0IGNlbGwgPSB0aGlzLmFjdGl2ZUNlbGw7XG4gICAgICAgICAgICBjb25zdCB7IHN0YXJ0LCBlbmQgfSA9IHRoaXMubW9kZWwuY2VsbFJhbmdlKGNlbGwpO1xuICAgICAgICAgICAgaWYgKCFjZWxsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy52aXJ0dWFsQ2VsbCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoKCFjZWxsICYmIHRoaXMubW9kZSAhPT0gMCAvKiBTdGFuZGJ5ICovKSB8fCAoY2VsbCAmJiAhdGhpcy5jb2x1bW5WaWV3cG9ydC5pbnRlcnNlY3RzKHN0YXJ0LCBlbmQpKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2Nyb2xsUmVxdWVzdFNlcnZpY2Uuc2Nyb2xsVG8oeyBjb2x1bW46IGFyZ3MuY29sSW5kZXggLSAodGhpcy5tZXRhZGF0YS5oYXNEZXRhaWxUZW1wbGF0ZSA/IDEgOiAwKSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBvbkZvY3VzT3V0KGFyZ3MpIHtcbiAgICAgICAgaWYgKGlzVmlzaWJsZShhcmdzLnRhcmdldCkpIHtcbiAgICAgICAgICAgIHRoaXMubW9kZSA9IDAgLyogU3RhbmRieSAqLztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIEZvY3VzZWQgdGFyZ2V0IGlzIG5vIGxvbmdlciB2aXNpYmxlLFxuICAgICAgICAgICAgLy8gcmVzZXQgdG8gY3Vyc29yIG1vZGUgYW5kIHJlY2FwdHVyZSBmb2N1cy5cbiAgICAgICAgICAgIHRoaXMubW9kZSA9IDEgLyogQ3Vyc29yICovO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZGVhY3RpdmF0ZUVsZW1lbnRzKCk7XG4gICAgICAgIHRoaXMuY3Vyc29yLmFubm91bmNlKCk7XG4gICAgfVxuICAgIG9uV2luZG93Qmx1cigpIHtcbiAgICAgICAgdGhpcy5tb2RlID0gMCAvKiBTdGFuZGJ5ICovO1xuICAgICAgICB0aGlzLmRlYWN0aXZhdGVFbGVtZW50cygpO1xuICAgICAgICB0aGlzLmN1cnNvci5hbm5vdW5jZSgpO1xuICAgIH1cbiAgICBvbktleWRvd24oYXJncykge1xuICAgICAgICBpZiAodGhpcy5tb2RlID09PSAxIC8qIEN1cnNvciAqLykge1xuICAgICAgICAgICAgdGhpcy5vbkN1cnNvcktleWRvd24oYXJncyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5tb2RlID09PSAyIC8qIENvbnRlbnQgKi8pIHtcbiAgICAgICAgICAgIHRoaXMub25Db250ZW50S2V5ZG93bihhcmdzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvblRhYm91dCgpIHtcbiAgICAgICAgLy8gVGFiYmVkIG91dCBvZiB0aGUgbGFzdCBmb2N1c2FibGUgY29udGVudCBlbGVtZW50XG4gICAgICAgIC8vIHJlc2V0IHRvIGN1cnNvciBtb2RlIGFuZCByZWNhcHR1cmUgZm9jdXMuXG4gICAgICAgIGlmICh0aGlzLmN1cnNvci5jZWxsLmZvY3VzR3JvdXAuaXNOYXZpZ2FibGUoKSkge1xuICAgICAgICAgICAgLy8gVW5sZXNzIHRoZSBjZWxsIGhhcyBhIHNpbmdsZSBmb2N1c2FibGUgZWxlbWVudCxcbiAgICAgICAgICAgIC8vIG90aGVyd2lzZSB3ZSdkIHJldHVybiB0byBDb250ZW50IG1vZGUgYW5kIGVudGVyIGFuIGVuZGxlc3MgbG9vcFxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubGVhdmVDZWxsKCk7XG4gICAgICAgIHRoaXMuY3Vyc29yLnJlc2V0KCk7XG4gICAgfVxufTtcbk5hdmlnYXRpb25TZXJ2aWNlID0gX19kZWNvcmF0ZShbXG4gICAgSW5qZWN0YWJsZSgpLFxuICAgIF9fcGFyYW0oMTAsIE9wdGlvbmFsKCkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTmdab25lLFxuICAgICAgICBEb21FdmVudHNTZXJ2aWNlLFxuICAgICAgICBQYWdlckNvbnRleHRTZXJ2aWNlLFxuICAgICAgICBTY3JvbGxSZXF1ZXN0U2VydmljZSxcbiAgICAgICAgR3JvdXBzU2VydmljZSxcbiAgICAgICAgRGV0YWlsc1NlcnZpY2UsXG4gICAgICAgIEZvY3VzUm9vdCxcbiAgICAgICAgRWRpdFNlcnZpY2UsXG4gICAgICAgIENoYW5nZURldGVjdG9yUmVmLFxuICAgICAgICBMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBGb2N1c2FibGVEaXJlY3RpdmVdKVxuXSwgTmF2aWdhdGlvblNlcnZpY2UpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IFNlbGVjdGlvblNlcnZpY2UgPSBjbGFzcyBTZWxlY3Rpb25TZXJ2aWNlIHtcbiAgICBjb25zdHJ1Y3Rvcihkb21FdmVudHMsIGxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlLCBuYXZpZ2F0aW9uU2VydmljZSkge1xuICAgICAgICB0aGlzLmRvbUV2ZW50cyA9IGRvbUV2ZW50cztcbiAgICAgICAgdGhpcy5sb2NhbERhdGFDaGFuZ2VzU2VydmljZSA9IGxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlO1xuICAgICAgICB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlID0gbmF2aWdhdGlvblNlcnZpY2U7XG4gICAgICAgIHRoaXMuY2hhbmdlcyA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5sYXN0U2VsZWN0aW9uU3RhcnRJbmRleCA9IDA7XG4gICAgICAgIHRoaXMuY3VycmVudFNlbGVjdGlvbiA9IFtdO1xuICAgICAgICB0aGlzLnNlbGVjdEFsbENoZWNrZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5kcmFnZ2luZyA9IGZhbHNlO1xuICAgICAgICB0aGlzLmFkZFN1YnNjcmlwdGlvbnMoKTtcbiAgICB9XG4gICAgZ2V0IGVuYWJsZU1hcnF1ZWUoKSB7XG4gICAgICAgIGNvbnN0IGNoZWNrYm94T25seSA9IHRoaXMuc2V0dGluZ3MgJiYgdHlwZW9mIHRoaXMuc2V0dGluZ3MgPT09ICdvYmplY3QnICYmIHRoaXMuc2V0dGluZ3MuY2hlY2tib3hPbmx5O1xuICAgICAgICBpZiAoIXRoaXMuc2V0dGluZ3MgfHwgY2hlY2tib3hPbmx5KSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2VsZWN0YWJsZVNldHRpbmdzID0gdGhpcy5zZXR0aW5ncy5zZWxlY3RhYmxlO1xuICAgICAgICBjb25zdCBkcmFnQW5kTXVsdGlwbGUgPSB0eXBlb2YgKHNlbGVjdGFibGVTZXR0aW5ncykgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICBpc1ByZXNlbnQoc2VsZWN0YWJsZVNldHRpbmdzKSAmJlxuICAgICAgICAgICAgc2VsZWN0YWJsZVNldHRpbmdzLm1vZGUgPT09ICdtdWx0aXBsZScgJiZcbiAgICAgICAgICAgIHNlbGVjdGFibGVTZXR0aW5ncy5lbmFibGVkICE9PSBmYWxzZSAmJlxuICAgICAgICAgICAgIXNlbGVjdGFibGVTZXR0aW5ncy5jaGVja2JveE9ubHkgJiZcbiAgICAgICAgICAgIHNlbGVjdGFibGVTZXR0aW5ncy5kcmFnO1xuICAgICAgICByZXR1cm4gdGhpcy5hY3RpdmUgJiYgZHJhZ0FuZE11bHRpcGxlO1xuICAgIH1cbiAgICBpbml0KHNldHRpbmdzKSB7XG4gICAgICAgIHRoaXMuc2V0dGluZ3MgPSBzZXR0aW5ncztcbiAgICAgICAgdGhpcy5jdXJyZW50U2VsZWN0aW9uID0gW107XG4gICAgICAgIGlmIChzZXR0aW5ncy5zZWxlY3RhYmxlICYmIHNldHRpbmdzLnNlbGVjdGFibGUuZW5hYmxlZCAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGNvbnN0IGl0ZXJhdG9yJCQxID0gdGhpcy5nZXRJdGVyYXRvcigpO1xuICAgICAgICAgICAgdGhpcy5fc2VsZWN0QWxsU3RhdGUgPSB0cnVlO1xuICAgICAgICAgICAgbGV0IGl0ZW0gPSBpdGVyYXRvciQkMS5uZXh0KCk7XG4gICAgICAgICAgICB3aGlsZSAoIWl0ZW0uZG9uZSkge1xuICAgICAgICAgICAgICAgIGlmIChpdGVtLnZhbHVlICYmIGl0ZW0udmFsdWUudHlwZSA9PT0gXCJkYXRhXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgcm93QXJncyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFJdGVtOiBpdGVtLnZhbHVlLmRhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmRleDogaXRlbS52YWx1ZS5pbmRleFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2V0dGluZ3Mucm93U2VsZWN0ZWQocm93QXJncykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFNlbGVjdGlvbltpdGVtLnZhbHVlLmluZGV4XSA9IHJvd0FyZ3M7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9zZWxlY3RBbGxTdGF0ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpdGVtID0gaXRlcmF0b3IkJDEubmV4dCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuY3VycmVudFNlbGVjdGlvbi5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9zZWxlY3RBbGxTdGF0ZSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGlzU2VsZWN0ZWQoaW5kZXgpIHtcbiAgICAgICAgaWYgKHRoaXMuc2V0dGluZ3MgJiYgdGhpcy5hY3RpdmUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMuZW5hYmxlZCAmJiBpc1ByZXNlbnQodGhpcy5jdXJyZW50U2VsZWN0aW9uW2luZGV4XSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaGFuZGxlQ2xpY2soaXRlbSwgZXZlbnQpIHtcbiAgICAgICAgaWYgKHRoaXMuZHJhZ2dpbmcpIHtcbiAgICAgICAgICAgIHRoaXMuZHJhZ2dpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgZXY7XG4gICAgICAgIGNvbnN0IGN0cmxLZXkgPSBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXk7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMubW9kZSA9PT0gXCJzaW5nbGVcIiAmJiBjdHJsS2V5ICYmIHRoaXMuaXNTZWxlY3RlZChpdGVtLmluZGV4KSkge1xuICAgICAgICAgICAgZXYgPSB0aGlzLnRvZ2dsZShpdGVtKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLm9wdGlvbnMubW9kZSA9PT0gXCJtdWx0aXBsZVwiKSB7XG4gICAgICAgICAgICBpZiAoY3RybEtleSAmJiAhZXZlbnQuc2hpZnRLZXkpIHtcbiAgICAgICAgICAgICAgICBldiA9IHRoaXMudG9nZ2xlKGl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZXZlbnQuc2hpZnRLZXkpIHtcbiAgICAgICAgICAgICAgICBldiA9IHRoaXMuYWRkQWxsVG8oaXRlbSwgY3RybEtleSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc1ByZXNlbnQoZXYpKSB7XG4gICAgICAgICAgICBldiA9IHRoaXMuc2VsZWN0KGl0ZW0pO1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50U2VsZWN0aW9uW2l0ZW0uaW5kZXhdID0ge1xuICAgICAgICAgICAgICAgIGRhdGFJdGVtOiBpdGVtLmRhdGEsXG4gICAgICAgICAgICAgICAgaW5kZXg6IGl0ZW0uaW5kZXhcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFldi5zZWxlY3RlZFJvd3MubGVuZ3RoICYmICFldi5kZXNlbGVjdGVkUm93cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBldi5jdHJsS2V5ID0gY3RybEtleTtcbiAgICAgICAgZXYuc2hpZnRLZXkgPSBldmVudC5zaGlmdEtleTtcbiAgICAgICAgdGhpcy5jaGFuZ2VzLmVtaXQoZXYpO1xuICAgIH1cbiAgICB0b2dnbGUoaXRlbSkge1xuICAgICAgICBsZXQgc2VsZWN0ZWRSb3dzID0gW107XG4gICAgICAgIGxldCBkZXNlbGVjdGVkUm93cyA9IFtdO1xuICAgICAgICB0aGlzLmxhc3RTZWxlY3Rpb25TdGFydEluZGV4ID0gaXRlbS5pbmRleDtcbiAgICAgICAgY29uc3Qgcm93QXJncyA9IHsgZGF0YUl0ZW06IGl0ZW0uZGF0YSwgaW5kZXg6IGl0ZW0uaW5kZXggfTtcbiAgICAgICAgaWYgKHRoaXMuaXNTZWxlY3RlZChpdGVtLmluZGV4KSkge1xuICAgICAgICAgICAgZGVzZWxlY3RlZFJvd3MucHVzaChyb3dBcmdzKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNlbGVjdGVkUm93cy5wdXNoKHJvd0FyZ3MpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkZXNlbGVjdGVkUm93czogZGVzZWxlY3RlZFJvd3MsXG4gICAgICAgICAgICBzZWxlY3RlZFJvd3M6IHNlbGVjdGVkUm93c1xuICAgICAgICB9O1xuICAgIH1cbiAgICB0b2dnbGVCeUluZGV4KGluZGV4KSB7XG4gICAgICAgIGNvbnN0IGl0ZXJhdG9yJCQxID0gdGhpcy5nZXRJdGVyYXRvcigpO1xuICAgICAgICBpZiAodGhpcy5zZWxlY3RBbGxDaGVja2VkICYmIHRoaXMuaXNTZWxlY3RlZChpbmRleCkpIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0QWxsQ2hlY2tlZCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGxldCBpdGVtID0gaXRlcmF0b3IkJDEubmV4dCgpO1xuICAgICAgICB3aGlsZSAoIWl0ZW0uZG9uZSkge1xuICAgICAgICAgICAgaWYgKGl0ZW0udmFsdWUgJiYgaXRlbS52YWx1ZS50eXBlID09PSBcImRhdGFcIiAmJiBpdGVtLnZhbHVlLmluZGV4ID09PSBpbmRleCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1Ub1RvZ2dsZSA9IHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogaXRlbS52YWx1ZS5kYXRhLFxuICAgICAgICAgICAgICAgICAgICBpbmRleDogaXRlbS52YWx1ZS5pbmRleFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNTZWxlY3RlZChpbmRleCkgfHwgdGhpcy5vcHRpb25zLm1vZGUgPT09IFwibXVsdGlwbGVcIikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy50b2dnbGUoaXRlbVRvVG9nZ2xlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNlbGVjdChpdGVtVG9Ub2dnbGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGl0ZW0gPSBpdGVyYXRvciQkMS5uZXh0KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2VsZWN0KGl0ZW0pIHtcbiAgICAgICAgbGV0IGRlc2VsZWN0ZWRSb3dzID0gW107XG4gICAgICAgIGxldCBzZWxlY3RlZFJvd3MgPSBbXTtcbiAgICAgICAgdGhpcy5sYXN0U2VsZWN0aW9uU3RhcnRJbmRleCA9IGl0ZW0uaW5kZXg7XG4gICAgICAgIGlmICghdGhpcy5pc1NlbGVjdGVkKGl0ZW0uaW5kZXgpKSB7XG4gICAgICAgICAgICBzZWxlY3RlZFJvd3MucHVzaCh7IGRhdGFJdGVtOiBpdGVtLmRhdGEsIGluZGV4OiBpdGVtLmluZGV4IH0pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY3VycmVudFNlbGVjdGlvbi5mb3JFYWNoKChyb3cpID0+IHtcbiAgICAgICAgICAgIGlmIChyb3cuaW5kZXggIT09IGl0ZW0uaW5kZXgpIHtcbiAgICAgICAgICAgICAgICBkZXNlbGVjdGVkUm93cy5wdXNoKHJvdyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGVzZWxlY3RlZFJvd3M6IGRlc2VsZWN0ZWRSb3dzLFxuICAgICAgICAgICAgc2VsZWN0ZWRSb3dzOiBzZWxlY3RlZFJvd3NcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLy9Vc2VkIHRvIG1hbnVhbGx5IGRlc2VsZWN0IHJlbW92ZWQgaXRlbXNcbiAgICBkZXNlbGVjdChyZW1vdmVkSXRlbSkge1xuICAgICAgICBjb25zdCBpdGVyYXRvciQkMSA9IHRoaXMuZ2V0SXRlcmF0b3IoKTtcbiAgICAgICAgbGV0IGl0ZW0gPSBpdGVyYXRvciQkMS5uZXh0KCk7XG4gICAgICAgIHdoaWxlICghaXRlbS5kb25lKSB7XG4gICAgICAgICAgICBpZiAoaXRlbS52YWx1ZSAmJiBpdGVtLnZhbHVlLnR5cGUgPT09IFwiZGF0YVwiICYmIGl0ZW0udmFsdWUuZGF0YSA9PT0gcmVtb3ZlZEl0ZW0pIHtcbiAgICAgICAgICAgICAgICBjb25zdCByb3dBcmdzID0ge1xuICAgICAgICAgICAgICAgICAgICBkYXRhSXRlbTogaXRlbS52YWx1ZS5kYXRhLFxuICAgICAgICAgICAgICAgICAgICBpbmRleDogaXRlbS52YWx1ZS5pbmRleFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNTZWxlY3RlZChyb3dBcmdzLmluZGV4KSkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgZXYgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdHJsS2V5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2VsZWN0ZWRSb3dzOiBbcm93QXJnc10sXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZFJvd3M6IFtdXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlcy5lbWl0KGV2KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpdGVtID0gaXRlcmF0b3IkJDEubmV4dCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFkZEFsbFRvKGl0ZW0sIGN0cmxLZXkpIHtcbiAgICAgICAgbGV0IHNlbGVjdGVkUm93cyA9IFtdO1xuICAgICAgICBsZXQgZGVzZWxlY3RlZFJvd3MgPSBbXTtcbiAgICAgICAgY29uc3Qgc3RhcnQgPSBNYXRoLm1pbih0aGlzLmxhc3RTZWxlY3Rpb25TdGFydEluZGV4LCBpdGVtLmluZGV4KTtcbiAgICAgICAgY29uc3QgZW5kID0gTWF0aC5tYXgodGhpcy5sYXN0U2VsZWN0aW9uU3RhcnRJbmRleCwgaXRlbS5pbmRleCk7XG4gICAgICAgIGNvbnN0IGl0ZXJhdG9yJCQxID0gdGhpcy5nZXRJdGVyYXRvcigpO1xuICAgICAgICBsZXQgbmV4dCA9IGl0ZXJhdG9yJCQxLm5leHQoKTtcbiAgICAgICAgd2hpbGUgKCFuZXh0LmRvbmUpIHtcbiAgICAgICAgICAgIGlmIChuZXh0LnZhbHVlICYmIG5leHQudmFsdWUudHlwZSA9PT0gXCJkYXRhXCIpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZHggPSBuZXh0LnZhbHVlLmluZGV4O1xuICAgICAgICAgICAgICAgIGNvbnN0IHJvd0FyZ3MgPSB7IGRhdGFJdGVtOiBuZXh0LnZhbHVlLmRhdGEsIGluZGV4OiBpZHggfTtcbiAgICAgICAgICAgICAgICBpZiAoKGlkeCA8IHN0YXJ0IHx8IGlkeCA+IGVuZCkgJiYgdGhpcy5pc1NlbGVjdGVkKGlkeCkgJiYgIWN0cmxLZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVzZWxlY3RlZFJvd3MucHVzaChyb3dBcmdzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKChpZHggPj0gc3RhcnQgJiYgaWR4IDw9IGVuZCkgJiYgIXRoaXMuaXNTZWxlY3RlZChpZHgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkUm93cy5wdXNoKHJvd0FyZ3MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5leHQgPSBpdGVyYXRvciQkMS5uZXh0KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRlc2VsZWN0ZWRSb3dzOiBkZXNlbGVjdGVkUm93cyxcbiAgICAgICAgICAgIHNlbGVjdGVkUm93czogc2VsZWN0ZWRSb3dzXG4gICAgICAgIH07XG4gICAgfVxuICAgIHVwZGF0ZUFsbChzZWxlY3RBbGxDaGVja2VkKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0QWxsQ2hlY2tlZCA9IHNlbGVjdEFsbENoZWNrZWQ7XG4gICAgICAgIGxldCBzZWxlY3RlZFJvd3MgPSBbXTtcbiAgICAgICAgbGV0IGRlc2VsZWN0ZWRSb3dzID0gW107XG4gICAgICAgIGNvbnN0IGl0ZXJhdG9yJCQxID0gdGhpcy5nZXRJdGVyYXRvcigpO1xuICAgICAgICBsZXQgbmV4dCA9IGl0ZXJhdG9yJCQxLm5leHQoKTtcbiAgICAgICAgd2hpbGUgKCFuZXh0LmRvbmUpIHtcbiAgICAgICAgICAgIGlmIChuZXh0LnZhbHVlICYmIG5leHQudmFsdWUudHlwZSA9PT0gXCJkYXRhXCIpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZHggPSBuZXh0LnZhbHVlLmluZGV4O1xuICAgICAgICAgICAgICAgIGNvbnN0IHJvd0FyZ3MgPSB7IGRhdGFJdGVtOiBuZXh0LnZhbHVlLmRhdGEsIGluZGV4OiBpZHggfTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5pc1NlbGVjdGVkKGlkeCkgJiYgIXNlbGVjdEFsbENoZWNrZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVzZWxlY3RlZFJvd3MucHVzaChyb3dBcmdzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlzU2VsZWN0ZWQoaWR4KSAmJiBzZWxlY3RBbGxDaGVja2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkUm93cy5wdXNoKHJvd0FyZ3MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5leHQgPSBpdGVyYXRvciQkMS5uZXh0KCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzZWxlY3RlZFJvd3MubGVuZ3RoICYmICFkZXNlbGVjdGVkUm93cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgZXYgPSB7XG4gICAgICAgICAgICBjdHJsS2V5OiB0cnVlLFxuICAgICAgICAgICAgZGVzZWxlY3RlZFJvd3M6IGRlc2VsZWN0ZWRSb3dzLFxuICAgICAgICAgICAgc2VsZWN0ZWRSb3dzOiBzZWxlY3RlZFJvd3MsXG4gICAgICAgICAgICBzaGlmdEtleTogdHJ1ZVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmNoYW5nZXMuZW1pdChldik7XG4gICAgfVxuICAgIHNlbGVjdFJhbmdlKHN0YXJ0SW5kZXgsIGVuZEluZGV4KSB7XG4gICAgICAgIGxldCBzZWxlY3RlZFJvd3MgPSBbXTtcbiAgICAgICAgbGV0IGRlc2VsZWN0ZWRSb3dzID0gW107XG4gICAgICAgIGNvbnN0IHN0YXJ0ID0gTWF0aC5taW4oc3RhcnRJbmRleCwgZW5kSW5kZXgpO1xuICAgICAgICBjb25zdCBlbmQgPSBNYXRoLm1heChzdGFydEluZGV4LCBlbmRJbmRleCk7XG4gICAgICAgIGNvbnN0IGl0ZXJhdG9yJCQxID0gdGhpcy5nZXRJdGVyYXRvcigpO1xuICAgICAgICBsZXQgbmV4dCA9IGl0ZXJhdG9yJCQxLm5leHQoKTtcbiAgICAgICAgd2hpbGUgKCFuZXh0LmRvbmUpIHtcbiAgICAgICAgICAgIGlmIChuZXh0LnZhbHVlICYmIG5leHQudmFsdWUudHlwZSA9PT0gXCJkYXRhXCIpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZHggPSBuZXh0LnZhbHVlLmluZGV4O1xuICAgICAgICAgICAgICAgIGNvbnN0IHJvd0FyZ3MgPSB7IGRhdGFJdGVtOiBuZXh0LnZhbHVlLmRhdGEsIGluZGV4OiBpZHggfTtcbiAgICAgICAgICAgICAgICBpZiAoKGlkeCA8IHN0YXJ0IHx8IGlkeCA+IGVuZCkgJiYgdGhpcy5pc1NlbGVjdGVkKGlkeCkpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVzZWxlY3RlZFJvd3MucHVzaChyb3dBcmdzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKChpZHggPj0gc3RhcnQgJiYgaWR4IDw9IGVuZCkgJiYgIXRoaXMuaXNTZWxlY3RlZChpZHgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkUm93cy5wdXNoKHJvd0FyZ3MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5leHQgPSBpdGVyYXRvciQkMS5uZXh0KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRlc2VsZWN0ZWRSb3dzOiBkZXNlbGVjdGVkUm93cyxcbiAgICAgICAgICAgIHNlbGVjdGVkUm93czogc2VsZWN0ZWRSb3dzXG4gICAgICAgIH07XG4gICAgfVxuICAgIGdldCBzZWxlY3RBbGxTdGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NlbGVjdEFsbFN0YXRlO1xuICAgIH1cbiAgICBnZXQgc2VsZWN0ZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRTZWxlY3Rpb24ubWFwKChpdGVtKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gaXRlbS5pbmRleDtcbiAgICAgICAgfSkuZmlsdGVyKChuKSA9PiB0eXBlb2YgbiA9PT0gXCJudW1iZXJcIik7XG4gICAgfVxuICAgIGdldCBvcHRpb25zKCkge1xuICAgICAgICBjb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICAgICAgICAgIGNoZWNrYm94T25seTogZmFsc2UsXG4gICAgICAgICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgICAgICAgbW9kZTogXCJtdWx0aXBsZVwiXG4gICAgICAgIH07XG4gICAgICAgIGlmICghaXNQcmVzZW50KHRoaXMuc2V0dGluZ3MpKSB7XG4gICAgICAgICAgICByZXR1cm4gZGVmYXVsdE9wdGlvbnM7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnNldHRpbmdzLnNlbGVjdGFibGUgPT09ICdib29sZWFuJykge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBjaGVja2JveE9ubHk6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGVuYWJsZWQ6IHRoaXMuc2V0dGluZ3Muc2VsZWN0YWJsZSxcbiAgICAgICAgICAgICAgICBtb2RlOiBcIm11bHRpcGxlXCJcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihkZWZhdWx0T3B0aW9ucywgdGhpcy5zZXR0aW5ncy5zZWxlY3RhYmxlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5yZW1vdmVTdWJzY3JpcHRpb25zKCk7XG4gICAgfVxuICAgIHRhcmdldEFyZ3MoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpbmRleDogdGhpcy5tb3VzZURvd25FdmVudEFyZ3Mucm93SW5kZXgsXG4gICAgICAgICAgICBkYXRhSXRlbTogdGhpcy5tb3VzZURvd25FdmVudEFyZ3MuZGF0YUl0ZW1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgYWRkU3Vic2NyaXB0aW9ucygpIHtcbiAgICAgICAgaWYgKCF0aGlzLmNlbGxDbGlja1N1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5jZWxsQ2xpY2tTdWJzY3JpcHRpb24gPSB0aGlzLmRvbUV2ZW50cy5jZWxsQ2xpY2suc3Vic2NyaWJlKChhcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5lbmFibGVkICYmICF0aGlzLm9wdGlvbnMuY2hlY2tib3hPbmx5ICYmIGFyZ3MudHlwZSAhPT0gJ2NvbnRleHRtZW51Jykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5hY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlQ2xpY2soeyBpbmRleDogYXJncy5yb3dJbmRleCwgZGF0YTogYXJncy5kYXRhSXRlbSB9LCBhcmdzLm9yaWdpbmFsRXZlbnQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLm1vdXNlZG93blN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5tb3VzZWRvd25TdWJzY3JpcHRpb24gPSB0aGlzLmRvbUV2ZW50cy5jZWxsTW91c2Vkb3duLnN1YnNjcmliZSgoYXJncykgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMubW91c2VEb3duRXZlbnRBcmdzID0gYXJncztcbiAgICAgICAgICAgICAgICBpZiAoKHRoaXMub3B0aW9ucy5lbmFibGVkICYmICghdGhpcy5vcHRpb25zLm1vZGUgfHwgdGhpcy5vcHRpb25zLm1vZGUgPT09IFwibXVsdGlwbGVcIikgJiZcbiAgICAgICAgICAgICAgICAgICAgIXRoaXMub3B0aW9ucy5jaGVja2JveE9ubHkgJiYgYXJncy5vcmlnaW5hbEV2ZW50LnNoaWZ0S2V5KSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5hY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3Mub3JpZ2luYWxFdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXZpZ2F0aW9uU2VydmljZS5mb2N1c0NlbGxCeUVsZW1lbnQoYXJncy5vcmlnaW5hbEV2ZW50LnRhcmdldCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5sb2NhbERhdGFDaGFuZ2VzU2VydmljZSAmJiAhdGhpcy5kYXRhQ2hhbmdlZFN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5kYXRhQ2hhbmdlZFN1YnNjcmlwdGlvbiA9IHRoaXMubG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2UuY2hhbmdlcy5zdWJzY3JpYmUoKGFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5hY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzUHJlc2VudChhcmdzLmFjdGlvbikgJiYgYXJncy5hY3Rpb24gPT09ICdyZW1vdmUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRlc2VsZWN0KGFyZ3MuaXRlbSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRJdGVyYXRvcigpIHtcbiAgICAgICAgY29uc3QgYWNjZXNzb3IgPSB0aGlzLnNldHRpbmdzLnZpZXcuYWNjZXNzb3IoKTtcbiAgICAgICAgaWYgKCFhY2Nlc3Nvcikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2Nlc3NvcltpdGVyYXRvcl0oKTtcbiAgICB9XG4gICAgcmVtb3ZlU3Vic2NyaXB0aW9ucygpIHtcbiAgICAgICAgaWYgKHRoaXMuY2VsbENsaWNrU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmNlbGxDbGlja1N1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgdGhpcy5jZWxsQ2xpY2tTdWJzY3JpcHRpb24gPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm1vdXNlZG93blN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5tb3VzZWRvd25TdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIHRoaXMubW91c2Vkb3duU3Vic2NyaXB0aW9uID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5kYXRhQ2hhbmdlZFN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5kYXRhQ2hhbmdlZFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgdGhpcy5kYXRhQ2hhbmdlZFN1YnNjcmlwdGlvbiA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9XG59O1xuU2VsZWN0aW9uU2VydmljZSA9IF9fZGVjb3JhdGUoW1xuICAgIEluamVjdGFibGUoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0RvbUV2ZW50c1NlcnZpY2UsXG4gICAgICAgIExvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlLFxuICAgICAgICBOYXZpZ2F0aW9uU2VydmljZV0pXG5dLCBTZWxlY3Rpb25TZXJ2aWNlKTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBDZWxsU2VsZWN0aW9uU2VydmljZSA9IGNsYXNzIENlbGxTZWxlY3Rpb25TZXJ2aWNlIHtcbiAgICBjb25zdHJ1Y3Rvcihkb21FdmVudHMsIGxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlLCBuYXZpZ2F0aW9uU2VydmljZSkge1xuICAgICAgICB0aGlzLmRvbUV2ZW50cyA9IGRvbUV2ZW50cztcbiAgICAgICAgdGhpcy5sb2NhbERhdGFDaGFuZ2VzU2VydmljZSA9IGxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlO1xuICAgICAgICB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlID0gbmF2aWdhdGlvblNlcnZpY2U7XG4gICAgICAgIHRoaXMuY2hhbmdlcyA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5tb3VzZVVwRXZlbnQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuY3VycmVudFNlbGVjdGlvbiA9IFtdO1xuICAgICAgICB0aGlzLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmRyYWdnaW5nID0gZmFsc2U7XG4gICAgICAgIHRoaXMuZHJhZ1NlbGVjdERlc2VsZWN0ID0gZmFsc2U7XG4gICAgICAgIHRoaXMubGFzdFNlbGVjdGlvbkl0ZW0gPSB7IGl0ZW1LZXk6IDAsIGNvbHVtbktleTogMCB9O1xuICAgICAgICB0aGlzLmxhc3RTZWxlY3Rpb25JdGVtUm93SW5kZXggPSAwO1xuICAgICAgICB0aGlzLmxhc3RTZWxlY3Rpb25JdGVtQ29sSW5kZXggPSAwO1xuICAgICAgICB0aGlzLmFkZFN1YnNjcmlwdGlvbnMoKTtcbiAgICB9XG4gICAgZ2V0IGVuYWJsZU1hcnF1ZWUoKSB7XG4gICAgICAgIGNvbnN0IGNoZWNrYm94T25seSA9IHRoaXMuc2V0dGluZ3MgJiYgdHlwZW9mIHRoaXMuc2V0dGluZ3MgPT09ICdvYmplY3QnICYmIHRoaXMuc2V0dGluZ3MuY2hlY2tib3hPbmx5O1xuICAgICAgICBpZiAoIXRoaXMuc2V0dGluZ3MgfHwgY2hlY2tib3hPbmx5KSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2VsZWN0YWJsZVNldHRpbmdzID0gdGhpcy5zZXR0aW5ncy5zZWxlY3RhYmxlO1xuICAgICAgICBjb25zdCBkcmFnQW5kTXVsdGlwbGUgPSB0eXBlb2YgKHNlbGVjdGFibGVTZXR0aW5ncykgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICBpc1ByZXNlbnQoc2VsZWN0YWJsZVNldHRpbmdzKSAmJlxuICAgICAgICAgICAgc2VsZWN0YWJsZVNldHRpbmdzLm1vZGUgPT09ICdtdWx0aXBsZScgJiZcbiAgICAgICAgICAgIHNlbGVjdGFibGVTZXR0aW5ncy5jZWxsICYmXG4gICAgICAgICAgICBzZWxlY3RhYmxlU2V0dGluZ3MuZW5hYmxlZCAhPT0gZmFsc2UgJiZcbiAgICAgICAgICAgIHNlbGVjdGFibGVTZXR0aW5ncy5kcmFnO1xuICAgICAgICByZXR1cm4gdGhpcy5hY3RpdmUgJiYgZHJhZ0FuZE11bHRpcGxlO1xuICAgIH1cbiAgICBpbml0KHNldHRpbmdzKSB7XG4gICAgICAgIHRoaXMuc2V0dGluZ3MgPSBzZXR0aW5ncztcbiAgICAgICAgdGhpcy5jdXJyZW50U2VsZWN0aW9uID0gW107XG4gICAgICAgIGlmIChzZXR0aW5ncy5zZWxlY3RhYmxlICYmIHNldHRpbmdzLnNlbGVjdGFibGUuZW5hYmxlZCAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGNvbnN0IGl0ZXJhdG9yJCQxID0gdGhpcy5nZXRJdGVyYXRvcigpO1xuICAgICAgICAgICAgbGV0IGl0ZW0gPSBpdGVyYXRvciQkMS5uZXh0KCk7XG4gICAgICAgICAgICB3aGlsZSAoIWl0ZW0uZG9uZSkge1xuICAgICAgICAgICAgICAgIGlmIChpdGVtLnZhbHVlICYmIGl0ZW0udmFsdWUudHlwZSA9PT0gXCJkYXRhXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgcm93QXJncyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFJdGVtOiBpdGVtLnZhbHVlLmRhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmRleDogaXRlbS52YWx1ZS5pbmRleFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5jb2x1bW5zLmZvckVhY2goY29sID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkQ2VsbEFyZ3MgPSBzZXR0aW5ncy5jZWxsU2VsZWN0ZWQocm93QXJncywgY29sLCBjb2wubGVhZkluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZWxlY3RlZENlbGxBcmdzLnNlbGVjdGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50U2VsZWN0aW9uLnB1c2goc2VsZWN0ZWRDZWxsQXJncy5pdGVtKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGl0ZW0gPSBpdGVyYXRvciQkMS5uZXh0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaXNDZWxsU2VsZWN0ZWQoaXRlbSwgY29sKSB7XG4gICAgICAgIGlmICh0aGlzLnNldHRpbmdzICYmIHRoaXMuYWN0aXZlKSB7XG4gICAgICAgICAgICBjb25zdCBzZWxlY3RlZENlbGxBcmdzID0gdGhpcy5zZXR0aW5ncy5jZWxsU2VsZWN0ZWQoeyBkYXRhSXRlbTogaXRlbS5kYXRhLCBpbmRleDogaXRlbS5pbmRleCB9LCBjb2wsIGNvbC5sZWFmSW5kZXgpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5lbmFibGVkICYmIHNlbGVjdGVkQ2VsbEFyZ3Muc2VsZWN0ZWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBoYW5kbGVDbGljayhpdGVtLCBldmVudCkge1xuICAgICAgICBpZiAodGhpcy5kcmFnZ2luZykge1xuICAgICAgICAgICAgdGhpcy5kcmFnZ2luZyA9IGZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBldjtcbiAgICAgICAgY29uc3QgY3RybEtleSA9IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleTtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5tb2RlID09PSBcInNpbmdsZVwiICYmIGN0cmxLZXkgJiYgdGhpcy5pc0NlbGxTZWxlY3RlZChpdGVtLCBpdGVtLmNvbHVtbikpIHtcbiAgICAgICAgICAgIGV2ID0gdGhpcy50b2dnbGUoaXRlbSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5vcHRpb25zLm1vZGUgPT09IFwibXVsdGlwbGVcIikge1xuICAgICAgICAgICAgaWYgKGN0cmxLZXkgJiYgIWV2ZW50LnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICAgICAgZXYgPSB0aGlzLnRvZ2dsZShpdGVtKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGV2ZW50LnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3RhcnRSb3dJbmRleCA9IE1hdGgubWluKHRoaXMubGFzdFNlbGVjdGlvbkl0ZW1Sb3dJbmRleCwgaXRlbS5pbmRleCk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3RhcnRDb2xJbmRleCA9IE1hdGgubWluKHRoaXMubGFzdFNlbGVjdGlvbkl0ZW1Db2xJbmRleCwgaXRlbS5jb2x1bW4ubGVhZkluZGV4KTtcbiAgICAgICAgICAgICAgICBjb25zdCBlbmRSb3dJbmRleCA9IE1hdGgubWF4KHRoaXMubGFzdFNlbGVjdGlvbkl0ZW1Sb3dJbmRleCwgaXRlbS5pbmRleCk7XG4gICAgICAgICAgICAgICAgY29uc3QgZW5kQ29sSW5kZXggPSBNYXRoLm1heCh0aGlzLmxhc3RTZWxlY3Rpb25JdGVtQ29sSW5kZXgsIGl0ZW0uY29sdW1uLmxlYWZJbmRleCk7XG4gICAgICAgICAgICAgICAgZXYgPSB0aGlzLnNlbGVjdFJhbmdlKHN0YXJ0Um93SW5kZXgsIHN0YXJ0Q29sSW5kZXgsIGVuZFJvd0luZGV4LCBlbmRDb2xJbmRleCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc1ByZXNlbnQoZXYpKSB7XG4gICAgICAgICAgICBldiA9IHRoaXMuc2VsZWN0KGl0ZW0pO1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50U2VsZWN0aW9uID0gW3RoaXMubGFzdFNlbGVjdGlvbkl0ZW1dO1xuICAgICAgICB9XG4gICAgICAgIGlmICghZXYuc2VsZWN0ZWRDZWxscy5sZW5ndGggJiYgIWV2LmRlc2VsZWN0ZWRDZWxscy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBldi5jdHJsS2V5ID0gY3RybEtleTtcbiAgICAgICAgZXYuc2hpZnRLZXkgPSBldmVudC5zaGlmdEtleTtcbiAgICAgICAgdGhpcy5jaGFuZ2VzLmVtaXQoZXYpO1xuICAgIH1cbiAgICB0b2dnbGUoaXRlbSkge1xuICAgICAgICBsZXQgc2VsZWN0ZWRDZWxscyA9IFtdO1xuICAgICAgICBsZXQgZGVzZWxlY3RlZENlbGxzID0gW107XG4gICAgICAgIHRoaXMubGFzdFNlbGVjdGlvbkl0ZW0gPVxuICAgICAgICAgICAgdGhpcy5zZXR0aW5ncy5jZWxsU2VsZWN0ZWQoeyBkYXRhSXRlbTogaXRlbS5kYXRhLCBpbmRleDogaXRlbS5pbmRleCB9LCBpdGVtLmNvbHVtbiwgaXRlbS5jb2x1bW4ubGVhZkluZGV4KS5pdGVtO1xuICAgICAgICB0aGlzLmxhc3RTZWxlY3Rpb25JdGVtUm93SW5kZXggPSBpdGVtLmluZGV4O1xuICAgICAgICB0aGlzLmxhc3RTZWxlY3Rpb25JdGVtQ29sSW5kZXggPSBpdGVtLmNvbHVtbi5sZWFmSW5kZXg7XG4gICAgICAgIGlmICh0aGlzLmlzQ2VsbFNlbGVjdGVkKGl0ZW0sIGl0ZW0uY29sdW1uKSkge1xuICAgICAgICAgICAgZGVzZWxlY3RlZENlbGxzLnB1c2godGhpcy5sYXN0U2VsZWN0aW9uSXRlbSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzZWxlY3RlZENlbGxzLnB1c2godGhpcy5sYXN0U2VsZWN0aW9uSXRlbSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRlc2VsZWN0ZWRDZWxscyxcbiAgICAgICAgICAgIHNlbGVjdGVkQ2VsbHNcbiAgICAgICAgfTtcbiAgICB9XG4gICAgc2VsZWN0KGl0ZW0pIHtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRDZWxscyA9IFtdO1xuICAgICAgICBjb25zdCBkZXNlbGVjdGVkQ2VsbHMgPSBbXTtcbiAgICAgICAgdGhpcy5sYXN0U2VsZWN0aW9uSXRlbSA9XG4gICAgICAgICAgICB0aGlzLnNldHRpbmdzLmNlbGxTZWxlY3RlZCh7IGRhdGFJdGVtOiBpdGVtLmRhdGEsIGluZGV4OiBpdGVtLmluZGV4IH0sIGl0ZW0uY29sdW1uLCBpdGVtLmNvbHVtbi5sZWFmSW5kZXgpLml0ZW07XG4gICAgICAgIHRoaXMubGFzdFNlbGVjdGlvbkl0ZW1Sb3dJbmRleCA9IGl0ZW0uaW5kZXg7XG4gICAgICAgIHRoaXMubGFzdFNlbGVjdGlvbkl0ZW1Db2xJbmRleCA9IGl0ZW0uY29sdW1uLmxlYWZJbmRleDtcbiAgICAgICAgaWYgKCF0aGlzLmlzQ2VsbFNlbGVjdGVkKGl0ZW0sIGl0ZW0uY29sdW1uKSkge1xuICAgICAgICAgICAgc2VsZWN0ZWRDZWxscy5wdXNoKHRoaXMubGFzdFNlbGVjdGlvbkl0ZW0pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY3VycmVudFNlbGVjdGlvbi5mb3JFYWNoKChzZWxlY3RlZEl0ZW0pID0+IHtcbiAgICAgICAgICAgIGlmIChzZWxlY3RlZEl0ZW0uaXRlbUtleSAhPT0gdGhpcy5sYXN0U2VsZWN0aW9uSXRlbS5pdGVtS2V5IHx8IHNlbGVjdGVkSXRlbS5jb2x1bW5LZXkgIT09IHRoaXMubGFzdFNlbGVjdGlvbkl0ZW0uY29sdW1uS2V5KSB7XG4gICAgICAgICAgICAgICAgZGVzZWxlY3RlZENlbGxzLnB1c2goc2VsZWN0ZWRJdGVtKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkZXNlbGVjdGVkQ2VsbHMsXG4gICAgICAgICAgICBzZWxlY3RlZENlbGxzXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8vVXNlZCB0byBtYW51YWxseSBkZXNlbGVjdCByZW1vdmVkIGl0ZW1zXG4gICAgZGVzZWxlY3QocmVtb3ZlZEl0ZW0pIHtcbiAgICAgICAgY29uc3QgaXRlcmF0b3IkJDEgPSB0aGlzLmdldEl0ZXJhdG9yKCk7XG4gICAgICAgIGxldCBpdGVtID0gaXRlcmF0b3IkJDEubmV4dCgpO1xuICAgICAgICBsZXQgcm93QXJncztcbiAgICAgICAgd2hpbGUgKCFpdGVtLmRvbmUpIHtcbiAgICAgICAgICAgIGlmIChpdGVtLnZhbHVlICYmIGl0ZW0udmFsdWUudHlwZSA9PT0gXCJkYXRhXCIgJiYgaXRlbS52YWx1ZS5kYXRhID09PSByZW1vdmVkSXRlbSkge1xuICAgICAgICAgICAgICAgIHJvd0FyZ3MgPSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGFJdGVtOiBpdGVtLnZhbHVlLmRhdGEsXG4gICAgICAgICAgICAgICAgICAgIGluZGV4OiBpdGVtLnZhbHVlLmluZGV4XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGl0ZW0gPSBpdGVyYXRvciQkMS5uZXh0KCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJvd0FyZ3MpIHtcbiAgICAgICAgICAgIGNvbnN0IGNlbGxzVG9SZW1vdmUgPSB0aGlzLmN1cnJlbnRTZWxlY3Rpb24uZmlsdGVyKHNlbGVjdGVkSXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29udGVuZGVyID0gdGhpcy5zZXR0aW5ncy5jZWxsU2VsZWN0ZWQocm93QXJncywgbnVsbCwgbnVsbCkuaXRlbTtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VsZWN0ZWRJdGVtLml0ZW1LZXkgPT09IGNvbnRlbmRlci5pdGVtS2V5O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoY2VsbHNUb1JlbW92ZS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBsZXQgZXYgPSB7XG4gICAgICAgICAgICAgICAgICAgIGN0cmxLZXk6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBkZXNlbGVjdGVkQ2VsbHM6IGNlbGxzVG9SZW1vdmUsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkQ2VsbHM6IFtdXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZXMuZW1pdChldik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2VsZWN0UmFuZ2Uoc3RhcnRSb3dJbmRleCwgc3RhcnRDb2xJbmRleCwgZW5kUm93SW5kZXgsIGVuZENvbEluZGV4KSB7XG4gICAgICAgIGNvbnN0IHNlbGVjdGVkQ2VsbHMgPSBbXTtcbiAgICAgICAgY29uc3QgZGVzZWxlY3RlZENlbGxzID0gW107XG4gICAgICAgIGNvbnN0IHNlbGVjdGlvblN0YXJ0Um93ID0gTWF0aC5taW4oc3RhcnRSb3dJbmRleCwgZW5kUm93SW5kZXgpO1xuICAgICAgICBjb25zdCBzZWxlY3Rpb25TdGFydENvbCA9IE1hdGgubWluKHN0YXJ0Q29sSW5kZXgsIGVuZENvbEluZGV4KTtcbiAgICAgICAgY29uc3Qgc2VsZWN0aW9uRW5kUm93ID0gTWF0aC5tYXgoc3RhcnRSb3dJbmRleCwgZW5kUm93SW5kZXgpO1xuICAgICAgICBjb25zdCBzZWxlY3Rpb25FbmRDb2wgPSBNYXRoLm1heChzdGFydENvbEluZGV4LCBlbmRDb2xJbmRleCk7XG4gICAgICAgIGNvbnN0IGl0ZXJhdG9yJCQxID0gdGhpcy5nZXRJdGVyYXRvcigpO1xuICAgICAgICBsZXQgbmV4dCA9IGl0ZXJhdG9yJCQxLm5leHQoKTtcbiAgICAgICAgd2hpbGUgKCFuZXh0LmRvbmUpIHtcbiAgICAgICAgICAgIGlmIChuZXh0LnZhbHVlICYmIG5leHQudmFsdWUudHlwZSA9PT0gXCJkYXRhXCIpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZHggPSBuZXh0LnZhbHVlLmluZGV4O1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBuZXh0LnZhbHVlLmRhdGE7XG4gICAgICAgICAgICAgICAgY29uc3Qgcm93QXJncyA9IHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YUl0ZW06IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIGluZGV4OiBpZHhcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0dGluZ3MuY29sdW1ucy5mb3JFYWNoKGNvbCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgaXRlbSB9ID0gdGhpcy5zZXR0aW5ncy5jZWxsU2VsZWN0ZWQocm93QXJncywgY29sLCBjb2wubGVhZkluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWQgPSB0aGlzLmlzQ2VsbFNlbGVjdGVkKG5leHQudmFsdWUsIGNvbCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzSW5Sb3dSYW5nZSA9IHNlbGVjdGlvblN0YXJ0Um93IDw9IGlkeCAmJiBpZHggPD0gc2VsZWN0aW9uRW5kUm93O1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpc0luQ29sUmFuZ2UgPSBzZWxlY3Rpb25TdGFydENvbCA8PSBjb2wubGVhZkluZGV4ICYmIGNvbC5sZWFmSW5kZXggPD0gc2VsZWN0aW9uRW5kQ29sO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpc0luU2VsZWN0aW9uUmVjdCA9IGlzSW5Sb3dSYW5nZSAmJiBpc0luQ29sUmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIGlmICghaXNJblNlbGVjdGlvblJlY3QgJiYgc2VsZWN0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2VsZWN0ZWRDZWxscy5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc0luU2VsZWN0aW9uUmVjdCAmJiAhc2VsZWN0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkQ2VsbHMucHVzaChpdGVtKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmV4dCA9IGl0ZXJhdG9yJCQxLm5leHQoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGVzZWxlY3RlZENlbGxzLFxuICAgICAgICAgICAgc2VsZWN0ZWRDZWxsc1xuICAgICAgICB9O1xuICAgIH1cbiAgICBnZXQgb3B0aW9ucygpIHtcbiAgICAgICAgY29uc3QgZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgICAgICAgICBjaGVja2JveE9ubHk6IGZhbHNlLFxuICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgIG1vZGU6IFwibXVsdGlwbGVcIlxuICAgICAgICB9O1xuICAgICAgICBpZiAoIWlzUHJlc2VudCh0aGlzLnNldHRpbmdzKSkge1xuICAgICAgICAgICAgcmV0dXJuIGRlZmF1bHRPcHRpb25zO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5zZXR0aW5ncy5zZWxlY3RhYmxlID09PSAnYm9vbGVhbicpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgY2hlY2tib3hPbmx5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICBlbmFibGVkOiB0aGlzLnNldHRpbmdzLnNlbGVjdGFibGUsXG4gICAgICAgICAgICAgICAgbW9kZTogXCJtdWx0aXBsZVwiXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oZGVmYXVsdE9wdGlvbnMsIHRoaXMuc2V0dGluZ3Muc2VsZWN0YWJsZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlU3Vic2NyaXB0aW9ucygpO1xuICAgIH1cbiAgICBhZGRTdWJzY3JpcHRpb25zKCkge1xuICAgICAgICBpZiAoIXRoaXMuY2VsbENsaWNrU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmNlbGxDbGlja1N1YnNjcmlwdGlvbiA9IHRoaXMuZG9tRXZlbnRzLmNlbGxDbGljay5zdWJzY3JpYmUoKGFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmVuYWJsZWQgJiYgIXRoaXMub3B0aW9ucy5jaGVja2JveE9ubHkgJiYgYXJncy50eXBlICE9PSAnY29udGV4dG1lbnUnKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmFjdGl2ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVDbGljayh7IGluZGV4OiBhcmdzLnJvd0luZGV4LCBkYXRhOiBhcmdzLmRhdGFJdGVtLCBjb2x1bW46IGFyZ3MuY29sdW1uIH0sIGFyZ3Mub3JpZ2luYWxFdmVudCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMubW91c2Vkb3duU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLm1vdXNlZG93blN1YnNjcmlwdGlvbiA9IHRoaXMuZG9tRXZlbnRzLmNlbGxNb3VzZWRvd24uc3Vic2NyaWJlKChhcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5tb3VzZURvd25FdmVudEFyZ3MgPSBhcmdzO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuZW5hYmxlZCAmJiAoIXRoaXMub3B0aW9ucy5tb2RlIHx8IHRoaXMub3B0aW9ucy5tb2RlID09PSBcIm11bHRpcGxlXCIpICYmXG4gICAgICAgICAgICAgICAgICAgICF0aGlzLm9wdGlvbnMuY2hlY2tib3hPbmx5ICYmIGFyZ3Mub3JpZ2luYWxFdmVudC5zaGlmdEtleSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5hY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3Mub3JpZ2luYWxFdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXZpZ2F0aW9uU2VydmljZS5mb2N1c0NlbGxCeUVsZW1lbnQoYXJncy5vcmlnaW5hbEV2ZW50LnRhcmdldCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5sb2NhbERhdGFDaGFuZ2VzU2VydmljZSAmJiAhdGhpcy5kYXRhQ2hhbmdlZFN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5kYXRhQ2hhbmdlZFN1YnNjcmlwdGlvbiA9IHRoaXMubG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2UuY2hhbmdlcy5zdWJzY3JpYmUoKGFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5hY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzUHJlc2VudChhcmdzLmFjdGlvbikgJiYgYXJncy5hY3Rpb24gPT09ICdyZW1vdmUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRlc2VsZWN0KGFyZ3MuaXRlbSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRJdGVyYXRvcigpIHtcbiAgICAgICAgY29uc3QgYWNjZXNzb3IgPSB0aGlzLnNldHRpbmdzLnZpZXcuYWNjZXNzb3IoKTtcbiAgICAgICAgaWYgKCFhY2Nlc3Nvcikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2Nlc3NvcltpdGVyYXRvcl0oKTtcbiAgICB9XG4gICAgcmVtb3ZlU3Vic2NyaXB0aW9ucygpIHtcbiAgICAgICAgaWYgKHRoaXMuY2VsbENsaWNrU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmNlbGxDbGlja1N1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgdGhpcy5jZWxsQ2xpY2tTdWJzY3JpcHRpb24gPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm1vdXNlZG93blN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5tb3VzZWRvd25TdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIHRoaXMubW91c2Vkb3duU3Vic2NyaXB0aW9uID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5kYXRhQ2hhbmdlZFN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5kYXRhQ2hhbmdlZFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgdGhpcy5kYXRhQ2hhbmdlZFN1YnNjcmlwdGlvbiA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9XG59O1xuQ2VsbFNlbGVjdGlvblNlcnZpY2UgPSBfX2RlY29yYXRlKFtcbiAgICBJbmplY3RhYmxlKCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtEb21FdmVudHNTZXJ2aWNlLFxuICAgICAgICBMb2NhbERhdGFDaGFuZ2VzU2VydmljZSxcbiAgICAgICAgTmF2aWdhdGlvblNlcnZpY2VdKVxuXSwgQ2VsbFNlbGVjdGlvblNlcnZpY2UpO1xuXG5jb25zdCBjcmVhdGVFbGVtZW50ID0gKCkgPT4ge1xuICAgIGNvbnN0IG1hcnF1ZWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIG1hcnF1ZWUuY2xhc3NOYW1lID0gXCJrLW1hcnF1ZWVcIjtcbiAgICBjb25zdCBtYXJxdWVlQ29sb3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIG1hcnF1ZWVDb2xvci5jbGFzc05hbWUgPSBcImstbWFycXVlZS1jb2xvclwiO1xuICAgIG1hcnF1ZWUuYXBwZW5kQ2hpbGQobWFycXVlZUNvbG9yKTtcbiAgICByZXR1cm4gbWFycXVlZTtcbn07XG5jb25zdCBQT0lOVEVSX09GRlNFVCA9IDI7XG5jb25zdCBNSU5JTUFMX0RSQUdfRElTVEFOQ0UgPSA1O1xuY29uc3Qgb2Zmc2V0cyA9IHtcbiAgICB0b3BMZWZ0OiB7IHg6IFBPSU5URVJfT0ZGU0VULCB5OiBQT0lOVEVSX09GRlNFVCB9LFxuICAgIHRvcFJpZ2h0OiB7IHg6IC1QT0lOVEVSX09GRlNFVCwgeTogUE9JTlRFUl9PRkZTRVQgfSxcbiAgICBib3R0b21MZWZ0OiB7IHg6IFBPSU5URVJfT0ZGU0VULCB5OiAtUE9JTlRFUl9PRkZTRVQgfSxcbiAgICBib3R0b21SaWdodDogeyB4OiAtUE9JTlRFUl9PRkZTRVQsIHk6IC1QT0lOVEVSX09GRlNFVCB9XG59O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBHcmlkTWFycXVlZURpcmVjdGl2ZSA9IGNsYXNzIEdyaWRNYXJxdWVlRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3RvcihkcmFnZ2FibGUsIHNlbGVjdGlvbiwgY2VsbFNlbGVjdGlvbiwgZG9tRXZlbnRzKSB7XG4gICAgICAgIHRoaXMuZHJhZ2dhYmxlID0gZHJhZ2dhYmxlO1xuICAgICAgICB0aGlzLnNlbGVjdGlvbiA9IHNlbGVjdGlvbjtcbiAgICAgICAgdGhpcy5jZWxsU2VsZWN0aW9uID0gY2VsbFNlbGVjdGlvbjtcbiAgICAgICAgdGhpcy5kb21FdmVudHMgPSBkb21FdmVudHM7XG4gICAgICAgIHRoaXMuc2VsZWN0aW9uU3RhcnRlZCA9IGZhbHNlO1xuICAgIH1cbiAgICBnZXQgd2Via2l0VXNlclNlbGVjdGlvbigpIHtcbiAgICAgICAgcmV0dXJuICh0aGlzLmNlbGxTZWxlY3Rpb24uZW5hYmxlTWFycXVlZSB8fCB0aGlzLnNlbGVjdGlvbi5lbmFibGVNYXJxdWVlKSA/ICdub25lJyA6IG51bGw7XG4gICAgfVxuICAgIGdldCB1c2VyU2VsZWN0aW9uKCkge1xuICAgICAgICByZXR1cm4gKHRoaXMuY2VsbFNlbGVjdGlvbi5lbmFibGVNYXJxdWVlIHx8IHRoaXMuc2VsZWN0aW9uLmVuYWJsZU1hcnF1ZWUpO1xuICAgIH1cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gKHRoaXMuZHJhZ2dhYmxlLmtlbmRvUHJlc3Muc3Vic2NyaWJlKHRoaXMuc3RhcnQuYmluZCh0aGlzKSkpO1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuYWRkKHRoaXMuZHJhZ2dhYmxlLmtlbmRvRHJhZy5zdWJzY3JpYmUodGhpcy5tb3ZlTWFycXVlZS5iaW5kKHRoaXMpKSk7XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMudW5zdWJzY3JpYmUoKTtcbiAgICAgICAgdGhpcy5jbGVhbigpO1xuICAgIH1cbiAgICBzdGFydChhcmdzKSB7XG4gICAgICAgIGlmIChhcmdzLm9yaWdpbmFsRXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnay1jaGVja2JveCcpKSB7XG4gICAgICAgICAgICB0aGlzLnByZXNzQXJncyA9IG51bGw7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcmVzc0FyZ3MgPSBhcmdzO1xuICAgICAgICB0aGlzLnByZXNzVGFyZ2V0ID0gbnVsbDtcbiAgICB9XG4gICAgbW92ZU1hcnF1ZWUoYXJncykge1xuICAgICAgICBpZiAoIXRoaXMucHJlc3NUYXJnZXQpIHtcbiAgICAgICAgICAgIHRoaXMucHJlc3NUYXJnZXQgPSB0aGlzLmNlbGxTZWxlY3Rpb24uYWN0aXZlID8gdGhpcy5jZWxsU2VsZWN0aW9uLm1vdXNlRG93bkV2ZW50QXJncyA6IHRoaXMuc2VsZWN0aW9uLm1vdXNlRG93bkV2ZW50QXJncztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwcmVzcyA9IHRoaXMucHJlc3NBcmdzO1xuICAgICAgICBpZiAoIXByZXNzKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLnNlbGVjdGlvblN0YXJ0ZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGRpc3RhbmNlID0gTWF0aC5zcXJ0KE1hdGgucG93KChhcmdzLnBhZ2VYIC0gcHJlc3MucGFnZVgpLCAyKSArIE1hdGgucG93KChhcmdzLnBhZ2VZIC0gcHJlc3MucGFnZVkpLCAyKSk7XG4gICAgICAgICAgICBpZiAoZGlzdGFuY2UgPiBNSU5JTUFMX0RSQUdfRElTVEFOQ0UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGlvblN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRoaXMuZHJhZ0VuZFN1YnNjcmlwdGlvbiA9IG1lcmdlKHRoaXMuZG9tRXZlbnRzLmNlbGxNb3VzZXVwLnBpcGUodGFrZSgxKSksIHRoaXMuZHJhZ2dhYmxlLmtlbmRvUmVsZWFzZS5waXBlKGRlbGF5KDEpLCB0YWtlKDEpKSlcbiAgICAgICAgICAgICAgICAgICAgLnN1YnNjcmliZSh0aGlzLmVuZFNlbGVjdGlvbi5iaW5kKHRoaXMpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmluaXRNYXJxdWVlKCk7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLm1hcnF1ZWVFbGVtZW50O1xuICAgICAgICBjb25zdCBtYXJxdWVlUXVhZHJhbnQgPSB0aGlzLmdldE1hcnF1ZWVRdWFkcmFudChhcmdzLnBhZ2VYLCBhcmdzLnBhZ2VZLCBwcmVzcy5wYWdlWCwgcHJlc3MucGFnZVkpO1xuICAgICAgICBsZXQgbGVmdCA9IE1hdGgubWluKGFyZ3MucGFnZVgsIHByZXNzLnBhZ2VYKTtcbiAgICAgICAgbGV0IHRvcCA9IE1hdGgubWluKGFyZ3MucGFnZVksIHByZXNzLnBhZ2VZKTtcbiAgICAgICAgY29uc3Qgd2lkdGggPSBNYXRoLmFicyhhcmdzLnBhZ2VYIC0gcHJlc3MucGFnZVgpO1xuICAgICAgICBjb25zdCBoZWlnaHQgPSBNYXRoLmFicyhhcmdzLnBhZ2VZIC0gcHJlc3MucGFnZVkpO1xuICAgICAgICBpZiAobWFycXVlZVF1YWRyYW50KSB7XG4gICAgICAgICAgICBsZWZ0ICs9IG9mZnNldHNbbWFycXVlZVF1YWRyYW50XS54O1xuICAgICAgICAgICAgdG9wICs9IG9mZnNldHNbbWFycXVlZVF1YWRyYW50XS55O1xuICAgICAgICB9XG4gICAgICAgIGVsZW1lbnQuc3R5bGUubGVmdCA9IGAke2xlZnR9cHhgO1xuICAgICAgICBlbGVtZW50LnN0eWxlLnRvcCA9IGAke3RvcH1weGA7XG4gICAgICAgIGVsZW1lbnQuc3R5bGUud2lkdGggPSBgJHt3aWR0aH1weGA7XG4gICAgICAgIGVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gYCR7aGVpZ2h0fXB4YDtcbiAgICB9XG4gICAgZW5kU2VsZWN0aW9uKGFyZ3MpIHtcbiAgICAgICAgaWYgKGFyZ3MudHlwZSA9PT0gJ21vdXNldXAnIHx8IGFyZ3MudHlwZSA9PT0gJ3RvdWNoZW5kJykge1xuICAgICAgICAgICAgaWYgKHRoaXMuY2VsbFNlbGVjdGlvbi5hY3RpdmUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNlbGxTZWxlY3Rpb24uZHJhZ2dpbmcgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRoaXMuY2VsbFNlbGVjdGlvbi5jaGFuZ2VzLmVtaXQodGhpcy5jZWxsU2VsZWN0aW9uLnNlbGVjdFJhbmdlKHRoaXMucHJlc3NUYXJnZXQucm93SW5kZXgsIHRoaXMucHJlc3NUYXJnZXQuY29sdW1uLmxlYWZJbmRleCwgYXJncy5yb3dJbmRleCwgYXJncy5jb2x1bW4ubGVhZkluZGV4KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLnNlbGVjdGlvbi5hY3RpdmUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGlvbi5kcmFnZ2luZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24uY2hhbmdlcy5lbWl0KHRoaXMuc2VsZWN0aW9uLnNlbGVjdFJhbmdlKHRoaXMucHJlc3NUYXJnZXQucm93SW5kZXgsIGFyZ3Mucm93SW5kZXgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNsZWFuKCk7XG4gICAgfVxuICAgIGNsZWFuKCkge1xuICAgICAgICBpZiAodGhpcy5tYXJxdWVlRWxlbWVudCkge1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0aGlzLm1hcnF1ZWVFbGVtZW50KTtcbiAgICAgICAgICAgIHRoaXMubWFycXVlZUVsZW1lbnQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmRyYWdFbmRTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuZHJhZ0VuZFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZHJhZ0VuZFN1YnNjcmlwdGlvbiA9IG51bGw7XG4gICAgICAgIHRoaXMucHJlc3NUYXJnZXQgPSBudWxsO1xuICAgICAgICB0aGlzLnByZXNzQXJncyA9IG51bGw7XG4gICAgICAgIHRoaXMuc2VsZWN0aW9uU3RhcnRlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmNlbGxTZWxlY3Rpb24uYWN0aXZlID8gdGhpcy5jZWxsU2VsZWN0aW9uLmRyYWdnaW5nID0gZmFsc2UgOiB0aGlzLnNlbGVjdGlvbi5kcmFnZ2luZyA9IGZhbHNlO1xuICAgIH1cbiAgICBpbml0TWFycXVlZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLm1hcnF1ZWVFbGVtZW50KSB7XG4gICAgICAgICAgICB0aGlzLm1hcnF1ZWVFbGVtZW50ID0gY3JlYXRlRWxlbWVudCgpO1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLm1hcnF1ZWVFbGVtZW50KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRNYXJxdWVlUXVhZHJhbnQocG9pbnRlclgsIHBvaW50ZXJZLCBzdGFydFgsIHN0YXJ0WSkge1xuICAgICAgICBjb25zdCBsZWZ0SGFsZiA9IHBvaW50ZXJYIDwgc3RhcnRYO1xuICAgICAgICBjb25zdCByaWdodEhhbGYgPSBwb2ludGVyWCA+IHN0YXJ0WDtcbiAgICAgICAgY29uc3QgdG9wSGFsZiA9IHBvaW50ZXJZIDwgc3RhcnRZO1xuICAgICAgICBjb25zdCBib3R0b21IYWxmID0gcG9pbnRlclkgPiBzdGFydFk7XG4gICAgICAgIGlmIChsZWZ0SGFsZiAmJiB0b3BIYWxmKSB7XG4gICAgICAgICAgICByZXR1cm4gJ3RvcExlZnQnO1xuICAgICAgICB9XG4gICAgICAgIGlmIChsZWZ0SGFsZiAmJiBib3R0b21IYWxmKSB7XG4gICAgICAgICAgICByZXR1cm4gJ2JvdHRvbUxlZnQnO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyaWdodEhhbGYgJiYgdG9wSGFsZikge1xuICAgICAgICAgICAgcmV0dXJuICd0b3BSaWdodCc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJpZ2h0SGFsZiAmJiBib3R0b21IYWxmKSB7XG4gICAgICAgICAgICByZXR1cm4gJ2JvdHRvbVJpZ2h0JztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ3N0eWxlLi13ZWJraXQtdXNlci1zZWxlY3QnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBHcmlkTWFycXVlZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwid2Via2l0VXNlclNlbGVjdGlvblwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy51c2VyLXNlbGVjdC1ub25lJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIEdyaWRNYXJxdWVlRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJ1c2VyU2VsZWN0aW9uXCIsIG51bGwpO1xuR3JpZE1hcnF1ZWVEaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0dyaWRTZWxlY3Rpb25NYXJxdWVlXSdcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0RyYWdnYWJsZURpcmVjdGl2ZSxcbiAgICAgICAgU2VsZWN0aW9uU2VydmljZSxcbiAgICAgICAgQ2VsbFNlbGVjdGlvblNlcnZpY2UsXG4gICAgICAgIERvbUV2ZW50c1NlcnZpY2VdKVxuXSwgR3JpZE1hcnF1ZWVEaXJlY3RpdmUpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY2xhc3MgWm9uZUF3YXJlRXZlbnRFbWl0dGVyIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcbiAgICBjb25zdHJ1Y3RvcihuZ1pvbmUsIGlzQXN5bmMgPSBmYWxzZSkge1xuICAgICAgICBzdXBlcihpc0FzeW5jKTtcbiAgICAgICAgdGhpcy5uZ1pvbmUgPSBuZ1pvbmU7XG4gICAgfVxuICAgIHN1YnNjcmliZShnZW5lcmF0b3JPck5leHQsIGVycm9yLCBjb21wbGV0ZSkge1xuICAgICAgICBsZXQgc2NoZWR1bGVyRm47XG4gICAgICAgIGxldCBlcnJvckZuID0gKF8pID0+IG51bGw7XG4gICAgICAgIGxldCBjb21wbGV0ZUZuID0gKCkgPT4gbnVsbDtcbiAgICAgICAgaWYgKGdlbmVyYXRvck9yTmV4dCAmJiB0eXBlb2YgZ2VuZXJhdG9yT3JOZXh0ID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgc2NoZWR1bGVyRm4gPSAodmFsdWUpID0+IHsgdGhpcy5uZ1pvbmUucnVuKCgpID0+IGdlbmVyYXRvck9yTmV4dC5uZXh0KHZhbHVlKSk7IH07XG4gICAgICAgICAgICBpZiAoZ2VuZXJhdG9yT3JOZXh0LmVycm9yKSB7XG4gICAgICAgICAgICAgICAgZXJyb3JGbiA9IChlcnIpID0+IHsgdGhpcy5uZ1pvbmUucnVuKCgpID0+IGdlbmVyYXRvck9yTmV4dC5lcnJvcihlcnIpKTsgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChnZW5lcmF0b3JPck5leHQuY29tcGxldGUpIHtcbiAgICAgICAgICAgICAgICBjb21wbGV0ZUZuID0gKCkgPT4geyB0aGlzLm5nWm9uZS5ydW4oKCkgPT4gZ2VuZXJhdG9yT3JOZXh0LmNvbXBsZXRlKCkpOyB9O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc2NoZWR1bGVyRm4gPSAodmFsdWUpID0+IHsgdGhpcy5uZ1pvbmUucnVuKCgpID0+IGdlbmVyYXRvck9yTmV4dCh2YWx1ZSkpOyB9O1xuICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgZXJyb3JGbiA9IChlcnIpID0+IHsgdGhpcy5uZ1pvbmUucnVuKCgpID0+IGVycm9yKGVycikpOyB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNvbXBsZXRlKSB7XG4gICAgICAgICAgICAgICAgY29tcGxldGVGbiA9ICgpID0+IHsgdGhpcy5uZ1pvbmUucnVuKCgpID0+IGNvbXBsZXRlKCkpOyB9O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdXBlci5zdWJzY3JpYmUoc2NoZWR1bGVyRm4sIGVycm9yRm4sIGNvbXBsZXRlRm4pO1xuICAgIH1cbn1cblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IHBhY2thZ2VNZXRhZGF0YSA9IHtcbiAgICBuYW1lOiAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItZ3JpZCcsXG4gICAgcHJvZHVjdE5hbWU6ICdLZW5kbyBVSSBmb3IgQW5ndWxhcicsXG4gICAgcHJvZHVjdENvZGVzOiBbJ0tFTkRPVUlBTkdVTEFSJywgJ0tFTkRPVUlDT01QTEVURSddLFxuICAgIHB1Ymxpc2hEYXRlOiAxNjMyOTA0MDAzLFxuICAgIHZlcnNpb246ICcnLFxuICAgIGxpY2Vuc2luZ0RvY3NVcmw6ICdodHRwczovL3d3dy50ZWxlcmlrLmNvbS9rZW5kby1hbmd1bGFyLXVpL215LWxpY2Vuc2UvP3V0bV9tZWRpdW09cHJvZHVjdCZ1dG1fc291cmNlPWtlbmRvYW5ndWxhciZ1dG1fY2FtcGFpZ249a2VuZG8tdWktYW5ndWxhci1wdXJjaGFzZS1saWNlbnNlLWtleXMtd2FybmluZydcbn07XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgY29sdW1uIGNlbGwgdGVtcGxhdGUgb2YgdGhlIEdyaWQgKFttb3JlIGluZm9ybWF0aW9uIGFuZCBleGFtcGxlXSh7JSBzbHVnIHRlbXBsYXRlc19jb2x1bW5zX2dyaWQgJX0jdG9jLWNlbGwtdGVtcGxhdGUpKS5cbiAqIEhlbHBzIHRvIGN1c3RvbWl6ZSB0aGUgY29udGVudCBvZiB0aGUgY2VsbHMuIFRvIGRlZmluZSB0aGUgY2VsbCB0ZW1wbGF0ZSwgbmVzdCBhbiBgPG5nLXRlbXBsYXRlPmAgdGFnXG4gKiB3aXRoIHRoZSBga2VuZG9HcmlkQ2VsbFRlbXBsYXRlYCBkaXJlY3RpdmUgaW5zaWRlIGEgYDxrZW5kby1ncmlkLWNvbHVtbj5gIHRhZy5cbiAqXG4gKiBUaGUgdGVtcGxhdGUgY29udGV4dCBpcyBzZXQgdG8gdGhlIGN1cnJlbnQgZGF0YSBpdGVtIGFuZCB0aGUgZm9sbG93aW5nIGFkZGl0aW9uYWwgZmllbGRzIGFyZSBwYXNzZWQ6XG4gKiAtIGBjb2x1bW5JbmRleGAmbWRhc2g7VGhlIGN1cnJlbnQgY29sdW1uIGluZGV4LiBVc2UgaXQgYXMgYW4gYWxpYXMgZm9yIGEgdGVtcGxhdGUgdmFyaWFibGUgYnkgdXRpbGl6aW5nIHRoZSBgbGV0LWNvbHVtbkluZGV4PVwiY29sdW1uSW5kZXhcImAgc3ludGF4LlxuICogLSBgcm93SW5kZXhgJm1kYXNoO1RoZSBjdXJyZW50IGRhdGEgcm93IGluZGV4LiBVc2UgaXQgYXMgYW4gYWxpYXMgZm9yIGEgdGVtcGxhdGUgdmFyaWFibGUgYnkgdXRpbGl6aW5nIHRoZSBgbGV0LXJvd0luZGV4PVwicm93SW5kZXhcImAgc3ludGF4LlxuICogLSBgZGF0YUl0ZW1gJm1kYXNoO1RoZSBjdXJyZW50IGRhdGEgaXRlbS4gUmVwcmVzZW50cyB0aGUgZGVmYXVsdCBjb250ZXh0IHRoYXQgd2lsbCBiZSBhc3NpZ25lZCB0byBhbnkgdGVtcGxhdGUgdmFyaWFibGUgd2hpY2ggdXRpbGl6ZXMgdGhlIGBsZXQteGAgc3ludGF4Jm1kYXNoO2ZvciBleGFtcGxlLCBgbGV0LWRhdGFJdGVtYC5cbiAqIC0gYGNvbHVtbmAmbWRhc2g7VGhlIGN1cnJlbnQgY29sdW1uIGluc3RhbmNlLiBVc2UgaXQgYXMgYW4gYWxpYXMgZm9yIGEgdGVtcGxhdGUgdmFyaWFibGUgYnkgdXRpbGl6aW5nIHRoZSBgbGV0LWNvbHVtbj1cImNvbHVtblwiYCBzeW50YXguXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgICAgIDxrZW5kby1ncmlkIFtkYXRhXT1cImdyaWREYXRhXCI+XG4gKiAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJQcm9kdWN0TmFtZVwiPlxuICogICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRDZWxsVGVtcGxhdGUgbGV0LWRhdGFJdGVtIGxldC1yb3dJbmRleD1cInJvd0luZGV4XCI+XG4gKiAgICAgICAgICAgICAgICAgICAgIERhdGEgUm93ICM6IHt7cm93SW5kZXh9fSAvXG4gKiAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+e3tkYXRhSXRlbS5Qcm9kdWN0TmFtZX19PC9zdHJvbmc+XG4gKiAgICAgICAgICAgICAgICAgICAgICh7e2RhdGFJdGVtLkRpc2NvbnRpbnVlZCA/IFwiZGlzY29udGludWVkXCIgOiBcImFjdGl2ZVwifX0pXG4gKiAgICAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgIDwva2VuZG8tZ3JpZD5cbiAqICAgICBgXG4gKiB9KVxuICpcbiAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKiAgICAgcHVibGljIGdyaWREYXRhID0gW3tcbiAqICAgICAgICAgXCJQcm9kdWN0SURcIjogMSxcbiAqICAgICAgICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYWlcIixcbiAqICAgICAgICAgXCJVbml0UHJpY2VcIjogMTguMDAwMCxcbiAqICAgICAgICAgXCJEaXNjb250aW51ZWRcIjogZmFsc2VcbiAqICAgICAgIH0sIHtcbiAqICAgICAgICAgXCJQcm9kdWN0SURcIjogMixcbiAqICAgICAgICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYW5nXCIsXG4gKiAgICAgICAgIFwiVW5pdFByaWNlXCI6IDE5LjAwMDAsXG4gKiAgICAgICAgIFwiRGlzY29udGludWVkXCI6IHRydWVcbiAqICAgICAgIH1cbiAqICAgICBdO1xuICogfVxuICpcbiAqIGBgYFxuICovXG5sZXQgQ2VsbFRlbXBsYXRlRGlyZWN0aXZlID0gY2xhc3MgQ2VsbFRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZVJlZikge1xuICAgICAgICB0aGlzLnRlbXBsYXRlUmVmID0gdGVtcGxhdGVSZWY7XG4gICAgfVxufTtcbkNlbGxUZW1wbGF0ZURpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZENlbGxUZW1wbGF0ZV0nXG4gICAgfSksXG4gICAgX19wYXJhbSgwLCBPcHRpb25hbCgpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1RlbXBsYXRlUmVmXSlcbl0sIENlbGxUZW1wbGF0ZURpcmVjdGl2ZSk7XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgZ3JvdXAtaGVhZGVyIGNlbGwgdGVtcGxhdGUgb2YgdGhlIEdyaWQgd2hpY2ggaGVscHMgdG8gY3VzdG9taXplIHRoZSBjb250ZW50IG9mIHRoZSBncm91cCBoZWFkZXIgaXRlbS5cbiAqIFRvIGRlZmluZSB0aGUgZ3JvdXAgaGVhZGVyIHRlbXBsYXRlLCBuZXN0IGFuIGA8bmctdGVtcGxhdGU+YCB0YWcgd2l0aCB0aGUgYGtlbmRvR3JpZEdyb3VwSGVhZGVyVGVtcGxhdGVgXG4gKiBkaXJlY3RpdmUgaW5zaWRlIGA8a2VuZG8tZ3JpZC1jb2x1bW4+YC5cbiAqXG4gKiBUaGUgdGVtcGxhdGUgY29udGV4dCBpcyBzZXQgdG8gdGhlIGN1cnJlbnQgZGF0YSBpdGVtIGFuZCB0aGUgZm9sbG93aW5nIGFkZGl0aW9uYWwgZmllbGRzIGFyZSBwYXNzZWQ6XG4gKiAtIGBncm91cGAmbWRhc2g7VGhlIGN1cnJlbnQgZ3JvdXAgaXRlbS5cbiAqIC0gYGZpZWxkYCZtZGFzaDtUaGUgbmFtZSBvZiB0aGUgZmllbGQgYnkgd2hpY2ggZGF0YSBpcyBncm91cGVkLlxuICogLSBgdmFsdWVgJm1kYXNoO1RoZSBjdXJyZW50IGdyb3VwIHZhbHVlLlxuICogLSBgYWdncmVnYXRlc2AmbWRhc2g7QWxsIGFnZ3JlZ2F0ZSB2YWx1ZXMgZm9yIHRoZSBjdXJyZW50IGdyb3VwLlxuICogLSBgaW5kZXhgJm1kYXNoO1RoZSBpbmRleCBvZiB0aGUgY3VycmVudCBncm91cC5cbiAqIC0gYGV4cGFuZGVkYCZtZGFzaDtBIGJvb2xlYW4gdmFsdWUgaW5kaWNhdGluZyBpZiB0aGUgZ3JvdXAgaXMgY3VycmVudGx5IGV4cGFuZGVkLlxuICogKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBncm91cGFibGVfZ3JpZF93aXRoX2FnZ3JlZ2F0ZXMgJX0pKS5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IHByb2Nlc3MgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tZGF0YS1xdWVyeSc7XG4gKlxuICogX0BDb21wb25lbnQoe1xuICogICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgICB0ZW1wbGF0ZTogYFxuICogICAgICAgICA8a2VuZG8tZ3JpZCBbZGF0YV09XCJncmlkRGF0YVwiIFtncm91cF09XCJncm91cHNcIj5cbiAqICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIlByb2R1Y3ROYW1lXCI+XG4gKiAgICAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZEdyb3VwSGVhZGVyVGVtcGxhdGUgbGV0LWdyb3VwIGxldC1maWVsZD1cImZpZWxkXCIgbGV0LXZhbHVlPVwidmFsdWVcIj5cbiAqICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPnt7ZmllbGR9fTwvc3Ryb25nPjoge3t2YWx1ZX19XG4gKiAgICAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgIDwva2VuZG8tZ3JpZD5cbiAqICAgICBgXG4gKiB9KVxuICpcbiAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKiAgICAgcHVibGljIGdyb3VwcyA9IFt7IGZpZWxkOiBcIlByb2R1Y3ROYW1lXCIgfV07XG4gKlxuICogICAgIHB1YmxpYyBncmlkRGF0YSA9IHByb2Nlc3MoW3tcbiAqICAgICAgICAgXCJQcm9kdWN0SURcIjogMSxcbiAqICAgICAgICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYWlcIixcbiAqICAgICAgICAgXCJVbml0UHJpY2VcIjogMTguMDAwMCxcbiAqICAgICAgICAgXCJEaXNjb250aW51ZWRcIjogZmFsc2VcbiAqICAgICAgIH0sIHtcbiAqICAgICAgICAgXCJQcm9kdWN0SURcIjogMixcbiAqICAgICAgICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYW5nXCIsXG4gKiAgICAgICAgIFwiVW5pdFByaWNlXCI6IDE5LjAwMDAsXG4gKiAgICAgICAgIFwiRGlzY29udGludWVkXCI6IHRydWVcbiAqICAgICAgIH1cbiAqICAgICBdLCB7XG4gKiAgICAgIGdyb3VwOiB0aGlzLmdyb3Vwc1xuICogICAgIH0pO1xuICogfVxuICpcbiAqIGBgYFxuICovXG5sZXQgR3JvdXBIZWFkZXJUZW1wbGF0ZURpcmVjdGl2ZSA9IGNsYXNzIEdyb3VwSGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHRlbXBsYXRlUmVmKSB7XG4gICAgICAgIHRoaXMudGVtcGxhdGVSZWYgPSB0ZW1wbGF0ZVJlZjtcbiAgICB9XG59O1xuR3JvdXBIZWFkZXJUZW1wbGF0ZURpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZEdyb3VwSGVhZGVyVGVtcGxhdGVdJ1xuICAgIH0pLFxuICAgIF9fcGFyYW0oMCwgT3B0aW9uYWwoKSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtUZW1wbGF0ZVJlZl0pXG5dLCBHcm91cEhlYWRlclRlbXBsYXRlRGlyZWN0aXZlKTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBncm91cC1oZWFkZXIgY29sdW1uIHRlbXBsYXRlIG9mIHRoZSBHcmlkIHdoaWNoIGhlbHBzIHRvIGN1c3RvbWl6ZSB0aGUgY29udGVudCBvZiB0aGUgZ3JvdXAgaGVhZGVycy5cbiAqIFRvIGRlZmluZSB0aGUgZ3JvdXAgaGVhZGVyIHRlbXBsYXRlLCBuZXN0IGFuIGA8bmctdGVtcGxhdGU+YCB0YWcgd2l0aCB0aGUgYGtlbmRvR3JpZEdyb3VwSGVhZGVyQ29sdW1uVGVtcGxhdGVgXG4gKiBkaXJlY3RpdmUgaW5zaWRlIGA8a2VuZG8tZ3JpZC1jb2x1bW4+YC4gKFtTZWUgZXhhbXBsZV0oeyUgc2x1ZyBncm91cGFibGVfZ3JpZF93aXRoX2FnZ3JlZ2F0ZXMgJX0pKS5cbiAqXG4gKiBUaGUgdGVtcGxhdGUgY29udGV4dCBpcyBzZXQgdG8gdGhlIGN1cnJlbnQgZGF0YSBpdGVtIGFuZCB0aGUgZm9sbG93aW5nIGFkZGl0aW9uYWwgZmllbGRzIGFyZSBwYXNzZWQ6XG4gKiAtIGBncm91cGAmbWRhc2g7VGhlIGN1cnJlbnQgZ3JvdXAgaXRlbS5cbiAqIC0gYGZpZWxkYCZtZGFzaDtUaGUgbmFtZSBvZiB0aGUgZmllbGQgYnkgd2hpY2ggZGF0YSBpcyBncm91cGVkLlxuICogLSBgdmFsdWVgJm1kYXNoO1RoZSBjdXJyZW50IGdyb3VwIHZhbHVlLlxuICogLSBgYWdncmVnYXRlc2AmbWRhc2g7QWxsIGFnZ3JlZ2F0ZSB2YWx1ZXMgZm9yIHRoZSBjdXJyZW50IGdyb3VwLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIiB0aXRsZT1cIlByb2R1Y3QgTmFtZVwiPlxuICogICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRHcm91cEhlYWRlckNvbHVtblRlbXBsYXRlIGxldC1ncm91cD1cImdyb3VwXCIgbGV0LWFnZ3JlZ2F0ZXM9XCJhZ2dyZWdhdGVzXCI+XG4gKiAgICAgICAgIDxzcGFuIHRpdGxlPVwiR3JvdXAgSGVhZGVyIENvbHVtbiBUZW1wbGF0ZSBmb3IgUHJvZHVjdE5hbWVcIj5cbiAqICAgICAgICAgICAgIENvdW50OiB7eyBhZ2dyZWdhdGVzLkRpc2NvbnRpbnVlZC5jb3VudCB9fVxuICogICAgICAgICA8L3NwYW4+XG4gKiAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiBgYGBcbiAqL1xubGV0IEdyb3VwSGVhZGVyQ29sdW1uVGVtcGxhdGVEaXJlY3RpdmUgPSBjbGFzcyBHcm91cEhlYWRlckNvbHVtblRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZVJlZikge1xuICAgICAgICB0aGlzLnRlbXBsYXRlUmVmID0gdGVtcGxhdGVSZWY7XG4gICAgfVxufTtcbkdyb3VwSGVhZGVyQ29sdW1uVGVtcGxhdGVEaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0dyaWRHcm91cEhlYWRlckNvbHVtblRlbXBsYXRlXSdcbiAgICB9KSxcbiAgICBfX3BhcmFtKDAsIE9wdGlvbmFsKCkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbVGVtcGxhdGVSZWZdKVxuXSwgR3JvdXBIZWFkZXJDb2x1bW5UZW1wbGF0ZURpcmVjdGl2ZSk7XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgY29sdW1uIGVkaXQtY2VsbCB0ZW1wbGF0ZSBvZiB0aGUgR3JpZCAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGVkaXRpbmdfdGVtcGxhdGVfZm9ybXNfZ3JpZCAlfSkpLlxuICogSGVscHMgdG8gY3VzdG9taXplIHRoZSBjb250ZW50IG9mIHRoZSBlZGl0ZWQgY2VsbHMuIFRvIGRlZmluZSB0aGUgY2VsbCB0ZW1wbGF0ZSwgbmVzdCBhbiBgPG5nLXRlbXBsYXRlPmBcbiAqIHRhZyB3aXRoIHRoZSBga2VuZG9HcmlkRWRpdFRlbXBsYXRlYCBkaXJlY3RpdmUgaW5zaWRlIGEgYDxrZW5kby1ncmlkLWNvbHVtbj5gIHRhZy5cbiAqXG4gKiBUaGUgdGVtcGxhdGUgY29udGV4dCBjb250YWlucyB0aGUgZm9sbG93aW5nIGZpZWxkczpcbiAqIC0gYGZvcm1Hcm91cGAmbWRhc2g7VGhlIGN1cnJlbnQgW0Zvcm1Hcm91cF0oe3sgc2l0ZS5kYXRhLnVybHMuYW5ndWxhclsnZm9ybWdyb3VwYXBpJ10gfX0pLlxuICogSWYgeW91IHVzZSB0aGUgR3JpZCBpbnNpZGUgW1RlbXBsYXRlLURyaXZlbiBGb3Jtc10oe3sgc2l0ZS5kYXRhLnVybHMuYW5ndWxhclsnZm9ybXMnXSB9fSksIGl0IHdpbGwgYmUgYHVuZGVmaW5lZGAuXG4gKiAtIGByb3dJbmRleGAmbWRhc2g7VGhlIGN1cnJlbnQgZGF0YSByb3cgaW5kZXguIElmIGluc2lkZSBhIG5ldyBpdGVtIHJvdywgYHJvd0luZGV4YCBpcyBgLTFgLlxuICogLSBgZGF0YUl0ZW1gJm1kYXNoO1RoZSBjdXJyZW50IGRhdGEgaXRlbS5cbiAqIC0gYGNvbHVtbmAmbWRhc2g7VGhlIGN1cnJlbnQgY29sdW1uIGluc3RhbmNlLlxuICogLSBgaXNOZXdgJm1kYXNoO1RoZSBzdGF0ZSBvZiB0aGUgY3VycmVudCBpdGVtLlxuICovXG5sZXQgRWRpdFRlbXBsYXRlRGlyZWN0aXZlID0gY2xhc3MgRWRpdFRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZVJlZikge1xuICAgICAgICB0aGlzLnRlbXBsYXRlUmVmID0gdGVtcGxhdGVSZWY7XG4gICAgfVxufTtcbkVkaXRUZW1wbGF0ZURpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZEVkaXRUZW1wbGF0ZV0nXG4gICAgfSksXG4gICAgX19wYXJhbSgwLCBPcHRpb25hbCgpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1RlbXBsYXRlUmVmXSlcbl0sIEVkaXRUZW1wbGF0ZURpcmVjdGl2ZSk7XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgY29sdW1uIGdyb3VwIGZvb3RlciBjZWxsIHRlbXBsYXRlIG9mIHRoZSBHcmlkIHdoaWNoIGhlbHBzIHRvIGN1c3RvbWl6ZSB0aGUgZ3JvdXAgZm9vdGVyIGNlbGwgZm9yIHRoZSBjb2x1bW4uXG4gKiBUbyBkZWZpbmUgdGhlIGdyb3VwIGZvb3RlciB0ZW1wbGF0ZSwgbmVzdCBhbiBgPG5nLXRlbXBsYXRlPmAgdGFnIHdpdGggdGhlIGBrZW5kb0dyaWRHcm91cEZvb3RlclRlbXBsYXRlYCBkaXJlY3RpdmVcbiAqIGluc2lkZSBgPGtlbmRvLWdyaWQtY29sdW1uPmAuXG4gKlxuICogVGhlIHRlbXBsYXRlIGNvbnRleHQgaXMgc2V0IHRvIHRoZSBjdXJyZW50IGFnZ3JlZ2F0ZXMgYW5kIHRoZSBmb2xsb3dpbmcgYWRkaXRpb25hbCBmaWVsZHMgYXJlIHBhc3NlZDpcbiAqIC0gYGNvbHVtbmAmbWRhc2g7RGVmaW5lcyBhbiBpbnN0YW5jZSBvZiB0aGUgYENvbHVtbkNvbXBvbmVudGAgb3B0aW9uLlxuICogLSBgZmllbGRgJm1kYXNoO1RoZSBjdXJyZW50IGNvbHVtbiBmaWVsZCBuYW1lLlxuICogLSBgZ3JvdXBgJm1kYXNoO1RoZSBjdXJyZW50IGdyb3VwIGRhdGEgaXRlbS5cbiAqIC0gYGFnZ3JlZ2F0ZXNgJm1kYXNoO0FsbCBhZ2dyZWdhdGUgdmFsdWVzIGZvciB0aGUgY3VycmVudCBncm91cC5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHMtcHJldmlld1xuICogaW1wb3J0IHsgcHJvY2VzcyB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1kYXRhLXF1ZXJ5JztcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgICAgIDxrZW5kby1ncmlkIFtkYXRhXT1cImdyaWREYXRhXCIgW2dyb3VwXT1cImdyb3Vwc1wiPlxuICogICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIj5cbiAqICAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkR3JvdXBGb290ZXJUZW1wbGF0ZSBsZXQtYWdncmVnYXRlcyBsZXQtZmllbGQ9XCJmaWVsZFwiPlxuICogICAgICAgICAgICAgICAgICAgIENvdW50OiB7e2FnZ3JlZ2F0ZXNbZmllbGRdLmNvdW50fX1cbiAqICAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgICAgPC9rZW5kby1ncmlkPlxuICogICAgIGBcbiAqIH0pXG4gKlxuICogY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAqICAgICBwdWJsaWMgZ3JvdXBzID0gW3sgZmllbGQ6IFwiUHJvZHVjdE5hbWVcIiwgYWdncmVnYXRlczogW3sgZmllbGQ6IFwiUHJvZHVjdE5hbWVcIiwgYWdncmVnYXRlOiBcImNvdW50XCIgfV0gfV07XG4gKlxuICogICAgIHB1YmxpYyBncmlkRGF0YSA9IHByb2Nlc3MoW3tcbiAqICAgICAgICAgXCJQcm9kdWN0SURcIjogMSxcbiAqICAgICAgICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYWlcIixcbiAqICAgICAgICAgXCJVbml0UHJpY2VcIjogMTguMDAwMCxcbiAqICAgICAgICAgXCJEaXNjb250aW51ZWRcIjogZmFsc2VcbiAqICAgICAgIH0sIHtcbiAqICAgICAgICAgXCJQcm9kdWN0SURcIjogMixcbiAqICAgICAgICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYW5nXCIsXG4gKiAgICAgICAgIFwiVW5pdFByaWNlXCI6IDE5LjAwMDAsXG4gKiAgICAgICAgIFwiRGlzY29udGludWVkXCI6IHRydWVcbiAqICAgICAgIH1cbiAqICAgICBdLCB7XG4gKiAgICAgIGdyb3VwOiB0aGlzLmdyb3Vwc1xuICogICAgIH0pO1xuICogfVxuICogYGBgXG4gKi9cbmxldCBHcm91cEZvb3RlclRlbXBsYXRlRGlyZWN0aXZlID0gY2xhc3MgR3JvdXBGb290ZXJUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IodGVtcGxhdGVSZWYpIHtcbiAgICAgICAgdGhpcy50ZW1wbGF0ZVJlZiA9IHRlbXBsYXRlUmVmO1xuICAgIH1cbn07XG5Hcm91cEZvb3RlclRlbXBsYXRlRGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkR3JvdXBGb290ZXJUZW1wbGF0ZV0nXG4gICAgfSksXG4gICAgX19wYXJhbSgwLCBPcHRpb25hbCgpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1RlbXBsYXRlUmVmXSlcbl0sIEdyb3VwRm9vdGVyVGVtcGxhdGVEaXJlY3RpdmUpO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGNvbHVtbiBoZWFkZXIgY2VsbCB0ZW1wbGF0ZSBvZiB0aGUgR3JpZFxuICogKFttb3JlIGluZm9ybWF0aW9uIGFuZCBleGFtcGxlXSh7JSBzbHVnIHRlbXBsYXRlc19jb2x1bW5zX2dyaWQgJX0jdG9jLWhlYWRlci10ZW1wbGF0ZSkpLlxuICogSGVscHMgdG8gY3VzdG9taXplIHRoZSB0YWJsZSBoZWFkZXIgY2VsbCBmb3IgdGhlIGNvbHVtbi5cbiAqIFRvIGRlZmluZSBhIGhlYWRlciB0ZW1wbGF0ZSwgbmVzdCBhbiBgPG5nLXRlbXBsYXRlPmAgdGFnIHdpdGggdGhlXG4gKiBba2VuZG9HcmlkSGVhZGVyVGVtcGxhdGVdKHslIHNsdWcgYXBpX2dyaWRfaGVhZGVydGVtcGxhdGVkaXJlY3RpdmUgJX0pIGRpcmVjdGl2ZSBpbnNpZGUgdGhlIGA8a2VuZG8tZ3JpZC1jb2x1bW4+YCB0YWcuXG4gKlxuICogIFRoZSB0ZW1wbGF0ZSBjb250ZXh0IGlzIHNldCB0byB0aGUgY3VycmVudCBjb2x1bW4gYW5kIHRoZW4gdGhlIGZvbGxvd2luZyBhZGRpdGlvbmFsIGZpZWxkcyBhcmUgcGFzc2VkOlxuICogKiBgY29sdW1uYCZtZGFzaDtEZWZpbmVzIGFuIGluc3RhbmNlIG9mIHRoZSBbQ29sdW1uQ29tcG9uZW50XSh7JSBzbHVnIGFwaV9ncmlkX2NvbHVtbmNvbXBvbmVudCAlfSkgb3B0aW9uLlxuICogKiBgY29sdW1uSW5kZXhgJm1kYXNoO0RlZmluZXMgdGhlIGN1cnJlbnQgY29sdW1uIGluZGV4LlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0cy1wcmV2aWV3XG4gKlxuICogX0BDb21wb25lbnQoe1xuICogICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgICB0ZW1wbGF0ZTogYFxuICogICAgICAgICA8a2VuZG8tZ3JpZCBbZGF0YV09XCJncmlkRGF0YVwiPlxuICogICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIj5cbiAqICAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkSGVhZGVyVGVtcGxhdGUgbGV0LWNvbHVtbiBsZXQtY29sdW1uSW5kZXg9XCJjb2x1bW5JbmRleFwiPlxuICogICAgICAgICAgICAgICAgICAge3tjb2x1bW4uZmllbGR9fSh7e2NvbHVtbkluZGV4fX0pXG4gKiAgICAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiVW5pdFByaWNlXCI+XG4gKiAgICAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZEhlYWRlclRlbXBsYXRlIGxldC1jb2x1bW4gbGV0LWNvbHVtbkluZGV4PVwiY29sdW1uSW5kZXhcIj5cbiAqICAgICAgICAgICAgICAgICAgIHt7Y29sdW1uLmZpZWxkfX0oe3tjb2x1bW5JbmRleH19KVxuICogICAgICAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICA8L2tlbmRvLWdyaWQ+XG4gKiAgICAgYFxuICogfSlcbiAqXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICAgIHB1YmxpYyBncmlkRGF0YSA9IFt7XG4gKiAgICAgICAgIFwiUHJvZHVjdElEXCI6IDEsXG4gKiAgICAgICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFpXCIsXG4gKiAgICAgICAgIFwiVW5pdFByaWNlXCI6IDE4LjAwMDAsXG4gKiAgICAgICAgIFwiRGlzY29udGludWVkXCI6IGZhbHNlXG4gKiAgICAgICB9LCB7XG4gKiAgICAgICAgIFwiUHJvZHVjdElEXCI6IDIsXG4gKiAgICAgICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFuZ1wiLFxuICogICAgICAgICBcIlVuaXRQcmljZVwiOiAxOS4wMDAwLFxuICogICAgICAgICBcIkRpc2NvbnRpbnVlZFwiOiB0cnVlXG4gKiAgICAgICB9XG4gKiAgICAgXTtcbiAqIH1cbiAqXG4gKiBgYGBcbiAqL1xubGV0IEhlYWRlclRlbXBsYXRlRGlyZWN0aXZlID0gY2xhc3MgSGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHRlbXBsYXRlUmVmKSB7XG4gICAgICAgIHRoaXMudGVtcGxhdGVSZWYgPSB0ZW1wbGF0ZVJlZjtcbiAgICB9XG59O1xuSGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0dyaWRIZWFkZXJUZW1wbGF0ZV0nXG4gICAgfSksXG4gICAgX19wYXJhbSgwLCBPcHRpb25hbCgpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1RlbXBsYXRlUmVmXSlcbl0sIEhlYWRlclRlbXBsYXRlRGlyZWN0aXZlKTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBjb2x1bW4gZm9vdGVyIGNlbGwgdGVtcGxhdGUgb2YgdGhlIEdyaWRcbiAqIChbbW9yZSBpbmZvcm1hdGlvbiBhbmQgZXhhbXBsZV0oeyUgc2x1ZyB0ZW1wbGF0ZXNfY29sdW1uc19ncmlkICV9I3RvYy1mb290ZXItdGVtcGxhdGUpKS5cbiAqIEhlbHBzIHRvIGN1c3RvbWl6ZSB0aGUgdGFibGUgZm9vdGVyIGNlbGwgZm9yIHRoZSBjb2x1bW4uXG4gKiBUbyBkZWZpbmUgYSBmb290ZXIgdGVtcGxhdGUsIG5lc3QgYW4gYDxuZy10ZW1wbGF0ZT5gIHRhZyB3aXRoIHRoZVxuICogW2tlbmRvR3JpZEZvb3RlclRlbXBsYXRlXSh7JSBzbHVnIGFwaV9ncmlkX2Zvb3RlcnRlbXBsYXRlZGlyZWN0aXZlICV9KSBkaXJlY3RpdmUgaW5zaWRlIHRoZSBgPGtlbmRvLWdyaWQtY29sdW1uPmAgdGFnLlxuICpcbiAqIFRoZSB0ZW1wbGF0ZSBjb250ZXh0IGlzIHNldCB0byB0aGUgY3VycmVudCBjb2x1bW4gYW5kIHRoZSBmb2xsb3dpbmcgYWRkaXRpb25hbCBmaWVsZHMgYXJlIHBhc3NlZDpcbiAqICogYGNvbHVtbmAmbWRhc2g7RGVmaW5lcyBhbiBpbnN0YW5jZSBvZiB0aGUgW0NvbHVtbkNvbXBvbmVudF0oeyUgc2x1ZyBhcGlfZ3JpZF9jb2x1bW5jb21wb25lbnQgJX0pIG9wdGlvbi5cbiAqICogYGNvbHVtbkluZGV4YCZtZGFzaDtEZWZpbmVzIHRoZSBjdXJyZW50IGNvbHVtbiBpbmRleC5cbiAqXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBob3cgdG8gZGlzcGxheSBhZ2dyZWdhdGVzIGluIHRoZSBmb290ZXIgb2YgdGhlIEdyaWQsXG4gKiByZWZlciB0byB0aGUgYXJ0aWNsZSBvbiBbYWdncmVnYXRlc10oeyUgc2x1ZyBncm91cGFibGVfZ3JpZF93aXRoX2FnZ3JlZ2F0ZXMgJX0pLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0cy1wcmV2aWV3XG4gKlxuICogX0BDb21wb25lbnQoe1xuICogICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgICB0ZW1wbGF0ZTogYFxuICogICAgICAgICA8a2VuZG8tZ3JpZCBbZGF0YV09XCJncmlkRGF0YVwiIHNjcm9sbGFibGU9XCJub25lXCI+XG4gKiAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJQcm9kdWN0TmFtZVwiPlxuICogICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRGb290ZXJUZW1wbGF0ZSBsZXQtY29sdW1uIGxldC1jb2x1bW5JbmRleD1cImNvbHVtbkluZGV4XCI+XG4gKiAgICAgICAgICAgICAgICAgICB7e2NvbHVtbi5maWVsZH19KHt7Y29sdW1uSW5kZXh9fSlcbiAqICAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJVbml0UHJpY2VcIj5cbiAqICAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkRm9vdGVyVGVtcGxhdGUgbGV0LWNvbHVtbiBsZXQtY29sdW1uSW5kZXg9XCJjb2x1bW5JbmRleFwiPlxuICogICAgICAgICAgICAgICAgICAge3tjb2x1bW4uZmllbGR9fSh7e2NvbHVtbkluZGV4fX0pXG4gKiAgICAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgIDwva2VuZG8tZ3JpZD5cbiAqICAgICBgXG4gKiB9KVxuICpcbiAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKiAgICAgcHVibGljIGdyaWREYXRhID0gW3tcbiAqICAgICAgICAgXCJQcm9kdWN0SURcIjogMSxcbiAqICAgICAgICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYWlcIixcbiAqICAgICAgICAgXCJVbml0UHJpY2VcIjogMTguMDAwMCxcbiAqICAgICAgICAgXCJEaXNjb250aW51ZWRcIjogZmFsc2VcbiAqICAgICAgIH0sIHtcbiAqICAgICAgICAgXCJQcm9kdWN0SURcIjogMixcbiAqICAgICAgICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYW5nXCIsXG4gKiAgICAgICAgIFwiVW5pdFByaWNlXCI6IDE5LjAwMDAsXG4gKiAgICAgICAgIFwiRGlzY29udGludWVkXCI6IHRydWVcbiAqICAgICAgIH1cbiAqICAgICBdO1xuICogfVxuICpcbiAqIGBgYFxuICovXG5sZXQgRm9vdGVyVGVtcGxhdGVEaXJlY3RpdmUgPSBjbGFzcyBGb290ZXJUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IodGVtcGxhdGVSZWYpIHtcbiAgICAgICAgdGhpcy50ZW1wbGF0ZVJlZiA9IHRlbXBsYXRlUmVmO1xuICAgIH1cbn07XG5Gb290ZXJUZW1wbGF0ZURpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZEZvb3RlclRlbXBsYXRlXSdcbiAgICB9KSxcbiAgICBfX3BhcmFtKDAsIE9wdGlvbmFsKCkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbVGVtcGxhdGVSZWZdKVxuXSwgRm9vdGVyVGVtcGxhdGVEaXJlY3RpdmUpO1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgdGVtcGxhdGUgZm9yIHRoZSBjb2x1bW4gbWVudSBpbiB0aGUgR3JpZC4gUHJvdmlkZXMgYW4gb3B0aW9uIGZvclxuICogY3VzdG9taXppbmcgdGhlIGNvbnRlbnQgb2YgdGhlIGNvbHVtbiBtZW51IGZvciBhbGwgb3IgZm9yIHNwZWNpZmljIGNvbHVtbnMuXG4gKiBUbyBkZWZpbmUgdGhlIGNvbnRlbnQgdGVtcGxhdGUsIG5lc3QgYW4gYDxuZy10ZW1wbGF0ZT5gIHRhZyB3aXRoIHRoZVxuICogYGtlbmRvR3JpZENvbHVtbk1lbnVUZW1wbGF0ZWAgZGlyZWN0aXZlIGluc2lkZSB0aGUgYGtlbmRvLWdyaWRgIG9yIHRoZSBgPGtlbmRvLWdyaWQtY29sdW1uPmAgY29tcG9uZW50LlxuICpcbiAqIFRoZSB0ZW1wbGF0ZSBjb250ZXh0IGlzIHBhc3NlcyB0aHJvdWdoIHRoZSBmb2xsb3dpbmcgZmllbGRzOlxuICogLSBgc2VydmljZWAmbWRhc2g7UmVwcmVzZW50cyB0aGUgW0NvbHVtbk1lbnVTZXJ2aWNlXSh7JSBzbHVnIGFwaV9ncmlkX2NvbHVtbm1lbnVzZXJ2aWNlICV9KS5cbiAqIC0gYGNvbHVtbmAmbWRhc2g7UmVwcmVzZW50cyB0aGUgR3JpZCBjb2x1bW4uXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgICA8a2VuZG8tZ3JpZCBba2VuZG9HcmlkQmluZGluZ109XCJkYXRhXCIgW3NvcnRhYmxlXT1cInRydWVcIiBbY29sdW1uTWVudV09XCJ0cnVlXCI+XG4gKiAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkQ29sdW1uTWVudVRlbXBsYXRlIGxldC1zZXJ2aWNlPVwic2VydmljZVwiPlxuICogICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbm1lbnUtc29ydCBbc2VydmljZV09XCJzZXJ2aWNlXCI+XG4gKiAgICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtc29ydD5cbiAqICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJGaWVsZDFcIiBbd2lkdGhdPVwiMTAwXCI+XG4gKiAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZENvbHVtbk1lbnVUZW1wbGF0ZSBsZXQtc2VydmljZT1cInNlcnZpY2VcIj5cbiAqICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1ubWVudS1sb2NrIFtzZXJ2aWNlXT1cInNlcnZpY2VcIj5cbiAqICAgICAgICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtbG9jaz5cbiAqICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1ubWVudS1zb3J0IFtzZXJ2aWNlXT1cInNlcnZpY2VcIj5cbiAqICAgICAgICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtc29ydD5cbiAqICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIkZpZWxkMlwiIFt3aWR0aF09XCIxMDBcIj48L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgPC9rZW5kby1ncmlkPlxuICogICAgIGBcbiAqIH0pXG4gKlxuICogY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAqICAgcHVibGljIGRhdGE6IGFueVtdID0gW3sgRmllbGQxOiAnRm9vJywgRmllbGQyOiAnQmFyJyB9LCB7IEZpZWxkMTogJ0ZvbzEnLCBGaWVsZDI6ICdCYXIxJyB9XTtcbiAqIH1cbiAqXG4gKiBgYGBcbiAqL1xubGV0IENvbHVtbk1lbnVUZW1wbGF0ZURpcmVjdGl2ZSA9IGNsYXNzIENvbHVtbk1lbnVUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IodGVtcGxhdGVSZWYpIHtcbiAgICAgICAgdGhpcy50ZW1wbGF0ZVJlZiA9IHRlbXBsYXRlUmVmO1xuICAgIH1cbn07XG5Db2x1bW5NZW51VGVtcGxhdGVEaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0dyaWRDb2x1bW5NZW51VGVtcGxhdGVdJ1xuICAgIH0pLFxuICAgIF9fcGFyYW0oMCwgT3B0aW9uYWwoKSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtUZW1wbGF0ZVJlZl0pXG5dLCBDb2x1bW5NZW51VGVtcGxhdGVEaXJlY3RpdmUpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgaXNTcGFuQ29sdW1uID0gY29sdW1uID0+IGNvbHVtbi5pc1NwYW5Db2x1bW47XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgaXNDaGVja2JveENvbHVtbiA9IGNvbHVtbiA9PiBjb2x1bW4uaXNDaGVja2JveENvbHVtbjtcbmNvbnN0IGlzQ29sdW1uQ29udGFpbmVyID0gY29sdW1uID0+IGNvbHVtbi5pc0NvbHVtbkdyb3VwIHx8IGlzU3BhbkNvbHVtbihjb2x1bW4pO1xuLyoqXG4gKiBUaGUgYmFzZSBjbGFzcyBmb3IgdGhlIGNvbHVtbiBjb21wb25lbnRzIG9mIHRoZSBHcmlkLlxuICovXG5jbGFzcyBDb2x1bW5CYXNlJDEge1xuICAgIGNvbnN0cnVjdG9yKHBhcmVudCkge1xuICAgICAgICB0aGlzLnBhcmVudCA9IHBhcmVudDtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMubWF0Y2hlc01lZGlhID0gdHJ1ZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBjb2x1bW4gaW5kZXggYWZ0ZXIgcmVvcmRlcmluZy5cbiAgICAgICAgICpcbiAgICAgICAgICogPiBgb3JkZXJJbmRleGAgaXMgYSByZWFkLW9ubHkgcHJvcGVydHkuIFNldHRpbmcgdGhpcyBmaWVsZCBkb2VzIG5vdCBhZmZlY3QgY29sdW1uIG9yZGVyLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5vcmRlckluZGV4ID0gMDtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuaXNDb2x1bW5Hcm91cCA9IGZhbHNlO1xuICAgICAgICAvKipcbiAgICAgICAgICogQGhpZGRlblxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5pc1NwYW5Db2x1bW4gPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEluZGljYXRlcyB3aGV0aGVyIHRoZSBjb2x1bW4gaXMgcmVzaXphYmxlLlxuICAgICAgICAgKiBAZGVmYXVsdCB0cnVlXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnJlc2l6YWJsZSA9IHRydWU7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJbmRpY2F0ZXMgd2hldGhlciB0aGUgY29sdW1uIGlzIHJlb3JkZXJhYmxlLlxuICAgICAgICAgKiBAZGVmYXVsdCB0cnVlXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnJlb3JkZXJhYmxlID0gdHJ1ZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSB3aWR0aCAoaW4gcGl4ZWxzKSBiZWxvdyB3aGljaCB0aGUgdXNlciBpcyBub3QgYWJsZSB0byByZXNpemUgdGhlIGNvbHVtbiBieSB1c2luZyB0aGUgVUkuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm1pblJlc2l6YWJsZVdpZHRoID0gMTA7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUb2dnbGVzIHRoZSBsb2NrZWQgKGZyb3plbikgc3RhdGUgb2YgdGhlIGNvbHVtbnMgKFttb3JlIGluZm9ybWF0aW9uIGFuZCBleGFtcGxlXSh7JSBzbHVnIGxvY2tlZF9jb2x1bW5zX2dyaWQgJX0pKS5cbiAgICAgICAgICpcbiAgICAgICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgICAgICpcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgdHNcbiAgICAgICAgICogX0BDb21wb25lbnQoe1xuICAgICAgICAgKiAgICBzZWxlY3RvcjogJ215LWFwcCcsXG4gICAgICAgICAqICAgIHRlbXBsYXRlOiBgXG4gICAgICAgICAqICAgICAgICA8a2VuZG8tZ3JpZCBbZGF0YV09XCJncmlkRGF0YVwiIFtzY3JvbGxhYmxlXT1cInNjcm9sbGFibGVcIiBzdHlsZT1cImhlaWdodDogMjAwcHhcIj5cbiAgICAgICAgICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdElEXCIgdGl0bGU9XCJQcm9kdWN0IElEXCIgd2lkdGg9XCIxMjBcIiBbbG9ja2VkXT1cInRydWVcIj5cbiAgICAgICAgICogICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAgICAgICAgICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIiB0aXRsZT1cIlByb2R1Y3QgTmFtZVwiIHdpZHRoPVwiMjAwXCI+XG4gICAgICAgICAqICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gICAgICAgICAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIlVuaXRQcmljZVwiIHRpdGxlPVwiVW5pdCBQcmljZVwiIHdpZHRoPVwiMjMwXCI+XG4gICAgICAgICAqICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gICAgICAgICAqICAgICAgICA8L2tlbmRvLWdyaWQ+XG4gICAgICAgICAqICAgIGBcbiAgICAgICAgICogfSlcbiAgICAgICAgICpcbiAgICAgICAgICogY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAgICAgICAgICogICAgcHVibGljIGdyaWREYXRhOiBhbnlbXTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgICAqICAgICAgICB0aGlzLmdyaWREYXRhID0gcHJvZHVjdHM7XG4gICAgICAgICAqICAgIH1cbiAgICAgICAgICogfVxuICAgICAgICAgKlxuICAgICAgICAgKiBjb25zdCBwcm9kdWN0cyA9IFt7XG4gICAgICAgICAqICAgIFwiUHJvZHVjdElEXCI6IDEsXG4gICAgICAgICAqICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFpXCIsXG4gICAgICAgICAqICAgIFwiVW5pdFByaWNlXCI6IDE4LjAwMDAsXG4gICAgICAgICAqICAgIFwiRGlzY29udGludWVkXCI6IHRydWVcbiAgICAgICAgICogIH0sIHtcbiAgICAgICAgICogICAgXCJQcm9kdWN0SURcIjogMixcbiAgICAgICAgICogICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYW5nXCIsXG4gICAgICAgICAqICAgIFwiVW5pdFByaWNlXCI6IDE5LjAwMDAsXG4gICAgICAgICAqICAgIFwiRGlzY29udGludWVkXCI6IGZhbHNlXG4gICAgICAgICAqICB9XG4gICAgICAgICAqIF07XG4gICAgICAgICAqXG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5sb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERldGVybWluZXMgd2hldGhlciB0aGUgY29sdW1uIHdpbGwgYmUgYWx3YXlzIHZpc2libGUgd2hlbiBzY3JvbGxpbmcgdGhlIEdyaWQgaG9yaXpvbnRhbGx5LlxuICAgICAgICAgKlxuICAgICAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zdGlja3kgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNwZWNpZmllcyBpZiB0aGUgY29sdW1uIGNhbiBiZSBsb2NrZWQgb3IgdW5sb2NrZWQgZnJvbSB0aGUgY29sdW1uIG1lbnUgb3IgYnkgcmVvcmRlcmluZyB0aGUgY29sdW1ucy5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMubG9ja2FibGUgPSB0cnVlO1xuICAgICAgICAvKipcbiAgICAgICAgICogU3BlY2lmaWVzIGlmIHRoZSBjb2x1bW4gY2FuIGJlIHN0dWNrIG9yIHVuc3R1Y2sgZnJvbSB0aGUgY29sdW1uIG1lbnUuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnN0aWNrYWJsZSA9IHRydWU7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTcGVjaWZpZXMgaWYgdGhlIGNvbHVtbiBtZW51IHdpbGwgYmUgc2hvd24gZm9yIHRoZSBjb2x1bW4uXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNvbHVtbk1lbnUgPSB0cnVlO1xuICAgICAgICAvKipcbiAgICAgICAgICogU3BlY2lmaWVzIGlmIHRoZSBjb2x1bW4gd2lsbCBiZSBpbmNsdWRlZCBpbiB0aGUgY29sdW1uLWNob29zZXIgbGlzdC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuaW5jbHVkZUluQ2hvb3NlciA9IHRydWU7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAaGlkZGVuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmhlYWRlclRlbXBsYXRlcyA9IG5ldyBRdWVyeUxpc3QoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuY29sdW1uTWVudVRlbXBsYXRlcyA9IG5ldyBRdWVyeUxpc3QoKTtcbiAgICAgICAgaWYgKHBhcmVudCAmJiAhaXNDb2x1bW5Db250YWluZXIocGFyZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb2x1bW5zIGNhbiBiZSBuZXN0ZWQgb25seSBpbnNpZGUgQ29sdW1uR3JvdXBDb21wb25lbnQnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgd2lkdGggb2YgdGhlIGNvbHVtbiAoaW4gcGl4ZWxzKS5cbiAgICAgKi9cbiAgICBzZXQgd2lkdGgodmFsdWUpIHtcbiAgICAgICAgdGhpcy5fd2lkdGggPSBwYXJzZUludCh2YWx1ZSwgMTApO1xuICAgIH1cbiAgICBnZXQgd2lkdGgoKSB7IHJldHVybiB0aGlzLl93aWR0aDsgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgbGV2ZWwoKSB7XG4gICAgICAgIGlmICh0aGlzLnBhcmVudCAmJiBpc1NwYW5Db2x1bW4odGhpcy5wYXJlbnQpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wYXJlbnQubGV2ZWw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucGFyZW50ID8gdGhpcy5wYXJlbnQubGV2ZWwgKyAxIDogMDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBpc0xvY2tlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyZW50ID8gdGhpcy5wYXJlbnQuaXNMb2NrZWQgOiB0aGlzLmxvY2tlZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBjb2xzcGFuKCkge1xuICAgICAgICByZXR1cm4gMTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJvd3NwYW4odG90YWxDb2x1bW5MZXZlbHMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGV2ZWwgPCB0b3RhbENvbHVtbkxldmVscyA/ICh0b3RhbENvbHVtbkxldmVscyAtIHRoaXMubGV2ZWwpICsgMSA6IDE7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgaGVhZGVyVGVtcGxhdGVSZWYoKSB7XG4gICAgICAgIGNvbnN0IHRlbXBsYXRlID0gdGhpcy5oZWFkZXJUZW1wbGF0ZXMuZmlyc3Q7XG4gICAgICAgIHJldHVybiB0ZW1wbGF0ZSA/IHRlbXBsYXRlLnRlbXBsYXRlUmVmIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGZvb3RlclRlbXBsYXRlUmVmKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mb290ZXJUZW1wbGF0ZSA/IHRoaXMuZm9vdGVyVGVtcGxhdGUudGVtcGxhdGVSZWYgOiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgY29sdW1uTWVudVRlbXBsYXRlUmVmKCkge1xuICAgICAgICBjb25zdCB0ZW1wbGF0ZSA9IHRoaXMuY29sdW1uTWVudVRlbXBsYXRlcy5maXJzdDtcbiAgICAgICAgcmV0dXJuIHRlbXBsYXRlID8gdGVtcGxhdGUudGVtcGxhdGVSZWYgOiBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGRpc3BsYXlUaXRsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGl0bGU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgaXNWaXNpYmxlKCkge1xuICAgICAgICByZXR1cm4gIXRoaXMuaGlkZGVuICYmIHRoaXMubWF0Y2hlc01lZGlhO1xuICAgIH1cbn1cbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBDb2x1bW5CYXNlJDEucHJvdG90eXBlLCBcInJlc2l6YWJsZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIENvbHVtbkJhc2UkMS5wcm90b3R5cGUsIFwicmVvcmRlcmFibGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIENvbHVtbkJhc2UkMS5wcm90b3R5cGUsIFwibWluUmVzaXphYmxlV2lkdGhcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIENvbHVtbkJhc2UkMS5wcm90b3R5cGUsIFwidGl0bGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlciksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtOdW1iZXJdKVxuXSwgQ29sdW1uQmFzZSQxLnByb3RvdHlwZSwgXCJ3aWR0aFwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBDb2x1bW5CYXNlJDEucHJvdG90eXBlLCBcImF1dG9TaXplXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgQ29sdW1uQmFzZSQxLnByb3RvdHlwZSwgXCJsb2NrZWRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBDb2x1bW5CYXNlJDEucHJvdG90eXBlLCBcInN0aWNreVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIENvbHVtbkJhc2UkMS5wcm90b3R5cGUsIFwiaGlkZGVuXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBDb2x1bW5CYXNlJDEucHJvdG90eXBlLCBcIm1lZGlhXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgQ29sdW1uQmFzZSQxLnByb3RvdHlwZSwgXCJsb2NrYWJsZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIENvbHVtbkJhc2UkMS5wcm90b3R5cGUsIFwic3RpY2thYmxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgQ29sdW1uQmFzZSQxLnByb3RvdHlwZSwgXCJjb2x1bW5NZW51XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgQ29sdW1uQmFzZSQxLnByb3RvdHlwZSwgXCJpbmNsdWRlSW5DaG9vc2VyXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBDb2x1bW5CYXNlJDEucHJvdG90eXBlLCBcInN0eWxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBDb2x1bW5CYXNlJDEucHJvdG90eXBlLCBcImhlYWRlclN0eWxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBDb2x1bW5CYXNlJDEucHJvdG90eXBlLCBcImZpbHRlclN0eWxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBDb2x1bW5CYXNlJDEucHJvdG90eXBlLCBcImZvb3RlclN0eWxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgnY2xhc3MnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgQ29sdW1uQmFzZSQxLnByb3RvdHlwZSwgXCJjc3NDbGFzc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgQ29sdW1uQmFzZSQxLnByb3RvdHlwZSwgXCJoZWFkZXJDbGFzc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgQ29sdW1uQmFzZSQxLnByb3RvdHlwZSwgXCJmaWx0ZXJDbGFzc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgQ29sdW1uQmFzZSQxLnByb3RvdHlwZSwgXCJmb290ZXJDbGFzc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgQ29udGVudENoaWxkcmVuKEhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLCB7IGRlc2NlbmRhbnRzOiBmYWxzZSB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgUXVlcnlMaXN0KVxuXSwgQ29sdW1uQmFzZSQxLnByb3RvdHlwZSwgXCJoZWFkZXJUZW1wbGF0ZXNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZChGb290ZXJUZW1wbGF0ZURpcmVjdGl2ZSwgeyBzdGF0aWM6IGZhbHNlIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBGb290ZXJUZW1wbGF0ZURpcmVjdGl2ZSlcbl0sIENvbHVtbkJhc2UkMS5wcm90b3R5cGUsIFwiZm9vdGVyVGVtcGxhdGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZHJlbihDb2x1bW5NZW51VGVtcGxhdGVEaXJlY3RpdmUpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBRdWVyeUxpc3QpXG5dLCBDb2x1bW5CYXNlJDEucHJvdG90eXBlLCBcImNvbHVtbk1lbnVUZW1wbGF0ZXNcIiwgdm9pZCAwKTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBmaWx0ZXItY2VsbCB0ZW1wbGF0ZSAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGJ1aWx0aW5maWx0ZXJ0ZW1wbGF0ZV9ncmlkICV9I3RvYy1jdXN0b21pemluZy1maWx0ZXItcm93cykpLlxuICovXG5sZXQgRmlsdGVyQ2VsbFRlbXBsYXRlRGlyZWN0aXZlID0gY2xhc3MgRmlsdGVyQ2VsbFRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZVJlZikge1xuICAgICAgICB0aGlzLnRlbXBsYXRlUmVmID0gdGVtcGxhdGVSZWY7XG4gICAgfVxufTtcbkZpbHRlckNlbGxUZW1wbGF0ZURpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZEZpbHRlckNlbGxUZW1wbGF0ZV0nXG4gICAgfSksXG4gICAgX19wYXJhbSgwLCBPcHRpb25hbCgpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1RlbXBsYXRlUmVmXSlcbl0sIEZpbHRlckNlbGxUZW1wbGF0ZURpcmVjdGl2ZSk7XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgZmlsdGVyLW1lbnUgdGVtcGxhdGVcbiAqIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgYnVpbHRpbmZpbHRlcnRlbXBsYXRlX2dyaWQgJX0jdG9jLWN1c3RvbWl6aW5nLWZpbHRlci1tZW51cykpLlxuICovXG5sZXQgRmlsdGVyTWVudVRlbXBsYXRlRGlyZWN0aXZlID0gY2xhc3MgRmlsdGVyTWVudVRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZVJlZikge1xuICAgICAgICB0aGlzLnRlbXBsYXRlUmVmID0gdGVtcGxhdGVSZWY7XG4gICAgfVxufTtcbkZpbHRlck1lbnVUZW1wbGF0ZURpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZEZpbHRlck1lbnVUZW1wbGF0ZV0nXG4gICAgfSksXG4gICAgX19wYXJhbSgwLCBPcHRpb25hbCgpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1RlbXBsYXRlUmVmXSlcbl0sIEZpbHRlck1lbnVUZW1wbGF0ZURpcmVjdGl2ZSk7XG5cbnZhciBDb2x1bW5Db21wb25lbnRfMTtcbi8qKlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBpc0NvbHVtbkNvbXBvbmVudChjb2x1bW4pIHtcbiAgICByZXR1cm4gaXNQcmVzZW50KGNvbHVtbi5maWVsZCk7XG59XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGNvbHVtbnMgb2YgdGhlIFtBbmd1bGFyIERhdGEgR3JpZF0oeyUgc2x1ZyBvdmVydmlld19ncmlkICV9KS5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHMtcHJldmlld1xuICpcbiAqIF9AQ29tcG9uZW50KHtcbiAqICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgICAgPGtlbmRvLWdyaWQgW2RhdGFdPVwiZ3JpZERhdGFcIj5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIlByb2R1Y3RJRFwiIHRpdGxlPVwiUHJvZHVjdCBJRFwiIHdpZHRoPVwiMTIwXCI+XG4gKiAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIiB0aXRsZT1cIlByb2R1Y3QgTmFtZVwiPlxuICogICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIlVuaXRQcmljZVwiIHRpdGxlPVwiVW5pdCBQcmljZVwiIHdpZHRoPVwiMjMwXCI+XG4gKiAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiRGlzY29udGludWVkXCIgd2lkdGg9XCIxMjBcIj5cbiAqICAgICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkQ2VsbFRlbXBsYXRlIGxldC1kYXRhSXRlbT5cbiAqICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIFtjaGVja2VkXT1cImRhdGFJdGVtLkRpc2NvbnRpbnVlZFwiIGRpc2FibGVkLz5cbiAqICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgICA8L2tlbmRvLWdyaWQ+XG4gKiAgICBgXG4gKiB9KVxuICpcbiAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKiAgICBwdWJsaWMgZ3JpZERhdGE6IGFueVtdO1xuICpcbiAqICAgIGNvbnN0cnVjdG9yKCkge1xuICogICAgICAgIHRoaXMuZ3JpZERhdGEgPSBwcm9kdWN0cztcbiAqICAgIH1cbiAqIH1cbiAqXG4gKiBjb25zdCBwcm9kdWN0cyA9IFt7XG4gKiAgICBcIlByb2R1Y3RJRFwiOiAxLFxuICogICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYWlcIixcbiAqICAgIFwiVW5pdFByaWNlXCI6IDE4LjAwMDAsXG4gKiAgICBcIkRpc2NvbnRpbnVlZFwiOiB0cnVlXG4gKiAgfSwge1xuICogICAgXCJQcm9kdWN0SURcIjogMixcbiAqICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFuZ1wiLFxuICogICAgXCJVbml0UHJpY2VcIjogMTkuMDAwMCxcbiAqICAgIFwiRGlzY29udGludWVkXCI6IGZhbHNlXG4gKiAgfVxuICogXTtcbiAqXG4gKiBgYGBcbiAqL1xubGV0IENvbHVtbkNvbXBvbmVudCA9IENvbHVtbkNvbXBvbmVudF8xID0gY2xhc3MgQ29sdW1uQ29tcG9uZW50IGV4dGVuZHMgQ29sdW1uQmFzZSQxIHtcbiAgICBjb25zdHJ1Y3RvcihwYXJlbnQpIHtcbiAgICAgICAgc3VwZXIocGFyZW50KTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEFsbG93cyB0aGUgY29sdW1uIGhlYWRlcnMgdG8gYmUgY2xpY2tlZCBhbmQgdGhlIGBzb3J0Q2hhbmdlYCBldmVudCBlbWl0dGVkLlxuICAgICAgICAgKiBZb3UgaGF2ZSB0byBoYW5kbGUgdGhlIGBzb3J0Q2hhbmdlYCBldmVudCB5b3Vyc2VsZiBhbmQgc29ydCB0aGUgZGF0YS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc29ydGFibGUgPSB0cnVlO1xuICAgICAgICAvKipcbiAgICAgICAgICogRGV0ZXJtaW5lcyBpZiB0aGUgY29sdW1uIGNhbiBiZSBkcmFnZ2VkIHRvIHRoZSBncm91cCBwYW5lbC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgYHRydWVgLlxuICAgICAgICAgKiBJZiBzZXQgdG8gYGZhbHNlYCwgeW91IGNhbiBncm91cCB0aGUgY29sdW1ucyBieSB0aGUgY29sdW1uIGZpZWxkIGJ5IHVzaW5nIHRoZSBBUEkgb2YgdGhlIEdyaWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmdyb3VwYWJsZSA9IHRydWU7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZWZpbmVzIHRoZSBlZGl0b3IgdHlwZSAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGVkaXRpbmdfcmVhY3RpdmVfZm9ybXNfZ3JpZCAlfSN0b2Mtc2V0dXApKS5cbiAgICAgICAgICogVXNlZCB3aGVuIHRoZSBjb2x1bW4gZW50ZXJzIHRoZSBlZGl0IG1vZGUuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGB0ZXh0YC5cbiAgICAgICAgICpcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbC1uby1ydW5cbiAgICAgICAgICogPGtlbmRvLWdyaWQ+XG4gICAgICAgICAqICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIlVuaXRQcmljZVwiIGVkaXRvcj1cIm51bWVyaWNcIj5cbiAgICAgICAgICogICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAgICAgICAgICogPC9rZW5kby1ncmlkPlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZWRpdG9yID0gJ3RleHQnO1xuICAgICAgICAvKipcbiAgICAgICAgICogRGVmaW5lcyB0aGUgZmlsdGVyIHR5cGUgdGhhdCBpcyBkaXNwbGF5ZWQgaW5zaWRlIHRoZSBmaWx0ZXIgcm93LiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBgdGV4dGAuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWwtbm8tcnVuXG4gICAgICAgICAqIDxrZW5kby1ncmlkPlxuICAgICAgICAgKiAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJVbml0UHJpY2VcIiBmaWx0ZXI9XCJudW1lcmljXCI+XG4gICAgICAgICAqICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gICAgICAgICAqIDwva2VuZG8tZ3JpZD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmZpbHRlciA9ICd0ZXh0JztcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERlZmluZXMgaWYgYSBmaWx0ZXIgVUkgd2lsbCBiZSBkaXNwbGF5ZWQgZm9yIHRoaXMgY29sdW1uLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBgdHJ1ZWAuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWwtbm8tcnVuXG4gICAgICAgICAqIDxrZW5kby1ncmlkPlxuICAgICAgICAgKiAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJVbml0UHJpY2VcIiBbZmlsdGVyYWJsZV09XCJmYWxzZVwiPlxuICAgICAgICAgKiAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICAgICAgICAgKiA8L2tlbmRvLWdyaWQ+XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5maWx0ZXJhYmxlID0gdHJ1ZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERlZmluZXMgd2hldGhlciB0aGUgY29sdW1uIGlzIGVkaXRhYmxlLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBgdHJ1ZWAuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWwtbm8tcnVuXG4gICAgICAgICAqIDxrZW5kby1ncmlkPlxuICAgICAgICAgKiAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJVbml0UHJpY2VcIiBbZWRpdGFibGVdPVwiZmFsc2VcIj5cbiAgICAgICAgICogICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAgICAgICAgICogPC9rZW5kby1ncmlkPlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZWRpdGFibGUgPSB0cnVlO1xuICAgIH1cbiAgICBnZXQgdGVtcGxhdGVSZWYoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRlbXBsYXRlID8gdGhpcy50ZW1wbGF0ZS50ZW1wbGF0ZVJlZiA6IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZ2V0IGdyb3VwSGVhZGVyVGVtcGxhdGVSZWYoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyb3VwSGVhZGVyVGVtcGxhdGUgPyB0aGlzLmdyb3VwSGVhZGVyVGVtcGxhdGUudGVtcGxhdGVSZWYgOiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGdldCBncm91cEhlYWRlckNvbHVtblRlbXBsYXRlUmVmKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ncm91cEhlYWRlckNvbHVtblRlbXBsYXRlID8gdGhpcy5ncm91cEhlYWRlckNvbHVtblRlbXBsYXRlLnRlbXBsYXRlUmVmIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgICBnZXQgZ3JvdXBGb290ZXJUZW1wbGF0ZVJlZigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3JvdXBGb290ZXJUZW1wbGF0ZSA/IHRoaXMuZ3JvdXBGb290ZXJUZW1wbGF0ZS50ZW1wbGF0ZVJlZiA6IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZ2V0IGVkaXRUZW1wbGF0ZVJlZigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWRpdFRlbXBsYXRlID8gdGhpcy5lZGl0VGVtcGxhdGUudGVtcGxhdGVSZWYgOiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGdldCBmaWx0ZXJDZWxsVGVtcGxhdGVSZWYoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZpbHRlckNlbGxUZW1wbGF0ZSA/IHRoaXMuZmlsdGVyQ2VsbFRlbXBsYXRlLnRlbXBsYXRlUmVmIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgICBnZXQgZmlsdGVyTWVudVRlbXBsYXRlUmVmKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5maWx0ZXJNZW51VGVtcGxhdGUgPyB0aGlzLmZpbHRlck1lbnVUZW1wbGF0ZS50ZW1wbGF0ZVJlZiA6IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZ2V0IGRpc3BsYXlUaXRsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGl0bGUgPT09IHVuZGVmaW5lZCA/IHRoaXMuZmllbGQgOiB0aGlzLnRpdGxlO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBDb2x1bW5Db21wb25lbnQucHJvdG90eXBlLCBcImZpZWxkXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBDb2x1bW5Db21wb25lbnQucHJvdG90eXBlLCBcImZvcm1hdFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgQ29sdW1uQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzb3J0YWJsZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIENvbHVtbkNvbXBvbmVudC5wcm90b3R5cGUsIFwiZ3JvdXBhYmxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBDb2x1bW5Db21wb25lbnQucHJvdG90eXBlLCBcImVkaXRvclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgQ29sdW1uQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBDb2x1bW5Db21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlcmFibGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBDb2x1bW5Db21wb25lbnQucHJvdG90eXBlLCBcImVkaXRhYmxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBDb250ZW50Q2hpbGQoQ2VsbFRlbXBsYXRlRGlyZWN0aXZlLCB7IHN0YXRpYzogZmFsc2UgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIENlbGxUZW1wbGF0ZURpcmVjdGl2ZSlcbl0sIENvbHVtbkNvbXBvbmVudC5wcm90b3R5cGUsIFwidGVtcGxhdGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZChHcm91cEhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLCB7IHN0YXRpYzogZmFsc2UgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEdyb3VwSGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUpXG5dLCBDb2x1bW5Db21wb25lbnQucHJvdG90eXBlLCBcImdyb3VwSGVhZGVyVGVtcGxhdGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZChHcm91cEhlYWRlckNvbHVtblRlbXBsYXRlRGlyZWN0aXZlLCB7IHN0YXRpYzogZmFsc2UgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEdyb3VwSGVhZGVyQ29sdW1uVGVtcGxhdGVEaXJlY3RpdmUpXG5dLCBDb2x1bW5Db21wb25lbnQucHJvdG90eXBlLCBcImdyb3VwSGVhZGVyQ29sdW1uVGVtcGxhdGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZChHcm91cEZvb3RlclRlbXBsYXRlRGlyZWN0aXZlLCB7IHN0YXRpYzogZmFsc2UgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEdyb3VwRm9vdGVyVGVtcGxhdGVEaXJlY3RpdmUpXG5dLCBDb2x1bW5Db21wb25lbnQucHJvdG90eXBlLCBcImdyb3VwRm9vdGVyVGVtcGxhdGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZChFZGl0VGVtcGxhdGVEaXJlY3RpdmUsIHsgc3RhdGljOiBmYWxzZSB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRWRpdFRlbXBsYXRlRGlyZWN0aXZlKVxuXSwgQ29sdW1uQ29tcG9uZW50LnByb3RvdHlwZSwgXCJlZGl0VGVtcGxhdGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZChGaWx0ZXJDZWxsVGVtcGxhdGVEaXJlY3RpdmUsIHsgc3RhdGljOiBmYWxzZSB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRmlsdGVyQ2VsbFRlbXBsYXRlRGlyZWN0aXZlKVxuXSwgQ29sdW1uQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJDZWxsVGVtcGxhdGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZChGaWx0ZXJNZW51VGVtcGxhdGVEaXJlY3RpdmUsIHsgc3RhdGljOiBmYWxzZSB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRmlsdGVyTWVudVRlbXBsYXRlRGlyZWN0aXZlKVxuXSwgQ29sdW1uQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJNZW51VGVtcGxhdGVcIiwgdm9pZCAwKTtcbkNvbHVtbkNvbXBvbmVudCA9IENvbHVtbkNvbXBvbmVudF8xID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcHJvdmlkZTogQ29sdW1uQmFzZSQxLFxuICAgICAgICAgICAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IENvbHVtbkNvbXBvbmVudF8xKVxuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWdyaWQtY29sdW1uJyxcbiAgICAgICAgdGVtcGxhdGU6IGBgXG4gICAgfSksXG4gICAgX19wYXJhbSgwLCBTa2lwU2VsZigpKSwgX19wYXJhbSgwLCBIb3N0KCkpLCBfX3BhcmFtKDAsIE9wdGlvbmFsKCkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbQ29sdW1uQmFzZSQxXSlcbl0sIENvbHVtbkNvbXBvbmVudCk7XG5cbnZhciBTcGFuQ29sdW1uQ29tcG9uZW50XzE7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gaXNTcGFuQ29sdW1uQ29tcG9uZW50KGNvbHVtbikge1xuICAgIHJldHVybiBjb2x1bW4uaXNTcGFuQ29sdW1uO1xufVxuLyoqXG4gKiBSZXByZXNlbnRzIGEgY29sdW1uIHdoaWNoIGNhbiBiZSBzcGFubmVkIG92ZXIgbXVsdGlwbGUgZGF0YSBjZWxscyB3aGlsZSB0aGUgaW5kaXZpZHVhbFxuICogaGVhZGVyIGFuZCBmb290ZXIgY2VsbHMgYXJlIHJldGFpbmVkIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgc3Bhbm5lZF9jb2x1bW5zX2dyaWQgJX0pKS5cbiAqIEVuYWJsZXMgeW91IHRvIGFjaGlldmUgbW9yZSBmbGV4aWJsZSBsYXlvdXQgd2hpbGUga2VlcGluZyB0aGUgYnVpbHQtaW4gVUkgZWxlbWVudCBmb3JcbiAqIFtzb3J0aW5nXSh7JSBzbHVnIHNvcnRpbmdfZ3JpZCAlfSksIFtmaWx0ZXJpbmddKHslIHNsdWcgZmlsdGVyaW5nX2dyaWQgJX0pLCBhbmRcbiAqIFtncm91cGluZ10oeyUgc2x1ZyBncm91cGluZ2Jhc2ljc19ncmlkICV9KS4gV3JhcCB0aGUgY29sdW1ucyB0aGF0IHdpbGwgYmVcbiAqIG1lcmdlZCBpbnNpZGUgdGhlIGA8a2VuZG8tZ3JpZC1zcGFuLWNvbHVtbj5gIHRhZy5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHMtcHJldmlld1xuICpcbiAqIF9AQ29tcG9uZW50KHtcbiAqICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgICAgPGtlbmRvLWdyaWRcbiAqICAgICAgICAgICAgICBbc29ydGFibGVdPVwidHJ1ZVwiXG4gKiAgICAgICAgICAgICAgW2ZpbHRlcmFibGVdPVwidHJ1ZVwiXG4gKiAgICAgICAgICAgICAgW2tlbmRvR3JpZEJpbmRpbmddPVwicHJvZHVjdHNcIj5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIlByb2R1Y3RJRFwiIHRpdGxlPVwiUHJvZHVjdCBJRFwiIHdpZHRoPVwiMTIwXCI+XG4gKiAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtc3Bhbi1jb2x1bW4+XG4gKiAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIiB0aXRsZT1cIlByb2R1Y3QgTmFtZVwiPlxuICogICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiVW5pdFByaWNlXCIgdGl0bGU9XCJVbml0IFByaWNlXCIgZmlsdGVyPVwibnVtZXJpY1wiIHdpZHRoPVwiMTgwXCIgZm9ybWF0PVwiezA6Y31cIj5cbiAqICAgICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgPC9rZW5kby1ncmlkLXNwYW4tY29sdW1uPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiRGlzY29udGludWVkXCIgd2lkdGg9XCIxMjBcIiBmaWx0ZXI9XCJib29sZWFuXCI+XG4gKiAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZENlbGxUZW1wbGF0ZSBsZXQtZGF0YUl0ZW0+XG4gKiAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBbY2hlY2tlZF09XCJkYXRhSXRlbS5EaXNjb250aW51ZWRcIiBkaXNhYmxlZC8+XG4gKiAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgPC9rZW5kby1ncmlkPlxuICogICAgYFxuICogfSlcbiAqXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICBwdWJsaWMgcHJvZHVjdHMgPSBbe1xuICogICAgICBcIlByb2R1Y3RJRFwiOiAxLFxuICogICAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhaVwiLFxuICogICAgICBcIlVuaXRQcmljZVwiOiAxOC4wMDAwLFxuICogICAgICBcIkRpc2NvbnRpbnVlZFwiOiB0cnVlXG4gKiAgICB9LCB7XG4gKiAgICAgIFwiUHJvZHVjdElEXCI6IDIsXG4gKiAgICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFuZ1wiLFxuICogICAgICBcIlVuaXRQcmljZVwiOiAxOS4wMDAwLFxuICogICAgICBcIkRpc2NvbnRpbnVlZFwiOiBmYWxzZVxuICogICAgfVxuICogICBdO1xuICogfVxuICpcbiAqIGBgYFxuICpcbiAqIEJ5IGRlZmF1bHQsIHRoZSBkYXRhIGNlbGwgZGlzcGxheXMgdGhlIGRhdGEgZm9yIHRoZSBzcGVjaWZpZWQgZmllbGRzLiBUbyBmdXJ0aGVyIGN1c3RvbWl6ZVxuICogdGhlIHNwYW4tY29sdW1uIGZ1bmN0aW9uYWxpdHksIHVzZSBhIFtjZWxsIHRlbXBsYXRlXSh7JSBzbHVnIGFwaV9ncmlkX2NlbGx0ZW1wbGF0ZWRpcmVjdGl2ZSAlfSkuXG4gKlxuICogYGBgaHRtbC1uby1ydW5cbiAqIDxrZW5kby1ncmlkLXNwYW4tY29sdW1uPlxuICogIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cImZpZWxkMVwiIHRpdGxlPVwiRmllbGQgMVwiPjwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiZmllbGQyXCIgdGl0bGU9XCJGaWVsZCAyXCI+PC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRDZWxsVGVtcGxhdGUgbGV0LWRhdGFJdGVtPlxuICogICAgICAgIDxoNT57eyBkYXRhSXRlbS5maWVsZDEgfX08L2g1PlxuICogICAgICAgIDxwPnt7IGRhdGFJdGVtLmZpZWxkMiB9fTwvcD5cbiAqICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgPC9rZW5kby1ncmlkLXNwYW4tY29sdW1uPlxuICogYGBgXG4gKi9cbmxldCBTcGFuQ29sdW1uQ29tcG9uZW50ID0gU3BhbkNvbHVtbkNvbXBvbmVudF8xID0gY2xhc3MgU3BhbkNvbHVtbkNvbXBvbmVudCBleHRlbmRzIENvbHVtbkJhc2UkMSB7XG4gICAgY29uc3RydWN0b3IocGFyZW50KSB7XG4gICAgICAgIHN1cGVyKHBhcmVudCk7XG4gICAgICAgIC8qXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuaXNTcGFuQ29sdW1uID0gdHJ1ZTtcbiAgICAgICAgdGhpcy50ZW1wbGF0ZSA9IG5ldyBRdWVyeUxpc3QoKTtcbiAgICAgICAgdGhpcy5lZGl0VGVtcGxhdGUgPSBuZXcgUXVlcnlMaXN0KCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAaGlkZGVuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNoaWxkQ29sdW1ucyA9IG5ldyBRdWVyeUxpc3QoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuaW5jbHVkZUluQ2hvb3NlciA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9lZGl0YWJsZSA9IHRydWU7XG4gICAgICAgIHRoaXMuX2xvY2tlZCA9IGZhbHNlO1xuICAgICAgICBpZiAocGFyZW50ICYmIHBhcmVudC5pc1NwYW5Db2x1bW4pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignU3BhbkNvbHVtbiBjYW5ub3QgYmUgbmVzdGVkIGluc2lkZSBhbm90aGVyIFNwYW5Db2x1bW4nKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIHdoZXRoZXIgdGhlIGVkaXQgdGVtcGxhdGUgb2YgdGhlIGNvbHVtbiB3aWxsIGJlIHJlbmRlcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBgZmFsc2VgLlxuICAgICAqXG4gICAgICogPiBUbyBlbmFibGUgdGhlIGVkaXRpbmcgZnVuY3Rpb25hbGl0eSBmb3IgYSBzcGFubmVkIGNvbHVtbiwgc2V0IGFuIGVkaXQgdGVtcGxhdGUgZm9yIGl0LlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBodG1sLW5vLXJ1blxuICAgICAqIDxrZW5kby1ncmlkPlxuICAgICAqICAgIDxrZW5kby1ncmlkLXNwYW4tY29sdW1uIFtlZGl0YWJsZV09XCJmYWxzZVwiPlxuICAgICAqICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiVW5pdFByaWNlXCI+XG4gICAgICogICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICAgICAqICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIj5cbiAgICAgKiAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gICAgICogICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkRWRpdFRlbXBsYXRlPlxuICAgICAqICAgICAgICAgLi4uLi5cbiAgICAgKiAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICogICAgPC9rZW5kby1ncmlkLXNwYW4tY29sdW1uPlxuICAgICAqIDwva2VuZG8tZ3JpZD5cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBzZXQgZWRpdGFibGUodmFsdWUpIHtcbiAgICAgICAgdGhpcy5fZWRpdGFibGUgPSB2YWx1ZTtcbiAgICB9XG4gICAgZ2V0IGVkaXRhYmxlKCkge1xuICAgICAgICByZXR1cm4gaXNQcmVzZW50KHRoaXMuZWRpdFRlbXBsYXRlUmVmKSAmJiB0aGlzLl9lZGl0YWJsZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIGFkZGVkIGZvciBiYWNrd2FyZHMgY29tcGl0YWJpbGl0eVxuICAgICAqL1xuICAgIHNldCB3aWR0aChfdmFsdWUpIHtcbiAgICB9XG4gICAgZ2V0IHdpZHRoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jaGlsZENvbHVtbnMucmVkdWNlKCh0b3RhbCwgY29sdW1uKSA9PiB0b3RhbCArIGNvbHVtbi53aWR0aCwgMCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgbGVhZkluZGV4KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jaGlsZENvbHVtbnMuZmlyc3QubGVhZkluZGV4O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IHRlbXBsYXRlUmVmKCkge1xuICAgICAgICBjb25zdCB0ZW1wbGF0ZSA9IHRoaXMudGVtcGxhdGUuZmlyc3Q7XG4gICAgICAgIHJldHVybiB0ZW1wbGF0ZSA/IHRlbXBsYXRlLnRlbXBsYXRlUmVmIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGVkaXRUZW1wbGF0ZVJlZigpIHtcbiAgICAgICAgY29uc3QgZWRpdFRlbXBsYXRlID0gdGhpcy5lZGl0VGVtcGxhdGUuZmlyc3Q7XG4gICAgICAgIHJldHVybiBlZGl0VGVtcGxhdGUgPyBlZGl0VGVtcGxhdGUudGVtcGxhdGVSZWYgOiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgY29sc3BhbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2hpbGRDb2x1bW5zLmZpbHRlcihjID0+IGMuaXNWaXNpYmxlKS5sZW5ndGg7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRvZ2dsZXMgdGhlIGxvY2tlZCAoZnJvemVuKSBzdGF0ZSBvZiB0aGUgY29sdW1ucy4gTG9ja2VkIGNvbHVtbnMgYXJlIHZpc2libGVcbiAgICAgKiBhdCBhbGwgdGltZXMgZHVyaW5nIHRoZSBob3Jpem9udGFsIHNjcm9sbGluZyBvZiB0aGUgR3JpZC5cbiAgICAgKlxuICAgICAqIEZvciB0aGUgb3B0aW9uIHRvIHdvcmsgcHJvcGVybHksIG1ha2Ugc3VyZSB0aGF0OlxuICAgICAqIC0gU2Nyb2xsaW5nIGlzIGVuYWJsZWQuXG4gICAgICogLSBUaGUgYGhlaWdodGAgb3B0aW9uIG9mIHRoZSBHcmlkIGlzIHNldC5cbiAgICAgKiAtIFRoZSB3aWR0aHMgb2YgYWxsIEdyaWQgY29sdW1ucyBhcmUgZXhwbGljaXRseSBzZXQgaW4gcGl4ZWxzLiBJbiB0aGlzIHdheSxcbiAgICAgKiB0aGUgR3JpZCBhZGp1c3RzIHRoZSBsYXlvdXQgb2YgdGhlIGxvY2tlZCBhbmQgdW5sb2NrZWQgY29sdW1ucy5cbiAgICAgKlxuICAgICAqIEBkZWZhdWx0IGZhbHNlXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogX0BDb21wb25lbnQoe1xuICAgICAqICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAgICAgKiAgICB0ZW1wbGF0ZTogYFxuICAgICAqICAgICAgICA8a2VuZG8tZ3JpZCBbZGF0YV09XCJncmlkRGF0YVwiIFtzY3JvbGxhYmxlXT1cInNjcm9sbGFibGVcIiBzdHlsZT1cImhlaWdodDogMjAwcHhcIj5cbiAgICAgKiAgICAgICAgICA8a2VuZG8tZ3JpZC1zcGFuLWNvbHVtbiBbbG9ja2VkXT1cInRydWVcIj5cbiAgICAgKiAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJQcm9kdWN0SURcIiB0aXRsZT1cIlByb2R1Y3QgSURcIiB3aWR0aD1cIjEyMFwiPlxuICAgICAqICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gICAgICogICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIiB0aXRsZT1cIlByb2R1Y3QgTmFtZVwiIHdpZHRoPVwiMjAwXCI+XG4gICAgICogICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAgICAgKiAgICAgICAgICA8L2tlbmRvLWdyaWQtc3Bhbi1jb2x1bW4+XG4gICAgICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiVW5pdFByaWNlXCIgdGl0bGU9XCJVbml0IFByaWNlXCIgd2lkdGg9XCIyMzBcIj5cbiAgICAgKiAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICAgICAqICAgICAgICA8L2tlbmRvLWdyaWQ+XG4gICAgICogICAgYFxuICAgICAqIH0pXG4gICAgICpcbiAgICAgKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICAgICAqICAgIHB1YmxpYyBncmlkRGF0YTogYW55W107XG4gICAgICpcbiAgICAgKiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgKiAgICAgICAgdGhpcy5ncmlkRGF0YSA9IHByb2R1Y3RzO1xuICAgICAqICAgIH1cbiAgICAgKiB9XG4gICAgICpcbiAgICAgKiBjb25zdCBwcm9kdWN0cyA9IFt7XG4gICAgICogICAgXCJQcm9kdWN0SURcIjogMSxcbiAgICAgKiAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhaVwiLFxuICAgICAqICAgIFwiVW5pdFByaWNlXCI6IDE4LjAwMDAsXG4gICAgICogICAgXCJEaXNjb250aW51ZWRcIjogdHJ1ZVxuICAgICAqICB9LCB7XG4gICAgICogICAgXCJQcm9kdWN0SURcIjogMixcbiAgICAgKiAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhbmdcIixcbiAgICAgKiAgICBcIlVuaXRQcmljZVwiOiAxOS4wMDAwLFxuICAgICAqICAgIFwiRGlzY29udGludWVkXCI6IGZhbHNlXG4gICAgICogIH1cbiAgICAgKiBdO1xuICAgICAqXG4gICAgICogYGBgXG4gICAgICovXG4gICAgc2V0IGxvY2tlZCh2YWx1ZSkge1xuICAgICAgICB0aGlzLl9sb2NrZWQgPSB2YWx1ZTtcbiAgICB9XG4gICAgZ2V0IGxvY2tlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xvY2tlZCB8fCB0aGlzLmNoaWxkQ29sdW1ucy5zb21lKGMgPT4gYy5sb2NrZWQpO1xuICAgIH1cbiAgICBnZXQgY2hpbGRyZW5BcnJheSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2hpbGRDb2x1bW5zLnRvQXJyYXkoKTtcbiAgICB9XG4gICAgZ2V0IGhhc0NoaWxkcmVuKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jaGlsZENvbHVtbnMubGVuZ3RoID4gMDtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgQ29udGVudENoaWxkcmVuKENlbGxUZW1wbGF0ZURpcmVjdGl2ZSwgeyBkZXNjZW5kYW50czogZmFsc2UgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFF1ZXJ5TGlzdClcbl0sIFNwYW5Db2x1bW5Db21wb25lbnQucHJvdG90eXBlLCBcInRlbXBsYXRlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBDb250ZW50Q2hpbGRyZW4oRWRpdFRlbXBsYXRlRGlyZWN0aXZlLCB7IGRlc2NlbmRhbnRzOiBmYWxzZSB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgUXVlcnlMaXN0KVxuXSwgU3BhbkNvbHVtbkNvbXBvbmVudC5wcm90b3R5cGUsIFwiZWRpdFRlbXBsYXRlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBDb250ZW50Q2hpbGRyZW4oQ29sdW1uQ29tcG9uZW50KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgUXVlcnlMaXN0KVxuXSwgU3BhbkNvbHVtbkNvbXBvbmVudC5wcm90b3R5cGUsIFwiY2hpbGRDb2x1bW5zXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0Jvb2xlYW5dKVxuXSwgU3BhbkNvbHVtbkNvbXBvbmVudC5wcm90b3R5cGUsIFwiZWRpdGFibGVcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0Jvb2xlYW5dKVxuXSwgU3BhbkNvbHVtbkNvbXBvbmVudC5wcm90b3R5cGUsIFwibG9ja2VkXCIsIG51bGwpO1xuU3BhbkNvbHVtbkNvbXBvbmVudCA9IFNwYW5Db2x1bW5Db21wb25lbnRfMSA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IENvbHVtbkJhc2UkMSxcbiAgICAgICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTcGFuQ29sdW1uQ29tcG9uZW50XzEpXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZ3JpZC1zcGFuLWNvbHVtbicsXG4gICAgICAgIHRlbXBsYXRlOiBgYFxuICAgIH0pLFxuICAgIF9fcGFyYW0oMCwgU2tpcFNlbGYoKSksIF9fcGFyYW0oMCwgSG9zdCgpKSwgX19wYXJhbSgwLCBPcHRpb25hbCgpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0NvbHVtbkJhc2UkMV0pXG5dLCBTcGFuQ29sdW1uQ29tcG9uZW50KTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGV4cGFuZENvbHVtbnMgPSAoY29sdW1ucykgPT4gKGNvbHVtbnMucmVkdWNlKChhY2MsIGNvbHVtbikgPT4gYWNjLmNvbmNhdChpc1NwYW5Db2x1bW5Db21wb25lbnQoY29sdW1uKSA/IGNvbHVtbi5jaGlsZHJlbkFycmF5IDogW2NvbHVtbl0pLCBbXSkgLy8gdHNsaW50OmRpc2FibGUtbGluZTphbGlnblxuKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBleHBhbmRDb2x1bW5zV2l0aFNwYW4gPSAoY29sdW1ucykgPT4gKGNvbHVtbnMucmVkdWNlKChhY2MsIGNvbHVtbikgPT4gYWNjLmNvbmNhdChpc1NwYW5Db2x1bW5Db21wb25lbnQoY29sdW1uKSA/XG4gICAgW2NvbHVtbl0uY29uY2F0KGNvbHVtbi5jaGlsZHJlbkFycmF5KSA6XG4gICAgW2NvbHVtbl0pLCBbXSkgLy8gdHNsaW50OmRpc2FibGUtbGluZTphbGlnblxuKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBjb2x1bW5zVG9SZW5kZXIgPSAoY29sdW1ucykgPT4gKGV4cGFuZENvbHVtbnMoY29sdW1ucykuZmlsdGVyKHggPT4geC5pc1Zpc2libGUpKTtcbmNvbnN0IHN1bVByb3AgPSAocHJvcCkgPT4gKGFycmF5KSA9PiAoYXJyYXkgfHwgW10pLnJlZHVjZSgocHJldiwgY3VycikgPT4gcHJldiArIChjdXJyW3Byb3BdIHx8IDApLCAwKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBzdW1Db2x1bW5XaWR0aHMgPSBzdW1Qcm9wKCd3aWR0aCcpO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGNvbHVtbnNTcGFuID0gc3VtUHJvcCgnY29sc3BhbicpO1xuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1heC1saW5lLWxlbmd0aFxuY29uc3QgdmFsaWRGaWVsZCA9IG5ldyBSZWdFeHAoYF5bJEEtWlxcX2Etel1bJEEtWlxcX2EtejAtOVxcXFwuXSokYCk7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgaXNWYWxpZEZpZWxkTmFtZSA9IChmaWVsZE5hbWUpID0+ICFpc051bGxPckVtcHR5U3RyaW5nKGZpZWxkTmFtZSkgJiYgdmFsaWRGaWVsZC50ZXN0KGZpZWxkTmFtZSkgJiZcbiAgICBmaWVsZE5hbWVbMF0gIT09IFwiLlwiICYmIGZpZWxkTmFtZVtmaWVsZE5hbWUubGVuZ3RoIC0gMV0gIT09IFwiLlwiO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGNoaWxkcmVuID0gY29sdW1uID0+IGNvbHVtbi5jaGlsZHJlbi5maWx0ZXIoY2hpbGQgPT4gY2hpbGQgIT09IGNvbHVtbik7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgbGVhZkNvbHVtbnMgPSBjb2x1bW5zID0+IHtcbiAgICByZXR1cm4gY29sdW1ucy5yZWR1Y2UoKGFjYywgY29sdW1uKSA9PiB7XG4gICAgICAgIGlmIChjb2x1bW4uaXNDb2x1bW5Hcm91cCkge1xuICAgICAgICAgICAgYWNjID0gYWNjLmNvbmNhdChsZWFmQ29sdW1ucyhjaGlsZHJlbihjb2x1bW4pKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY29sdW1uLmlzU3BhbkNvbHVtbikge1xuICAgICAgICAgICAgYWNjID0gYWNjLmNvbmNhdChjb2x1bW4uY2hpbGRyZW5BcnJheSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBhY2MucHVzaChjb2x1bW4pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgfSwgW10pLmZpbHRlcih4ID0+IHguaXNWaXNpYmxlKTsgLy8gdHNsaW50OmRpc2FibGUtbGluZTphbGlnblxufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBzb21lTGVhZkNvbHVtbiA9IChjYWxsYmFjaywgLi4uY29sdW1ucykgPT4gbGVhZkNvbHVtbnMoY29sdW1ucykuc29tZShjYWxsYmFjayk7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgcmVzaXphYmxlQ29sdW1ucyA9IGNvbHVtbnMgPT4gY29sdW1ucy5maWx0ZXIoY29sdW1uID0+IGlzVHJ1dGh5KGNvbHVtbi5yZXNpemFibGUpICYmIGNvbHVtbi5pc1Zpc2libGUpO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IHNvcnRDb2x1bW5zID0gKGNvbHVtbnMpID0+IG9yZGVyQnkoY29sdW1ucywgW3sgZmllbGQ6ICdvcmRlckluZGV4JywgZGlyOiAnYXNjJyB9XSk7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgaXNJblNwYW5Db2x1bW4gPSAoY29sdW1uKSA9PiBpc1RydXRoeShjb2x1bW4ucGFyZW50KSAmJiBpc1NwYW5Db2x1bW5Db21wb25lbnQoY29sdW1uLnBhcmVudCk7XG5cbnZhciBDb2x1bW5Hcm91cENvbXBvbmVudF8xO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIGlzQ29sdW1uR3JvdXBDb21wb25lbnQoY29sdW1uKSB7XG4gICAgcmV0dXJuIGNvbHVtbi5pc0NvbHVtbkdyb3VwO1xufVxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBjb2x1bW4gZ3JvdXAgaGVhZGVyIG9mIHRoZSBHcmlkXG4gKiAoW21vcmUgaW5mb3JtYXRpb24gYW5kIGV4YW1wbGVzXSh7JSBzbHVnIG11bHRpY29sdW1uaGVhZGVyc19jb2x1bW5zX2dyaWQgJX0pKS5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHMtcHJldmlld1xuICpcbiAqIF9AQ29tcG9uZW50KHtcbiAqICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgPGtlbmRvLWdyaWQgW2RhdGFdPVwiZ3JpZERhdGFcIj5cbiAqICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbi1ncm91cCB0aXRsZT1cIlByb2R1Y3QgSW5mb1wiPlxuICogICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkSGVhZGVyVGVtcGxhdGUgbGV0LWNvbHVtbkluZGV4PVwiY29sdW1uSW5kZXhcIiBsZXQtY29sdW1uPVwiY29sdW1uXCI+XG4gKiAgICAgICAgICAgICAgIENvbHVtbiBpbmRleDoge3tjb2x1bW5JbmRleH19IC8gY29sdW1uIHRpdGxlOiB7e2NvbHVtbi50aXRsZX19XG4gKiAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIlByb2R1Y3RJRFwiIHRpdGxlPVwiUHJvZHVjdCBJRFwiIHdpZHRoPVwiMTIwXCI+XG4gKiAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIlByb2R1Y3ROYW1lXCIgdGl0bGU9XCJQcm9kdWN0IE5hbWVcIj5cbiAqICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4tZ3JvdXA+XG4gKiAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJVbml0UHJpY2VcIiB0aXRsZT1cIlVuaXQgUHJpY2VcIiB3aWR0aD1cIjIzMFwiPlxuICogICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIkRpc2NvbnRpbnVlZFwiIHdpZHRoPVwiMTIwXCI+XG4gKiAgICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZENlbGxUZW1wbGF0ZSBsZXQtZGF0YUl0ZW0+XG4gKiAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBbY2hlY2tlZF09XCJkYXRhSXRlbS5EaXNjb250aW51ZWRcIiBkaXNhYmxlZC8+XG4gKiAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgPC9rZW5kby1ncmlkPlxuICogICAgYFxuICogfSlcbiAqXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICAgcHVibGljIGdyaWREYXRhOiBhbnlbXTtcbiAqXG4gKiAgICBjb25zdHJ1Y3RvcigpIHtcbiAqICAgICAgICB0aGlzLmdyaWREYXRhID0gcHJvZHVjdHM7XG4gKiAgICB9XG4gKiB9XG4gKlxuICogY29uc3QgcHJvZHVjdHMgPSBbe1xuICogICAgXCJQcm9kdWN0SURcIjogMSxcbiAqICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFpXCIsXG4gKiAgICBcIlVuaXRQcmljZVwiOiAxOC4wMDAwLFxuICogICAgXCJEaXNjb250aW51ZWRcIjogdHJ1ZVxuICogIH0sIHtcbiAqICAgIFwiUHJvZHVjdElEXCI6IDIsXG4gKiAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhbmdcIixcbiAqICAgIFwiVW5pdFByaWNlXCI6IDE5LjAwMDAsXG4gKiAgICBcIkRpc2NvbnRpbnVlZFwiOiBmYWxzZVxuICogIH1cbiAqIF07XG4gKlxuICogYGBgXG4gKi9cbmxldCBDb2x1bW5Hcm91cENvbXBvbmVudCA9IENvbHVtbkdyb3VwQ29tcG9uZW50XzEgPSBjbGFzcyBDb2x1bW5Hcm91cENvbXBvbmVudCBleHRlbmRzIENvbHVtbkJhc2UkMSB7XG4gICAgY29uc3RydWN0b3IocGFyZW50KSB7XG4gICAgICAgIHN1cGVyKHBhcmVudCk7XG4gICAgICAgIHRoaXMucGFyZW50ID0gcGFyZW50O1xuICAgICAgICAvKipcbiAgICAgICAgICogQGhpZGRlblxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5pbmNsdWRlSW5DaG9vc2VyID0gZmFsc2U7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAaGlkZGVuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmlzQ29sdW1uR3JvdXAgPSB0cnVlO1xuICAgICAgICAvKipcbiAgICAgICAgICogQGhpZGRlblxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5taW5SZXNpemFibGVXaWR0aCA9IDEwO1xuICAgICAgICBpZiAocGFyZW50ICYmIHBhcmVudC5pc1NwYW5Db2x1bW4pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ29sdW1uR3JvdXBDb21wb25lbnQgY2Fubm90IGJlIG5lc3RlZCBpbnNpZGUgU3BhbkNvbHVtbkNvbXBvbmVudCcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICByb3dzcGFuKCkge1xuICAgICAgICByZXR1cm4gMTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBjb2xzcGFuKCkge1xuICAgICAgICBpZiAoIXRoaXMuY2hpbGRyZW4gfHwgdGhpcy5jaGlsZHJlbi5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb2x1bW5zU3Bhbih0aGlzLmNoaWxkcmVuXG4gICAgICAgICAgICAuZmlsdGVyKGNoaWxkID0+IGNoaWxkICE9PSB0aGlzICYmIGNoaWxkLmlzVmlzaWJsZSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGxlYWZJbmRleCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2hpbGRyZW4gPyAodGhpcy5maXJzdENoaWxkIHx8IHt9KS5sZWFmSW5kZXggOiAtMTtcbiAgICB9XG4gICAgZ2V0IGNoaWxkcmVuQXJyYXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNoaWxkcmVuLmZpbHRlcihjID0+IGMgIT09IHRoaXMpO1xuICAgIH1cbiAgICBnZXQgaGFzQ2hpbGRyZW4oKSB7XG4gICAgICAgIHJldHVybiBCb29sZWFuKHRoaXMuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIGdldCBmaXJzdENoaWxkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jaGlsZHJlbi5maW5kKGNvbHVtbiA9PiBjb2x1bW4gIT09IHRoaXMpO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBDb250ZW50Q2hpbGRyZW4oQ29sdW1uQmFzZSQxKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgUXVlcnlMaXN0KVxuXSwgQ29sdW1uR3JvdXBDb21wb25lbnQucHJvdG90eXBlLCBcImNoaWxkcmVuXCIsIHZvaWQgMCk7XG5Db2x1bW5Hcm91cENvbXBvbmVudCA9IENvbHVtbkdyb3VwQ29tcG9uZW50XzEgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBwcm92aWRlOiBDb2x1bW5CYXNlJDEsXG4gICAgICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gQ29sdW1uR3JvdXBDb21wb25lbnRfMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLWNvbHVtbi1ncm91cCcsXG4gICAgICAgIHRlbXBsYXRlOiBgYFxuICAgIH0pLFxuICAgIF9fcGFyYW0oMCwgU2tpcFNlbGYoKSksIF9fcGFyYW0oMCwgSG9zdCgpKSwgX19wYXJhbSgwLCBPcHRpb25hbCgpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0NvbHVtbkJhc2UkMV0pXG5dLCBDb2x1bW5Hcm91cENvbXBvbmVudCk7XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgZGV0YWlsIHRlbXBsYXRlIG9mIHRoZSBHcmlkIChbbW9yZSBpbmZvcm1hdGlvbiBhbmQgZXhhbXBsZXNdKHslIHNsdWcgZGV0YWlscm93dGVtcGxhdGVfZ3JpZCAlfSkpLlxuICogVG8gZGVmaW5lIHRoZSBkZXRhaWwgdGVtcGxhdGUsIG5lc3QgYW4gYDxuZy10ZW1wbGF0ZT5gIHRhZyB3aXRoIHRoZSBga2VuZG9HcmlkRGV0YWlsVGVtcGxhdGVgIGRpcmVjdGl2ZSBpbnNpZGUgYSBgPGtlbmRvLWdyaWQ+YCB0YWcuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgdGVtcGxhdGU6IGBcbiAqICAgICAgIDxrZW5kby1ncmlkXG4gKiAgICAgICAgIFtkYXRhXT1cImRhdGFcIlxuICogICAgICAgICBzZWxlY3RhYmxlPVwidHJ1ZVwiXG4gKiAgICAgICAgIHN0eWxlPVwiaGVpZ2h0OiAxNjBweFwiXG4gKiAgICAgICAgID5cbiAqICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdElEXCI+PC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIj48L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJVbml0UHJpY2VcIj48L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkRGV0YWlsVGVtcGxhdGUgbGV0LWRhdGFJdGVtPlxuICogICAgICAgICAgIDxkaXYgKm5nSWY9XCJkYXRhSXRlbS5DYXRlZ29yeVwiPlxuICogICAgICAgICAgICAgPGhlYWRlcj57e2RhdGFJdGVtLkNhdGVnb3J5Py5DYXRlZ29yeU5hbWV9fTwvaGVhZGVyPlxuICogICAgICAgICAgICAgPHNwYW4+e3tkYXRhSXRlbS5DYXRlZ29yeT8uRGVzY3JpcHRpb259fTwvc3Bhbj5cbiAqICAgICAgICAgICA8L2Rpdj5cbiAqICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgIDwva2VuZG8tZ3JpZD5cbiAqICAgYFxuICogfSlcbiAqXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICAgIHB1YmxpYyBkYXRhID0gW3tcbiAqICAgICAgICAgXCJQcm9kdWN0SURcIjogMSxcbiAqICAgICAgICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYWlcIixcbiAqICAgICAgICAgXCJVbml0UHJpY2VcIjogMTguMDAwMCxcbiAqICAgICAgICAgXCJEaXNjb250aW51ZWRcIjogZmFsc2UsXG4gKiAgICAgICAgIFwiQ2F0ZWdvcnlcIjoge1xuICogICAgICAgICAgICAgXCJDYXRlZ29yeUlEXCI6IDEsXG4gKiAgICAgICAgICAgICBcIkNhdGVnb3J5TmFtZVwiOiBcIkJldmVyYWdlc1wiLFxuICogICAgICAgICAgICAgXCJEZXNjcmlwdGlvblwiOiBcIlNvZnQgZHJpbmtzLCBjb2ZmZWVzLCB0ZWFzLCBiZWVycywgYW5kIGFsZXNcIlxuICogICAgICAgICB9XG4gKiAgICAgICB9LCB7XG4gKiAgICAgICAgIFwiUHJvZHVjdElEXCI6IDIsXG4gKiAgICAgICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFuZ1wiLFxuICogICAgICAgICBcIlVuaXRQcmljZVwiOiAxOS4wMDAwLFxuICogICAgICAgICBcIkRpc2NvbnRpbnVlZFwiOiBmYWxzZSxcbiAqICAgICAgICAgXCJDYXRlZ29yeVwiOiB7XG4gKiAgICAgICAgICAgICBcIkNhdGVnb3J5SURcIjogMSxcbiAqICAgICAgICAgICAgIFwiQ2F0ZWdvcnlOYW1lXCI6IFwiQmV2ZXJhZ2VzXCIsXG4gKiAgICAgICAgICAgICBcIkRlc2NyaXB0aW9uXCI6IFwiU29mdCBkcmlua3MsIGNvZmZlZXMsIHRlYXMsIGJlZXJzLCBhbmQgYWxlc1wiXG4gKiAgICAgICAgIH1cbiAqICAgICAgIH0sIHtcbiAqICAgICAgICAgXCJQcm9kdWN0SURcIjogMyxcbiAqICAgICAgICAgXCJQcm9kdWN0TmFtZVwiOiBcIkFuaXNlZWQgU3lydXBcIixcbiAqICAgICAgICAgXCJVbml0UHJpY2VcIjogMTAuMDAwMCxcbiAqICAgICAgICAgXCJEaXNjb250aW51ZWRcIjogZmFsc2UsXG4gKiAgICAgICAgIFwiQ2F0ZWdvcnlcIjoge1xuICogICAgICAgICAgICAgXCJDYXRlZ29yeUlEXCI6IDIsXG4gKiAgICAgICAgICAgICBcIkNhdGVnb3J5TmFtZVwiOiBcIkNvbmRpbWVudHNcIixcbiAqICAgICAgICAgICAgIFwiRGVzY3JpcHRpb25cIjogXCJTd2VldCBhbmQgc2F2b3J5IHNhdWNlcywgcmVsaXNoZXMsIHNwcmVhZHMsIGFuZCBzZWFzb25pbmdzXCJcbiAqICAgICAgICAgfVxuICogICAgIH1dO1xuICpcbiAqIH1cbiAqXG4gKiBgYGBcbiAqXG4gKi9cbmxldCBEZXRhaWxUZW1wbGF0ZURpcmVjdGl2ZSA9IGNsYXNzIERldGFpbFRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZVJlZikge1xuICAgICAgICB0aGlzLnRlbXBsYXRlUmVmID0gdGVtcGxhdGVSZWY7XG4gICAgICAgIHRoaXMuX2NvbmRpdGlvbiA9ICgpID0+IHRydWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlZmluZXMgdGhlIGZ1bmN0aW9uIHRoYXQgaW5kaWNhdGVzIGlmIGEgZ2l2ZW4gZGV0YWlsIHJvdyBhbmQgdGhlIGFzc29jaWF0ZWQgKipFeHBhbmQqKiBvciAqKkNvbGxhcHNlKiogYnV0dG9uIHdpbGwgYmUgZGlzcGxheWVkLlxuICAgICAqL1xuICAgIHNldCBzaG93SWYoZm4pIHtcbiAgICAgICAgaWYgKHR5cGVvZiBmbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBzaG93SWYgbXVzdCBiZSBhIGZ1bmN0aW9uLCBidXQgcmVjZWl2ZWQgJHtKU09OLnN0cmluZ2lmeShmbil9LmApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2NvbmRpdGlvbiA9IGZuO1xuICAgIH1cbiAgICBnZXQgc2hvd0lmKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fY29uZGl0aW9uO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dChcImtlbmRvR3JpZERldGFpbFRlbXBsYXRlU2hvd0lmXCIpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBGdW5jdGlvbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtGdW5jdGlvbl0pXG5dLCBEZXRhaWxUZW1wbGF0ZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwic2hvd0lmXCIsIG51bGwpO1xuRGV0YWlsVGVtcGxhdGVEaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0dyaWREZXRhaWxUZW1wbGF0ZV0nXG4gICAgfSksXG4gICAgX19wYXJhbSgwLCBPcHRpb25hbCgpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1RlbXBsYXRlUmVmXSlcbl0sIERldGFpbFRlbXBsYXRlRGlyZWN0aXZlKTtcblxuY29uc3QgY2FuQ3JlYXRlRWxlbWVudCA9ICgpID0+IGlzRG9jdW1lbnRBdmFpbGFibGUoKSAmJiBkb2N1bWVudC5jcmVhdGVFbGVtZW50O1xubGV0IGNhY2hlZFNjcm9sbGJhcldpZHRoID0gbnVsbDtcbmxldCBjYWNoZWRQaXhlbFJhdGlvO1xubGV0IGNhY2hlZFJ0bFNjcm9sbExlZnQgPSBudWxsO1xuZnVuY3Rpb24gc2Nyb2xsYmFyV2lkdGgoKSB7XG4gICAgaWYgKGNhY2hlZFNjcm9sbGJhcldpZHRoID09PSBudWxsICYmIGNhbkNyZWF0ZUVsZW1lbnQoKSkge1xuICAgICAgICBjYWNoZWRQaXhlbFJhdGlvID0gd2luZG93LmRldmljZVBpeGVsUmF0aW8gfHwgMTtcbiAgICAgICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgZGl2LnN0eWxlLmNzc1RleHQgPSBcIm92ZXJmbG93OnNjcm9sbDtvdmVyZmxvdy14OmhpZGRlbjt6b29tOjE7Y2xlYXI6Ym90aDtkaXNwbGF5OmJsb2NrXCI7XG4gICAgICAgIGRpdi5pbm5lckhUTUwgPSBcIiZuYnNwO1wiO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRpdik7XG4gICAgICAgIGNhY2hlZFNjcm9sbGJhcldpZHRoID0gZGl2Lm9mZnNldFdpZHRoIC0gZGl2LnNjcm9sbFdpZHRoO1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGRpdik7XG4gICAgfVxuICAgIHJldHVybiBjYWNoZWRTY3JvbGxiYXJXaWR0aDtcbn1cbmZ1bmN0aW9uIHJ0bFNjcm9sbExlZnQoKSB7XG4gICAgaWYgKGNhY2hlZFJ0bFNjcm9sbExlZnQgPT09IG51bGwgJiYgY2FuQ3JlYXRlRWxlbWVudCgpKSB7XG4gICAgICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIGRpdi5zdHlsZS5jc3NUZXh0ID0gXCJvdmVyZmxvdzpzY3JvbGw7em9vbToxO2NsZWFyOmJvdGg7ZGlzcGxheTpibG9jazt3aWR0aDoxMDBweDt2aXNpYmlsaXR5OmhpZGRlbjtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0xMDAwMHB4O2RpcmVjdGlvbjpydGw7XCI7XG4gICAgICAgIGRpdi5pbm5lckhUTUwgPSBcIjxkaXYgc3R5bGU9J3dpZHRoOjIwMHB4O2hlaWdodDoxcHg7JzwvZGl2PlwiO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRpdik7XG4gICAgICAgIGNvbnN0IGluaXRpYWwgPSBkaXYuc2Nyb2xsTGVmdDtcbiAgICAgICAgZGl2LnNjcm9sbExlZnQgPSAtMTtcbiAgICAgICAgY2FjaGVkUnRsU2Nyb2xsTGVmdCA9IGRpdi5zY3JvbGxMZWZ0IDwgMCA/IGRpdi5zY3JvbGxMZWZ0IDogaW5pdGlhbDtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChkaXYpO1xuICAgIH1cbiAgICByZXR1cm4gY2FjaGVkUnRsU2Nyb2xsTGVmdDtcbn1cbi8qKlxuICogQGhpZGRlblxuICogbW92ZSB0byBrZW5kby1jb21tb25cbiAqL1xubGV0IEJyb3dzZXJTdXBwb3J0U2VydmljZSA9IGNsYXNzIEJyb3dzZXJTdXBwb3J0U2VydmljZSB7XG4gICAgY29uc3RydWN0b3Ioem9uZSwgY2hhbmdlRGV0ZWN0b3IpIHtcbiAgICAgICAgdGhpcy56b25lID0gem9uZTtcbiAgICAgICAgdGhpcy5jaGFuZ2VEZXRlY3RvciA9IGNoYW5nZURldGVjdG9yO1xuICAgICAgICB0aGlzLmNoYW5nZXMgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuem9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMgPSBmcm9tRXZlbnQod2luZG93LCAncmVzaXplJykucGlwZShhdWRpdFRpbWUoMTAwKSkuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoY2FjaGVkUGl4ZWxSYXRpbyAhPT0gd2luZG93LmRldmljZVBpeGVsUmF0aW8pIHtcbiAgICAgICAgICAgICAgICAgICAgem9uZS5ydW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVkU2Nyb2xsYmFyV2lkdGggPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VzLmVtaXQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IubWFya0ZvckNoZWNrKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIGlmICh0aGlzLnN1YnNjcmlwdGlvbnMpIHtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy51bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgc2Nyb2xsYmFyV2lkdGgoKSB7XG4gICAgICAgIHJldHVybiBzY3JvbGxiYXJXaWR0aCgpO1xuICAgIH1cbiAgICBnZXQgcnRsU2Nyb2xsTGVmdCgpIHtcbiAgICAgICAgcmV0dXJuIHJ0bFNjcm9sbExlZnQoKTtcbiAgICB9XG59O1xuQnJvd3NlclN1cHBvcnRTZXJ2aWNlID0gX19kZWNvcmF0ZShbXG4gICAgSW5qZWN0YWJsZSgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTmdab25lLCBDaGFuZ2VEZXRlY3RvclJlZl0pXG5dLCBCcm93c2VyU3VwcG9ydFNlcnZpY2UpO1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZTp1c2UtbGlmZS1jeWNsZS1pbnRlcmZhY2UgKi9cbmNvbnN0IGlzR3JvdXBJdGVtID0gKHNvdXJjZSkgPT4ge1xuICAgIHJldHVybiBzb3VyY2UuaXRlbXMgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICBzb3VyY2UuZmllbGQgIT09IHVuZGVmaW5lZDtcbn07XG5jb25zdCBpc1ZpcnR1YWxHcm91cEl0ZW0gPSAoc291cmNlKSA9PiB7XG4gICAgcmV0dXJuIHNvdXJjZS5vZmZzZXQgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICBzb3VyY2Uuc2tpcEhlYWRlciAhPT0gdW5kZWZpbmVkO1xufTtcbmNvbnN0IGZsYXR0ZW5Hcm91cHMgPSAoZ3JvdXBzKSA9PiAoZ3JvdXBzLnJlZHVjZSgoYWNjLCBjdXJyKSA9PiB7XG4gICAgaWYgKGlzR3JvdXBJdGVtKGN1cnIpKSB7XG4gICAgICAgIHJldHVybiBhY2MuY29uY2F0KGZsYXR0ZW5Hcm91cHMoY3Vyci5pdGVtcykpO1xuICAgIH1cbiAgICByZXR1cm4gYWNjLmNvbmNhdChbY3Vycl0pO1xufSwgW10pIC8vIHRzbGludDpkaXNhYmxlLWxpbmU6YWxpZ25cbik7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgaXRlbUF0ID0gKGRhdGEsIGluZGV4KSA9PiB7XG4gICAgY29uc3QgZmlyc3QgPSBkYXRhWzBdO1xuICAgIGlmIChpc1ByZXNlbnQoZmlyc3QpICYmIGlzR3JvdXBJdGVtKGZpcnN0KSkge1xuICAgICAgICByZXR1cm4gZmxhdHRlbkdyb3VwcyhkYXRhKVtpbmRleF07XG4gICAgfVxuICAgIHJldHVybiBkYXRhW2luZGV4XTtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgZ2V0SXRlcmF0b3IkMSA9IChkYXRhLCB7IGZvb3RlcnMsIGxldmVsLCBkYXRhSW5kZXgsIHBhcmVudEdyb3VwSW5kZXgsIGdyb3VwSW5kZXgsIHBhcmVudEdyb3VwIH0pID0+IHtcbiAgICBjb25zdCBmaXJzdCA9IGRhdGFbMF07XG4gICAgaWYgKGlzUHJlc2VudChmaXJzdCkgJiYgaXNHcm91cEl0ZW0oZmlyc3QpKSB7XG4gICAgICAgIGlmIChpc1ZpcnR1YWxHcm91cEl0ZW0oZmlyc3QpKSB7XG4gICAgICAgICAgICBncm91cEluZGV4ID0gaXNQcmVzZW50KGZpcnN0Lm9mZnNldCkgPyBmaXJzdC5vZmZzZXQgOiBncm91cEluZGV4O1xuICAgICAgICB9XG4gICAgICAgIC8vdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLXVzZS1iZWZvcmUtZGVjbGFyZVxuICAgICAgICByZXR1cm4gbmV3IEdyb3VwSXRlcmF0b3IoZGF0YSwgZm9vdGVycywgbGV2ZWwsIGRhdGFJbmRleCwgcGFyZW50R3JvdXBJbmRleCwgZ3JvdXBJbmRleCwgcGFyZW50R3JvdXApO1xuICAgIH1cbiAgICAvL3RzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby11c2UtYmVmb3JlLWRlY2xhcmVcbiAgICByZXR1cm4gbmV3IEl0ZW1JdGVyYXRvcihkYXRhLCBkYXRhSW5kZXgsIHBhcmVudEdyb3VwSW5kZXgsIHBhcmVudEdyb3VwKTtcbn07XG5jbGFzcyBBcnJheUl0ZXJhdG9yIHtcbiAgICBjb25zdHJ1Y3RvcihhcnIsIGlkeCA9IDApIHtcbiAgICAgICAgdGhpcy5hcnIgPSBhcnI7XG4gICAgICAgIHRoaXMuaWR4ID0gaWR4O1xuICAgICAgICB0aGlzLmFyciA9IGFyciB8fCBbXTtcbiAgICB9XG4gICAgW2l0ZXJhdG9yXSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIG5leHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlkeCA8IHRoaXMuYXJyLmxlbmd0aCA/IHtcbiAgICAgICAgICAgIGRvbmU6IGZhbHNlLFxuICAgICAgICAgICAgdmFsdWU6IHRoaXMuYXJyW3RoaXMuaWR4KytdXG4gICAgICAgIH0gOiB7IGRvbmU6IHRydWUsIHZhbHVlOiB1bmRlZmluZWQgfTtcbiAgICB9XG59XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY2xhc3MgSXRlcmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKGFyciwgZGF0YUluZGV4ID0gMCwgcmVzdWx0TWFwID0gKHgpID0+IHgpIHtcbiAgICAgICAgdGhpcy5kYXRhSW5kZXggPSBkYXRhSW5kZXg7XG4gICAgICAgIHRoaXMucmVzdWx0TWFwID0gcmVzdWx0TWFwO1xuICAgICAgICBjb25zdCBpdGVyID0gYXJyW2l0ZXJhdG9yXTtcbiAgICAgICAgdGhpcy5faW5uZXJJdGVyYXRvciA9IGl0ZXIgPyBhcnJbaXRlcmF0b3JdKCkgOiBuZXcgQXJyYXlJdGVyYXRvcihhcnIpO1xuICAgIH1cbiAgICBbaXRlcmF0b3JdKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgbmV4dCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVzdWx0TWFwKHRoaXMuX2lubmVySXRlcmF0b3IubmV4dCgpLCB0aGlzLmRhdGFJbmRleCsrKTtcbiAgICB9XG59XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY2xhc3MgSXRlbUl0ZXJhdG9yIGV4dGVuZHMgSXRlcmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKGFyciwgZGF0YUluZGV4LCBncm91cEluZGV4LCBncm91cCkge1xuICAgICAgICBzdXBlcihhcnIsIGRhdGFJbmRleCwgKHgsIGlkeCkgPT4gKHtcbiAgICAgICAgICAgIGRvbmU6IHguZG9uZSxcbiAgICAgICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICAgICAgZGF0YTogeC52YWx1ZSxcbiAgICAgICAgICAgICAgICBncm91cEluZGV4OiBncm91cEluZGV4LFxuICAgICAgICAgICAgICAgIGluZGV4OiBpZHgsXG4gICAgICAgICAgICAgICAgdHlwZTogJ2RhdGEnLFxuICAgICAgICAgICAgICAgIGdyb3VwXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIGluZGV4IG9mIHRoZSBuZXh0IHJlY29yZC5cbiAgICAgKiBAcmVhZG9ubHlcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIGdldCBpbmRleCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YUluZGV4O1xuICAgIH1cbn1cbmNvbnN0IHByZWZpeCA9IChzLCBuKSA9PiB7XG4gICAgY29uc3QgcCA9IHMgPyBzICsgXCJfXCIgOiBzO1xuICAgIHJldHVybiBgJHtwfSR7bn1gO1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBHcm91cEl0ZXJhdG9yIHtcbiAgICBjb25zdHJ1Y3RvcihhcnIsIG91dHB1dEZvb3RlcnMgPSBmYWxzZSwgbGV2ZWwgPSAwLCBkYXRhSW5kZXggPSAwLCBwYXJlbnRJbmRleCA9IFwiXCIsIGdyb3VwSW5kZXggPSAwLCBwYXJlbnRHcm91cCA9IHVuZGVmaW5lZCkge1xuICAgICAgICB0aGlzLmFyciA9IGFycjtcbiAgICAgICAgdGhpcy5vdXRwdXRGb290ZXJzID0gb3V0cHV0Rm9vdGVycztcbiAgICAgICAgdGhpcy5sZXZlbCA9IGxldmVsO1xuICAgICAgICB0aGlzLmRhdGFJbmRleCA9IGRhdGFJbmRleDtcbiAgICAgICAgdGhpcy5wYXJlbnRJbmRleCA9IHBhcmVudEluZGV4O1xuICAgICAgICB0aGlzLmdyb3VwSW5kZXggPSBncm91cEluZGV4O1xuICAgICAgICB0aGlzLnBhcmVudEdyb3VwID0gcGFyZW50R3JvdXA7XG4gICAgICAgIHRoaXMuY3VycmVudEdyb3VwSW5kZXggPSBcIlwiO1xuICAgICAgICB0aGlzLmFyciA9IGFyciB8fCBbXTtcbiAgICAgICAgdGhpcy5faXRlcmF0b3IgPSBuZXcgSXRlcmF0b3IodGhpcy5hcnIsIHRoaXMuZGF0YUluZGV4KTtcbiAgICB9XG4gICAgW2l0ZXJhdG9yXSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIG5leHRHcm91cEl0ZW0oKSB7XG4gICAgICAgIHRoaXMuY3VycmVudCA9IHRoaXMuX2l0ZXJhdG9yLm5leHQoKS52YWx1ZTtcbiAgICAgICAgdGhpcy5faW5uZXJJdGVyYXRvciA9IG51bGw7XG4gICAgICAgIGlmICh0aGlzLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudEdyb3VwSW5kZXggPSBwcmVmaXgodGhpcy5wYXJlbnRJbmRleCwgdGhpcy5ncm91cEluZGV4KyspO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBkb25lOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiB0aGlzLmN1cnJlbnQsXG4gICAgICAgICAgICAgICAgICAgIGluZGV4OiB0aGlzLmN1cnJlbnRHcm91cEluZGV4LFxuICAgICAgICAgICAgICAgICAgICBsZXZlbDogdGhpcy5sZXZlbCxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2dyb3VwJyxcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50R3JvdXA6IHRoaXMucGFyZW50R3JvdXBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50ID0gbnVsbDtcbiAgICAgICAgICAgIHJldHVybiB7IGRvbmU6IHRydWUsIHZhbHVlOiB1bmRlZmluZWQgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmb290ZXJJdGVtKCkge1xuICAgICAgICBpZiAodGhpcy5jdXJyZW50KSB7XG4gICAgICAgICAgICBjb25zdCBncm91cCA9IHRoaXMuY3VycmVudDtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudCA9IG51bGw7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGRvbmU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGdyb3VwLFxuICAgICAgICAgICAgICAgICAgICBncm91cEluZGV4OiB0aGlzLmN1cnJlbnRHcm91cEluZGV4LFxuICAgICAgICAgICAgICAgICAgICBsZXZlbDogdGhpcy5sZXZlbCxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2Zvb3RlcicsXG4gICAgICAgICAgICAgICAgICAgIGdyb3VwOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBncm91cCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4OiB0aGlzLmN1cnJlbnRHcm91cEluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWw6IHRoaXMubGV2ZWwsXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZ3JvdXAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50R3JvdXA6IHRoaXMucGFyZW50R3JvdXBcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnQgPSBudWxsO1xuICAgICAgICAgICAgcmV0dXJuIHsgZG9uZTogdHJ1ZSwgdmFsdWU6IHVuZGVmaW5lZCB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIGlubmVySXRlcmF0b3IoZ3JvdXApIHtcbiAgICAgICAgaWYgKCF0aGlzLl9pbm5lckl0ZXJhdG9yKSB7XG4gICAgICAgICAgICB0aGlzLl9pbm5lckl0ZXJhdG9yID0gZ2V0SXRlcmF0b3IkMShncm91cC5pdGVtcywge1xuICAgICAgICAgICAgICAgIGRhdGFJbmRleDogdGhpcy5kYXRhSW5kZXgsXG4gICAgICAgICAgICAgICAgZm9vdGVyczogdGhpcy5vdXRwdXRGb290ZXJzLFxuICAgICAgICAgICAgICAgIGxldmVsOiB0aGlzLmxldmVsICsgMSxcbiAgICAgICAgICAgICAgICBwYXJlbnRHcm91cEluZGV4OiB0aGlzLmN1cnJlbnRHcm91cEluZGV4LFxuICAgICAgICAgICAgICAgIHBhcmVudEdyb3VwOiB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMuY3VycmVudCxcbiAgICAgICAgICAgICAgICAgICAgaW5kZXg6IHRoaXMuY3VycmVudEdyb3VwSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgIGxldmVsOiB0aGlzLmxldmVsLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZ3JvdXAnLFxuICAgICAgICAgICAgICAgICAgICBwYXJlbnRHcm91cDogdGhpcy5wYXJlbnRHcm91cFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9pbm5lckl0ZXJhdG9yO1xuICAgIH1cbiAgICBuZXh0RGF0YUl0ZW0oZ3JvdXApIHtcbiAgICAgICAgY29uc3QgaXRlcmF0b3IkJDEgPSB0aGlzLmlubmVySXRlcmF0b3IoZ3JvdXApO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBpdGVyYXRvciQkMS5uZXh0KCk7XG4gICAgICAgIGlmIChpc1ByZXNlbnQocmVzdWx0LnZhbHVlKSAmJiAhcmVzdWx0LmRvbmUgJiYgcmVzdWx0LnZhbHVlLnR5cGUgPT09IFwiZGF0YVwiKSB7XG4gICAgICAgICAgICB0aGlzLmRhdGFJbmRleCA9IHJlc3VsdC52YWx1ZS5pbmRleCArIDE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICFyZXN1bHQuZG9uZSA/IHJlc3VsdCA6IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgbmV4dCgpIHtcbiAgICAgICAgaWYgKCFpc1ByZXNlbnQodGhpcy5jdXJyZW50KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubmV4dEdyb3VwSXRlbSgpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLm5leHREYXRhSXRlbSh0aGlzLmN1cnJlbnQpO1xuICAgICAgICByZXR1cm4gaXRlbSA/IGl0ZW0gOiAodGhpcy5vdXRwdXRGb290ZXJzID8gdGhpcy5mb290ZXJJdGVtKCkgOiB0aGlzLm5leHRHcm91cEl0ZW0oKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBpbmRleCBvZiB0aGUgbGFzdCBpdGVyYXRlZCBkYXRhIHJlY29yZC5cbiAgICAgKiBAcmVhZG9ubHlcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIGdldCBpbmRleCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YUluZGV4ICsgMTtcbiAgICB9XG59XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBEYXRhUmVzdWx0SXRlcmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKHNvdXJjZSwgc2tpcCA9IDAsIGdyb3VwRm9vdGVycyA9IGZhbHNlKSB7XG4gICAgICAgIHRoaXMuc291cmNlID0gc291cmNlO1xuICAgICAgICB0aGlzLnNraXAgPSBza2lwO1xuICAgICAgICB0aGlzLmdyb3VwRm9vdGVycyA9IGdyb3VwRm9vdGVycztcbiAgICAgICAgdGhpcy5zb3VyY2UgPSB0aGlzLnNvdXJjZSA/IHRoaXMuc291cmNlIDogW107XG4gICAgICAgIHRoaXMuaXNPYmplY3QgPSB0aGlzLmlzR3JpZERhdGFSZXN1bHQodGhpcy5zb3VyY2UpO1xuICAgIH1cbiAgICBpc0dyaWREYXRhUmVzdWx0KHNvdXJjZSkge1xuICAgICAgICByZXR1cm4gc291cmNlLnRvdGFsICE9PSB1bmRlZmluZWQgJiYgc291cmNlLmRhdGEgIT09IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZ2V0IHRvdGFsKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pc09iamVjdCA/IHRoaXMuc291cmNlLnRvdGFsIDogdGhpcy5zb3VyY2UubGVuZ3RoO1xuICAgIH1cbiAgICBnZXQgZGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNPYmplY3QgPyB0aGlzLnNvdXJjZS5kYXRhIDogdGhpcy5zb3VyY2U7XG4gICAgfVxuICAgIG1hcChmbikge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhLm1hcChmbik7XG4gICAgfVxuICAgIGZpbHRlcihmbikge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhLmZpbHRlcihmbik7XG4gICAgfVxuICAgIHJlZHVjZShmbiwgaW5pdCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhLnJlZHVjZShmbiwgaW5pdCk7XG4gICAgfVxuICAgIGZvckVhY2goZm4pIHtcbiAgICAgICAgdGhpcy5kYXRhLmZvckVhY2goZm4pO1xuICAgIH1cbiAgICBzb21lKGZuKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGEuc29tZShmbik7XG4gICAgfVxuICAgIFtpdGVyYXRvcl0oKSB7XG4gICAgICAgIHJldHVybiBnZXRJdGVyYXRvciQxKHRoaXMuZGF0YSwge1xuICAgICAgICAgICAgZGF0YUluZGV4OiB0aGlzLnNraXAsXG4gICAgICAgICAgICBmb290ZXJzOiB0aGlzLmdyb3VwRm9vdGVycyxcbiAgICAgICAgICAgIGdyb3VwSW5kZXg6IHRoaXMuc2tpcFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7IHJldHVybiB0aGlzLmRhdGEudG9TdHJpbmcoKTsgfVxufVxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNsYXNzIERhdGFDb2xsZWN0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcihhY2Nlc3Nvcikge1xuICAgICAgICB0aGlzLmFjY2Vzc29yID0gYWNjZXNzb3I7XG4gICAgfVxuICAgIGdldCB0b3RhbCgpIHsgcmV0dXJuIHRoaXMuYWNjZXNzb3IoKS50b3RhbDsgfVxuICAgIGdldCBsZW5ndGgoKSB7IHJldHVybiB0aGlzLmFjY2Vzc29yKCkuZGF0YS5sZW5ndGg7IH1cbiAgICBnZXQgZmlyc3QoKSB7IHJldHVybiB0aGlzLmFjY2Vzc29yKCkuZGF0YVswXTsgfVxuICAgIGdldCBsYXN0KCkgeyByZXR1cm4gdGhpcy5hY2Nlc3NvcigpLmRhdGFbdGhpcy5sZW5ndGggLSAxXTsgfVxuICAgIGF0KGluZGV4KSB7XG4gICAgICAgIHJldHVybiBpdGVtQXQodGhpcy5hY2Nlc3NvcigpLmRhdGEsIGluZGV4KTtcbiAgICB9XG4gICAgbWFwKGZuKSB7IHJldHVybiB0aGlzLmFjY2Vzc29yKCkubWFwKGZuKTsgfVxuICAgIGZpbHRlcihmbikge1xuICAgICAgICByZXR1cm4gdGhpcy5hY2Nlc3NvcigpLmZpbHRlcihmbik7XG4gICAgfVxuICAgIHJlZHVjZShmbiwgaW5pdCkge1xuICAgICAgICByZXR1cm4gdGhpcy5hY2Nlc3NvcigpLnJlZHVjZShmbiwgaW5pdCk7XG4gICAgfVxuICAgIGZvckVhY2goZm4pIHtcbiAgICAgICAgdGhpcy5hY2Nlc3NvcigpLmZvckVhY2goZm4pO1xuICAgIH1cbiAgICBzb21lKGZuKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFjY2Vzc29yKCkuc29tZShmbik7XG4gICAgfVxuICAgIFtpdGVyYXRvcl0oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFjY2Vzc29yKClbaXRlcmF0b3JdKCk7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkgeyByZXR1cm4gdGhpcy5hY2Nlc3NvcigpLnRvU3RyaW5nKCk7IH1cbn1cblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNsYXNzIFNlbGVjdGlvbiB7XG4gICAgY29uc3RydWN0b3IoZ3JpZCwgY2QpIHtcbiAgICAgICAgdGhpcy5ncmlkID0gZ3JpZDtcbiAgICAgICAgdGhpcy5jZCA9IGNkO1xuICAgICAgICAvKipcbiAgICAgICAgICogRGVmaW5lcyB0aGUgY29sbGVjdGlvbiB0aGF0IHdpbGwgc3RvcmUgdGhlIHNlbGVjdGVkIGl0ZW0ga2V5cy5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc2VsZWN0ZWRLZXlzID0gW107XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSBgc2VsZWN0ZWRLZXlzYCBjb2xsZWN0aW9uIGhhcyBiZWVuIHVwZGF0ZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnNlbGVjdGVkS2V5c0NoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgfVxuICAgIGluaXQoKSB7XG4gICAgICAgIGlmICghaXNQcmVzZW50KHRoaXMuZ3JpZC5yb3dTZWxlY3RlZCkpIHtcbiAgICAgICAgICAgIHRoaXMuZ3JpZC5yb3dTZWxlY3RlZCA9IChyb3cpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZEtleXMuaW5kZXhPZih0aGlzLmdldEl0ZW1LZXkocm93KSkgPj0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc1ByZXNlbnQodGhpcy5ncmlkLmNlbGxTZWxlY3RlZCkpIHtcbiAgICAgICAgICAgIHRoaXMuZ3JpZC5jZWxsU2VsZWN0ZWQgPSAocm93LCBjb2x1bW4sIGNvbEluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29udGVuZGVyID0gdGhpcy5nZXRTZWxlY3Rpb25JdGVtKHJvdywgY29sdW1uLCBjb2xJbmRleCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IHRoaXMuc2VsZWN0ZWRLZXlzLnNvbWUoaXRlbSA9PiBpdGVtLmNvbHVtbktleSA9PT0gY29udGVuZGVyLmNvbHVtbktleSAmJiBpdGVtLml0ZW1LZXkgPT09IGNvbnRlbmRlci5pdGVtS2V5KSxcbiAgICAgICAgICAgICAgICAgICAgaXRlbTogY29udGVuZGVyXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZWxlY3Rpb25DaGFuZ2VTdWJzY3JpcHRpb24gPSB0aGlzLmdyaWRcbiAgICAgICAgICAgIC5zZWxlY3Rpb25DaGFuZ2VcbiAgICAgICAgICAgIC5zdWJzY3JpYmUodGhpcy5vblNlbGVjdGlvbkNoYW5nZS5iaW5kKHRoaXMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0aW9uQ2hhbmdlU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICByZXNldCgpIHtcbiAgICAgICAgdGhpcy5zZWxlY3RlZEtleXMgPSBbXTtcbiAgICB9XG4gICAgZ2V0SXRlbUtleShyb3cpIHtcbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uS2V5KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMuc2VsZWN0aW9uS2V5ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJvdy5kYXRhSXRlbVt0aGlzLnNlbGVjdGlvbktleV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMuc2VsZWN0aW9uS2V5ID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3Rpb25LZXkocm93KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcm93LmluZGV4O1xuICAgIH1cbiAgICBnZXRTZWxlY3Rpb25JdGVtKHJvdywgY29sLCBjb2xJbmRleCkge1xuICAgICAgICBjb25zdCBpdGVtSWRlbnRpZmllcnMgPSB7fTtcbiAgICAgICAgaXRlbUlkZW50aWZpZXJzLml0ZW1LZXkgPSB0aGlzLmdldEl0ZW1LZXkocm93KTtcbiAgICAgICAgaWYgKCFpc1ByZXNlbnQoY29sKSAmJiAhaXNQcmVzZW50KGNvbEluZGV4KSkge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW1JZGVudGlmaWVycztcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5jb2x1bW5LZXkpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5jb2x1bW5LZXkgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBpdGVtSWRlbnRpZmllcnMuY29sdW1uS2V5ID0gcm93LmRhdGFJdGVtW3RoaXMuY29sdW1uS2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5jb2x1bW5LZXkgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIGl0ZW1JZGVudGlmaWVycy5jb2x1bW5LZXkgPSB0aGlzLmNvbHVtbktleShjb2wsIGNvbEluZGV4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaXRlbUtleTogaXRlbUlkZW50aWZpZXJzLml0ZW1LZXksXG4gICAgICAgICAgICBjb2x1bW5LZXk6IGl0ZW1JZGVudGlmaWVycy5jb2x1bW5LZXkgPyBpdGVtSWRlbnRpZmllcnMuY29sdW1uS2V5IDogY29sSW5kZXhcbiAgICAgICAgfTtcbiAgICB9XG4gICAgb25TZWxlY3Rpb25DaGFuZ2Uoc2VsZWN0aW9uKSB7XG4gICAgICAgIGlmIChzZWxlY3Rpb24uc2VsZWN0ZWRSb3dzKSB7XG4gICAgICAgICAgICBzZWxlY3Rpb24uZGVzZWxlY3RlZFJvd3MuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1LZXkgPSB0aGlzLmdldEl0ZW1LZXkoaXRlbSk7XG4gICAgICAgICAgICAgICAgY29uc3QgaXRlbUluZGV4ID0gdGhpcy5zZWxlY3RlZEtleXMuaW5kZXhPZihpdGVtS2V5KTtcbiAgICAgICAgICAgICAgICBpZiAoaXRlbUluZGV4ID49IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZEtleXMuc3BsaWNlKGl0ZW1JbmRleCwgMSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAodGhpcy5ncmlkLnNlbGVjdGFibGVTZXR0aW5ncy5tb2RlID09PSBcInNpbmdsZVwiICYmIHRoaXMuc2VsZWN0ZWRLZXlzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlc2V0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxlY3Rpb24uc2VsZWN0ZWRSb3dzLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpdGVtS2V5ID0gdGhpcy5nZXRJdGVtS2V5KGl0ZW0pO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNlbGVjdGVkS2V5cy5pbmRleE9mKGl0ZW1LZXkpIDwgMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkS2V5cy5wdXNoKGl0ZW1LZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc2VsZWN0aW9uLmRlc2VsZWN0ZWRDZWxscy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaXRlbUluZGV4ID0gdGhpcy5nZXRDZWxsU2VsZWN0aW9uSXRlbUluZGV4KGl0ZW0pO1xuICAgICAgICAgICAgICAgIGlmIChpdGVtSW5kZXggPj0gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkS2V5cy5zcGxpY2UoaXRlbUluZGV4LCAxKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICh0aGlzLmdyaWQuc2VsZWN0YWJsZVNldHRpbmdzLm1vZGUgPT09IFwic2luZ2xlXCIgJiYgdGhpcy5zZWxlY3RlZEtleXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlbGVjdGlvbi5zZWxlY3RlZENlbGxzLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpdGVtSW5kZXggPSB0aGlzLmdldENlbGxTZWxlY3Rpb25JdGVtSW5kZXgoaXRlbSk7XG4gICAgICAgICAgICAgICAgaWYgKGl0ZW1JbmRleCA8IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZEtleXMucHVzaChpdGVtKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNkLm1hcmtGb3JDaGVjaygpO1xuICAgICAgICB0aGlzLnNlbGVjdGVkS2V5c0NoYW5nZS5lbWl0KHRoaXMuc2VsZWN0ZWRLZXlzKTtcbiAgICB9XG4gICAgZ2V0Q2VsbFNlbGVjdGlvbkl0ZW1JbmRleChpdGVtKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlbGVjdGVkS2V5cy5maW5kSW5kZXgoc2VsZWN0ZWRJdGVtID0+IHNlbGVjdGVkSXRlbS5pdGVtS2V5ID09PSBpdGVtLml0ZW1LZXkgJiYgc2VsZWN0ZWRJdGVtLmNvbHVtbktleSA9PT0gaXRlbS5jb2x1bW5LZXkpO1xuICAgIH1cbn1cbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KVxuXSwgU2VsZWN0aW9uLnByb3RvdHlwZSwgXCJzZWxlY3RlZEtleXNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KFwia2VuZG9HcmlkU2VsZWN0QnlcIiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIFNlbGVjdGlvbi5wcm90b3R5cGUsIFwic2VsZWN0aW9uS2V5XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBTZWxlY3Rpb24ucHJvdG90eXBlLCBcImNvbHVtbktleVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIFNlbGVjdGlvbi5wcm90b3R5cGUsIFwic2VsZWN0ZWRLZXlzQ2hhbmdlXCIsIHZvaWQgMCk7XG5cbmNvbnN0IHJlc2V0ID0gKC4uLmxpc3RzKSA9PiB7XG4gICAgbGV0IGRpZmYgPSBmYWxzZTtcbiAgICBmb3IgKGxldCBpZHggPSAwOyBpZHggPCBsaXN0cy5sZW5ndGg7IGlkeCsrKSB7XG4gICAgICAgIGNvbnN0IFtsaXN0LCBjb2x1bW5zXSA9IGxpc3RzW2lkeF07XG4gICAgICAgIGRpZmYgPSBkaWZmIHx8IGxpc3QubGVuZ3RoICE9PSBjb2x1bW5zLmxlbmd0aDtcbiAgICAgICAgbGlzdC5yZXNldChjb2x1bW5zKTtcbiAgICB9XG4gICAgcmV0dXJuIGRpZmY7XG59O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNsYXNzIENvbHVtbnNDb250YWluZXIge1xuICAgIGNvbnN0cnVjdG9yKGNvbHVtbnMpIHtcbiAgICAgICAgdGhpcy5jb2x1bW5zID0gY29sdW1ucztcbiAgICAgICAgdGhpcy5hbGxDb2x1bW5zID0gbmV3IFF1ZXJ5TGlzdCgpO1xuICAgICAgICB0aGlzLmxlYWZDb2x1bW5zID0gbmV3IFF1ZXJ5TGlzdCgpO1xuICAgICAgICB0aGlzLmxvY2tlZENvbHVtbnMgPSBuZXcgUXVlcnlMaXN0KCk7XG4gICAgICAgIHRoaXMubm9uTG9ja2VkQ29sdW1ucyA9IG5ldyBRdWVyeUxpc3QoKTtcbiAgICAgICAgdGhpcy5sb2NrZWRMZWFmQ29sdW1ucyA9IG5ldyBRdWVyeUxpc3QoKTtcbiAgICAgICAgdGhpcy5ub25Mb2NrZWRMZWFmQ29sdW1ucyA9IG5ldyBRdWVyeUxpc3QoKTtcbiAgICAgICAgdGhpcy50b3RhbExldmVscyA9IDA7XG4gICAgICAgIHRoaXMuY2hhbmdlcyA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5sZWFmQ29sdW1uc1RvUmVuZGVyID0gW107XG4gICAgICAgIHRoaXMubG9ja2VkQ29sdW1uc1RvUmVuZGVyID0gW107XG4gICAgICAgIHRoaXMubm9uTG9ja2VkQ29sdW1uc1RvUmVuZGVyID0gW107XG4gICAgICAgIHRoaXMuaGFzR3JvdXBIZWFkZXJDb2x1bW4gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5oYXNHcm91cEZvb3RlciA9IGZhbHNlO1xuICAgICAgICB0aGlzLmhhc0Zvb3RlciA9IGZhbHNlO1xuICAgICAgICB0aGlzLnVubG9ja2VkV2lkdGggPSAwO1xuICAgIH1cbiAgICByZWZyZXNoKCkge1xuICAgICAgICBjb25zdCBjdXJyZW50TGV2ZWxzID0gdGhpcy50b3RhbExldmVscztcbiAgICAgICAgY29uc3QgbGVhZkNvbHVtbnMkJDEgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgY29uc3QgbG9ja2VkTGVhZkNvbHVtbnMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgY29uc3Qgbm9uTG9ja2VkTGVhZkNvbHVtbnMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgY29uc3QgbG9ja2VkQ29sdW1ucyA9IG5ldyBBcnJheSgpO1xuICAgICAgICBjb25zdCBub25Mb2NrZWRDb2x1bW5zID0gbmV3IEFycmF5KCk7XG4gICAgICAgIGNvbnN0IGFsbENvbHVtbnMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgY29uc3QgbGVhZkNvbHVtbnNUb1JlbmRlciA9IG5ldyBBcnJheSgpO1xuICAgICAgICBjb25zdCBsb2NrZWRDb2x1bW5zVG9SZW5kZXIgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgY29uc3Qgbm9uTG9ja2VkQ29sdW1uc1RvUmVuZGVyID0gbmV3IEFycmF5KCk7XG4gICAgICAgIGxldCBoYXNHcm91cEhlYWRlckNvbHVtbiA9IGZhbHNlO1xuICAgICAgICBsZXQgaGFzR3JvdXBGb290ZXIgPSBmYWxzZTtcbiAgICAgICAgbGV0IGhhc0Zvb3RlciA9IGZhbHNlO1xuICAgICAgICBsZXQgdW5sb2NrZWRXaWR0aCA9IDA7XG4gICAgICAgIGxldCBsZWFmSW5kZXggPSAwO1xuICAgICAgICB0aGlzLnRvdGFsTGV2ZWxzID0gMDtcbiAgICAgICAgdGhpcy5jb2x1bW5zKCkuZm9yRWFjaChjb2x1bW4gPT4ge1xuICAgICAgICAgICAgY29uc3QgY29udGFpbmVyTGVhZkNvbHVtbnMgPSBjb2x1bW4uaXNMb2NrZWQgPT09IHRydWUgPyBsb2NrZWRMZWFmQ29sdW1ucyA6IG5vbkxvY2tlZExlYWZDb2x1bW5zO1xuICAgICAgICAgICAgY29uc3QgY29udGFpbmVyQ29sdW1ucyA9IGNvbHVtbi5pc0xvY2tlZCA9PT0gdHJ1ZSA/IGxvY2tlZENvbHVtbnMgOiBub25Mb2NrZWRDb2x1bW5zO1xuICAgICAgICAgICAgY29uc3QgdG9SZW5kZXJDb250YWluZXIgPSBjb2x1bW4uaXNMb2NrZWQgPT09IHRydWUgPyBsb2NrZWRDb2x1bW5zVG9SZW5kZXIgOiBub25Mb2NrZWRDb2x1bW5zVG9SZW5kZXI7XG4gICAgICAgICAgICBpZiAoIWlzQ29sdW1uR3JvdXBDb21wb25lbnQoY29sdW1uKSkge1xuICAgICAgICAgICAgICAgIGNvbnRhaW5lckxlYWZDb2x1bW5zLnB1c2goY29sdW1uKTtcbiAgICAgICAgICAgICAgICBsZWFmQ29sdW1ucyQkMS5wdXNoKGNvbHVtbik7XG4gICAgICAgICAgICAgICAgbGVhZkNvbHVtbnNUb1JlbmRlci5wdXNoLmFwcGx5KGxlYWZDb2x1bW5zVG9SZW5kZXIsIGNvbHVtbnNUb1JlbmRlcihbY29sdW1uXSkpO1xuICAgICAgICAgICAgICAgIHRvUmVuZGVyQ29udGFpbmVyLnB1c2guYXBwbHkodG9SZW5kZXJDb250YWluZXIsIGNvbHVtbnNUb1JlbmRlcihbY29sdW1uXSkpO1xuICAgICAgICAgICAgICAgIGhhc0dyb3VwSGVhZGVyQ29sdW1uID0gaGFzR3JvdXBIZWFkZXJDb2x1bW4gfHwgc29tZUxlYWZDb2x1bW4obGVhZiA9PiBCb29sZWFuKGxlYWYuZ3JvdXBIZWFkZXJDb2x1bW5UZW1wbGF0ZVJlZiksIGNvbHVtbik7XG4gICAgICAgICAgICAgICAgaGFzR3JvdXBGb290ZXIgPSBoYXNHcm91cEZvb3RlciB8fCBzb21lTGVhZkNvbHVtbihsZWFmID0+IEJvb2xlYW4obGVhZi5ncm91cEZvb3RlclRlbXBsYXRlUmVmKSwgY29sdW1uKTtcbiAgICAgICAgICAgICAgICBoYXNGb290ZXIgPSBoYXNGb290ZXIgfHwgc29tZUxlYWZDb2x1bW4obGVhZiA9PiBCb29sZWFuKGxlYWYuZm9vdGVyVGVtcGxhdGVSZWYpLCBjb2x1bW4pO1xuICAgICAgICAgICAgICAgIGlmICghY29sdW1uLmlzTG9ja2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIHVubG9ja2VkV2lkdGggKz0gY29sdW1uLndpZHRoIHx8IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChjb2x1bW4uaXNTcGFuQ29sdW1uKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbHVtbi5jaGlsZENvbHVtbnMuZm9yRWFjaChjID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGMubGVhZkluZGV4ID0gbGVhZkluZGV4Kys7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29sdW1uLmxlYWZJbmRleCA9IGxlYWZJbmRleCsrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnRhaW5lckNvbHVtbnMucHVzaChjb2x1bW4pO1xuICAgICAgICAgICAgYWxsQ29sdW1ucy5wdXNoKGNvbHVtbik7XG4gICAgICAgICAgICB0aGlzLnRvdGFsTGV2ZWxzID0gY29sdW1uLmxldmVsID4gdGhpcy50b3RhbExldmVscyA/IGNvbHVtbi5sZXZlbCA6IHRoaXMudG90YWxMZXZlbHM7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmhhc0dyb3VwSGVhZGVyQ29sdW1uID0gaGFzR3JvdXBIZWFkZXJDb2x1bW47XG4gICAgICAgIHRoaXMuaGFzR3JvdXBGb290ZXIgPSBoYXNHcm91cEZvb3RlcjtcbiAgICAgICAgdGhpcy5oYXNGb290ZXIgPSBoYXNGb290ZXI7XG4gICAgICAgIHRoaXMubGVhZkNvbHVtbnNUb1JlbmRlciA9IGxlYWZDb2x1bW5zVG9SZW5kZXI7XG4gICAgICAgIHRoaXMubG9ja2VkQ29sdW1uc1RvUmVuZGVyID0gbG9ja2VkQ29sdW1uc1RvUmVuZGVyO1xuICAgICAgICB0aGlzLm5vbkxvY2tlZENvbHVtbnNUb1JlbmRlciA9IG5vbkxvY2tlZENvbHVtbnNUb1JlbmRlcjtcbiAgICAgICAgdGhpcy51bmxvY2tlZFdpZHRoID0gdW5sb2NrZWRXaWR0aDtcbiAgICAgICAgY29uc3QgY2hhbmdlcyA9IHJlc2V0KFt0aGlzLmxlYWZDb2x1bW5zLCBsZWFmQ29sdW1ucyQkMV0sIFt0aGlzLmxvY2tlZExlYWZDb2x1bW5zLCBsb2NrZWRMZWFmQ29sdW1uc10sIFt0aGlzLm5vbkxvY2tlZExlYWZDb2x1bW5zLCBub25Mb2NrZWRMZWFmQ29sdW1uc10sIFt0aGlzLmxvY2tlZENvbHVtbnMsIGxvY2tlZENvbHVtbnNdLCBbdGhpcy5hbGxDb2x1bW5zLCBhbGxDb2x1bW5zXSwgW3RoaXMubm9uTG9ja2VkQ29sdW1ucywgbm9uTG9ja2VkQ29sdW1uc10pIHx8IGN1cnJlbnRMZXZlbHMgIT09IHRoaXMudG90YWxMZXZlbHM7XG4gICAgICAgIGlmIChjaGFuZ2VzKSB7XG4gICAgICAgICAgICB0aGlzLmNoYW5nZXMuZW1pdCgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjaGFuZ2VzO1xuICAgIH1cbn1cblxuY29uc3QgZm9yRWFjaENvbHVtbiA9IChsaXN0LCBjYWxsYmFjaykgPT4ge1xuICAgIGxpc3QuZm9yRWFjaCgoY29sdW1uKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKGNvbHVtbik7XG4gICAgICAgIGlmIChjb2x1bW4uaXNDb2x1bW5Hcm91cCAmJiBjb2x1bW4uaGFzQ2hpbGRyZW4pIHtcbiAgICAgICAgICAgIGZvckVhY2hDb2x1bW4oY29sdW1uLmNoaWxkcmVuQXJyYXksIGNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgIH0pO1xufTtcbmNvbnN0IGZvckVhY2hMZXZlbCA9IChsaXN0LCBjYWxsYmFjaykgPT4ge1xuICAgIHNvcnRDb2x1bW5zKGxpc3QpXG4gICAgICAgIC5mb3JFYWNoKChjb2x1bW4pID0+IHtcbiAgICAgICAgY2FsbGJhY2soY29sdW1uKTtcbiAgICAgICAgaWYgKGNvbHVtbi5pc0NvbHVtbkdyb3VwICYmIGNvbHVtbi5oYXNDaGlsZHJlbikge1xuICAgICAgICAgICAgZm9yRWFjaExldmVsKGNvbHVtbi5jaGlsZHJlbkFycmF5LCBjYWxsYmFjayk7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5jb25zdCBmaWx0ZXJIaWVyYXJjaHkgPSAobGlzdCwgcHJlZGljYXRlKSA9PiB7XG4gICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgc29ydENvbHVtbnMobGlzdClcbiAgICAgICAgLmZvckVhY2goKGNvbHVtbikgPT4ge1xuICAgICAgICBpZiAocHJlZGljYXRlKGNvbHVtbikpIHtcbiAgICAgICAgICAgIGlmIChjb2x1bW4uaXNDb2x1bW5Hcm91cCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNoaWxkcmVuJCQxID0gZmlsdGVySGllcmFyY2h5KGNvbHVtbi5jaGlsZHJlbkFycmF5LCBwcmVkaWNhdGUpO1xuICAgICAgICAgICAgICAgIGlmIChjaGlsZHJlbiQkMS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goY29sdW1uLCAuLi5jaGlsZHJlbiQkMSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoIWNvbHVtbi5pc1NwYW5Db2x1bW4gfHwgZmlsdGVySGllcmFyY2h5KGNvbHVtbi5jaGlsZHJlbkFycmF5LCBwcmVkaWNhdGUpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGNvbHVtbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBDb2x1bW5MaXN0IHtcbiAgICBjb25zdHJ1Y3Rvcihjb2x1bW5zKSB7XG4gICAgICAgIHRoaXMuY29sdW1ucyA9IGNvbHVtbnM7XG4gICAgfVxuICAgIHN0YXRpYyBlbXB0eSgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBDb2x1bW5MaXN0KG5ldyBRdWVyeUxpc3QoKSk7XG4gICAgfVxuICAgIGZvckVhY2goY2FsbGJhY2spIHtcbiAgICAgICAgZm9yRWFjaENvbHVtbih0aGlzLmNvbHVtbnMsIGNhbGxiYWNrKTtcbiAgICB9XG4gICAgZmlsdGVyKGNhbGxiYWNrKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAgICAgICBmb3JFYWNoQ29sdW1uKHRoaXMuY29sdW1ucywgKGNvbHVtbikgPT4ge1xuICAgICAgICAgICAgaWYgKGNhbGxiYWNrKGNvbHVtbikpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQucHVzaChjb2x1bW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgZmlsdGVySGllcmFyY2h5KHByZWRpY2F0ZSkge1xuICAgICAgICByZXR1cm4gZmlsdGVySGllcmFyY2h5KHRoaXMuY29sdW1ucy50b0FycmF5KCksIHByZWRpY2F0ZSk7XG4gICAgfVxuICAgIGZpbHRlclNvcnQoY2FsbGJhY2spIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgICAgIGZvckVhY2hMZXZlbCh0aGlzLmNvbHVtbnMudG9BcnJheSgpLCAoY29sdW1uKSA9PiB7XG4gICAgICAgICAgICBpZiAoY2FsbGJhY2soY29sdW1uKSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGNvbHVtbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICB0b0FycmF5KCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgICAgZm9yRWFjaENvbHVtbih0aGlzLmNvbHVtbnMsIChjb2x1bW4pID0+IHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKGNvbHVtbik7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICByb290Q29sdW1ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1ucy50b0FycmF5KCk7XG4gICAgfVxuICAgIHRvdGFsQ29sdW1uTGV2ZWxzKCkge1xuICAgICAgICBsZXQgdG90YWxMZXZlbHMgPSAwO1xuICAgICAgICB0aGlzLmZvckVhY2goY29sdW1uID0+IHtcbiAgICAgICAgICAgIHRvdGFsTGV2ZWxzID0gTWF0aC5tYXgoY29sdW1uLmxldmVsLCB0b3RhbExldmVscyk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdG90YWxMZXZlbHM7XG4gICAgfVxufVxuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY2xhc3MgR3JvdXBJbmZvU2VydmljZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuX2NvbHVtbkxpc3QgPSBDb2x1bW5MaXN0LmVtcHR5O1xuICAgIH1cbiAgICBnZXQgY29sdW1ucygpIHtcbiAgICAgICAgcmV0dXJuIGV4cGFuZENvbHVtbnModGhpcy5fY29sdW1uTGlzdCgpLnRvQXJyYXkoKSkuZmlsdGVyKGlzQ29sdW1uQ29tcG9uZW50KTtcbiAgICB9XG4gICAgcmVnaXN0ZXJDb2x1bW5zQ29udGFpbmVyKGNvbHVtbnMpIHtcbiAgICAgICAgdGhpcy5fY29sdW1uTGlzdCA9IGNvbHVtbnM7XG4gICAgfVxuICAgIGZvcm1hdEZvckdyb3VwKGl0ZW0pIHtcbiAgICAgICAgY29uc3QgY29sdW1uID0gdGhpcy5jb2x1bW5Gb3JHcm91cChpdGVtKTtcbiAgICAgICAgcmV0dXJuIGNvbHVtbiA/IGNvbHVtbi5mb3JtYXQgOiBcIlwiO1xuICAgIH1cbiAgICBpc0dyb3VwYWJsZShncm91cEZpZWxkKSB7XG4gICAgICAgIGNvbnN0IFtjb2x1bW5dID0gdGhpcy5jb2x1bW5zLmZpbHRlcih4ID0+IHguZmllbGQgPT09IGdyb3VwRmllbGQpO1xuICAgICAgICByZXR1cm4gY29sdW1uID8gY29sdW1uLmdyb3VwYWJsZSA6IHRydWU7XG4gICAgfVxuICAgIGdyb3VwVGl0bGUoaXRlbSkge1xuICAgICAgICBjb25zdCBjb2x1bW4gPSB0aGlzLmNvbHVtbkZvckdyb3VwKGl0ZW0pO1xuICAgICAgICByZXR1cm4gY29sdW1uID8gKGNvbHVtbi50aXRsZSB8fCBjb2x1bW4uZmllbGQpIDogdGhpcy5ncm91cEZpZWxkKGl0ZW0pO1xuICAgIH1cbiAgICBncm91cEhlYWRlclRlbXBsYXRlKGl0ZW0pIHtcbiAgICAgICAgY29uc3QgY29sdW1uID0gdGhpcy5jb2x1bW5Gb3JHcm91cChpdGVtKTtcbiAgICAgICAgcmV0dXJuIGNvbHVtbiA/IGNvbHVtbi5ncm91cEhlYWRlclRlbXBsYXRlUmVmIHx8IGNvbHVtbi5ncm91cEhlYWRlckNvbHVtblRlbXBsYXRlUmVmIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgICBncm91cEZpZWxkKGdyb3VwKSB7XG4gICAgICAgIHJldHVybiBncm91cC5kYXRhID8gZ3JvdXAuZGF0YS5maWVsZCA6IGdyb3VwLmZpZWxkO1xuICAgIH1cbiAgICBjb2x1bW5Gb3JHcm91cChncm91cCkge1xuICAgICAgICBjb25zdCBmaWVsZCA9IHRoaXMuZ3JvdXBGaWVsZChncm91cCk7XG4gICAgICAgIGNvbnN0IFtjb2x1bW5dID0gdGhpcy5jb2x1bW5zLmZpbHRlcih4ID0+IHguZmllbGQgPT09IGZpZWxkKTtcbiAgICAgICAgcmV0dXJuIGNvbHVtbjtcbiAgICB9XG59XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgQ2hhbmdlTm90aWZpY2F0aW9uU2VydmljZSA9IGNsYXNzIENoYW5nZU5vdGlmaWNhdGlvblNlcnZpY2Uge1xuICAgIGNvbnN0cnVjdG9yKG5nWm9uZSkge1xuICAgICAgICB0aGlzLm5nWm9uZSA9IG5nWm9uZTtcbiAgICAgICAgdGhpcy5jaGFuZ2VzID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIH1cbiAgICBub3RpZnkoKSB7XG4gICAgICAgIGlmICghdGhpcy5zdWJzY3JpcHRpb24gfHwgdGhpcy5zdWJzY3JpcHRpb24uY2xvc2VkKSB7XG4gICAgICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IHRoaXMubmdab25lLm9uU3RhYmxlXG4gICAgICAgICAgICAgICAgLmFzT2JzZXJ2YWJsZSgpLnBpcGUodGFrZSgxKSlcbiAgICAgICAgICAgICAgICAuc3Vic2NyaWJlKCgpID0+IHRoaXMuY2hhbmdlcy5lbWl0KCkpO1xuICAgICAgICB9XG4gICAgfVxufTtcbkNoYW5nZU5vdGlmaWNhdGlvblNlcnZpY2UgPSBfX2RlY29yYXRlKFtcbiAgICBJbmplY3RhYmxlKCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtOZ1pvbmVdKVxuXSwgQ2hhbmdlTm90aWZpY2F0aW9uU2VydmljZSk7XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgbm8tcmVjb3JkcyB0ZW1wbGF0ZSBvZiB0aGUgR3JpZC4gUHJvdmlkZXMgYW4gb3B0aW9uIHRvIGN1c3RvbWl6ZSB0aGVcbiAqIGFwcGVhcmFuY2Ugb2YgdGhlIGl0ZW0gdGhhdCBpcyBkaXNwbGF5ZWQgd2hlbiBubyBkYXRhIGlzIHByZXNlbnQuIFRvIGRlZmluZSB0aGUgbm8tcmVjb3JkcyB0ZW1wbGF0ZSxcbiAqIG5lc3QgYW4gYDxuZy10ZW1wbGF0ZT5gIHRhZyB3aXRoIHRoZSBga2VuZG9HcmlkTm9SZWNvcmRzVGVtcGxhdGVgIGRpcmVjdGl2ZSBpbnNpZGUgYDxrZW5kby1ncmlkPmAuXG4gKlxuICogPiBXaGVuIHRoZSBsb2NrZWQgY29sdW1ucyBvZiB0aGUgR3JpZCBhcmUgaW4gdXNlLCB0aGUgdGVtcGxhdGUgaXMgZGlzcGxheWVkIGluIHRoZSBub24tbG9ja2VkIHBhcnQgb2YgdGhlIGNvbnRlbnQuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgdGVtcGxhdGU6IGBcbiAqICAgICAgIDxrZW5kby1ncmlkIFtkYXRhXT1cImRhdGFcIj5cbiAqICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdElEXCI+PC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIj48L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJVbml0UHJpY2VcIj48L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkTm9SZWNvcmRzVGVtcGxhdGU+XG4gKiAgICAgICAgICAgIFRoZXJlIGFyZSBub3QgcHJvZHVjdHMuIDxhIGhyZWY9XCIjXCIgKGNsaWNrKT1cInJlZnJlc2goKVwiPkNsaWNrIGhlcmUgdG8gcmVmcmVzaDwvYT4uXG4gKiAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgICAgICA8L2tlbmRvLWdyaWQ+XG4gKiAgIGBcbiAqIH0pXG4gKlxuICogY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAqICAgICBwdWJsaWMgZGF0YSA9IFtdO1xuICogICAgIHB1YmxpYyByZWZyZXNoKCkge1xuICogICAgICAgdGhpcy5kYXRhID0gW3tcbiAqICAgICAgICAgICAgXCJQcm9kdWN0SURcIjogMSxcbiAqICAgICAgICAgICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYWlcIixcbiAqICAgICAgICAgICAgXCJVbml0UHJpY2VcIjogMTguMDAwMCxcbiAqICAgICAgICAgICAgXCJEaXNjb250aW51ZWRcIjogZmFsc2UsXG4gKiAgICAgICAgICAgIFwiQ2F0ZWdvcnlcIjoge1xuICogICAgICAgICAgICAgICAgXCJDYXRlZ29yeUlEXCI6IDEsXG4gKiAgICAgICAgICAgICAgICBcIkNhdGVnb3J5TmFtZVwiOiBcIkJldmVyYWdlc1wiLFxuICogICAgICAgICAgICAgICAgXCJEZXNjcmlwdGlvblwiOiBcIlNvZnQgZHJpbmtzLCBjb2ZmZWVzLCB0ZWFzLCBiZWVycywgYW5kIGFsZXNcIlxuICogICAgICAgICAgICB9XG4gKiAgICAgICAgICB9LCB7XG4gKiAgICAgICAgICAgIFwiUHJvZHVjdElEXCI6IDIsXG4gKiAgICAgICAgICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFuZ1wiLFxuICogICAgICAgICAgICBcIlVuaXRQcmljZVwiOiAxOS4wMDAwLFxuICogICAgICAgICAgICBcIkRpc2NvbnRpbnVlZFwiOiBmYWxzZSxcbiAqICAgICAgICAgICAgXCJDYXRlZ29yeVwiOiB7XG4gKiAgICAgICAgICAgICAgICBcIkNhdGVnb3J5SURcIjogMSxcbiAqICAgICAgICAgICAgICAgIFwiQ2F0ZWdvcnlOYW1lXCI6IFwiQmV2ZXJhZ2VzXCIsXG4gKiAgICAgICAgICAgICAgICBcIkRlc2NyaXB0aW9uXCI6IFwiU29mdCBkcmlua3MsIGNvZmZlZXMsIHRlYXMsIGJlZXJzLCBhbmQgYWxlc1wiXG4gKiAgICAgICAgICAgIH1cbiAqICAgICAgICAgIH0sIHtcbiAqICAgICAgICAgICAgXCJQcm9kdWN0SURcIjogMyxcbiAqICAgICAgICAgICAgXCJQcm9kdWN0TmFtZVwiOiBcIkFuaXNlZWQgU3lydXBcIixcbiAqICAgICAgICAgICAgXCJVbml0UHJpY2VcIjogMTAuMDAwMCxcbiAqICAgICAgICAgICAgXCJEaXNjb250aW51ZWRcIjogZmFsc2UsXG4gKiAgICAgICAgICAgIFwiQ2F0ZWdvcnlcIjoge1xuICogICAgICAgICAgICAgICAgXCJDYXRlZ29yeUlEXCI6IDIsXG4gKiAgICAgICAgICAgICAgICBcIkNhdGVnb3J5TmFtZVwiOiBcIkNvbmRpbWVudHNcIixcbiAqICAgICAgICAgICAgICAgIFwiRGVzY3JpcHRpb25cIjogXCJTd2VldCBhbmQgc2F2b3J5IHNhdWNlcywgcmVsaXNoZXMsIHNwcmVhZHMsIGFuZCBzZWFzb25pbmdzXCJcbiAqICAgICAgICAgICAgfVxuICogICAgICAgIH1dO1xuICpcbiAqICAgICB9XG4gKiB9XG4gKlxuICogYGBgXG4gKi9cbmxldCBOb1JlY29yZHNUZW1wbGF0ZURpcmVjdGl2ZSA9IGNsYXNzIE5vUmVjb3Jkc1RlbXBsYXRlRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZVJlZikge1xuICAgICAgICB0aGlzLnRlbXBsYXRlUmVmID0gdGVtcGxhdGVSZWY7XG4gICAgfVxufTtcbk5vUmVjb3Jkc1RlbXBsYXRlRGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkTm9SZWNvcmRzVGVtcGxhdGVdJ1xuICAgIH0pLFxuICAgIF9fcGFyYW0oMCwgT3B0aW9uYWwoKSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtUZW1wbGF0ZVJlZl0pXG5dLCBOb1JlY29yZHNUZW1wbGF0ZURpcmVjdGl2ZSk7XG5cbmNvbnN0IHNldCA9IHZhbHVlID0+IHBhaXIgPT4gcGFpci5mb3JFYWNoKHggPT4geC5zdHlsZS5oZWlnaHQgPSB2YWx1ZSk7XG5jb25zdCBjbGVhckhlaWdodCA9IHBhaXJzID0+IHBhaXJzXG4gICAgLmZpbHRlcigoW2xlZnQsIHJpZ2h0XSkgPT4gbGVmdC5zdHlsZS5oZWlnaHQgfHwgcmlnaHQuc3R5bGUuaGVpZ2h0KVxuICAgIC5mb3JFYWNoKHNldChcIlwiKSk7XG5jb25zdCB6aXAkMSA9IChhcnIxLCBhcnIyKSA9PiB7XG4gICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgZm9yIChsZXQgaWR4ID0gMCwgbGVuID0gYXJyMS5sZW5ndGg7IGlkeCA8IGxlbjsgaWR4KyspIHtcbiAgICAgICAgaWYgKCFhcnIyW2lkeF0pIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdC5wdXNoKFthcnIxW2lkeF0sIGFycjJbaWR4XV0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbmNvbnN0IHNldEhlaWdodCA9IGhlaWdodHMgPT4gKHJvdywgaWR4KSA9PiBzZXQoYCR7aGVpZ2h0c1tpZHhdICsgMX1weGApKHJvdyk7XG5jb25zdCBnZXRIZWlnaHRzID0gcm93cyA9PiByb3dzLm1hcCgoW2xlZnQsIHJpZ2h0XSkgPT4ge1xuICAgIGNvbnN0IGhlaWdodCA9IGxlZnQub2Zmc2V0SGVpZ2h0O1xuICAgIGNvbnN0IG9mZnNldEhlaWdodDIgPSByaWdodC5vZmZzZXRIZWlnaHQ7XG4gICAgaWYgKGhlaWdodCA8IG9mZnNldEhlaWdodDIpIHtcbiAgICAgICAgcmV0dXJuIG9mZnNldEhlaWdodDI7XG4gICAgfVxuICAgIHJldHVybiBoZWlnaHQ7XG59KTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBzeW5jUm93c0hlaWdodCA9ICh0YWJsZTEsIHRhYmxlMikgPT4ge1xuICAgIGNvbnN0IGFjdGl2ZUVsZW1lbnQgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuICAgIGNvbnN0IHJvd3MgPSB6aXAkMSh0YWJsZTEucm93cywgdGFibGUyLnJvd3MpO1xuICAgIGNsZWFySGVpZ2h0KHJvd3MpO1xuICAgIGNvbnN0IGhlaWdodHMgPSBnZXRIZWlnaHRzKHJvd3MpO1xuICAgIFt0YWJsZTEsIHRhYmxlMl0uZm9yRWFjaCh4ID0+IHguc3R5bGUuZGlzcGxheSA9ICdub25lJyk7XG4gICAgcm93cy5mb3JFYWNoKHNldEhlaWdodChoZWlnaHRzKSk7XG4gICAgW3RhYmxlMSwgdGFibGUyXS5mb3JFYWNoKHggPT4geC5zdHlsZS5kaXNwbGF5ID0gJycpO1xuICAgIGlmIChkb2N1bWVudC5hY3RpdmVFbGVtZW50ICE9PSBhY3RpdmVFbGVtZW50ICYmXG4gICAgICAgICh0YWJsZTEuY29udGFpbnMoYWN0aXZlRWxlbWVudCkgfHwgdGFibGUyLmNvbnRhaW5zKGFjdGl2ZUVsZW1lbnQpKSkge1xuICAgICAgICBhY3RpdmVFbGVtZW50LmZvY3VzKCk7XG4gICAgfVxufTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBNZW51VGFiYmluZ1NlcnZpY2UgPSBjbGFzcyBNZW51VGFiYmluZ1NlcnZpY2Uge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5pc0NvbHVtbk1lbnUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pc1BvcHVwT3BlbiA9IGZhbHNlO1xuICAgIH1cbn07XG5NZW51VGFiYmluZ1NlcnZpY2UgPSBfX2RlY29yYXRlKFtcbiAgICBJbmplY3RhYmxlKClcbl0sIE1lbnVUYWJiaW5nU2VydmljZSk7XG5cbi8qKlxuICogUmVwcmVzZW50cyBhIHNlcnZpY2UgdG8gc2V0IHRoZSBmaWx0ZXIgZGVzY3JpcHRvclxuICogKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyByZXVzYWJsZWN1c3RvbWZpbHRlcnNfZ3JpZCAlfSkpLlxuICovXG5sZXQgRmlsdGVyU2VydmljZSA9IGNsYXNzIEZpbHRlclNlcnZpY2Uge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihtZW51VGFiYmluZ1NlcnZpY2UpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVzIHdoZW4gdGhlIGZpbHRlciBkZXNjcmlwdG9ycyBpcyBzZXQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNoYW5nZXMgPSBuZXcgU3ViamVjdCgpO1xuICAgICAgICB0aGlzLm1lbnVUYWJiaW5nU2VydmljZSA9IG1lbnVUYWJiaW5nU2VydmljZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgZmlsdGVyIGRlc2NyaXB0b3IuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0NvbXBvc2l0ZUZpbHRlckRlc2NyaXB0b3J9IHZhbHVlIC0gVGhlIGZpbHRlciBkZXNjcmlwdG9yIHRoYXQgd2lsbCBiZSBzZXQuXG4gICAgICovXG4gICAgZmlsdGVyKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuY2hhbmdlcy5uZXh0KHZhbHVlKTtcbiAgICB9XG59O1xuRmlsdGVyU2VydmljZSA9IF9fZGVjb3JhdGUoW1xuICAgIF9fcGFyYW0oMCwgT3B0aW9uYWwoKSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtNZW51VGFiYmluZ1NlcnZpY2VdKVxuXSwgRmlsdGVyU2VydmljZSk7XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgcGFnZXIgdGVtcGxhdGUgd2hpY2ggaGVscHMgdG8gY3VzdG9taXplIHRoZSBwYWdlciBhcHBlYXJhbmNlIGluIHRoZSBHcmlkLiBUbyBkZWZpbmUgYSBwYWdlclxuICogdGVtcGxhdGUsIG5lc3QgYW4gYDxuZy10ZW1wbGF0ZT5gIHRhZyB3aXRoIHRoZSBga2VuZG9QYWdlclRlbXBsYXRlYCBkaXJlY3RpdmUgaW5zaWRlIGA8a2VuZG8tZ3JpZD5gLlxuICpcbiAqIFRoZSB0ZW1wbGF0ZSBjb250ZXh0IHByb3ZpZGVzIHRoZSBmb2xsb3dpbmcgZmllbGRzOlxuICogKiBgY3VycmVudFBhZ2VgJm1kYXNoO1RoZSBpbmRleCBvZiB0aGUgZGlzcGxheWVkIHBhZ2UuXG4gKiAqIGBwYWdlU2l6ZWAmbWRhc2g7VGhlIHZhbHVlIG9mIHRoZSBjdXJyZW50IGBwYWdlU2l6ZWAuXG4gKiAqIGBza2lwYCZtZGFzaDtUaGUgY3VycmVudCBza2lwIHZhbHVlLlxuICogKiBgdG90YWxgJm1kYXNoO1RoZSB0b3RhbCBudW1iZXIgb2YgcmVjb3Jkcy5cbiAqICogYHRvdGFsUGFnZXNgJm1kYXNoO1RoZSB0b3RhbCBudW1iZXIgb2YgYXZhaWxhYmxlIHBhZ2VzLlxuICogKiAgTmVlZHMgdG8gYmUgcHJvdmlkZWQgYXMgYW4gaW5wdXQgdG8gaW5uZXIgcGFnZXIgY29tcG9uZW50cyB1c2VkIHdpdGhpbiB0aGUgdGVtcGxhdGUgd2hlbiB0aGUgR3JpZCBpcyBuYXZpZ2FibGUuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgIDxrZW5kby1ncmlkXG4gKiAgICAgICAgW2tlbmRvR3JpZEJpbmRpbmddPVwiZ3JpZERhdGFcIlxuICogICAgICAgIFtwYWdlU2l6ZV09XCIxXCJcbiAqICAgICAgICBbcGFnZWFibGVdPVwidHJ1ZVwiXG4gKiAgICAgID5cbiAqICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIlByb2R1Y3RJRFwiIHRpdGxlPVwiSURcIiB3aWR0aD1cIjQwXCI+XG4gKiAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIiB0aXRsZT1cIk5hbWVcIiB3aWR0aD1cIjI1MFwiPlxuICogICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIlVuaXRQcmljZVwiIHRpdGxlPVwiUHJpY2VcIiB3aWR0aD1cIjgwXCIgZm9ybWF0PVwiezA6Y31cIj5cbiAqICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKlxuICogICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvUGFnZXJUZW1wbGF0ZSBsZXQtdG90YWxQYWdlcz1cInRvdGFsUGFnZXNcIiBsZXQtY3VycmVudFBhZ2U9XCJjdXJyZW50UGFnZVwiPlxuICogICAgICAgICAgPGtlbmRvLXBhZ2VyLXByZXYtYnV0dG9ucz48L2tlbmRvLXBhZ2VyLXByZXYtYnV0dG9ucz5cbiAqICAgICAgICAgIDxrZW5kby1wYWdlci1udW1lcmljLWJ1dHRvbnMgW2J1dHRvbkNvdW50XT1cIjEwXCI+PC9rZW5kby1wYWdlci1udW1lcmljLWJ1dHRvbnM+XG4gKiAgICAgICAgICA8a2VuZG8tcGFnZXItbmV4dC1idXR0b25zPjwva2VuZG8tcGFnZXItbmV4dC1idXR0b25zPlxuICogICAgICAgICAgPGtlbmRvLXBhZ2VyLWluZm8+PC9rZW5kby1wYWdlci1pbmZvPlxuICogICAgICAgICAgQ3VycmVudCBwYWdlOiB7e2N1cnJlbnRQYWdlfX1cbiAqICAgICAgIDwvbmctdGVtcGxhdGU+XG4gKlxuICogICAgPC9rZW5kby1ncmlkPlxuICogICAgIGBcbiAqIH0pXG4gKlxuICogY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAqICAgICBwdWJsaWMgZ3JpZERhdGEgPSBbe1xuICogICAgICAgICBcIlByb2R1Y3RJRFwiOiAxLFxuICogICAgICAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhaVwiLFxuICogICAgICAgICBcIlVuaXRQcmljZVwiOiAxOC4wMDAwLFxuICogICAgICAgICBcIkRpc2NvbnRpbnVlZFwiOiBmYWxzZVxuICogICAgICAgfSwge1xuICogICAgICAgICBcIlByb2R1Y3RJRFwiOiAyLFxuICogICAgICAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhbmdcIixcbiAqICAgICAgICAgXCJVbml0UHJpY2VcIjogMTkuMDAwMCxcbiAqICAgICAgICAgXCJEaXNjb250aW51ZWRcIjogdHJ1ZVxuICogICAgICAgfVxuICogICAgIF07XG4gKiB9XG4gKlxuICogYGBgXG4gKi9cbmxldCBQYWdlclRlbXBsYXRlRGlyZWN0aXZlID0gY2xhc3MgUGFnZXJUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IodGVtcGxhdGVSZWYpIHtcbiAgICAgICAgdGhpcy50ZW1wbGF0ZVJlZiA9IHRlbXBsYXRlUmVmO1xuICAgIH1cbn07XG5QYWdlclRlbXBsYXRlRGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9QYWdlclRlbXBsYXRlXSdcbiAgICB9KSxcbiAgICBfX3BhcmFtKDAsIE9wdGlvbmFsKCkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbVGVtcGxhdGVSZWZdKVxuXSwgUGFnZXJUZW1wbGF0ZURpcmVjdGl2ZSk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgUERGU2VydmljZSA9IGNsYXNzIFBERlNlcnZpY2Uge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5zYXZlUERGID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLmRyYXdQREYgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuZXhwb3J0Q2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuZGF0YUNoYW5nZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgfVxuICAgIHNhdmUoY29tcG9uZW50KSB7XG4gICAgICAgIHRoaXMuZW1pdEV2ZW50KHRoaXMuc2F2ZVBERiwgY29tcG9uZW50KTtcbiAgICB9XG4gICAgZHJhdyhjb21wb25lbnQsIHByb21pc2UpIHtcbiAgICAgICAgdGhpcy5lbWl0RXZlbnQodGhpcy5kcmF3UERGLCB7IGNvbXBvbmVudCwgcHJvbWlzZSB9KTtcbiAgICB9XG4gICAgZW1pdEV2ZW50KGVtaXR0ZXIsIGFyZ3MpIHtcbiAgICAgICAgaWYgKGVtaXR0ZXIub2JzZXJ2ZXJzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgaWYgKGlzRGV2TW9kZSgpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDcmVhdGluZyBQREYgcmVxdWlyZXMgaW5jbHVkaW5nIHRoZSBQREZNb2R1bGUgYW5kIGFkZGluZyB0aGUgPGtlbmRvLWdyaWQtcGRmPiBjb21wb25lbnQuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBlbWl0dGVyLmVtaXQoYXJncyk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuUERGU2VydmljZSA9IF9fZGVjb3JhdGUoW1xuICAgIEluamVjdGFibGUoKVxuXSwgUERGU2VydmljZSk7XG5cbi8qKlxuICogQXJndW1lbnRzIGZvciB0aGUgYHBkZkV4cG9ydGAgZXZlbnQuXG4gKi9cbmNsYXNzIFBERkV4cG9ydEV2ZW50IGV4dGVuZHMgUHJldmVudGFibGVFdmVudCB7XG59XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgU3VzcGVuZFNlcnZpY2UgPSBjbGFzcyBTdXNwZW5kU2VydmljZSB7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnNjcm9sbCA9IGZhbHNlO1xuICAgIH1cbn07XG5TdXNwZW5kU2VydmljZSA9IF9fZGVjb3JhdGUoW1xuICAgIEluamVjdGFibGUoKVxuXSwgU3VzcGVuZFNlcnZpY2UpO1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZTogb2JqZWN0LWxpdGVyYWwtc29ydC1rZXlzICovXG5jb25zdCBib290c3RyYXBUb01lZGlhID0gKG1lZGlhKSA9PiAoKHtcbiAgICBcInhzXCI6IFwiKG1heC13aWR0aDogNTc2cHgpXCIsXG4gICAgXCJzbVwiOiBcIihtaW4td2lkdGg6IDU3NnB4KVwiLFxuICAgIFwibWRcIjogXCIobWluLXdpZHRoOiA3NjhweClcIixcbiAgICBcImxnXCI6IFwiKG1pbi13aWR0aDogOTkycHgpXCIsXG4gICAgXCJ4bFwiOiBcIihtaW4td2lkdGg6IDEyMDBweClcIlxufSlbbWVkaWFdIHx8IG1lZGlhKTtcbi8qIHRzbGludDplbmFibGU6IG9iamVjdC1saXRlcmFsLXNvcnQta2V5cyAqL1xuY29uc3QgYnJvd3Nlck1hdGNoTWVkaWEgPSAobWVkaWEpID0+IHdpbmRvdy5tYXRjaE1lZGlhKG1lZGlhKS5tYXRjaGVzO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBSZXNwb25zaXZlU2VydmljZSA9IGNsYXNzIFJlc3BvbnNpdmVTZXJ2aWNlIHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAaGlkZGVuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm1hdGNoTWVkaWEgPSBicm93c2VyTWF0Y2hNZWRpYTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG1hdGNoZXNNZWRpYShtZWRpYSkge1xuICAgICAgICByZXR1cm4gIW1lZGlhIHx8IHRoaXMubWF0Y2hNZWRpYShib290c3RyYXBUb01lZGlhKG1lZGlhKSk7XG4gICAgfVxufTtcblJlc3BvbnNpdmVTZXJ2aWNlID0gX19kZWNvcmF0ZShbXG4gICAgSW5qZWN0YWJsZSgpXG5dLCBSZXNwb25zaXZlU2VydmljZSk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgRXhjZWxTZXJ2aWNlID0gY2xhc3MgRXhjZWxTZXJ2aWNlIHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuc2F2ZVRvRXhjZWwgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuZXhwb3J0Q2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgfVxuICAgIHNhdmUoY29tcG9uZW50KSB7XG4gICAgICAgIGlmICh0aGlzLnNhdmVUb0V4Y2VsLm9ic2VydmVycy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGlmIChpc0Rldk1vZGUoKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignU2F2aW5nIGV4Y2VsIHJlcXVpcmVzIGluY2x1ZGluZyB0aGUgRXhjZWxNb2R1bGUgYW5kIGFkZGluZyB0aGUgPGtlbmRvLWdyaWQtZXhjZWw+IGNvbXBvbmVudC4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2F2ZVRvRXhjZWwuZW1pdChjb21wb25lbnQpO1xuICAgICAgICB9XG4gICAgfVxufTtcbkV4Y2VsU2VydmljZSA9IF9fZGVjb3JhdGUoW1xuICAgIEluamVjdGFibGUoKVxuXSwgRXhjZWxTZXJ2aWNlKTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSB0b29sYmFyIHRlbXBsYXRlIG9mIHRoZSBHcmlkLlxuICpcbiAqIFRoZSB0ZW1wbGF0ZSBjb250ZXh0IGhhcyB0aGUgZm9sbG93aW5nIGZpZWxkOlxuICogLSBgcG9zaXRpb25gJm1kYXNoO1RoZSBwb3NpdGlvbiBhdCB3aGljaCB0aGUgdG9vbGJhciB0ZW1wbGF0ZSBpcyByZW5kZXJlZC4gVGhlIHBvc3NpYmxlIHZhbHVlcyBhcmUgXCJ0b3BcIiBhbmQgXCJib3R0b21cIi5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHMtcHJldmlld1xuICpcbiAqIF9AQ29tcG9uZW50KHtcbiAqICAgICBzZWxlY3RvcjogJ215LWFwcCcsXG4gKiAgICAgdGVtcGxhdGU6IGBcbiAqICAgICAgIDxkaXYgY2xhc3M9XCJleGFtcGxlLWNvbmZpZ1wiPlxuICogICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgaWQ9XCJ0b3BcIiBuYW1lPVwicG9zaXRpb25cIiBjbGFzcz1cImstcmFkaW9cIiB2YWx1ZT1cInRvcFwiIGNoZWNrZWQgKGNsaWNrKT1cInBvc2l0aW9uQ2hhbmdlKCRldmVudClcIi8+XG4gKiAgICAgICAgIDxsYWJlbCBjbGFzcz1cImstcmFkaW8tbGFiZWxcIiBmb3I9XCJ0b3BcIj5Ub3A8L2xhYmVsPjxici8+XG4gKiAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIiBpZD1cImJvdHRvbVwiIG5hbWU9XCJwb3NpdGlvblwiIGNsYXNzPVwiay1yYWRpb1wiIHZhbHVlPVwiYm90dG9tXCIgKGNsaWNrKT1cInBvc2l0aW9uQ2hhbmdlKCRldmVudClcIi8+XG4gKiAgICAgICAgIDxsYWJlbCBjbGFzcz1cImstcmFkaW8tbGFiZWxcIiBmb3I9XCJib3R0b21cIj5Cb3R0b208L2xhYmVsPjxici8+XG4gKiAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIiBpZD1cImJvdGhcIiBuYW1lPVwicG9zaXRpb25cIiB2YWx1ZT1cImJvdGhcIiBjbGFzcz1cImstcmFkaW9cIiAoY2xpY2spPVwicG9zaXRpb25DaGFuZ2UoJGV2ZW50KVwiLz5cbiAqICAgICAgICAgPGxhYmVsIGNsYXNzPVwiay1yYWRpby1sYWJlbFwiIGZvcj1cImJvdGhcIj5Cb3RoPC9sYWJlbD48YnIvPlxuICogICAgICAgPC9kaXY+XG4gKiAgICAgICA8a2VuZG8tZ3JpZCBbZGF0YV09XCJncmlkRGF0YVwiIHN0eWxlPVwiaGVpZ2h0OiAyMDBweFwiPlxuICogICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkVG9vbGJhclRlbXBsYXRlIFtwb3NpdGlvbl09XCJwb3NpdGlvblwiIGxldC1wb3NpdGlvbj1cInBvc2l0aW9uXCI+XG4gKiAgICAgICAgICAgICAgICA8YnV0dG9uIChjbGljayk9XCJvbkNsaWNrKClcIiBjbGFzcz1cImstYnV0dG9uXCI+Q3VzdG9tIGFjdGlvbjwvYnV0dG9uPlxuICogICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJQcm9kdWN0TmFtZVwiPlxuICogICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJVbml0UHJpY2VcIj5cbiAqICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgICA8L2tlbmRvLWdyaWQ+XG4gKiAgICAgYFxuICogfSlcbiAqXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICAgIHB1YmxpYyBwb3NpdGlvbjogJ3RvcCcgfCAnYm90dG9tJyB8ICdib3RoJyA9ICd0b3AnO1xuICpcbiAqICAgICBwdWJsaWMgZ3JpZERhdGEgPSBbe1xuICogICAgICAgICBcIlByb2R1Y3RJRFwiOiAxLFxuICogICAgICAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhaVwiLFxuICogICAgICAgICBcIlVuaXRQcmljZVwiOiAxOC4wMDAwLFxuICogICAgICAgICBcIkRpc2NvbnRpbnVlZFwiOiBmYWxzZVxuICogICAgICAgfSwge1xuICogICAgICAgICBcIlByb2R1Y3RJRFwiOiAyLFxuICogICAgICAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhbmdcIixcbiAqICAgICAgICAgXCJVbml0UHJpY2VcIjogMTkuMDAwMCxcbiAqICAgICAgICAgXCJEaXNjb250aW51ZWRcIjogdHJ1ZVxuICogICAgICAgfVxuICogICAgIF07XG4gKlxuICogICAgIHB1YmxpYyBvbkNsaWNrKCk6IHZvaWQge1xuICogICAgICAgICBjb25zb2xlLmxvZyhcImJ1dHRvbiB3YXMgY2xpY2tlZFwiKTtcbiAqICAgICB9XG4gKlxuICogICAgIHB1YmxpYyBwb3NpdGlvbkNoYW5nZSh7IHRhcmdldCB9KTogdm9pZCB7XG4gKiAgICAgICAgdGhpcy5wb3NpdGlvbiA9IHRhcmdldC52YWx1ZTtcbiAqICAgICB9XG4gKiB9XG4gKlxuICogYGBgXG4gKi9cbmxldCBUb29sYmFyVGVtcGxhdGVEaXJlY3RpdmUgPSBjbGFzcyBUb29sYmFyVGVtcGxhdGVEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHRlbXBsYXRlUmVmKSB7XG4gICAgICAgIHRoaXMudGVtcGxhdGVSZWYgPSB0ZW1wbGF0ZVJlZjtcbiAgICAgICAgdGhpcy5fcG9zaXRpb24gPSBcInRvcFwiO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgcG9zaXRpb24gb2YgdGhlIHRvb2xiYXIgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyB0b29sYmFydGVtcGxhdGVfZ3JpZCAlfSkpLlxuICAgICAqXG4gICAgICogVGhlIHBvc3NpYmxlIHZhbHVlcyBhcmU6XG4gICAgICogLSBgdG9wYCZtZGFzaDtQb3NpdGlvbnMgdGhlIHRvb2xiYXIgYWJvdmUgdGhlIGdyb3VwIHBhbmVsIG9yIGhlYWRlci5cbiAgICAgKiAtIGBib3R0b21gJm1kYXNoO1Bvc2l0aW9ucyB0aGUgdG9vbGJhciBiZWxvdyB0aGUgcGFnZXIuXG4gICAgICogLSBgYm90aGAmbWRhc2g7RGlzcGxheXMgdHdvIHRvb2xiYXIgaW5zdGFuY2VzLiBQb3NpdGlvbnMgdGhlIGZpcnN0IG9uZSBhYm92ZVxuICAgICAqIHRoZSBncm91cCBwYW5lbCBvciBoZWFkZXIgYW5kIHRoZSBzZWNvbmQgb25lIGJlbG93IHRoZSBwYWdlci5cbiAgICAgKi9cbiAgICBzZXQgcG9zaXRpb24ocG9zaXRpb24pIHtcbiAgICAgICAgdGhpcy5fcG9zaXRpb24gPSBwb3NpdGlvbjtcbiAgICB9XG4gICAgZ2V0IHBvc2l0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcG9zaXRpb247XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KFwicG9zaXRpb25cIiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtTdHJpbmddKVxuXSwgVG9vbGJhclRlbXBsYXRlRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJwb3NpdGlvblwiLCBudWxsKTtcblRvb2xiYXJUZW1wbGF0ZURpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZFRvb2xiYXJUZW1wbGF0ZV0nXG4gICAgfSksXG4gICAgX19wYXJhbSgwLCBPcHRpb25hbCgpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1RlbXBsYXRlUmVmXSlcbl0sIFRvb2xiYXJUZW1wbGF0ZURpcmVjdGl2ZSk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgU2Nyb2xsU3luY1NlcnZpY2UgPSBjbGFzcyBTY3JvbGxTeW5jU2VydmljZSB7XG4gICAgY29uc3RydWN0b3Iobmdab25lKSB7XG4gICAgICAgIHRoaXMubmdab25lID0gbmdab25lO1xuICAgICAgICB0aGlzLmNoYW5nZXMgPSBuZXcgU3ViamVjdCgpO1xuICAgICAgICB0aGlzLmVsZW1lbnRzID0gW107XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucyA9IG5ldyBTdWJzY3JpcHRpb24oKTtcbiAgICAgICAgdGhpcy5oZWFkZXJTdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKCk7XG4gICAgICAgIHRoaXMuYm9keVN1YnNjcmlwdGlvbiA9IG5ldyBTdWJzY3JpcHRpb24oKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZCh0aGlzLmNoYW5nZXMuc3Vic2NyaWJlKGFyZ3MgPT4gdGhpcy5zY3JvbGxMZWZ0KGFyZ3MpKSk7XG4gICAgfVxuICAgIHJlZ2lzdGVyRW1pdHRlcihlbCwgc291cmNlVHlwZSkge1xuICAgICAgICB0aGlzLnVucmVnaXN0ZXIoc291cmNlVHlwZSk7XG4gICAgICAgIHRoaXMuZWxlbWVudHMucHVzaCh7IGVsZW1lbnQ6IGVsLCBzb3VyY2VUeXBlIH0pO1xuICAgICAgICBpZiAoc291cmNlVHlwZSA9PT0gXCJib2R5XCIgfHwgc291cmNlVHlwZSA9PT0gXCJoZWFkZXJcIikge1xuICAgICAgICAgICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG9icyA9IGZyb21FdmVudChlbCwgXCJzY3JvbGxcIikucGlwZShtYXAoKHsgdGFyZ2V0OiB7IHNjcm9sbExlZnQgfSB9KSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICBzY3JvbGxMZWZ0LFxuICAgICAgICAgICAgICAgICAgICBzb3VyY2VUeXBlXG4gICAgICAgICAgICAgICAgfSkpKTtcbiAgICAgICAgICAgICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBvYnMucGlwZShkaXN0aW5jdFVudGlsQ2hhbmdlZCgoeCwgeSkgPT4gKHguc2Nyb2xsTGVmdCA9PT0geS5zY3JvbGxMZWZ0KSksIGZpbHRlcih4ID0+ICF0aGlzLnNvdXJjZSB8fCB0aGlzLnNvdXJjZSA9PT0geC5zb3VyY2VUeXBlKSwgdGFwKHggPT4gdGhpcy5zb3VyY2UgPSB4LnNvdXJjZVR5cGUpKVxuICAgICAgICAgICAgICAgICAgICAuc3Vic2NyaWJlKCh4KSA9PiB0aGlzLmNoYW5nZXMubmV4dCh4KSk7XG4gICAgICAgICAgICAgICAgc3Vic2NyaXB0aW9uLmFkZChvYnMucGlwZShmaWx0ZXIoeCA9PiB0aGlzLnNvdXJjZSAmJiB0aGlzLnNvdXJjZSAhPT0geC5zb3VyY2VUeXBlKSlcbiAgICAgICAgICAgICAgICAgICAgLnN1YnNjcmliZSgoKSA9PiB0aGlzLnNvdXJjZSA9IHVuZGVmaW5lZCkpO1xuICAgICAgICAgICAgICAgIGlmIChzb3VyY2VUeXBlID09PSBcImJvZHlcIikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJvZHlTdWJzY3JpcHRpb24uYWRkKHN1YnNjcmlwdGlvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmhlYWRlclN1YnNjcmlwdGlvbi5hZGQoc3Vic2NyaXB0aW9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBkZXN0cm95XG4gICAgICovXG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIHRoaXMuaGVhZGVyU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIHRoaXMuYm9keVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH1cbiAgICBzY3JvbGxMZWZ0KHsgc2Nyb2xsTGVmdCwgc291cmNlVHlwZSB9KSB7XG4gICAgICAgIHRoaXMubmdab25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudHNcbiAgICAgICAgICAgICAgICAuZmlsdGVyKHggPT4gc291cmNlVHlwZSAhPT0geC5zb3VyY2VUeXBlKVxuICAgICAgICAgICAgICAgIC5mb3JFYWNoKCh7IGVsZW1lbnQgfSkgPT4gZWxlbWVudC5zY3JvbGxMZWZ0ID0gc2Nyb2xsTGVmdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB1bnJlZ2lzdGVyKHNvdXJjZVR5cGUpIHtcbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmVsZW1lbnRzLmZpbmRJbmRleCh4ID0+IHguc291cmNlVHlwZSA9PT0gc291cmNlVHlwZSk7XG4gICAgICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICAgICAgICBpZiAoc291cmNlVHlwZSA9PT0gXCJoZWFkZXJcIikge1xuICAgICAgICAgICAgICAgIHRoaXMuaGVhZGVyU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5oZWFkZXJTdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChzb3VyY2VUeXBlID09PSBcImJvZHlcIikge1xuICAgICAgICAgICAgICAgIHRoaXMuYm9keVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuYm9keVN1YnNjcmlwdGlvbiA9IG5ldyBTdWJzY3JpcHRpb24oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuZWxlbWVudHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5TY3JvbGxTeW5jU2VydmljZSA9IF9fZGVjb3JhdGUoW1xuICAgIEluamVjdGFibGUoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW05nWm9uZV0pXG5dLCBTY3JvbGxTeW5jU2VydmljZSk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgUmVzaXplU2VydmljZSA9IGNsYXNzIFJlc2l6ZVNlcnZpY2Uge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5yZXNpemVTdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKCgpID0+IHsgfSk7XG4gICAgICAgIHRoaXMuZGlzcGF0Y2hlciA9IG5ldyBTdWJqZWN0KCk7XG4gICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTptZW1iZXItb3JkZXJpbmdcbiAgICAgICAgdGhpcy5jaGFuZ2VzID0gdGhpcy5kaXNwYXRjaGVyLmFzT2JzZXJ2YWJsZSgpLnBpcGUodGhyb3R0bGVUaW1lKDEwMCkpO1xuICAgIH1cbiAgICBjb25uZWN0KHJlc2l6ZXMpIHtcbiAgICAgICAgdGhpcy5yZXNpemVTdWJzY3JpcHRpb24uYWRkKHJlc2l6ZXMuc3Vic2NyaWJlKHRoaXMuZGlzcGF0Y2hlcikpO1xuICAgIH1cbiAgICBkZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5yZXNpemVTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMucmVzaXplU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuUmVzaXplU2VydmljZSA9IF9fZGVjb3JhdGUoW1xuICAgIEluamVjdGFibGUoKVxuXSwgUmVzaXplU2VydmljZSk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBpc0xvY2tlZCA9IGNvbHVtbiA9PiBjb2x1bW4ucGFyZW50ID8gaXNMb2NrZWQoY29sdW1uLnBhcmVudCkgOiAhIWNvbHVtbi5sb2NrZWQ7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgcmVzaXplQXJncyA9IChjb2x1bW4sIGV4dHJhKSA9PiBPYmplY3QuYXNzaWduKHtcbiAgICBjb2x1bW5zOiBsZWFmQ29sdW1ucyhbY29sdW1uXSksXG4gICAgbG9ja2VkOiBpc0xvY2tlZChjb2x1bW4pXG59LCBleHRyYSk7IC8vIHRzbGludDpkaXNhYmxlLWxpbmU6YWxpZ25cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgQ29sdW1uUmVzaXppbmdTZXJ2aWNlID0gY2xhc3MgQ29sdW1uUmVzaXppbmdTZXJ2aWNlIHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuY2hhbmdlcyA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy50YWJsZXMgPSBbXTtcbiAgICAgICAgdGhpcy5iYXRjaCA9IG51bGw7XG4gICAgfVxuICAgIHN0YXJ0KGNvbHVtbikge1xuICAgICAgICB0aGlzLnRyYWNrQ29sdW1ucyhjb2x1bW4pO1xuICAgICAgICBjb25zdCBjb2x1bW5zID0gKHRoaXMuY29sdW1uLmlzQ29sdW1uR3JvdXAgPyBbY29sdW1uXSA6IFtdKVxuICAgICAgICAgICAgLmNvbmNhdChsZWFmQ29sdW1ucyhbY29sdW1uXSkpO1xuICAgICAgICB0aGlzLmNoYW5nZXMuZW1pdCh7XG4gICAgICAgICAgICBjb2x1bW5zOiBjb2x1bW5zLFxuICAgICAgICAgICAgbG9ja2VkOiBpc0xvY2tlZCh0aGlzLmNvbHVtbiksXG4gICAgICAgICAgICB0eXBlOiAnc3RhcnQnXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXNpemVDb2x1bW5zKGRlbHRhUGVyY2VudCkge1xuICAgICAgICBjb25zdCBhY3Rpb24gPSByZXNpemVBcmdzKHRoaXMuY29sdW1uLCB7XG4gICAgICAgICAgICBkZWx0YVBlcmNlbnQsXG4gICAgICAgICAgICB0eXBlOiAncmVzaXplQ29sdW1uJ1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5jaGFuZ2VzLmVtaXQoYWN0aW9uKTtcbiAgICB9XG4gICAgcmVzaXplVGFibGUoY29sdW1uLCBkZWx0YSkge1xuICAgICAgICBjb25zdCBhY3Rpb24gPSByZXNpemVBcmdzKGNvbHVtbiwge1xuICAgICAgICAgICAgZGVsdGEsXG4gICAgICAgICAgICB0eXBlOiAncmVzaXplVGFibGUnXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNoYW5nZXMuZW1pdChhY3Rpb24pO1xuICAgIH1cbiAgICByZXNpemVkQ29sdW1uKHN0YXRlJCQxKSB7XG4gICAgICAgIHRoaXMucmVzaXplZENvbHVtbnMucHVzaChzdGF0ZSQkMSk7XG4gICAgfVxuICAgIGVuZCgpIHtcbiAgICAgICAgdGhpcy5jaGFuZ2VzLmVtaXQoe1xuICAgICAgICAgICAgY29sdW1uczogW10sXG4gICAgICAgICAgICByZXNpemVkQ29sdW1uczogdGhpcy5yZXNpemVkQ29sdW1ucyxcbiAgICAgICAgICAgIHR5cGU6ICdlbmQnXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZWdpc3RlclRhYmxlKHRhYmxlTWV0YWRhdGEpIHtcbiAgICAgICAgdGhpcy50YWJsZXMucHVzaCh0YWJsZU1ldGFkYXRhKTtcbiAgICAgICAgY29uc3QgdW5yZWdpc3RlclRhYmxlID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy50YWJsZXMuc3BsaWNlKHRoaXMudGFibGVzLmluZGV4T2YodGFibGVNZXRhZGF0YSksIDEpO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdW5yZWdpc3RlclRhYmxlO1xuICAgIH1cbiAgICBtZWFzdXJlQ29sdW1ucyhpbmZvKSB7XG4gICAgICAgIGlmICh0aGlzLmJhdGNoICE9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLmJhdGNoLnB1c2goLi4uaW5mbyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmF1dG9GaXRCYXRjaChpbmZvLCAoKSA9PiB0aGlzLmVuZCgpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhdXRvRml0KC4uLmNvbHVtbnMpIHtcbiAgICAgICAgY29uc3Qgbm9uTG9ja2VkQ29sdW1ucyA9IGNvbHVtbnMuZmlsdGVyKGNvbHVtbiA9PiAhY29sdW1uLmlzTG9ja2VkKTtcbiAgICAgICAgdGhpcy5hdXRvRml0U3RhcnQobm9uTG9ja2VkQ29sdW1ucyk7XG4gICAgICAgIHRoaXMuYXV0b0ZpdEJhdGNoKHRoaXMuYmF0Y2gsICgpID0+IHtcbiAgICAgICAgICAgIGlmIChub25Mb2NrZWRDb2x1bW5zLmxlbmd0aCA8IGNvbHVtbnMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbG9ja2VkQ29sdW1ucyA9IGNvbHVtbnMuZmlsdGVyKGNvbHVtbiA9PiBjb2x1bW4uaXNMb2NrZWQpO1xuICAgICAgICAgICAgICAgIHRoaXMuYXV0b0ZpdFN0YXJ0KGxvY2tlZENvbHVtbnMpO1xuICAgICAgICAgICAgICAgIHRoaXMuYXV0b0ZpdEJhdGNoKHRoaXMuYmF0Y2gsICgpID0+IHRoaXMuZW5kKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lbmQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHRyYWNrQ29sdW1ucyhjb2x1bW4pIHtcbiAgICAgICAgdGhpcy5yZXNpemVkQ29sdW1ucyA9IFtdO1xuICAgICAgICB0aGlzLmNvbHVtbiA9IGNvbHVtbjtcbiAgICB9XG4gICAgYXV0b0ZpdFN0YXJ0KGNvbHVtbnMpIHtcbiAgICAgICAgdGhpcy5iYXRjaCA9IFtdO1xuICAgICAgICB0aGlzLnJlc2l6ZWRDb2x1bW5zID0gW107XG4gICAgICAgIGlmIChjb2x1bW5zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGxvY2tlZCA9IGNvbHVtbnNbMF0uaXNMb2NrZWQ7XG4gICAgICAgIHRoaXMuY2hhbmdlcy5lbWl0KHtcbiAgICAgICAgICAgIHR5cGU6ICdzdGFydCcsXG4gICAgICAgICAgICBjb2x1bW5zLFxuICAgICAgICAgICAgbG9ja2VkXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNoYW5nZXMuZW1pdCh7XG4gICAgICAgICAgICB0eXBlOiAndHJpZ2dlckF1dG9GaXQnLFxuICAgICAgICAgICAgY29sdW1ucyxcbiAgICAgICAgICAgIGxvY2tlZFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgYXV0b0ZpdEJhdGNoKGluZm8sIG9uQ29tcGxldGUpIHtcbiAgICAgICAgY29uc3QgbG9ja2VkID0gaW5mby5sZW5ndGggPiAwID8gaW5mb1swXS5jb2x1bW4uaXNMb2NrZWQgOiBmYWxzZTtcbiAgICAgICAgY29uc3Qgb2JzZXJ2YWJsZXMgPSB0aGlzLnRhYmxlc1xuICAgICAgICAgICAgLmZpbHRlcih0YWJsZSA9PiB0YWJsZS5sb2NrZWQgPT09IGxvY2tlZClcbiAgICAgICAgICAgIC5tYXAodGFibGUgPT4gdGFibGUuYXV0b0ZpdChpbmZvKSk7XG4gICAgICAgIHppcCguLi5vYnNlcnZhYmxlcylcbiAgICAgICAgICAgIC5waXBlKHRha2UoMSkpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKHdpZHRocyA9PiB7XG4gICAgICAgICAgICB0aGlzLmNoYW5nZXMuZW1pdCh7XG4gICAgICAgICAgICAgICAgY29sdW1uczogaW5mby5tYXAoaSA9PiBpLmNvbHVtbiksXG4gICAgICAgICAgICAgICAgdHlwZTogJ2F1dG9GaXRDb21wbGV0ZScsXG4gICAgICAgICAgICAgICAgd2lkdGhzLFxuICAgICAgICAgICAgICAgIGxvY2tlZFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAob25Db21wbGV0ZSkge1xuICAgICAgICAgICAgICAgIG9uQ29tcGxldGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYmF0Y2ggPSBudWxsO1xuICAgIH1cbn07XG5Db2x1bW5SZXNpemluZ1NlcnZpY2UgPSBfX2RlY29yYXRlKFtcbiAgICBJbmplY3RhYmxlKClcbl0sIENvbHVtblJlc2l6aW5nU2VydmljZSk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgaGFzRmlsdGVyTWVudSA9IChzZXR0aW5ncykgPT4gdHlwZW9mIHNldHRpbmdzID09PSAnc3RyaW5nJyAmJiBzZXR0aW5ncy5pbmRleE9mKCdtZW51JykgPiAtMTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBoYXNGaWx0ZXJSb3cgPSAoc2V0dGluZ3MpID0+IHNldHRpbmdzID09PSB0cnVlIHx8ICh0eXBlb2Ygc2V0dGluZ3MgPT09ICdzdHJpbmcnICYmIHNldHRpbmdzLmluZGV4T2YoJ3JvdycpID4gLTEpO1xuXG5jb25zdCBjb250YWlucyQxID0gKG5vZGUsIHByZWRpY2F0ZSkgPT4ge1xuICAgIHdoaWxlIChub2RlKSB7XG4gICAgICAgIGlmIChwcmVkaWNhdGUobm9kZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIG5vZGUgPSBub2RlLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn07XG4vKipcbiAqIEFyZ3VtZW50cyBmb3IgdGhlIGBjbG9zZWAgZXZlbnQgb2YgdGhlIGZpbHRlciBhbmQgY29sdW1uLW1lbnUgcG9wdXAuXG4gKi9cbmNsYXNzIFBvcHVwQ2xvc2VFdmVudCBleHRlbmRzIFByZXZlbnRhYmxlRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKGUpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5vcmlnaW5hbEV2ZW50ID0gZTtcbiAgICB9XG59XG5jb25zdCBERUZBVUxUX1BPUFVQX0NMQVNTID0gJ2stZ3JpZC1maWx0ZXItcG9wdXAnO1xuLyoqXG4gKiBUaGUgc2VydmljZSB0aGF0IGlzIHVzZWQgZm9yIHRoZSBwb3B1cHMgb2YgdGhlIGZpbHRlciBhbmQgY29sdW1uIG1lbnVzXG4gKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIHJldXNhYmxlY3VzdG9tZmlsdGVyc19ncmlkICV9I3RvYy1maWx0ZXItbWVudS13aXRoLXBvcHVwKSkuXG4gKi9cbmxldCBTaW5nbGVQb3B1cFNlcnZpY2UgPSBjbGFzcyBTaW5nbGVQb3B1cFNlcnZpY2Uge1xuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VydmljZSwgcmVuZGVyZXIsIG5nWm9uZSwgc2Nyb2xsU3luY1NlcnZpY2UsIGxvY2FsaXphdGlvbikge1xuICAgICAgICB0aGlzLnBvcHVwU2VydmljZSA9IHBvcHVwU2VydmljZTtcbiAgICAgICAgdGhpcy5yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgICAgICB0aGlzLm5nWm9uZSA9IG5nWm9uZTtcbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb24gPSBsb2NhbGl6YXRpb247XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSBmaWx0ZXIgb3IgY29sdW1uIG1lbnVzIGFyZSBhYm91dCB0byBjbG9zZSBiZWNhdXNlIHRoZSB1c2VyIGNsaWNrZWQgb3V0c2lkZSB0aGVpciBwb3B1cHMuXG4gICAgICAgICAqIFVzZWQgdG8gcHJldmVudCB0aGUgcG9wdXAgZnJvbSBjbG9zaW5nLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5vbkNsb3NlID0gbmV3IFN1YmplY3QoKTtcbiAgICAgICAgdGhpcy5zY3JvbGxTdWJzY3JpcHRpb24gPSBzY3JvbGxTeW5jU2VydmljZS5jaGFuZ2VzLnN1YnNjcmliZSgoKSA9PiB0aGlzLmRlc3Ryb3koKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvcGVuKGFuY2hvciwgdGVtcGxhdGUsIHBvcHVwUmVmLCBwb3B1cENsYXNzID0gREVGQVVMVF9QT1BVUF9DTEFTUykge1xuICAgICAgICBjb25zdCB0b2dnbGUgPSBpc1ByZXNlbnQocG9wdXBSZWYpICYmIHRoaXMucG9wdXBSZWYgPT09IHBvcHVwUmVmO1xuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgaWYgKCF0b2dnbGUpIHtcbiAgICAgICAgICAgIGNvbnN0IGRpcmVjdGlvbiA9IHRoaXMubG9jYWxpemF0aW9uLnJ0bCA/ICdyaWdodCcgOiAnbGVmdCc7XG4gICAgICAgICAgICB0aGlzLnBvcHVwUmVmID0gdGhpcy5wb3B1cFNlcnZpY2Uub3Blbih7XG4gICAgICAgICAgICAgICAgYW5jaG9yQWxpZ246IHsgdmVydGljYWw6ICdib3R0b20nLCBob3Jpem9udGFsOiBkaXJlY3Rpb24gfSxcbiAgICAgICAgICAgICAgICBwb3B1cEFsaWduOiB7IHZlcnRpY2FsOiAndG9wJywgaG9yaXpvbnRhbDogZGlyZWN0aW9uIH0sXG4gICAgICAgICAgICAgICAgYW5jaG9yOiBhbmNob3IsXG4gICAgICAgICAgICAgICAgcG9wdXBDbGFzczogcG9wdXBDbGFzcyxcbiAgICAgICAgICAgICAgICBjb250ZW50OiB0ZW1wbGF0ZSxcbiAgICAgICAgICAgICAgICBwb3NpdGlvbk1vZGU6IFwiYWJzb2x1dGVcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLnJlbmRlcmVyLnNldEF0dHJpYnV0ZSh0aGlzLnBvcHVwUmVmLnBvcHVwRWxlbWVudCwgJ2RpcicsIHRoaXMubG9jYWxpemF0aW9uLnJ0bCA/ICdydGwnIDogJ2x0cicpO1xuICAgICAgICAgICAgdGhpcy5hdHRhY2hDbG9zZShhbmNob3IpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnBvcHVwUmVmO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgaWYgKHRoaXMucG9wdXBSZWYpIHtcbiAgICAgICAgICAgIHRoaXMuZGV0YWNoQ2xvc2UoKTtcbiAgICAgICAgICAgIHRoaXMucG9wdXBSZWYuY2xvc2UoKTtcbiAgICAgICAgICAgIHRoaXMucG9wdXBSZWYgPSBudWxsO1xuICAgICAgICB9XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5zY3JvbGxTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gICAgZGV0YWNoQ2xvc2UoKSB7XG4gICAgICAgIGlmICh0aGlzLnJlbW92ZUNsaWNrKSB7XG4gICAgICAgICAgICB0aGlzLnJlbW92ZUNsaWNrKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXR0YWNoQ2xvc2Uoc2tpcEVsZW1lbnQpIHtcbiAgICAgICAgdGhpcy5kZXRhY2hDbG9zZSgpO1xuICAgICAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB0aGlzLnJlbW92ZUNsaWNrID0gdGhpcy5yZW5kZXJlci5saXN0ZW4oXCJkb2N1bWVudFwiLCBcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWNvbnRhaW5zJDEoZS50YXJnZXQsIHggPT4gdGhpcy5wb3B1cFJlZi5wb3B1cEVsZW1lbnQgPT09IHggfHwgeCA9PT0gc2tpcEVsZW1lbnQpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYXJncyA9IG5ldyBQb3B1cENsb3NlRXZlbnQoZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5vbkNsb3NlLm5leHQoYXJncyk7XG4gICAgICAgICAgICAgICAgaWYgKCFhcmdzLmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkpO1xuICAgIH1cbn07XG5TaW5nbGVQb3B1cFNlcnZpY2UgPSBfX2RlY29yYXRlKFtcbiAgICBJbmplY3RhYmxlKCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtQb3B1cFNlcnZpY2UsXG4gICAgICAgIFJlbmRlcmVyMixcbiAgICAgICAgTmdab25lLFxuICAgICAgICBTY3JvbGxTeW5jU2VydmljZSxcbiAgICAgICAgTG9jYWxpemF0aW9uU2VydmljZV0pXG5dLCBTaW5nbGVQb3B1cFNlcnZpY2UpO1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZTogbm8tYml0d2lzZSAqL1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGFwcGVuZCA9IChlbGVtZW50KSA9PiB7XG4gICAgbGV0IGFwcGVuZGVkID0gZmFsc2U7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgaWYgKCFhcHBlbmRlZCkge1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChlbGVtZW50KTtcbiAgICAgICAgICAgIGFwcGVuZGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZWxlbWVudDtcbiAgICB9O1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBnZXREb2N1bWVudCA9IGVsZW1lbnQgPT4gZWxlbWVudC5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBnZXRXaW5kb3cgPSBlbGVtZW50ID0+IGVsZW1lbnQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldztcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBvZmZzZXQgPSBlbGVtZW50ID0+IHtcbiAgICBjb25zdCB7IGNsaWVudFRvcCwgY2xpZW50TGVmdCB9ID0gZ2V0RG9jdW1lbnQoZWxlbWVudCk7XG4gICAgY29uc3QgeyBwYWdlWU9mZnNldCwgcGFnZVhPZmZzZXQgfSA9IGdldFdpbmRvdyhlbGVtZW50KTtcbiAgICBjb25zdCB7IHRvcCwgbGVmdCB9ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICByZXR1cm4ge1xuICAgICAgICB0b3A6IHRvcCArIHBhZ2VZT2Zmc2V0IC0gY2xpZW50VG9wLFxuICAgICAgICBsZWZ0OiBsZWZ0ICsgcGFnZVhPZmZzZXQgLSBjbGllbnRMZWZ0XG4gICAgfTtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqIElmIHRoZSB0YXJnZXQgaXMgYmVmb3JlIHRoZSBkcmFnZ2FibGUgZWxlbWVudCwgcmV0dXJucyBgdHJ1ZWAuXG4gKlxuICogRE9DVU1FTlRfUE9TSVRJT05fRk9MTE9XSU5HID0gNFxuICovXG5jb25zdCBpc1RhcmdldEJlZm9yZSA9IChkcmFnZ2FibGUsIHRhcmdldCkgPT4gKHRhcmdldC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihkcmFnZ2FibGUpICYgNCkgIT09IDA7XG4vKipcbiAqIEBoaWRkZW5cbiAqIElmIHRoZSBjb250YWluZXIgYW5kIHRoZSBlbGVtZW50IGFyZSB0aGUgc2FtZVxuICogb3IgaWYgdGhlIGNvbnRhaW5lciBob2xkcyAoY29udGFpbnMpIHRoZSBlbGVtZW50LCByZXR1cm5zIGB0cnVlYC5cbiAqXG4gKiBET0NVTUVOVF9QT1NJVElPTl9DT05UQUlORURfQlkgPSAxNlxuICovXG5jb25zdCBjb250YWlucyQyID0gKGVsZW1lbnQsIGNvbnRhaW5lcikgPT4gZWxlbWVudCA9PT0gY29udGFpbmVyIHx8XG4gICAgKGNvbnRhaW5lci5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihlbGVtZW50KSAmIDE2KSAhPT0gMDtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBwb3NpdGlvbiA9ICh0YXJnZXQsIGJlZm9yZSkgPT4ge1xuICAgIGNvbnN0IHRhcmdldFJlY3QgPSBvZmZzZXQodGFyZ2V0KTtcbiAgICBjb25zdCB7IG9mZnNldFdpZHRoLCBvZmZzZXRIZWlnaHQgfSA9IHRhcmdldDtcbiAgICBjb25zdCBsZWZ0ID0gdGFyZ2V0UmVjdC5sZWZ0ICsgKGJlZm9yZSA/IDAgOiBvZmZzZXRXaWR0aCk7XG4gICAgY29uc3QgdG9wID0gdGFyZ2V0UmVjdC50b3A7XG4gICAgY29uc3QgaGVpZ2h0ID0gb2Zmc2V0SGVpZ2h0O1xuICAgIHJldHVybiB7IGxlZnQsIHRvcCwgaGVpZ2h0IH07XG59O1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IERyYWdBbmREcm9wU2VydmljZSA9IGNsYXNzIERyYWdBbmREcm9wU2VydmljZSB7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmNoYW5nZXMgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMucmVnaXN0ZXIgPSBbXTtcbiAgICAgICAgdGhpcy5sYXN0VGFyZ2V0ID0gbnVsbDtcbiAgICB9XG4gICAgYWRkKHRhcmdldCkge1xuICAgICAgICB0aGlzLnJlZ2lzdGVyLnB1c2godGFyZ2V0KTtcbiAgICB9XG4gICAgcmVtb3ZlKHRhcmdldCkge1xuICAgICAgICB0aGlzLnJlZ2lzdGVyID0gdGhpcy5yZWdpc3Rlci5maWx0ZXIoY3VycmVudCA9PiBjdXJyZW50ICE9PSB0YXJnZXQpO1xuICAgIH1cbiAgICBub3RpZnlEcmFnKGRyYWdnYWJsZSwgZWxlbWVudCwgbW91c2VFdmVudCkge1xuICAgICAgICBjb25zdCB0YXJnZXQgPSB0aGlzLnRhcmdldEZvcihlbGVtZW50KTtcbiAgICAgICAgaWYgKHRoaXMubGFzdFRhcmdldCA9PT0gdGFyZ2V0KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jaGFuZ2VzLm5leHQoe1xuICAgICAgICAgICAgZHJhZ2dhYmxlLFxuICAgICAgICAgICAgbW91c2VFdmVudCxcbiAgICAgICAgICAgIHRhcmdldDogdGhpcy5sYXN0VGFyZ2V0LFxuICAgICAgICAgICAgdHlwZTogJ2xlYXZlJ1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHRhcmdldCkge1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VzLm5leHQoe1xuICAgICAgICAgICAgICAgIGRyYWdnYWJsZSxcbiAgICAgICAgICAgICAgICBtb3VzZUV2ZW50LFxuICAgICAgICAgICAgICAgIHRhcmdldCxcbiAgICAgICAgICAgICAgICB0eXBlOiAnZW50ZXInXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmxhc3RUYXJnZXQgPSB0YXJnZXQ7XG4gICAgfVxuICAgIG5vdGlmeURyb3AoZHJhZ2dhYmxlLCBtb3VzZUV2ZW50KSB7XG4gICAgICAgIHRoaXMuY2hhbmdlcy5uZXh0KHtcbiAgICAgICAgICAgIGRyYWdnYWJsZSxcbiAgICAgICAgICAgIG1vdXNlRXZlbnQsXG4gICAgICAgICAgICB0YXJnZXQ6IHRoaXMubGFzdFRhcmdldCxcbiAgICAgICAgICAgIHR5cGU6ICdkcm9wJ1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5sYXN0VGFyZ2V0ID0gbnVsbDtcbiAgICB9XG4gICAgdGFyZ2V0Rm9yKGVsZW1lbnQpIHtcbiAgICAgICAgY29uc3QgY29tcGFyZXIgPSBjb250YWlucyQyLmJpbmQobnVsbCwgZWxlbWVudCk7XG4gICAgICAgIHJldHVybiB0aGlzLnJlZ2lzdGVyLmZpbmQoKHsgZWxlbWVudDogeyBuYXRpdmVFbGVtZW50IH0gfSkgPT4gY29tcGFyZXIobmF0aXZlRWxlbWVudCkpO1xuICAgIH1cbn07XG5EcmFnQW5kRHJvcFNlcnZpY2UgPSBfX2RlY29yYXRlKFtcbiAgICBJbmplY3RhYmxlKClcbl0sIERyYWdBbmREcm9wU2VydmljZSk7XG5cbmNvbnN0IHVwZGF0ZUNsYXNzID0gKGVsZW1lbnQsIHZhbGlkKSA9PiB7XG4gICAgY29uc3QgaWNvbiA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignLmstaWNvbicpO1xuICAgIGljb24uY2xhc3NOYW1lID0gaWNvbi5jbGFzc05hbWVcbiAgICAgICAgLnJlcGxhY2UoLyhwbHVzfGNhbmNlbCkvLCB2YWxpZCA/ICdwbHVzJyA6ICdjYW5jZWwnKTtcbn07XG5jb25zdCB1cGRhdGVMb2NrID0gKGVsZW1lbnQsIGxvY2tlZCA9IG51bGwpID0+IHtcbiAgICBjb25zdCBpY29uID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuay1pY29uJylbMV07XG4gICAgY29uc3QgdmFsdWUgPSBsb2NrZWQgPT0gbnVsbCA/ICcnIDogKGxvY2tlZCA/ICdrLWktbG9jaycgOiAnay1pLXVubG9jaycpO1xuICAgIGljb24uY2xhc3NOYW1lID0gaWNvbi5jbGFzc05hbWVcbiAgICAgICAgLnJlcGxhY2UoLyhrLWktdW5sb2NrfGstaS1sb2NrKS8sICcnKSArIGAgJHt2YWx1ZX1gO1xufTtcbmNvbnN0IGRlY29yYXRlID0gKGVsZW1lbnQpID0+IHtcbiAgICBlbGVtZW50LmNsYXNzTmFtZSA9ICdrLWhlYWRlciBrLWRyYWctY2x1ZSc7XG4gICAgZWxlbWVudC5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG4gICAgZWxlbWVudC5zdHlsZS56SW5kZXggPSAnMjAwMDAnO1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgRHJhZ0hpbnRTZXJ2aWNlID0gY2xhc3MgRHJhZ0hpbnRTZXJ2aWNlIHtcbiAgICBjb25zdHJ1Y3RvcihzYW50aXplcikge1xuICAgICAgICB0aGlzLnNhbnRpemVyID0gc2FudGl6ZXI7XG4gICAgfVxuICAgIGNyZWF0ZSh0aXRsZSkge1xuICAgICAgICB0aGlzLmRvbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIGRlY29yYXRlKHRoaXMuZG9tKTtcbiAgICAgICAgY29uc3Qgc2FmZVRpdGxlID0gdGhpcy5zYW50aXplci5zYW5pdGl6ZShTZWN1cml0eUNvbnRleHQuSFRNTCwgdGl0bGUpO1xuICAgICAgICB0aGlzLmRvbS5pbm5lckhUTUwgPSBgXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImstaWNvbiBrLWRyYWctc3RhdHVzIGstaS1jYW5jZWwgay1pY29uLXdpdGgtbW9kaWZpZXJcIj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImstaWNvbiBrLWljb24tbW9kaWZpZXJcIj48L3NwYW4+XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAke3NhZmVUaXRsZX1cbiAgICAgICAgYDtcbiAgICB9XG4gICAgYXR0YWNoKCkge1xuICAgICAgICByZXR1cm4gYXBwZW5kKHRoaXMuZG9tKTtcbiAgICB9XG4gICAgcmVtb3ZlKCkge1xuICAgICAgICBpZiAodGhpcy5kb20gJiYgdGhpcy5kb20ucGFyZW50Tm9kZSkge1xuICAgICAgICAgICAgKGZ1bmN0aW9uIChlbCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChlbCkpO1xuICAgICAgICAgICAgfSkodGhpcy5kb20pOyAvLyBoYWNrIGZvciBJRSArIHBvaW50ZXIgZXZlbnRzIVxuICAgICAgICAgICAgdGhpcy5kb20gPSBudWxsO1xuICAgICAgICB9XG4gICAgfVxuICAgIHNob3coKSB7XG4gICAgICAgIHRoaXMuZG9tLnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xuICAgIH1cbiAgICBoaWRlKCkge1xuICAgICAgICB0aGlzLmRvbS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgfVxuICAgIGVuYWJsZSgpIHtcbiAgICAgICAgdXBkYXRlQ2xhc3ModGhpcy5kb20sIHRydWUpO1xuICAgIH1cbiAgICBkaXNhYmxlKCkge1xuICAgICAgICB1cGRhdGVDbGFzcyh0aGlzLmRvbSwgZmFsc2UpO1xuICAgIH1cbiAgICByZW1vdmVMb2NrKCkge1xuICAgICAgICB1cGRhdGVMb2NrKHRoaXMuZG9tKTtcbiAgICB9XG4gICAgdG9nZ2xlTG9jayhsb2NrZWQpIHtcbiAgICAgICAgdXBkYXRlTG9jayh0aGlzLmRvbSwgbG9ja2VkKTtcbiAgICB9XG4gICAgbW92ZShtb3ZlKSB7XG4gICAgICAgIHRoaXMuZG9tLnN0eWxlLnRvcCA9IG1vdmUucGFnZVkgKyAncHgnO1xuICAgICAgICB0aGlzLmRvbS5zdHlsZS5sZWZ0ID0gbW92ZS5wYWdlWCArICdweCc7XG4gICAgfVxufTtcbkRyYWdIaW50U2VydmljZSA9IF9fZGVjb3JhdGUoW1xuICAgIEluamVjdGFibGUoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0RvbVNhbml0aXplcl0pXG5dLCBEcmFnSGludFNlcnZpY2UpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IERyb3BDdWVTZXJ2aWNlID0gY2xhc3MgRHJvcEN1ZVNlcnZpY2Uge1xuICAgIGNyZWF0ZSgpIHtcbiAgICAgICAgdGhpcy5kb20gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICB0aGlzLmRvbS5jbGFzc05hbWUgPSAnay1ncm91cGluZy1kcm9wY2x1ZSc7XG4gICAgICAgIHRoaXMuaGlkZSgpO1xuICAgIH1cbiAgICBhdHRhY2goKSB7XG4gICAgICAgIHJldHVybiBhcHBlbmQodGhpcy5kb20pO1xuICAgIH1cbiAgICByZW1vdmUoKSB7XG4gICAgICAgIGlmICh0aGlzLmRvbSAmJiB0aGlzLmRvbS5wYXJlbnRFbGVtZW50KSB7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRoaXMuZG9tKTtcbiAgICAgICAgICAgIHRoaXMuZG9tID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBoaWRlKCkge1xuICAgICAgICB0aGlzLmRvbS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgfVxuICAgIHBvc2l0aW9uKHsgbGVmdCwgdG9wLCBoZWlnaHQgfSkge1xuICAgICAgICB0aGlzLmRvbS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgdGhpcy5kb20uc3R5bGUuaGVpZ2h0ID0gaGVpZ2h0ICsgJ3B4JztcbiAgICAgICAgdGhpcy5kb20uc3R5bGUudG9wID0gdG9wICsgJ3B4JztcbiAgICAgICAgY29uc3Qgd2lkdGggPSB0aGlzLmRvbS5vZmZzZXRXaWR0aCAvIDI7XG4gICAgICAgIHRoaXMuZG9tLnN0eWxlLmxlZnQgPSBsZWZ0IC0gd2lkdGggKyAncHgnO1xuICAgIH1cbn07XG5Ecm9wQ3VlU2VydmljZSA9IF9fZGVjb3JhdGUoW1xuICAgIEluamVjdGFibGUoKVxuXSwgRHJvcEN1ZVNlcnZpY2UpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IENvbHVtblJlb3JkZXJTZXJ2aWNlID0gY2xhc3MgQ29sdW1uUmVvcmRlclNlcnZpY2Uge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5jaGFuZ2VzID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIH1cbiAgICByZW9yZGVyKGUpIHtcbiAgICAgICAgdGhpcy5jaGFuZ2VzLmVtaXQoZSk7XG4gICAgfVxufTtcbkNvbHVtblJlb3JkZXJTZXJ2aWNlID0gX19kZWNvcmF0ZShbXG4gICAgSW5qZWN0YWJsZSgpXG5dLCBDb2x1bW5SZW9yZGVyU2VydmljZSk7XG5cbi8qKlxuICogQXJndW1lbnRzIGZvciB0aGUgYGNvbHVtblJlb3JkZXJgIGV2ZW50LlxuICovXG5jbGFzcyBDb2x1bW5SZW9yZGVyRXZlbnQgZXh0ZW5kcyBQcmV2ZW50YWJsZUV2ZW50IHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoeyBjb2x1bW4sIG5ld0luZGV4LCBvbGRJbmRleCB9KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuY29sdW1uID0gY29sdW1uO1xuICAgICAgICB0aGlzLm5ld0luZGV4ID0gbmV3SW5kZXg7XG4gICAgICAgIHRoaXMub2xkSW5kZXggPSBvbGRJbmRleDtcbiAgICB9XG59XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBOYXZpZ2F0aW9uTWV0YWRhdGEge1xuICAgIGNvbnN0cnVjdG9yKGRhdGFSb3dzLCBoZWFkZXJSb3dzLCBpc1ZpcnR1YWwsIGhhc1BhZ2VyLCBoYXNEZXRhaWxUZW1wbGF0ZSwgZ3JpZEVsZW1lbnQsIHZpcnR1YWxDb2x1bW5zLCBjb2x1bW5zKSB7XG4gICAgICAgIHRoaXMuZGF0YVJvd3MgPSBkYXRhUm93cztcbiAgICAgICAgdGhpcy5oZWFkZXJSb3dzID0gaGVhZGVyUm93cztcbiAgICAgICAgdGhpcy5pc1ZpcnR1YWwgPSBpc1ZpcnR1YWw7XG4gICAgICAgIHRoaXMuaGFzUGFnZXIgPSBoYXNQYWdlcjtcbiAgICAgICAgdGhpcy5oYXNEZXRhaWxUZW1wbGF0ZSA9IGhhc0RldGFpbFRlbXBsYXRlO1xuICAgICAgICB0aGlzLmdyaWRFbGVtZW50ID0gZ3JpZEVsZW1lbnQ7XG4gICAgICAgIHRoaXMudmlydHVhbENvbHVtbnMgPSB2aXJ0dWFsQ29sdW1ucztcbiAgICAgICAgdGhpcy5jb2x1bW5zID0gY29sdW1ucztcbiAgICB9XG4gICAgZ2V0IG1heExvZ2ljYWxSb3dJbmRleCgpIHtcbiAgICAgICAgY29uc3QgZGF0YVJvd3MgPSB0aGlzLmhhc0RldGFpbFRlbXBsYXRlID8gdGhpcy5kYXRhUm93cyAqIDIgOiB0aGlzLmRhdGFSb3dzO1xuICAgICAgICByZXR1cm4gdGhpcy5oZWFkZXJSb3dzICsgZGF0YVJvd3MgLSAxO1xuICAgIH1cbn1cblxuLy8gSW5jcmVtZW50ZWQgZWFjaCB0aW1lIHRoZSBzZXJ2aWNlIGlzIGluc3RhbnRpYXRlZC5cbmxldCBzZXF1ZW5jZSA9IDA7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IElkU2VydmljZSA9IGNsYXNzIElkU2VydmljZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMucHJlZml4ID0gYGstZ3JpZCR7c2VxdWVuY2UrK31gO1xuICAgIH1cbiAgICBjZWxsSWQocm93SW5kZXgsIGNvbEluZGV4KSB7XG4gICAgICAgIHJldHVybiBgJHt0aGlzLnByZWZpeH0tciR7cm93SW5kZXh9YyR7Y29sSW5kZXh9YDtcbiAgICB9XG4gICAgc2VsZWN0aW9uQ2hlY2tib3hJZChpdGVtSW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIGAke3RoaXMucHJlZml4fS1jaGVja2JveCR7aXRlbUluZGV4fWA7XG4gICAgfVxuICAgIHNlbGVjdEFsbENoZWNrYm94SWQoKSB7XG4gICAgICAgIHJldHVybiBgJHt0aGlzLnByZWZpeH0tc2VsZWN0LWFsbGA7XG4gICAgfVxufTtcbklkU2VydmljZSA9IF9fZGVjb3JhdGUoW1xuICAgIEluamVjdGFibGUoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBJZFNlcnZpY2UpO1xuXG5jb25zdCBOT19TVElDS1kgPSB7IGxlZnQ6ICcwcHgnLCByaWdodDogJzBweCcgfTtcbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgQ29sdW1uSW5mb1NlcnZpY2UgPSBjbGFzcyBDb2x1bW5JbmZvU2VydmljZSB7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnZpc2liaWxpdHlDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMubG9ja2VkQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLnN0aWNreUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5jb2x1bW5SYW5nZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5jb2x1bW5zQ29udGFpbmVyID0gbmV3IENvbHVtbnNDb250YWluZXIoKCkgPT4gW10pO1xuICAgIH1cbiAgICBnZXQgbG9ja2VkTGVhZkNvbHVtbnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbHVtbnNDb250YWluZXIubG9ja2VkTGVhZkNvbHVtbnM7XG4gICAgfVxuICAgIGdldCBub25Mb2NrZWRMZWFmQ29sdW1ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uc0NvbnRhaW5lci5ub25Mb2NrZWRMZWFmQ29sdW1ucztcbiAgICB9XG4gICAgZ2V0IGlzTG9ja2VkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2NrZWRMZWFmQ29sdW1ucy5sZW5ndGggPiAwO1xuICAgIH1cbiAgICBnZXQgdG90YWxMZXZlbHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbHVtbnNDb250YWluZXIudG90YWxMZXZlbHM7XG4gICAgfVxuICAgIGdldCBsZWFmTmFtZWRDb2x1bW5zKCkge1xuICAgICAgICBjb25zdCBjb2x1bW5zID0gZXhwYW5kQ29sdW1ucyh0aGlzLmxpc3QoKS5maWx0ZXJTb3J0KGNvbHVtbiA9PiAhY29sdW1uLmlzQ29sdW1uR3JvdXApKVxuICAgICAgICAgICAgLmZpbHRlcihjb2x1bW4gPT4gY29sdW1uLm1hdGNoZXNNZWRpYSAmJiBjb2x1bW4uZGlzcGxheVRpdGxlKTtcbiAgICAgICAgcmV0dXJuIG9yZGVyQnkoY29sdW1ucywgW3sgZmllbGQ6ICdsb2NrZWQnLCBkaXI6ICdkZXNjJyB9XSk7XG4gICAgfVxuICAgIGdldCB1bmxvY2tlZFJvb3RDb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGlzdCgpLnJvb3RDb2x1bW5zKCkuZmlsdGVyKGNvbHVtbiA9PiAhY29sdW1uLmxvY2tlZCAmJiBjb2x1bW4uaXNWaXNpYmxlKS5sZW5ndGg7XG4gICAgfVxuICAgIHN0aWNreUNvbHVtbnNTdHlsZXMoY29sdW1uKSB7XG4gICAgICAgIGlmICghdGhpcy5zdGlja3lDb2x1bW5zKSB7XG4gICAgICAgICAgICB0aGlzLnN0aWNreUNvbHVtbnMgPSB0aGlzLmxpc3QoKS5yb290Q29sdW1ucygpLmZpbHRlcihjb2x1bW4gPT4gY29sdW1uLnN0aWNreSAmJiAhY29sdW1uLmxvY2tlZCAmJiBjb2x1bW4uaXNWaXNpYmxlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5zdGlja3lDb2x1bW5zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIE5PX1NUSUNLWTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLnN0aWNreUNvbHVtbnMucmVkdWNlKChhY2MsIGN1cnIpID0+IHtcbiAgICAgICAgICAgIGlmIChjdXJyLmxlYWZJbmRleCA8IGNvbHVtbi5sZWFmSW5kZXgpIHtcbiAgICAgICAgICAgICAgICBhY2MubGVmdCArPSBjdXJyLndpZHRoO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoY3Vyci5sZWFmSW5kZXggPiBjb2x1bW4ubGVhZkluZGV4KSB7XG4gICAgICAgICAgICAgICAgYWNjLnJpZ2h0ICs9IGN1cnIud2lkdGg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9LCB7IGxlZnQ6IDAsIHJpZ2h0OiAwIH0pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbGVmdDogYCR7cmVzdWx0LmxlZnR9cHhgLFxuICAgICAgICAgICAgcmlnaHQ6IGAke3Jlc3VsdC5yaWdodH1weGBcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaW5pdChjb2x1bW5zLCBsaXN0KSB7XG4gICAgICAgIHRoaXMuY29sdW1uc0NvbnRhaW5lciA9IGNvbHVtbnM7XG4gICAgICAgIHRoaXMubGlzdCA9IGxpc3Q7XG4gICAgICAgIHRoaXMuc3RpY2t5Q29sdW1ucyA9IG51bGw7XG4gICAgfVxuICAgIGNoYW5nZVZpc2liaWxpdHkoY29sdW1ucykge1xuICAgICAgICB0aGlzLnN0aWNreUNvbHVtbnMgPSBudWxsO1xuICAgICAgICB0aGlzLnZpc2liaWxpdHlDaGFuZ2UuZW1pdChjb2x1bW5zKTtcbiAgICB9XG4gICAgY2hhbmdlTG9ja2VkKGNvbHVtbnMpIHtcbiAgICAgICAgdGhpcy5zdGlja3lDb2x1bW5zID0gbnVsbDtcbiAgICAgICAgdGhpcy5sb2NrZWRDaGFuZ2UuZW1pdChjb2x1bW5zKTtcbiAgICB9XG4gICAgY2hhbmdlU3R1Y2soY29sdW1ucykge1xuICAgICAgICB0aGlzLnN0aWNreUNvbHVtbnMgPSBudWxsO1xuICAgICAgICB0aGlzLnN0aWNreUNoYW5nZS5lbWl0KGNvbHVtbnMpO1xuICAgIH1cbn07XG5Db2x1bW5JbmZvU2VydmljZSA9IF9fZGVjb3JhdGUoW1xuICAgIEluamVjdGFibGUoKVxuXSwgQ29sdW1uSW5mb1NlcnZpY2UpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY2xhc3MgU29ydFNlcnZpY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmNoYW5nZXMgPSBuZXcgU3ViamVjdCgpO1xuICAgIH1cbiAgICBzb3J0KHZhbHVlKSB7XG4gICAgICAgIHRoaXMuY2hhbmdlcy5uZXh0KHZhbHVlKTtcbiAgICB9XG59XG5cbi8qKlxuICogQXJndW1lbnRzIGZvciB0aGUgYGNvbHVtblZpc2liaWxpdHlDaGFuZ2VgIGV2ZW50LlxuICovXG5jbGFzcyBDb2x1bW5WaXNpYmlsaXR5Q2hhbmdlRXZlbnQge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb2x1bW5zKSB7XG4gICAgICAgIHRoaXMuY29sdW1ucyA9IGNvbHVtbnM7XG4gICAgfVxufVxuXG4vKipcbiAqIEFyZ3VtZW50cyBmb3IgdGhlIGBjb2x1bW5Mb2NrZWRDaGFuZ2VgIGV2ZW50LlxuICovXG5jbGFzcyBDb2x1bW5Mb2NrZWRDaGFuZ2VFdmVudCB7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvbHVtbnMpIHtcbiAgICAgICAgdGhpcy5jb2x1bW5zID0gY29sdW1ucztcbiAgICB9XG59XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBHUk9VUF9DRUxMX1dJRFRIID0gMzI7IC8vIHRoaXMgc2hvdWxkIGJlIHRoZSB2YWx1ZSBvZiBncm91cC1jZWxsIGluc2lkZSB0aGUgdGhlbWUhXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgUkVTUE9OU0lWRV9CUkVBS1BPSU5UX01FRElVTSA9IDYwMDtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBSRVNQT05TSVZFX0JSRUFLUE9JTlRfTEFSR0UgPSA3Njg7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBkZWZhdWx0VHJhY2tCeShpbmRleCwgaXRlbSkge1xuICAgIGlmIChpdGVtLnR5cGUgPT09ICdkYXRhJyAmJiBpdGVtLmlzRWRpdGluZykge1xuICAgICAgICByZXR1cm4gaXRlbS5kYXRhO1xuICAgIH1cbiAgICByZXR1cm4gaW5kZXg7XG59XG5cbi8qKlxuICogQXJndW1lbnRzIGZvciB0aGUgYGNvbHVtblN0aWNreUNoYW5nZWAgZXZlbnQuXG4gKi9cbmNsYXNzIENvbHVtblN0aWNreUNoYW5nZUV2ZW50IHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29sdW1ucykge1xuICAgICAgICB0aGlzLmNvbHVtbnMgPSBjb2x1bW5zO1xuICAgIH1cbn1cblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSB2aXJ0dWFsIHNjcm9sbGluZyBjZWxsIHRlbXBsYXRlIG9mIHRoZSBHcmlkIHdoaWxlIGxvYWRpbmcgbmV3IGRhdGEuIFByb3ZpZGVzIGFuIG9wdGlvbiB0byBjdXN0b21pemUgdGhlXG4gKiBhcHBlYXJhbmNlIG9mIHRoZSBpbmRpY2F0b3IgdGhhdCBpcyBkaXNwbGF5ZWQgd2hpbGUgbmV3IGRhdGEgaXMgbG9hZGluZy4gVG8gZGVmaW5lIHRoZSBsb2FkaW5nIGNlbGwgdGVtcGxhdGUsXG4gKiBuZXN0IGFuIGA8bmctdGVtcGxhdGU+YCB0YWcgd2l0aCB0aGUgYGtlbmRvR3JpZENlbGxMb2FkaW5nVGVtcGxhdGVgIGRpcmVjdGl2ZSBpbnNpZGUgYDxrZW5kby1ncmlkPmAgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyB2aXJ0dWFsc2Nyb2xsaW5nX2dyaWQgJX0jdG9jLWN1c3RvbS1sb2FkaW5nLXNrZWxldG9uKSkuXG4gKlxuICogVGhlIHRlbXBsYXRlIGNvbnRleHQgaXMgc2V0IHRvIHRoZSBjdXJyZW50IGNvbHVtbiwgYW5kIHV0aWxpemVzIHRoZSBgbGV0LXhgIHN5bnRheCZtZGFzaDtmb3IgZXhhbXBsZSwgYGxldC1jb2x1bW5gLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0cy1uby1ydW5cbiAqICAgICAgIDxrZW5kby1ncmlkIFtkYXRhXT1cImRhdGFcIiBzY3JvbGxhYmxlPVwidmlydHVhbFwiIFtyb3dIZWlnaHRdPVwiMzZcIj5cbiAqICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZENlbGxMb2FkaW5nVGVtcGxhdGUgbGV0LWNvbHVtbj5cbiAqICAgICAgICAgICAgIC4uLlxuICogICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgPC9rZW5kby1ncmlkPlxuICogYGBgXG4gKi9cbmxldCBDZWxsTG9hZGluZ1RlbXBsYXRlRGlyZWN0aXZlID0gY2xhc3MgQ2VsbExvYWRpbmdUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IodGVtcGxhdGVSZWYpIHtcbiAgICAgICAgdGhpcy50ZW1wbGF0ZVJlZiA9IHRlbXBsYXRlUmVmO1xuICAgIH1cbn07XG5DZWxsTG9hZGluZ1RlbXBsYXRlRGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkQ2VsbExvYWRpbmdUZW1wbGF0ZV0nXG4gICAgfSksXG4gICAgX19wYXJhbSgwLCBPcHRpb25hbCgpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1RlbXBsYXRlUmVmXSlcbl0sIENlbGxMb2FkaW5nVGVtcGxhdGVEaXJlY3RpdmUpO1xuXG5jb25zdCBjcmVhdGVDb250cm9sID0gKHNvdXJjZSkgPT4gKGFjYywga2V5KSA9PiB7XG4gICAgYWNjW2tleV0gPSBuZXcgRm9ybUNvbnRyb2woc291cmNlW2tleV0pO1xuICAgIHJldHVybiBhY2M7XG59O1xuY29uc3QgdmFsaWRhdGVDb2x1bW5zRmllbGQgPSAoY29sdW1ucykgPT4gZXhwYW5kQ29sdW1ucyhjb2x1bW5zLnRvQXJyYXkoKSlcbiAgICAuZmlsdGVyKGlzQ29sdW1uQ29tcG9uZW50KVxuICAgIC5maWx0ZXIoKHsgZmllbGQgfSkgPT4gIWlzVmFsaWRGaWVsZE5hbWUoZmllbGQpKVxuICAgIC5mb3JFYWNoKCh7IGZpZWxkIH0pID0+IGNvbnNvbGUud2FybihgXG4gICAgICAgICAgICAgICAgR3JpZCBjb2x1bW4gZmllbGQgbmFtZSAnJHtmaWVsZH0nIGRvZXMgbm90IGxvb2sgbGlrZSBhIHZhbGlkIEphdmFTY3JpcHQgaWRlbnRpZmllci5cbiAgICAgICAgICAgICAgICBJZGVudGlmaWVycyBjYW4gY29udGFpbiBvbmx5IGFscGhhbnVtZXJpYyBjaGFyYWN0ZXJzIChpbmNsdWRpbmcgXCIkXCIgb3IgXCJfXCIpLCBhbmQgbWF5IG5vdCBzdGFydCB3aXRoIGEgZGlnaXQuXG4gICAgICAgICAgICAgICAgUGxlYXNlIHVzZSBvbmx5IHZhbGlkIGlkZW50aWZpZXIgbmFtZXMgdG8gZW5zdXJlIGVycm9yLWZyZWUgb3BlcmF0aW9uLlxuICAgICAgICAgICAgYCkpO1xuY29uc3QgaGFuZGxlRXhwYW5kQ29sbGFwc2VHcm91cHNTZXJ2aWNlID0gKHNlcnZpY2UsIGV4cGFuZEVtaXR0ZXIsIGNvbGxhcHNlRW1pdHRlciwgbWFwJCQxKSA9PiAoc2VydmljZS5jaGFuZ2VzLnBpcGUoZmlsdGVyKCh7IGdyb3VwIH0pID0+IGlzUHJlc2VudChncm91cCkpKVxuICAgIC5zdWJzY3JpYmUoKHgpID0+IHguZXhwYW5kID8gZXhwYW5kRW1pdHRlci5lbWl0KG1hcCQkMSh4KSkgOiBjb2xsYXBzZUVtaXR0ZXIuZW1pdChtYXAkJDEoeCkpKSk7XG5jb25zdCBoYW5kbGVFeHBhbmRDb2xsYXBzZURldGFpbHNTZXJ2aWNlID0gKHNlcnZpY2UsIGV4cGFuZEVtaXR0ZXIsIGNvbGxhcHNlRW1pdHRlciwgbWFwJCQxKSA9PiAoc2VydmljZS5jaGFuZ2VzLnBpcGUoZmlsdGVyKCh7IGRhdGFJdGVtIH0pID0+IGlzUHJlc2VudChkYXRhSXRlbSkpKVxuICAgIC5zdWJzY3JpYmUoKHgpID0+IHguZXhwYW5kID8gZXhwYW5kRW1pdHRlci5lbWl0KG1hcCQkMSh4KSkgOiBjb2xsYXBzZUVtaXR0ZXIuZW1pdChtYXAkJDEoeCkpKSk7XG5jb25zdCBpc0luRWRpdGVkQ2VsbCA9IChlbGVtZW50LCBncmlkRWxlbWVudCkgPT4gY2xvc2VzdChlbGVtZW50LCBtYXRjaGVzQ2xhc3Nlcygnay1ncmlkLWVkaXQtY2VsbCcpKSAmJlxuICAgIGNsb3Nlc3QoZWxlbWVudCwgbWF0Y2hlc05vZGVOYW1lKCdrZW5kby1ncmlkJykpID09PSBncmlkRWxlbWVudDtcbmNvbnN0IMm1NSQxID0gRU1QVFlfQ0VMTF9DT05URVhUO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBLZW5kbyBVSSBHcmlkIGNvbXBvbmVudCBmb3IgQW5ndWxhci5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHMtcHJldmlld1xuICogX0BDb21wb25lbnQoe1xuICogICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgdGVtcGxhdGU6IGBcbiAqICAgICAgICA8a2VuZG8tZ3JpZCBbZGF0YV09XCJncmlkRGF0YVwiPlxuICogICAgICAgIDwva2VuZG8tZ3JpZD5cbiAqICAgIGBcbiAqIH0pXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICAgcHVibGljIGdyaWREYXRhOiBhbnlbXSA9IHByb2R1Y3RzO1xuICogfVxuICpcbiAqIGNvbnN0IHByb2R1Y3RzID0gW3tcbiAqICAgIFwiUHJvZHVjdElEXCI6IDEsXG4gKiAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhaVwiLFxuICogICAgXCJVbml0UHJpY2VcIjogMTguMDAwMCxcbiAqICAgIFwiRGlzY29udGludWVkXCI6IHRydWVcbiAqICB9LCB7XG4gKiAgICBcIlByb2R1Y3RJRFwiOiAyLFxuICogICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYW5nXCIsXG4gKiAgICBcIlVuaXRQcmljZVwiOiAxOS4wMDAwLFxuICogICAgXCJEaXNjb250aW51ZWRcIjogZmFsc2VcbiAqICB9XG4gKiBdO1xuICogYGBgXG4gKi9cbmxldCBHcmlkQ29tcG9uZW50ID0gY2xhc3MgR3JpZENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3Ioc3VwcG9ydFNlcnZpY2UsIHNlbGVjdGlvblNlcnZpY2UsIGNlbGxTZWxlY3Rpb25TZXJ2aWNlLCB3cmFwcGVyLCBncm91cEluZm9TZXJ2aWNlLCBncm91cHNTZXJ2aWNlLCBjaGFuZ2VOb3RpZmljYXRpb24sIGRldGFpbHNTZXJ2aWNlLCBlZGl0U2VydmljZSwgZmlsdGVyU2VydmljZSwgcGRmU2VydmljZSwgcmVzcG9uc2l2ZVNlcnZpY2UsIHJlbmRlcmVyLCBleGNlbFNlcnZpY2UsIG5nWm9uZSwgc2Nyb2xsU3luY1NlcnZpY2UsIGRvbUV2ZW50cywgY29sdW1uUmVzaXppbmdTZXJ2aWNlLCBjaGFuZ2VEZXRlY3RvclJlZiwgY29sdW1uUmVvcmRlclNlcnZpY2UsIGNvbHVtbkluZm9TZXJ2aWNlLCBuYXZpZ2F0aW9uU2VydmljZSwgc29ydFNlcnZpY2UsIHNjcm9sbFJlcXVlc3RTZXJ2aWNlLCBsb2NhbGl6YXRpb24pIHtcbiAgICAgICAgdGhpcy5zdXBwb3J0U2VydmljZSA9IHN1cHBvcnRTZXJ2aWNlO1xuICAgICAgICB0aGlzLnNlbGVjdGlvblNlcnZpY2UgPSBzZWxlY3Rpb25TZXJ2aWNlO1xuICAgICAgICB0aGlzLmNlbGxTZWxlY3Rpb25TZXJ2aWNlID0gY2VsbFNlbGVjdGlvblNlcnZpY2U7XG4gICAgICAgIHRoaXMud3JhcHBlciA9IHdyYXBwZXI7XG4gICAgICAgIHRoaXMuZ3JvdXBJbmZvU2VydmljZSA9IGdyb3VwSW5mb1NlcnZpY2U7XG4gICAgICAgIHRoaXMuZ3JvdXBzU2VydmljZSA9IGdyb3Vwc1NlcnZpY2U7XG4gICAgICAgIHRoaXMuY2hhbmdlTm90aWZpY2F0aW9uID0gY2hhbmdlTm90aWZpY2F0aW9uO1xuICAgICAgICB0aGlzLmRldGFpbHNTZXJ2aWNlID0gZGV0YWlsc1NlcnZpY2U7XG4gICAgICAgIHRoaXMuZWRpdFNlcnZpY2UgPSBlZGl0U2VydmljZTtcbiAgICAgICAgdGhpcy5maWx0ZXJTZXJ2aWNlID0gZmlsdGVyU2VydmljZTtcbiAgICAgICAgdGhpcy5wZGZTZXJ2aWNlID0gcGRmU2VydmljZTtcbiAgICAgICAgdGhpcy5yZXNwb25zaXZlU2VydmljZSA9IHJlc3BvbnNpdmVTZXJ2aWNlO1xuICAgICAgICB0aGlzLnJlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgICAgIHRoaXMuZXhjZWxTZXJ2aWNlID0gZXhjZWxTZXJ2aWNlO1xuICAgICAgICB0aGlzLm5nWm9uZSA9IG5nWm9uZTtcbiAgICAgICAgdGhpcy5zY3JvbGxTeW5jU2VydmljZSA9IHNjcm9sbFN5bmNTZXJ2aWNlO1xuICAgICAgICB0aGlzLmRvbUV2ZW50cyA9IGRvbUV2ZW50cztcbiAgICAgICAgdGhpcy5jb2x1bW5SZXNpemluZ1NlcnZpY2UgPSBjb2x1bW5SZXNpemluZ1NlcnZpY2U7XG4gICAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3JSZWYgPSBjaGFuZ2VEZXRlY3RvclJlZjtcbiAgICAgICAgdGhpcy5jb2x1bW5SZW9yZGVyU2VydmljZSA9IGNvbHVtblJlb3JkZXJTZXJ2aWNlO1xuICAgICAgICB0aGlzLmNvbHVtbkluZm9TZXJ2aWNlID0gY29sdW1uSW5mb1NlcnZpY2U7XG4gICAgICAgIHRoaXMubmF2aWdhdGlvblNlcnZpY2UgPSBuYXZpZ2F0aW9uU2VydmljZTtcbiAgICAgICAgdGhpcy5zb3J0U2VydmljZSA9IHNvcnRTZXJ2aWNlO1xuICAgICAgICB0aGlzLnNjcm9sbFJlcXVlc3RTZXJ2aWNlID0gc2Nyb2xsUmVxdWVzdFNlcnZpY2U7XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uID0gbG9jYWxpemF0aW9uO1xuICAgICAgICAvKipcbiAgICAgICAgICogU2V0cyB0aGUgZGF0YSBvZiB0aGUgR3JpZC4gSWYgYW4gYXJyYXkgaXMgcHJvdmlkZWQsIHRoZSBHcmlkIGF1dG9tYXRpY2FsbHkgZ2V0cyB0aGUgdG90YWwgY291bnRcbiAgICAgICAgICogKFttb3JlIGluZm9ybWF0aW9uIGFuZCBleGFtcGxlXSh7JSBzbHVnIGRhdGFiaW5kaW5nX2dyaWQgJX0pKS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZGF0YSA9IFtdO1xuICAgICAgICAvKipcbiAgICAgICAgICogRGVmaW5lcyB0aGUgc2Nyb2xsIG1vZGUgdXNlZCBieSB0aGUgR3JpZC5cbiAgICAgICAgICpcbiAgICAgICAgICogVGhlIGF2YWlsYWJsZSBvcHRpb25zIGFyZTpcbiAgICAgICAgICogIC0gYG5vbmVgJm1kYXNoO1JlbmRlcnMgbm8gc2Nyb2xsYmFyLlxuICAgICAgICAgKiAgLSBgc2Nyb2xsYWJsZWAmbWRhc2g7VGhlIGRlZmF1bHQgc2Nyb2xsIG1vZGUuIEl0IHJlcXVpcmVzIHRoZSBzZXR0aW5nIG9mIHRoZSBgaGVpZ2h0YCBvcHRpb24uXG4gICAgICAgICAqICAtIGB2aXJ0dWFsYCZtZGFzaDtEaXNwbGF5cyBubyBwYWdlciBhbmQgcmVuZGVycyBhIHBvcnRpb24gb2YgdGhlIGRhdGEgKG9wdGltaXplZCByZW5kZXJpbmcpIHdoaWxlIHRoZSB1c2VyIGlzIHNjcm9sbGluZyB0aGUgY29udGVudC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc2Nyb2xsYWJsZSA9ICdzY3JvbGxhYmxlJztcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEVuYWJsZXMgdGhlIHNpbmdsZS1yb3cgW3NlbGVjdGlvbl0oeyUgc2x1ZyBzZWxlY3Rpb25fZ3JpZCAlfSkgb2YgdGhlIEdyaWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnNlbGVjdGFibGUgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEEgZnVuY3Rpb24gdGhhdCBkZWZpbmVzIGhvdyB0byB0cmFjayBjaGFuZ2VzIGZvciB0aGUgZGF0YSByb3dzLlxuICAgICAgICAgKlxuICAgICAgICAgKiBCeSBkZWZhdWx0LCB0aGUgR3JpZCB0cmFja3MgY2hhbmdlcyBieSB0aGUgaW5kZXggb2YgdGhlIGRhdGEgaXRlbS5cbiAgICAgICAgICogRWRpdGVkIHJvd3MgYXJlIHRyYWNrZWQgYnkgcmVmZXJlbmNlLlxuICAgICAgICAgKiBJbiBzb21lIGNhc2VzLCB5b3UgbWlnaHQgbmVlZCB0byBvdmVycmlkZSB0aGUgZGVmYXVsdCBiZWhhdmlvcixcbiAgICAgICAgICogZm9yIGV4YW1wbGUsIHdoZW4geW91IGltcGxlbWVudCBlZGl0aW5nIHdpdGggaW1tdXRhYmxlIGRhdGEgaXRlbXMuXG4gICAgICAgICAqXG4gICAgICAgICAqIFRoZSBmb2xsb3dpbmcgZXhhbXBsZSBkZW1vbnN0cmF0ZXMgaG93IHRvIHRyYWNrIGl0ZW1zIG9ubHkgYnkgaW5kZXguXG4gICAgICAgICAqXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYHRzXG4gICAgICAgICAqIGltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuICAgICAgICAgKiBpbXBvcnQgeyBHcmlkSXRlbSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWdyaWQnO1xuICAgICAgICAgKlxuICAgICAgICAgKiBfQENvbXBvbmVudCh7XG4gICAgICAgICAqICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAgICAgICAgICogICAgdGVtcGxhdGU6IGBcbiAgICAgICAgICogICAgICAgIDxrZW5kby1ncmlkIFtkYXRhXT1cImdyaWREYXRhXCIgW3RyYWNrQnldPVwidHJhY2tCeVwiPlxuICAgICAgICAgKiAgICAgICAgPC9rZW5kby1ncmlkPlxuICAgICAgICAgKiAgICBgXG4gICAgICAgICAqIH0pXG4gICAgICAgICAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gICAgICAgICAqICAgIHB1YmxpYyBncmlkRGF0YTogYW55W10gPSBwcm9kdWN0cztcbiAgICAgICAgICpcbiAgICAgICAgICogICAgcHVibGljIHRyYWNrQnkoaW5kZXg6IG51bWJlciwgaXRlbTogR3JpZEl0ZW0pOiBhbnkge1xuICAgICAgICAgKiAgICAgICAgY29uc29sZS5sb2coaXRlbSk7XG4gICAgICAgICAqICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgICAgICAqICAgIH1cbiAgICAgICAgICogfVxuICAgICAgICAgKlxuICAgICAgICAgKiBjb25zdCBwcm9kdWN0cyA9IFt7XG4gICAgICAgICAqICAgIFwiUHJvZHVjdElEXCI6IDEsXG4gICAgICAgICAqICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFpXCIsXG4gICAgICAgICAqICAgIFwiVW5pdFByaWNlXCI6IDE4LjAwMDAsXG4gICAgICAgICAqICAgIFwiRGlzY29udGludWVkXCI6IHRydWVcbiAgICAgICAgICogIH0sIHtcbiAgICAgICAgICogICAgXCJQcm9kdWN0SURcIjogMixcbiAgICAgICAgICogICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYW5nXCIsXG4gICAgICAgICAqICAgIFwiVW5pdFByaWNlXCI6IDE5LjAwMDAsXG4gICAgICAgICAqICAgIFwiRGlzY29udGludWVkXCI6IGZhbHNlXG4gICAgICAgICAqICB9XG4gICAgICAgICAqIF07XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy50cmFja0J5ID0gZGVmYXVsdFRyYWNrQnk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJZiBzZXQgdG8gYHRydWVgLCB0aGUgZ3JpZCB3aWxsIHJlbmRlciBvbmx5IHRoZSBjb2x1bW5zIGluIHRoZSBjdXJyZW50IHZpZXdwb3J0LlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy52aXJ0dWFsQ29sdW1ucyA9IGZhbHNlO1xuICAgICAgICAvKipcbiAgICAgICAgICogRW5hYmxlcyB0aGUgW2ZpbHRlcmluZ10oeyUgc2x1ZyBmaWx0ZXJpbmdfZ3JpZCAlfSkgb2YgdGhlIEdyaWQgY29sdW1ucyB0aGF0IGhhdmUgdGhlaXIgYGZpZWxkYCBvcHRpb24gc2V0LlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5maWx0ZXJhYmxlID0gZmFsc2U7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBFbmFibGVzIHRoZSBbc29ydGluZ10oeyUgc2x1ZyBzb3J0aW5nX2dyaWQgJX0pIG9mIHRoZSBHcmlkIGNvbHVtbnMgdGhhdCBoYXZlIHRoZWlyIGBmaWVsZGAgb3B0aW9uIHNldC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc29ydGFibGUgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENvbmZpZ3VyZXMgdGhlIHBhZ2VyIG9mIHRoZSBHcmlkIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgcGFnaW5nX2dyaWQgJX0pKS5cbiAgICAgICAgICpcbiAgICAgICAgICogVGhlIGF2YWlsYWJsZSBvcHRpb25zIGFyZTpcbiAgICAgICAgICogLSBgYnV0dG9uQ291bnQ6IE51bWJlcmAmbWRhc2g7U2V0cyB0aGUgbWF4aW11bSBudW1lcmljIGJ1dHRvbnMgY291bnQgYmVmb3JlIHRoZSBidXR0b25zIGFyZSBjb2xsYXBzZWQuIERlZmF1bHRzIHRvIGAxMGAuXG4gICAgICAgICAqIC0gYGluZm86IEJvb2xlYW5gJm1kYXNoO1RvZ2dsZXMgdGhlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IHBhZ2UgYW5kIHRoZSB0b3RhbCBudW1iZXIgb2YgcmVjb3Jkcy4gRGVmYXVsdHMgdG8gYHRydWVgLlxuICAgICAgICAgKiAtIGB0eXBlOiBQYWdlclR5cGVgJm1kYXNoO0FjY2VwdHMgdGhlIGBudW1lcmljYCAoYnV0dG9ucyB3aXRoIG51bWJlcnMpIGFuZCBgaW5wdXRgIChpbnB1dCBmb3IgdHlwaW5nIHRoZSBwYWdlIG51bWJlcikgdmFsdWVzLiBEZWZhdWx0cyB0byBgJ251bWVyaWMnYC5cbiAgICAgICAgICogLSBgcGFnZVNpemVzOiBCb29sZWFuYCBvciBgQXJyYXk8bnVtYmVyPmAmbWRhc2g7U2hvd3MgYSBtZW51IGZvciBzZWxlY3RpbmcgdGhlIHBhZ2Ugc2l6ZS4gRGVmYXVsdHMgdG8gYGZhbHNlYC5cbiAgICAgICAgICogLSBgcHJldmlvdXNOZXh0OiBCb29sZWFuYCZtZGFzaDtUb2dnbGVzIHRoZSAqKlByZXZpb3VzKiogYW5kICoqTmV4dCoqIGJ1dHRvbnMuIERlZmF1bHRzIHRvIGB0cnVlYC5cbiAgICAgICAgICogLSBgcmVzcG9uc2l2ZTogQm9vbGVhbmAmbWRhc2g7VG9nZ2xlcyB0aGUgYnVpbHQtaW4gcmVzcG9uc2l2ZSBiZWhhdmlvciBvZiB0aGUgUGFnZXIuIERlZmF1bHRzIHRvIGB0cnVlYC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMucGFnZWFibGUgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIElmIHNldCB0byBgdHJ1ZWAsIHRoZSB1c2VyIGNhbiBncm91cCB0aGUgR3JpZCBieSBkcmFnZ2luZyB0aGUgY29sdW1uIGhlYWRlciBjZWxscy5cbiAgICAgICAgICogQnkgZGVmYXVsdCwgZ3JvdXBpbmcgaXMgZGlzYWJsZWQgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBncm91cGluZ2Jhc2ljc19ncmlkICV9KSkuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmdyb3VwYWJsZSA9IGZhbHNlO1xuICAgICAgICAvKipcbiAgICAgICAgICogSWYgc2V0IHRvIGB0cnVlYCwgdGhlIHVzZXIgY2FuIHVzZSBkZWRpY2F0ZWQgc2hvcnRjdXRzIHRvIGludGVyYWN0IHdpdGggdGhlIEdyaWQuXG4gICAgICAgICAqIEJ5IGRlZmF1bHQsIG5hdmlnYXRpb24gaXMgZGlzYWJsZWQgYW5kIHRoZSBHcmlkIGNvbnRlbnQgaXMgYWNjZXNzaWJsZSBpbiB0aGUgbm9ybWFsIHRhYiBzZXF1ZW5jZS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMubmF2aWdhYmxlID0gZmFsc2U7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJbmRpY2F0ZXMgd2hldGhlciB0aGUgR3JpZCBjb2x1bW5zIHdpbGwgYmUgcmVzaXplZCBkdXJpbmcgaW5pdGlhbGl6YXRpb24gc28gdGhhdFxuICAgICAgICAgKiB0aGV5IGZpdCB0aGVpciBoZWFkZXJzIGFuZCByb3cgY29udGVudC4gRGVmYXVsdHMgdG8gYGZhbHNlYC5cbiAgICAgICAgICogQ29sdW1ucyB3aXRoIGBhdXRvU2l6ZWAgc2V0IHRvIGBmYWxzZWAgYXJlIGV4Y2x1ZGVkLlxuICAgICAgICAgKiBUbyBkeW5hbWljYWxseSB1cGRhdGUgdGhlIGNvbHVtbiB3aWR0aCB0byBtYXRjaCB0aGUgbmV3IGNvbnRlbnQsXG4gICAgICAgICAqIHJlZmVyIHRvIFt0aGlzIGV4YW1wbGVdKHslIHNsdWcgcmVzaXppbmdfY29sdW1uc19ncmlkICV9KS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYXV0b1NpemUgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIElmIHNldCB0byBgdHJ1ZWAsIHRoZSB1c2VyIGNhbiByZXNpemUgY29sdW1ucyBieSBkcmFnZ2luZyB0aGUgZWRnZXMgKHJlc2l6ZSBoYW5kbGVzKSBvZiB0aGVpciBoZWFkZXIgY2VsbHNcbiAgICAgICAgICogKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyByZXNpemluZ19jb2x1bW5zX2dyaWQgJX0pKS5cbiAgICAgICAgICpcbiAgICAgICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMucmVzaXphYmxlID0gZmFsc2U7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJZiBzZXQgdG8gYHRydWVgLCB0aGUgdXNlciBjYW4gcmVvcmRlciBjb2x1bW5zIGJ5IGRyYWdnaW5nIHRoZWlyIGhlYWRlciBjZWxsc1xuICAgICAgICAgKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIHJlb3JkZXJpbmdfY29sdW1uc19ncmlkICV9KSkuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBkZWZhdWx0IGZhbHNlXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnJlb3JkZXJhYmxlID0gZmFsc2U7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTcGVjaWZpZXMgaWYgdGhlIGxvYWRpbmcgaW5kaWNhdG9yIG9mIHRoZSBHcmlkIHdpbGwgYmUgZGlzcGxheWVkIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgZGF0YWJpbmRpbmdfZ3JpZCAlfSkpLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTcGVjaWZpZXMgaWYgdGhlIGNvbHVtbiBtZW51IG9mIHRoZSBjb2x1bW5zIHdpbGwgYmUgZGlzcGxheWVkIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgY29sdW1ubWVudV9ncmlkICV9KSkuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBkZWZhdWx0IGZhbHNlXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNvbHVtbk1lbnUgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNwZWNpZmllcyBpZiB0aGUgaGVhZGVyIG9mIHRoZSBncmlkIHdpbGwgYmUgaGlkZGVuLiBUaGUgaGVhZGVyIGlzIHZpc2libGUgYnkgZGVmYXVsdC5cbiAgICAgICAgICpcbiAgICAgICAgICogPiBUaGUgaGVhZGVyIGluY2x1ZGVzIGNvbHVtbiBoZWFkZXJzIGFuZCB0aGUgW2ZpbHRlciByb3ddKHslIHNsdWcgZmlsdGVyaW5nX2dyaWQgJX0jdG9jLWZpbHRlci1yb3cpLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5oaWRlSGVhZGVyID0gZmFsc2U7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSBHcmlkIGZpbHRlciBpcyBtb2RpZmllZCB0aHJvdWdoIHRoZSBVSS5cbiAgICAgICAgICogWW91IGhhdmUgdG8gaGFuZGxlIHRoZSBldmVudCB5b3Vyc2VsZiBhbmQgZmlsdGVyIHRoZSBkYXRhLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5maWx0ZXJDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSBwYWdlIG9mIHRoZSBHcmlkIGlzIGNoYW5nZWQgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBwYWdpbmdfZ3JpZCAlfSkpLlxuICAgICAgICAgKiBZb3UgaGF2ZSB0byBoYW5kbGUgdGhlIGV2ZW50IHlvdXJzZWxmIGFuZCBwYWdlIHRoZSBkYXRhLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5wYWdlQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICAvKipcbiAgICAgICAgICogRmlyZXMgd2hlbiB0aGUgZ3JvdXBpbmcgb2YgdGhlIEdyaWQgaXMgY2hhbmdlZC5cbiAgICAgICAgICogWW91IGhhdmUgdG8gaGFuZGxlIHRoZSBldmVudCB5b3Vyc2VsZiBhbmQgZ3JvdXAgdGhlIGRhdGEgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBncm91cGluZ2Jhc2ljc19ncmlkICV9KSkuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmdyb3VwQ2hhbmdlID0gbmV3IFpvbmVBd2FyZUV2ZW50RW1pdHRlcih0aGlzLm5nWm9uZSk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSBzb3J0aW5nIG9mIHRoZSBHcmlkIGlzIGNoYW5nZWQgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBzb3J0aW5nX2dyaWQgJX0pKS5cbiAgICAgICAgICogWW91IGhhdmUgdG8gaGFuZGxlIHRoZSBldmVudCB5b3Vyc2VsZiBhbmQgc29ydCB0aGUgZGF0YS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc29ydENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVzIHdoZW4gdGhlIHVzZXIgc2VsZWN0cyBhIEdyaWQgcm93LlxuICAgICAgICAgKiBFbWl0cyB0aGUgW1NlbGVjdGlvbkV2ZW50XSh7JSBzbHVnIGFwaV9ncmlkX3NlbGVjdGlvbmV2ZW50ICV9I3RvYy1zZWxlY3Rpb25jaGFuZ2UpLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zZWxlY3Rpb25DaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSBkYXRhIHN0YXRlIG9mIHRoZSBHcmlkIGlzIGNoYW5nZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmRhdGFTdGF0ZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVzIHdoZW4gdGhlIHVzZXIgZXhwYW5kcyBhIGdyb3VwIGhlYWRlci5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZ3JvdXBFeHBhbmQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSB1c2VyIGNvbGxhcHNlcyBhIGdyb3VwIGhlYWRlci5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZ3JvdXBDb2xsYXBzZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVzIHdoZW4gdGhlIHVzZXIgZXhwYW5kcyBhIG1hc3RlciByb3cuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmRldGFpbEV4cGFuZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVzIHdoZW4gdGhlIHVzZXIgY29sbGFwc2VzIGEgbWFzdGVyIHJvdy5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZGV0YWlsQ29sbGFwc2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSB1c2VyIGNsaWNrcyB0aGUgKipFZGl0KiogY29tbWFuZCBidXR0b24gdG8gZWRpdCBhIHJvd1xuICAgICAgICAgKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGVkaXRpbmdfdGVtcGxhdGVfZm9ybXNfZ3JpZCAlfSN0b2MtZWRpdGluZy1yZWNvcmRzKSkuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmVkaXQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSB1c2VyIGNsaWNrcyB0aGUgKipDYW5jZWwqKiBjb21tYW5kIGJ1dHRvbiB0byBjbG9zZSBhIHJvd1xuICAgICAgICAgKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGVkaXRpbmdfdGVtcGxhdGVfZm9ybXNfZ3JpZCAlfSN0b2MtY2FuY2VsbGluZy1lZGl0aW5nKSkuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNhbmNlbCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVzIHdoZW4gdGhlIHVzZXIgY2xpY2tzIHRoZSAqKlNhdmUqKiBjb21tYW5kIGJ1dHRvbiB0byBzYXZlIGNoYW5nZXMgaW4gYSByb3dcbiAgICAgICAgICogKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBlZGl0aW5nX3RlbXBsYXRlX2Zvcm1zX2dyaWQgJX0jdG9jLXNhdmluZy1yZWNvcmRzKSkuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnNhdmUgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSB1c2VyIGNsaWNrcyB0aGUgKipSZW1vdmUqKiBjb21tYW5kIGJ1dHRvbiB0byByZW1vdmUgYSByb3dcbiAgICAgICAgICogKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBlZGl0aW5nX3RlbXBsYXRlX2Zvcm1zX2dyaWQgJX0jdG9jLXJlbW92aW5nLXJlY29yZHMpKS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMucmVtb3ZlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICAvKipcbiAgICAgICAgICogRmlyZXMgd2hlbiB0aGUgdXNlciBjbGlja3MgdGhlICoqQWRkKiogY29tbWFuZCBidXR0b24gdG8gYWRkIGEgbmV3IHJvd1xuICAgICAgICAgKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGVkaXRpbmdfdGVtcGxhdGVfZm9ybXNfZ3JpZCAlfSN0b2MtYWRkaW5nLXJlY29yZHMpKS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYWRkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICAvKipcbiAgICAgICAgICogRmlyZXMgd2hlbiB0aGUgdXNlciBsZWF2ZXMgYW4gZWRpdGVkIGNlbGwgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBlZGl0aW5nX2luY2VsbF9ncmlkICV9I3RvYy1iYXNpYy1jb25jZXB0cykpLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jZWxsQ2xvc2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSB1c2VyIGNsaWNrcyBhIGNlbGwgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBlZGl0aW5nX2luY2VsbF9ncmlkICV9I3RvYy1iYXNpYy1jb25jZXB0cykpLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jZWxsQ2xpY2sgPSBuZXcgWm9uZUF3YXJlRXZlbnRFbWl0dGVyKHRoaXMubmdab25lKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVzIHdoZW4gdGhlIHVzZXIgY2xpY2tzIHRoZSAqKkV4cG9ydCB0byBQREYqKiBjb21tYW5kIGJ1dHRvbi5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMucGRmRXhwb3J0ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICAvKipcbiAgICAgICAgICogRmlyZXMgd2hlbiB0aGUgdXNlciBjbGlja3MgdGhlICoqRXhwb3J0IHRvIEV4Y2VsKiogY29tbWFuZCBidXR0b24uXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmV4Y2VsRXhwb3J0ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICAvKipcbiAgICAgICAgICogRmlyZXMgd2hlbiB0aGUgdXNlciBjb21wbGV0ZXMgdGhlIHJlc2l6aW5nIG9mIHRoZSBjb2x1bW4uXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNvbHVtblJlc2l6ZSA9IG5ldyBab25lQXdhcmVFdmVudEVtaXR0ZXIodGhpcy5uZ1pvbmUpO1xuICAgICAgICAvKipcbiAgICAgICAgICogRmlyZXMgd2hlbiB0aGUgdXNlciBjb21wbGV0ZXMgdGhlIHJlb3JkZXJpbmcgb2YgdGhlIGNvbHVtbi5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuY29sdW1uUmVvcmRlciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVzIHdoZW4gdGhlIHVzZXIgY2hhbmdlcyB0aGUgdmlzaWJpbGl0eSBvZiB0aGUgY29sdW1ucyBmcm9tIHRoZSBjb2x1bW4gbWVudSBvciBjb2x1bW4gY2hvb3Nlci5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuY29sdW1uVmlzaWJpbGl0eUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVzIHdoZW4gdGhlIHVzZXIgY2hhbmdlcyB0aGUgbG9ja2VkIHN0YXRlIG9mIHRoZSBjb2x1bW5zIGZyb20gdGhlIGNvbHVtbiBtZW51IG9yIGJ5IHJlb3JkZXJpbmcgdGhlIGNvbHVtbnMuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNvbHVtbkxvY2tlZENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVzIHdoZW4gdGhlIHVzZXIgY2hhbmdlcyB0aGUgc3RpY2t5IHN0YXRlIG9mIHRoZSBjb2x1bW5zIGZyb20gdGhlIGNvbHVtbiBtZW51LlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jb2x1bW5TdGlja3lDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSB1c2VyIHNjcm9sbHMgdG8gdGhlIGxhc3QgcmVjb3JkIG9uIHRoZSBwYWdlIGFuZCBlbmFibGVzIGVuZGxlc3Mgc2Nyb2xsaW5nXG4gICAgICAgICAqIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgc2Nyb2xsbW1vZGVzX2dyaWQgJX0jdG9jLWVuZGxlc3Mtc2Nyb2xsaW5nKSkuXG4gICAgICAgICAqIFlvdSBoYXZlIHRvIGhhbmRsZSB0aGUgZXZlbnQgeW91cnNlbGYgYW5kIHBhZ2UgdGhlIGRhdGEuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnNjcm9sbEJvdHRvbSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVzIHdoZW4gdGhlIGdyaWQgY29udGVudCBpcyBzY3JvbGxlZC5cbiAgICAgICAgICogRm9yIHBlcmZvcm1hbmNlIHJlYXNvbnMsIHRoZSBldmVudCBpcyB0cmlnZ2VyZWQgb3V0c2lkZSB0aGUgQW5ndWxhciB6b25lLiBFbnRlciB0aGUgQW5ndWxhciB6b25lIGlmIHlvdSBtYWtlIGFueSBjaGFuZ2VzIHRoYXQgcmVxdWlyZSBjaGFuZ2UgZGV0ZWN0aW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jb250ZW50U2Nyb2xsID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICAvKipcbiAgICAgICAgICogQSBxdWVyeSBsaXN0IG9mIGFsbCBkZWNsYXJlZCBjb2x1bW5zLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jb2x1bW5zID0gbmV3IFF1ZXJ5TGlzdCgpO1xuICAgICAgICB0aGlzLmZvb3RlciA9IG5ldyBRdWVyeUxpc3QoKTtcbiAgICAgICAgdGhpcy5zZWxlY3Rpb25EaXJlY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jb2x1bW5zQ29udGFpbmVyID0gbmV3IENvbHVtbnNDb250YWluZXIoKCkgPT4gdGhpcy5jb2x1bW5MaXN0LmZpbHRlckhpZXJhcmNoeShjb2x1bW4gPT4ge1xuICAgICAgICAgICAgY29sdW1uLm1hdGNoZXNNZWRpYSA9IHRoaXMubWF0Y2hlc01lZGlhKGNvbHVtbik7XG4gICAgICAgICAgICByZXR1cm4gY29sdW1uLmlzVmlzaWJsZTtcbiAgICAgICAgfSkpO1xuICAgICAgICB0aGlzLnZpZXcgPSBuZXcgRGF0YUNvbGxlY3Rpb24oKCkgPT4gbmV3IERhdGFSZXN1bHRJdGVyYXRvcih0aGlzLmRhdGEsIHRoaXMuc2tpcCwgdGhpcy5oYXNHcm91cEZvb3RlcnMpKTtcbiAgICAgICAgdGhpcy5zaG91bGRHZW5lcmF0ZUNvbHVtbnMgPSB0cnVlO1xuICAgICAgICB0aGlzLl9zb3J0ID0gbmV3IEFycmF5KCk7XG4gICAgICAgIHRoaXMuX2dyb3VwID0gbmV3IEFycmF5KCk7XG4gICAgICAgIHRoaXMuX3NraXAgPSAwO1xuICAgICAgICB0aGlzLmNhY2hlZFdpbmRvd1dpZHRoID0gMDtcbiAgICAgICAgdGhpcy5fcm93U2VsZWN0ZWQgPSBudWxsO1xuICAgICAgICB0aGlzLl9jZWxsU2VsZWN0ZWQgPSBudWxsO1xuICAgICAgICB0aGlzLnJ0bCA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9yb3dDbGFzcyA9ICgpID0+IG51bGw7XG4gICAgICAgIHZhbGlkYXRlUGFja2FnZShwYWNrYWdlTWV0YWRhdGEpO1xuICAgICAgICB0aGlzLmxvY2FsaXphdGlvblN1YnNjcmlwdGlvbiA9IHRoaXMubG9jYWxpemF0aW9uLmNoYW5nZXMuc3Vic2NyaWJlKCh7IHJ0bCB9KSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJ0bCA9IHJ0bDtcbiAgICAgICAgICAgIHRoaXMuZGlyZWN0aW9uID0gdGhpcy5ydGwgPyAncnRsJyA6ICdsdHInO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5ncm91cEluZm9TZXJ2aWNlLnJlZ2lzdGVyQ29sdW1uc0NvbnRhaW5lcigoKSA9PiB0aGlzLmNvbHVtbkxpc3QpO1xuICAgICAgICB0aGlzLmNvbHVtbkluZm9TZXJ2aWNlLmluaXQodGhpcy5jb2x1bW5zQ29udGFpbmVyLCAoKSA9PiB0aGlzLmNvbHVtbkxpc3QpO1xuICAgICAgICB0aGlzLmNvbHVtblZpc2liaWxpdHlDaGFuZ2VTdWJzY3JpcHRpb24gPSB0aGlzLmNvbHVtbkluZm9TZXJ2aWNlLnZpc2liaWxpdHlDaGFuZ2Uuc3Vic2NyaWJlKChjaGFuZ2VkKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNvbHVtblZpc2liaWxpdHlDaGFuZ2UuZW1pdChuZXcgQ29sdW1uVmlzaWJpbGl0eUNoYW5nZUV2ZW50KGNoYW5nZWQpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuY29sdW1uTG9ja2VkQ2hhbmdlU3Vic2NyaXB0aW9uID0gdGhpcy5jb2x1bW5JbmZvU2VydmljZS5sb2NrZWRDaGFuZ2Uuc3Vic2NyaWJlKChjaGFuZ2VkKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNvbHVtbkxvY2tlZENoYW5nZS5lbWl0KG5ldyBDb2x1bW5Mb2NrZWRDaGFuZ2VFdmVudChjaGFuZ2VkKSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNvbHVtblN0aWNreUNoYW5nZVN1YnNjcmlwdGlvbiA9IHRoaXMuY29sdW1uSW5mb1NlcnZpY2Uuc3RpY2t5Q2hhbmdlLnN1YnNjcmliZSgoY2hhbmdlZCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jb2x1bW5TdGlja3lDaGFuZ2UuZW1pdChuZXcgQ29sdW1uU3RpY2t5Q2hhbmdlRXZlbnQoY2hhbmdlZCkpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5ncm91cEV4cGFuZENvbGxhcHNlU3Vic2NyaXB0aW9uID0gaGFuZGxlRXhwYW5kQ29sbGFwc2VHcm91cHNTZXJ2aWNlKGdyb3Vwc1NlcnZpY2UsIHRoaXMuZ3JvdXBFeHBhbmQsIHRoaXMuZ3JvdXBDb2xsYXBzZSwgKHsgZ3JvdXAsIGdyb3VwSW5kZXgsIHBhcmVudEdyb3VwIH0pID0+ICh7IGdyb3VwLCBncm91cEluZGV4LCBwYXJlbnRHcm91cCB9KSk7XG4gICAgICAgIHRoaXMuZGV0YWlsc1NlcnZpY2VTdWJzY3JpcHRpb24gPSBoYW5kbGVFeHBhbmRDb2xsYXBzZURldGFpbHNTZXJ2aWNlKGRldGFpbHNTZXJ2aWNlLCB0aGlzLmRldGFpbEV4cGFuZCwgdGhpcy5kZXRhaWxDb2xsYXBzZSwgYXJncyA9PiBhcmdzKTtcbiAgICAgICAgdGhpcy5maWx0ZXJTdWJzY3JpcHRpb24gPSB0aGlzLmZpbHRlclNlcnZpY2UuY2hhbmdlcy5zdWJzY3JpYmUoeCA9PiB7XG4gICAgICAgICAgICB0aGlzLmZpbHRlckNoYW5nZS5lbWl0KHgpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5zb3J0U3Vic2NyaXB0aW9uID0gdGhpcy5zb3J0U2VydmljZS5jaGFuZ2VzLnN1YnNjcmliZSh4ID0+IHtcbiAgICAgICAgICAgIHRoaXMuc29ydENoYW5nZS5lbWl0KHgpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5hdHRhY2hTdGF0ZUNoYW5nZXNFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuYXR0YWNoRWRpdEhhbmRsZXJzKCk7XG4gICAgICAgIHRoaXMuYXR0YWNoRG9tRXZlbnRIYW5kbGVycygpO1xuICAgICAgICB0aGlzLnBkZlN1YnNjcmlwdGlvbiA9IHRoaXMucGRmU2VydmljZS5leHBvcnRDbGljay5zdWJzY3JpYmUodGhpcy5lbWl0UERGRXhwb3J0RXZlbnQuYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMuZXhjZWxTdWJzY3JpcHRpb24gPSB0aGlzLmV4Y2VsU2VydmljZS5leHBvcnRDbGljay5zdWJzY3JpYmUodGhpcy5zYXZlQXNFeGNlbC5iaW5kKHRoaXMpKTtcbiAgICAgICAgdGhpcy5jb2x1bW5zQ29udGFpbmVyQ2hhbmdlKCk7XG4gICAgICAgIHRoaXMuaGFuZGxlQ29sdW1uUmVzaXplKCk7XG4gICAgICAgIHRoaXMuY29sdW1uTGlzdCA9IG5ldyBDb2x1bW5MaXN0KHRoaXMuY29sdW1ucyk7XG4gICAgICAgIHRoaXMuY29sdW1uUmVvcmRlclN1YnNjcmlwdGlvbiA9IHRoaXMuY29sdW1uUmVvcmRlclNlcnZpY2VcbiAgICAgICAgICAgIC5jaGFuZ2VzLnN1YnNjcmliZSh0aGlzLnJlb3JkZXIuYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMuY29sdW1uUmFuZ2VDaGFuZ2VTdWJzY3JpcHRpb24gPSB0aGlzLmNvbHVtbkluZm9TZXJ2aWNlLmNvbHVtblJhbmdlQ2hhbmdlLnN1YnNjcmliZSh0aGlzLm9uQ29sdW1uUmFuZ2VDaGFuZ2UuYmluZCh0aGlzKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlZmluZXMgdGhlIG51bWJlciBvZiByZWNvcmRzIHRvIGJlIHNraXBwZWQgYnkgdGhlIHBhZ2VyLlxuICAgICAqIFJlcXVpcmVkIGJ5IHRoZSBbcGFnaW5nXSh7JSBzbHVnIHBhZ2luZ19ncmlkICV9KSBmdW5jdGlvbmFsaXR5LlxuICAgICAqL1xuICAgIGdldCBza2lwKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc2tpcDtcbiAgICB9XG4gICAgc2V0IHNraXAodmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlID49IDApIHtcbiAgICAgICAgICAgIHRoaXMuX3NraXAgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgZGVzY3JpcHRvcnMgYnkgd2hpY2ggdGhlIGRhdGEgd2lsbCBiZSBzb3J0ZWQgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBzb3J0aW5nX2dyaWQgJX0pKS5cbiAgICAgKi9cbiAgICBzZXQgc29ydCh2YWx1ZSkge1xuICAgICAgICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHRoaXMuX3NvcnQgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgc29ydCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NvcnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBkZXNjcmlwdG9ycyBieSB3aGljaCB0aGUgZGF0YSB3aWxsIGJlIGdyb3VwZWQgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBncm91cGluZ2Jhc2ljc19ncmlkICV9KSkuXG4gICAgICovXG4gICAgc2V0IGdyb3VwKHZhbHVlKSB7XG4gICAgICAgIGlmIChpc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgdGhpcy5fZ3JvdXAgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKi9cbiAgICBnZXQgZ3JvdXAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9ncm91cDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBzaG93VG9wVG9vbGJhcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudG9vbGJhclRlbXBsYXRlICYmIFsndG9wJywgJ2JvdGgnXS5pbmRleE9mKHRoaXMudG9vbGJhclRlbXBsYXRlLnBvc2l0aW9uKSA+IC0xO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IHNob3dCb3R0b21Ub29sYmFyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50b29sYmFyVGVtcGxhdGUgJiYgWydib3R0b20nLCAnYm90aCddLmluZGV4T2YodGhpcy50b29sYmFyVGVtcGxhdGUucG9zaXRpb24pID4gLTE7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgaXNMb2NrZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvY2tlZExlYWZDb2x1bW5zLmxlbmd0aCA+IDA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgc2hvd1RvcFBhZ2VyKCkge1xuICAgICAgICBjb25zdCBwb3NpdGlvbiA9IHRoaXMucGFnZWFibGUucG9zaXRpb247XG4gICAgICAgIHJldHVybiAhdGhpcy5pc1ZpcnR1YWwgJiYgdGhpcy5wYWdlYWJsZSAhPT0gZmFsc2UgJiYgWyd0b3AnLCAnYm90aCddLmluZGV4T2YocG9zaXRpb24pID4gLTE7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgc2hvd0JvdHRvbVBhZ2VyKCkge1xuICAgICAgICBjb25zdCBwb3NpdGlvbiA9IHRoaXMucGFnZWFibGUucG9zaXRpb247XG4gICAgICAgIHJldHVybiAhdGhpcy5pc1ZpcnR1YWwgJiYgdGhpcy5wYWdlYWJsZSAhPT0gZmFsc2UgJiYgcG9zaXRpb24gIT09ICd0b3AnO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGhhc1BhZ2VyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zaG93VG9wUGFnZXIgfHwgdGhpcy5zaG93Qm90dG9tUGFnZXI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgc2hvd0dyb3VwUGFuZWwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyb3VwYWJsZSAmJiB0aGlzLmdyb3VwYWJsZS5lbmFibGVkICE9PSBmYWxzZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBncm91cGFibGVFbXB0eVRleHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyb3VwYWJsZS5lbXB0eVRleHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgbWFycXVlZVNlbGVjdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0aW9uU2VydmljZS5lbmFibGVNYXJxdWVlIHx8IHRoaXMuY2VsbFNlbGVjdGlvblNlcnZpY2UuZW5hYmxlTWFycXVlZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqXG4gICAgICogQW4gYWxpYXMgZm9yIGBuYXZpZ2FibGVgIGZvciB1c2VycyB3aG8gbWlncmF0ZSBmcm9tIEtlbmRvIFVJIGZvciBqUXVlcnkuXG4gICAgICovXG4gICAgc2V0IG5hdmlnYXRhYmxlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMubmF2aWdhYmxlID0gdmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgbmF2aWdhdGFibGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5hdmlnYWJsZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyBhIGZ1bmN0aW9uIHRoYXQgaXMgZXhlY3V0ZWQgZm9yIGV2ZXJ5IGRhdGEgcm93IGluIHRoZSBjb21wb25lbnQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuICAgICAqIGltcG9ydCB7IFJvd0NsYXNzQXJncyB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWdyaWQnO1xuICAgICAqXG4gICAgICogX0BDb21wb25lbnQoe1xuICAgICAqICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAgICAgKiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgICAqICAgIHN0eWxlczogW2BcbiAgICAgKiAgICAgICAgLmstZ3JpZCB0ci5ldmVuIHsgYmFja2dyb3VuZC1jb2xvcjogI2Y0NWM0MjsgfVxuICAgICAqICAgICAgICAuay1ncmlkIHRyLm9kZCB7IGJhY2tncm91bmQtY29sb3I6ICM0MWY0ZGY7IH1cbiAgICAgKiAgICBgXSxcbiAgICAgKiAgICB0ZW1wbGF0ZTogYFxuICAgICAqICAgICAgICA8a2VuZG8tZ3JpZCBbZGF0YV09XCJncmlkRGF0YVwiIFtyb3dDbGFzc109XCJyb3dDYWxsYmFja1wiPlxuICAgICAqICAgICAgICA8L2tlbmRvLWdyaWQ+XG4gICAgICogICAgYFxuICAgICAqIH0pXG4gICAgICogY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAgICAgKiAgICBwdWJsaWMgZ3JpZERhdGE6IGFueVtdID0gcHJvZHVjdHM7XG4gICAgICpcbiAgICAgKiAgICBwdWJsaWMgcm93Q2FsbGJhY2soY29udGV4dDogUm93Q2xhc3NBcmdzKSB7XG4gICAgICogICAgICAgIGNvbnN0IGlzRXZlbiA9IGNvbnRleHQuaW5kZXggJSAyID09IDA7XG4gICAgICogICAgICAgIHJldHVybiB7XG4gICAgICogICAgICAgICAgICBldmVuOiBpc0V2ZW4sXG4gICAgICogICAgICAgICAgICBvZGQ6ICFpc0V2ZW5cbiAgICAgKiAgICAgICAgfTtcbiAgICAgKiAgICB9XG4gICAgICogfVxuICAgICAqXG4gICAgICogY29uc3QgcHJvZHVjdHMgPSBbe1xuICAgICAqICAgIFwiUHJvZHVjdElEXCI6IDEsXG4gICAgICogICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYWlcIixcbiAgICAgKiAgICBcIlVuaXRQcmljZVwiOiAxOC4wMDAwLFxuICAgICAqICAgIFwiRGlzY29udGludWVkXCI6IHRydWVcbiAgICAgKiAgfSwge1xuICAgICAqICAgIFwiUHJvZHVjdElEXCI6IDIsXG4gICAgICogICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYW5nXCIsXG4gICAgICogICAgXCJVbml0UHJpY2VcIjogMTkuMDAwMCxcbiAgICAgKiAgICBcIkRpc2NvbnRpbnVlZFwiOiBmYWxzZVxuICAgICAqICB9XG4gICAgICogXTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBzZXQgcm93Q2xhc3MoZm4pIHtcbiAgICAgICAgaWYgKGlzRGV2TW9kZSAmJiB0eXBlb2YgZm4gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgcm93Q2xhc3MgbXVzdCBiZSBhIGZ1bmN0aW9uLCBidXQgcmVjZWl2ZWQgJHtKU09OLnN0cmluZ2lmeShmbil9LmApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3Jvd0NsYXNzID0gZm47XG4gICAgfVxuICAgIGdldCByb3dDbGFzcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Jvd0NsYXNzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIGEgZnVuY3Rpb24gdGhhdCBpcyBleGVjdXRlZCBmb3IgZXZlcnkgZGF0YSByb3cgaW4gdGhlIGNvbXBvbmVudCxcbiAgICAgKiBhbmQgZGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSByb3cgd2lsbCBiZSBzdGlja3ksIGkuZS4gYWx3YXlzIHZpc2libGUgYWZ0ZXIgc2Nyb2xsaW5nLlxuICAgICAqL1xuICAgIHNldCByb3dTdGlja3koZm4pIHtcbiAgICAgICAgaWYgKGlzRGV2TW9kZSAmJiBpc1ByZXNlbnQoZm4pICYmIHR5cGVvZiBmbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGByb3dTdGlja3kgbXVzdCBiZSBhIGZ1bmN0aW9uLCBidXQgcmVjZWl2ZWQgJHtKU09OLnN0cmluZ2lmeShmbil9LmApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1ByZXNlbnQoZm4pKSB7XG4gICAgICAgICAgICB0aGlzLl9yb3dTdGlja3kgPSBmbjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgcm93U3RpY2t5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcm93U3RpY2t5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIGEgQm9vbGVhbiBmdW5jdGlvbiB0aGF0IGlzIGV4ZWN1dGVkIGZvciBlYWNoIGRhdGEgcm93IGluIHRoZSBjb21wb25lbnRcbiAgICAgKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGdyaWRfc2VsZWN0aW9uX2N1c3RvbSAlfSN0b2Mtc2V0dGluZy10aGUtc2VsZWN0ZWQtcm93cykpLlxuICAgICAqIERldGVybWluZXMgd2hldGhlciB0aGUgcm93IHdpbGwgYmUgc2VsZWN0ZWQuXG4gICAgICovXG4gICAgc2V0IHJvd1NlbGVjdGVkKGZuKSB7XG4gICAgICAgIGlmIChpc0Rldk1vZGUgJiYgdHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYHJvd1NlbGVjdGVkIG11c3QgYmUgYSBmdW5jdGlvbiwgYnV0IHJlY2VpdmVkICR7SlNPTi5zdHJpbmdpZnkoZm4pfS5gKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9yb3dTZWxlY3RlZCA9IGZuO1xuICAgIH1cbiAgICBnZXQgcm93U2VsZWN0ZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yb3dTZWxlY3RlZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyBhIGZ1bmN0aW9uIHRoYXQgZGV0ZXJtaW5lcyB0aGUgc2VsZWN0ZWQgc3RhdGUgb2YgYSBkYXRhIGNlbGwuXG4gICAgICogUmV0dXJucyBhbiBvYmplY3Qgd2l0aCBgc2VsZWN0ZWRgIGFuZCBgaXRlbWAgcHJvcGVydGllcy5cbiAgICAgKiBUaGUgY2VsbCBpcyBtYXJrZWQgYXMgc2VsZWN0ZWQgb25seSBpZiB0aGUgYHNlbGVjdGVkYCBwcm9wZXJ0eSBlcXVhbHMgYHRydWVgLlxuICAgICAqXG4gICAgICogVGhlIGZ1bmN0aW9uIGlzIGV4ZWN1dGVkIGZvciBlYWNoIGRhdGEgY2VsbCBhbmQgbWF5IGJlIGNhbGxlZCBtb3JlIHRoYW4gb25jZVxuICAgICAqIGFzIHBhcnQgb2YgYSBjaGFuZ2UgZGV0ZWN0aW9uIGN5Y2xlLiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGdyaWRfc2VsZWN0aW9uX2N1c3RvbSAlfSN0b2Mtc2V0dGluZy10aGUtc2VsZWN0ZWQtY2VsbHMpKVxuICAgICAqL1xuICAgIHNldCBjZWxsU2VsZWN0ZWQoZm4pIHtcbiAgICAgICAgaWYgKGlzRGV2TW9kZSAmJiB0eXBlb2YgZm4gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgY2VsbFNlbGVjdGVkIG11c3QgYmUgYSBmdW5jdGlvbiwgYnV0IHJlY2VpdmVkICR7SlNPTi5zdHJpbmdpZnkoZm4pfS5gKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9jZWxsU2VsZWN0ZWQgPSBmbjtcbiAgICB9XG4gICAgZ2V0IGNlbGxTZWxlY3RlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NlbGxTZWxlY3RlZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgY3VycmVudGx5IGZvY3VzZWQgY2VsbCAoaWYgYW55KS5cbiAgICAgKi9cbiAgICBnZXQgYWN0aXZlQ2VsbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubmF2aWdhdGlvblNlcnZpY2UuYWN0aXZlQ2VsbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgY3VycmVudGx5IGZvY3VzZWQgcm93IChpZiBhbnkpLlxuICAgICAqL1xuICAgIGdldCBhY3RpdmVSb3coKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmFjdGl2ZVJvdztcbiAgICB9XG4gICAgZ2V0IGRpcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGlyZWN0aW9uO1xuICAgIH1cbiAgICBnZXQgaG9zdENsYXNzZXMoKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBnZXQgbG9ja2VkQ2xhc3NlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9ja2VkTGVhZkNvbHVtbnMubGVuZ3RoID4gMDtcbiAgICB9XG4gICAgZ2V0IHZpcnR1YWxDbGFzc2VzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pc1ZpcnR1YWw7XG4gICAgfVxuICAgIGdldCBub1Njcm9sbGJhckNsYXNzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zY3JvbGxiYXJXaWR0aCA9PT0gMDtcbiAgICB9XG4gICAgZ2V0IGRldGFpbFRlbXBsYXRlKCkge1xuICAgICAgICBpZiAodGhpcy5fY3VzdG9tRGV0YWlsVGVtcGxhdGUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9jdXN0b21EZXRhaWxUZW1wbGF0ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5kZXRhaWxUZW1wbGF0ZUNoaWxkcmVuID8gdGhpcy5kZXRhaWxUZW1wbGF0ZUNoaWxkcmVuLmZpcnN0IDogdW5kZWZpbmVkO1xuICAgIH1cbiAgICBzZXQgZGV0YWlsVGVtcGxhdGUoZGV0YWlsVGVtcGxhdGUpIHtcbiAgICAgICAgdGhpcy5fY3VzdG9tRGV0YWlsVGVtcGxhdGUgPSBkZXRhaWxUZW1wbGF0ZTtcbiAgICB9XG4gICAgZ2V0IGxvYWRpbmdUZW1wbGF0ZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2N1c3RvbUxvYWRpbmdUZW1wbGF0ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2N1c3RvbURldGFpbFRlbXBsYXRlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmxvYWRpbmdUZW1wbGF0ZUNoaWxkcmVuID8gdGhpcy5sb2FkaW5nVGVtcGxhdGVDaGlsZHJlbi5maXJzdCA6IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgc2V0IGxvYWRpbmdUZW1wbGF0ZShsb2FkaW5nVGVtcGxhdGUpIHtcbiAgICAgICAgdGhpcy5fY3VzdG9tTG9hZGluZ1RlbXBsYXRlID0gbG9hZGluZ1RlbXBsYXRlO1xuICAgIH1cbiAgICBnZXQgbm9SZWNvcmRzVGVtcGxhdGUoKSB7XG4gICAgICAgIGlmICh0aGlzLl9jdXN0b21Ob1JlY29yZHNUZW1wbGF0ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2N1c3RvbU5vUmVjb3Jkc1RlbXBsYXRlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLm5vUmVjb3Jkc1RlbXBsYXRlQ2hpbGRyZW4gPyB0aGlzLm5vUmVjb3Jkc1RlbXBsYXRlQ2hpbGRyZW4uZmlyc3QgOiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHNldCBub1JlY29yZHNUZW1wbGF0ZShjdXN0b21Ob1JlY29yZHNUZW1wbGF0ZSkge1xuICAgICAgICB0aGlzLl9jdXN0b21Ob1JlY29yZHNUZW1wbGF0ZSA9IGN1c3RvbU5vUmVjb3Jkc1RlbXBsYXRlO1xuICAgIH1cbiAgICBnZXQgcGFnZXJUZW1wbGF0ZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2N1c3RvbVBhZ2VyVGVtcGxhdGUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9jdXN0b21QYWdlclRlbXBsYXRlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnBhZ2VyVGVtcGxhdGVDaGlsZHJlbiA/IHRoaXMucGFnZXJUZW1wbGF0ZUNoaWxkcmVuLmZpcnN0IDogdW5kZWZpbmVkO1xuICAgIH1cbiAgICBzZXQgcGFnZXJUZW1wbGF0ZShjdXN0b21QYWdlclRlbXBsYXRlKSB7XG4gICAgICAgIHRoaXMuX2N1c3RvbVBhZ2VyVGVtcGxhdGUgPSBjdXN0b21QYWdlclRlbXBsYXRlO1xuICAgIH1cbiAgICBnZXQgdG9vbGJhclRlbXBsYXRlKCkge1xuICAgICAgICBpZiAodGhpcy5fY3VzdG9tVG9vbGJhclRlbXBsYXRlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fY3VzdG9tVG9vbGJhclRlbXBsYXRlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnRvb2xiYXJUZW1wbGF0ZUNoaWxkcmVuID8gdGhpcy50b29sYmFyVGVtcGxhdGVDaGlsZHJlbi5maXJzdCA6IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgc2V0IHRvb2xiYXJUZW1wbGF0ZShjdXN0b21Ub29sYmFyVGVtcGxhdGUpIHtcbiAgICAgICAgdGhpcy5fY3VzdG9tVG9vbGJhclRlbXBsYXRlID0gY3VzdG9tVG9vbGJhclRlbXBsYXRlO1xuICAgIH1cbiAgICBnZXQgc2Nyb2xsYmFyV2lkdGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN1cHBvcnRTZXJ2aWNlLnNjcm9sbGJhcldpZHRoO1xuICAgIH1cbiAgICBnZXQgaGVhZGVyUGFkZGluZygpIHtcbiAgICAgICAgaWYgKGlzVW5pdmVyc2FsKCkpIHtcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBhZGRpbmcgPSBNYXRoLm1heCgwLCB0aGlzLnNjcm9sbGJhcldpZHRoIC0gMSkgKyAncHgnO1xuICAgICAgICBjb25zdCByaWdodCA9IHRoaXMucnRsID8gMCA6IHBhZGRpbmc7XG4gICAgICAgIGNvbnN0IGxlZnQgPSB0aGlzLnJ0bCA/IHBhZGRpbmcgOiAwO1xuICAgICAgICByZXR1cm4gYDAgJHtyaWdodH0gMCAke2xlZnR9YDtcbiAgICB9XG4gICAgZ2V0IGhhc0dyb3VwRm9vdGVycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uc0NvbnRhaW5lci5oYXNHcm91cEZvb3RlcjtcbiAgICB9XG4gICAgZ2V0IHNob3dGb290ZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbHVtbnNDb250YWluZXIuaGFzRm9vdGVyO1xuICAgIH1cbiAgICBnZXQgc2hvd0dyb3VwRm9vdGVycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3JvdXBhYmxlICYmIHRoaXMuZ3JvdXBhYmxlLnNob3dGb290ZXI7XG4gICAgfVxuICAgIGdldCBhcmlhUm93Q291bnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRvdGFsQ29sdW1uTGV2ZWxzICsgMSArIHRoaXMudmlldy50b3RhbDtcbiAgICB9XG4gICAgZ2V0IGFyaWFDb2xDb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uc0NvbnRhaW5lci5sZWFmQ29sdW1uc1RvUmVuZGVyLmxlbmd0aDtcbiAgICB9XG4gICAgZ2V0IGlzVmlydHVhbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2Nyb2xsYWJsZSA9PT0gJ3ZpcnR1YWwnO1xuICAgIH1cbiAgICBnZXQgaXNTY3JvbGxhYmxlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zY3JvbGxhYmxlICE9PSAnbm9uZSc7XG4gICAgfVxuICAgIGdldCB2aXNpYmxlQ29sdW1ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uc0NvbnRhaW5lci5hbGxDb2x1bW5zO1xuICAgIH1cbiAgICBnZXQgbG9ja2VkQ29sdW1ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uc0NvbnRhaW5lci5sb2NrZWRDb2x1bW5zO1xuICAgIH1cbiAgICBnZXQgbm9uTG9ja2VkQ29sdW1ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uc0NvbnRhaW5lci5ub25Mb2NrZWRDb2x1bW5zO1xuICAgIH1cbiAgICBnZXQgbG9ja2VkTGVhZkNvbHVtbnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbHVtbnNDb250YWluZXIubG9ja2VkTGVhZkNvbHVtbnM7XG4gICAgfVxuICAgIGdldCBzdGlja3lDb2x1bW5zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW5zLmZpbHRlcihjb2x1bW4gPT4gY29sdW1uLnN0aWNreSk7XG4gICAgfVxuICAgIGdldCBub25Mb2NrZWRMZWFmQ29sdW1ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uc0NvbnRhaW5lci5ub25Mb2NrZWRMZWFmQ29sdW1ucztcbiAgICB9XG4gICAgZ2V0IGxlYWZDb2x1bW5zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW5zQ29udGFpbmVyLmxlYWZDb2x1bW5zO1xuICAgIH1cbiAgICBnZXQgdG90YWxDb2x1bW5MZXZlbHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbHVtbnNDb250YWluZXIudG90YWxMZXZlbHM7XG4gICAgfVxuICAgIGdldCBoZWFkZXJDb2x1bW5zKCkge1xuICAgICAgICBpZiAodGhpcy52aXJ0dWFsQ29sdW1ucyAmJiAhdGhpcy5wZGZTZXJ2aWNlLmV4cG9ydGluZykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudmlld3BvcnRDb2x1bW5zO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLm5vbkxvY2tlZENvbHVtbnM7XG4gICAgfVxuICAgIGdldCBoZWFkZXJMZWFmQ29sdW1ucygpIHtcbiAgICAgICAgaWYgKHRoaXMudmlydHVhbENvbHVtbnMgJiYgIXRoaXMucGRmU2VydmljZS5leHBvcnRpbmcpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxlYWZWaWV3cG9ydENvbHVtbnM7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMubm9uTG9ja2VkTGVhZkNvbHVtbnM7XG4gICAgfVxuICAgIGdldCBsb2NrZWRXaWR0aCgpIHtcbiAgICAgICAgY29uc3QgZ3JvdXBDZWxsc1dpZHRoID0gdGhpcy5ncm91cC5sZW5ndGggKiBHUk9VUF9DRUxMX1dJRFRIO1xuICAgICAgICByZXR1cm4gZXhwYW5kQ29sdW1ucyh0aGlzLmxvY2tlZExlYWZDb2x1bW5zLnRvQXJyYXkoKSkucmVkdWNlKChwcmV2LCBjdXJyKSA9PiBwcmV2ICsgKGN1cnIud2lkdGggfHwgMCksIGdyb3VwQ2VsbHNXaWR0aCk7XG4gICAgfVxuICAgIGdldCBub25Mb2NrZWRXaWR0aCgpIHtcbiAgICAgICAgaWYgKCghdGhpcy5ydGwgJiYgdGhpcy5sb2NrZWRMZWFmQ29sdW1ucy5sZW5ndGgpIHx8IHRoaXMudmlydHVhbENvbHVtbnMpIHtcbiAgICAgICAgICAgIHJldHVybiAhdGhpcy52aXJ0dWFsQ29sdW1ucyA/IHRoaXMuY29sdW1uc0NvbnRhaW5lci51bmxvY2tlZFdpZHRoIDpcbiAgICAgICAgICAgICAgICB0aGlzLmxlYWZWaWV3cG9ydENvbHVtbnMucmVkdWNlKChhY2MsIGNvbHVtbikgPT4gYWNjICsgKGNvbHVtbi53aWR0aCB8fCAwKSwgMCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZ2V0IHNlbGVjdGFibGVTZXR0aW5ncygpIHtcbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uU2VydmljZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0aW9uU2VydmljZS5vcHRpb25zO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGdldCBjb2x1bW5NZW51VGVtcGxhdGUoKSB7XG4gICAgICAgIGNvbnN0IHRlbXBsYXRlID0gdGhpcy5jb2x1bW5NZW51VGVtcGxhdGVzLmZpcnN0O1xuICAgICAgICByZXR1cm4gdGVtcGxhdGUgPyB0ZW1wbGF0ZS50ZW1wbGF0ZVJlZiA6IG51bGw7XG4gICAgfVxuICAgIGdldCB0b3RhbENvdW50KCkge1xuICAgICAgICBpZiAodGhpcy5pc1ZpcnR1YWwgfHwgIWlzUHJlc2VudCh0aGlzLnBhZ2VTaXplKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudmlldy50b3RhbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5wYWdlU2l6ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRXhwYW5kcyB0aGUgc3BlY2lmaWVkIG1hc3RlciByb3cgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBoaWVyYXJjaHlfZ3JpZCAlfSkpLlxuICAgICAqXG4gICAgICogVGhpcyBtZXRob2QgaXMgcHJvdmlkZWQgb25seSBmb3IgYmFja3dhcmRzLWNvbXBhdGliaWxpdHkgd2l0aCBsZWdhY3kgdmVyc2lvbnMuXG4gICAgICogVGhlc2UgdmVyc2lvbnMgdHJhY2tlZCB0aGUgZXhwYW5kZWQgc3RhdGUgaW50ZXJuYWxseSB1c2luZyB0aGUgZGF0YSByb3cgaW5kZXguXG4gICAgICpcbiAgICAgKiBGb3IgbmV3IGRldmVsb3BtZW50LCB1c2UgdGhlIFtrZW5kb0dyaWREZXRhaWxzRXhwYW5kQnkgZGlyZWN0aXZlXSh7JSBzbHVnIGFwaV9ncmlkX2V4cGFuZGRldGFpbHNkaXJlY3RpdmUgJX0pXG4gICAgICogb3IgcHJvdmlkZSBhbiBpc0RldGFpbEV4cGFuZGVkIGNhbGxiYWNrLiBTZWUgW0NvbnRyb2xsaW5nIHRoZSBFeHBhbmRlZCBTdGF0ZV0oeyUgc2x1ZyBtYXN0ZXJfZGV0YWlsX2V4cGFuZGVkX3N0YXRlX2dyaWQgJX0pXG4gICAgICogZm9yIGV4YW1wbGVzIG9uIGhvdyB0byBjb250cm9sIHRoZSBleHBhbmRlZCBzdGF0ZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBpbmRleCAtIFRoZSBkYXRhIHJvdyBpbmRleCBvZiB0aGUgbWFzdGVyIHJvdy5cbiAgICAgKi9cbiAgICBleHBhbmRSb3coaW5kZXgpIHtcbiAgICAgICAgdGhpcy50b2dnbGVEZXRhaWxSb3dMZWdhY3koaW5kZXgsIHRydWUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb2xsYXBzZXMgdGhlIHNwZWNpZmllZCBtYXN0ZXIgcm93IChbc2VlIGV4YW1wbGVdKHslIHNsdWcgaGllcmFyY2h5X2dyaWQgJX0pKS5cbiAgICAgKlxuICAgICAqIFRoaXMgbWV0aG9kIGlzIHByb3ZpZGVkIG9ubHkgZm9yIGJhY2t3YXJkcy1jb21wYXRpYmlsaXR5IHdpdGggbGVnYWN5IHZlcnNpb25zLlxuICAgICAqIFRoZXNlIHZlcnNpb25zIHRyYWNrZWQgdGhlIGV4cGFuZGVkIHN0YXRlIGludGVybmFsbHkgdXNpbmcgdGhlIGRhdGEgcm93IGluZGV4LlxuICAgICAqXG4gICAgICogRm9yIG5ldyBkZXZlbG9wbWVudCwgdXNlIHRoZSBba2VuZG9HcmlkRGV0YWlsc0V4cGFuZEJ5IGRpcmVjdGl2ZV0oeyUgc2x1ZyBhcGlfZ3JpZF9leHBhbmRkZXRhaWxzZGlyZWN0aXZlICV9KVxuICAgICAqIG9yIHByb3ZpZGUgYW4gaXNEZXRhaWxFeHBhbmRlZCBjYWxsYmFjay4gU2VlIFtDb250cm9sbGluZyB0aGUgRXhwYW5kZWQgU3RhdGVdKHslIHNsdWcgbWFzdGVyX2RldGFpbF9leHBhbmRlZF9zdGF0ZV9ncmlkICV9KVxuICAgICAqIGZvciBleGFtcGxlcyBvbiBob3cgdG8gY29udHJvbCB0aGUgZXhwYW5kZWQgc3RhdGUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaW5kZXggLSBUaGUgZGF0YSByb3cgaW5kZXggb2YgdGhlIG1hc3RlciByb3cuXG4gICAgICovXG4gICAgY29sbGFwc2VSb3coaW5kZXgpIHtcbiAgICAgICAgdGhpcy50b2dnbGVEZXRhaWxSb3dMZWdhY3koaW5kZXgsIGZhbHNlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRXhwYW5kcyBhIGdyb3VwIGhlYWRlciBpdGVtIGZvciB0aGUgZ2l2ZW4gaW5kZXguIEZvciBleGFtcGxlLFxuICAgICAqIGAwXzFgIGV4cGFuZHMgdGhlIHNlY29uZCBpbm5lciBncm91cCBvZiB0aGUgZmlyc3QgbWFzdGVyIGdyb3VwLlxuICAgICAqXG4gICAgICogVGhpcyBtZXRob2QgaXMgcHJvdmlkZWQgb25seSBmb3IgYmFja3dhcmRzLWNvbXBhdGliaWxpdHkgd2l0aCBsZWdhY3kgdmVyc2lvbnMuXG4gICAgICogVGhlc2UgdmVyc2lvbnMgdHJhY2tlZCB0aGUgZXhwYW5kZWQgZ3JvdXAgc3RhdGUgaW50ZXJuYWxseSB1c2luZyB0aGUgaGllcmFyY2hpY2FsIGdyb3VwIGluZGV4LlxuICAgICAqXG4gICAgICogPiAqIFdoZW4geW91IHVzZSB0aGUgW2tlbmRvR3JpZEdyb3VwQmluZGluZ10oeyUgc2x1ZyBhcGlfZ3JpZF9ncm91cGJpbmRpbmdkaXJlY3RpdmUgJX0pIGRpcmVjdGl2ZSxcbiAgICAgKiA+IHRoZSBgZXhwYW5kR3JvdXBgIG1ldGhvZCBpcyBub3Qgc3VwcG9ydGVkLlxuICAgICAqID4gKiBXaGVuIGEgR3JpZCBpcyBwYWdlYWJsZSwgdGhlIGluZGV4ZXMgb2YgdGhlIGdyb3VwcyBhcmUgb2Zmc2V0IGJ5IHRoZSBjdXJyZW50IEdyaWQgW3NraXBdKHslIHNsdWcgYXBpX2dyaWRfZ3JpZGNvbXBvbmVudCAlfSN0b2Mtc2tpcCkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gaW5kZXggLSBUaGUgdW5kZXJzY29yZSBzZXBhcmF0ZWQgaGllcmFyY2hpY2FsIGluZGV4IG9mIHRoZSBncm91cC5cbiAgICAgKi9cbiAgICBleHBhbmRHcm91cChpbmRleCkge1xuICAgICAgICB0aGlzLnRvZ2dsZUdyb3VwUm93TGVnYWN5KGluZGV4LCB0cnVlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29sbGFwc2VzIGEgZ3JvdXAgaGVhZGVyIGl0ZW0gZm9yIHRoZSBnaXZlbiBpbmRleC4gRm9yIGV4YW1wbGUsXG4gICAgICogYDBfMWAgY29sbGFwc2VzIHRoZSBzZWNvbmQgaW5uZXIgZ3JvdXAgb2YgdGhlIGZpcnN0IG1hc3RlciBncm91cC5cbiAgICAgKlxuICAgICAqIFRoaXMgbWV0aG9kIGlzIHByb3ZpZGVkIG9ubHkgZm9yIGJhY2t3YXJkcy1jb21wYXRpYmlsaXR5IHdpdGggbGVnYWN5IHZlcnNpb25zLlxuICAgICAqIFRoZXNlIHZlcnNpb25zIHRyYWNrZWQgdGhlIGV4cGFuZGVkIGdyb3VwIHN0YXRlIGludGVybmFsbHkgdXNpbmcgdGhlIGhpZXJhcmNoaWNhbCBncm91cCBpbmRleC5cbiAgICAgKlxuICAgICAqID4gKiBXaGVuIHlvdSB1c2UgdGhlIFtrZW5kb0dyaWRHcm91cEJpbmRpbmddKHslIHNsdWcgYXBpX2dyaWRfZ3JvdXBiaW5kaW5nZGlyZWN0aXZlICV9KSBkaXJlY3RpdmUsXG4gICAgICogPiB0aGUgYGNvbGxhcHNlR3JvdXBgIG1ldGhvZCBpcyBub3Qgc3VwcG9ydGVkLlxuICAgICAqID4gKiBXaGVuIGEgR3JpZCBpcyBwYWdlYWJsZSwgdGhlIGluZGV4ZXMgb2YgdGhlIGdyb3VwcyBhcmUgb2Zmc2V0IGJ5IHRoZSBjdXJyZW50IEdyaWQgW3NraXBdKHslIHNsdWcgYXBpX2dyaWRfZ3JpZGNvbXBvbmVudCAlfSN0b2Mtc2tpcCkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gaW5kZXggLSBUaGUgdW5kZXJzY29yZSBzZXBhcmF0ZWQgaGllcmFyY2hpY2FsIGluZGV4IG9mIHRoZSBncm91cC5cbiAgICAgKi9cbiAgICBjb2xsYXBzZUdyb3VwKGluZGV4KSB7XG4gICAgICAgIHRoaXMudG9nZ2xlR3JvdXBSb3dMZWdhY3koaW5kZXgsIGZhbHNlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlc2V0R3JvdXBzU3RhdGUoKSB7XG4gICAgICAgIHRoaXMuZ3JvdXBzU2VydmljZS5yZXNldCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZXhwYW5kR3JvdXBDaGlsZHJlbihncm91cEluZGV4KSB7XG4gICAgICAgIHRoaXMuZ3JvdXBzU2VydmljZS5leHBhbmRDaGlsZHJlbihncm91cEluZGV4KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uRGF0YUNoYW5nZSgpIHtcbiAgICAgICAgdGhpcy5hdXRvR2VuZXJhdGVDb2x1bW5zKCk7XG4gICAgICAgIHRoaXMuY2hhbmdlTm90aWZpY2F0aW9uLm5vdGlmeSgpO1xuICAgICAgICB0aGlzLnBkZlNlcnZpY2UuZGF0YUNoYW5nZWQuZW1pdCgpO1xuICAgICAgICBpZiAoaXNQcmVzZW50KHRoaXMuZGVmYXVsdFNlbGVjdGlvbikpIHtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdFNlbGVjdGlvbi5yZXNldCgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaW5pdFNlbGVjdGlvblNlcnZpY2UoKTtcbiAgICAgICAgdGhpcy51cGRhdGVOYXZpZ2F0aW9uTWV0YWRhdGEoKTtcbiAgICB9XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlcykge1xuICAgICAgICBpZiAoaXNDaGFuZ2VkKFwiZGF0YVwiLCBjaGFuZ2VzKSkge1xuICAgICAgICAgICAgdGhpcy5vbkRhdGFDaGFuZ2UoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5sb2NrZWRMZWFmQ29sdW1ucy5sZW5ndGggJiYgYW55Q2hhbmdlZChbXCJwYWdlU2l6ZVwiLCBcInNraXBcIiwgXCJzb3J0XCIsIFwiZ3JvdXBcIl0sIGNoYW5nZXMpKSB7XG4gICAgICAgICAgICB0aGlzLmNoYW5nZU5vdGlmaWNhdGlvbi5ub3RpZnkoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYW55Q2hhbmdlZChbXCJwYWdlU2l6ZVwiLCBcInNjcm9sbGFibGVcIiwgJ3ZpcnR1YWxDb2x1bW5zJ10sIGNoYW5nZXMpKSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZU5hdmlnYXRpb25NZXRhZGF0YSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0NoYW5nZWQoXCJ2aXJ0dWFsQ29sdW1uc1wiLCBjaGFuZ2VzKSkge1xuICAgICAgICAgICAgdGhpcy52aWV3cG9ydENvbHVtbnMgPSB0aGlzLmxlYWZWaWV3cG9ydENvbHVtbnMgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0NoYW5nZWQoXCJoZWlnaHRcIiwgY2hhbmdlcywgZmFsc2UpKSB7XG4gICAgICAgICAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKHRoaXMud3JhcHBlci5uYXRpdmVFbGVtZW50LCAnaGVpZ2h0JywgYCR7dGhpcy5oZWlnaHR9cHhgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNDaGFuZ2VkKFwiZmlsdGVyYWJsZVwiLCBjaGFuZ2VzKSAmJiB0aGlzLmxvY2tlZENvbHVtbnMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLnN5bmNIZWFkZXJIZWlnaHQodGhpcy5uZ1pvbmUub25TdGFibGUuYXNPYnNlcnZhYmxlKCkucGlwZSh0YWtlKDEpKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFueUNoYW5nZWQoW1wiY29sdW1uTWVudVwiLCBcInNvcnRhYmxlXCIsIFwiZmlsdGVyYWJsZVwiXSwgY2hhbmdlcywgZmFsc2UpKSB7XG4gICAgICAgICAgICB0aGlzLmNvbHVtbk1lbnVPcHRpb25zID0gdGhpcy5jb2x1bW5NZW51ICYmIE9iamVjdC5hc3NpZ24oe1xuICAgICAgICAgICAgICAgIGZpbHRlcjogQm9vbGVhbih0aGlzLmZpbHRlcmFibGUpLFxuICAgICAgICAgICAgICAgIHNvcnQ6IEJvb2xlYW4odGhpcy5zb3J0YWJsZSlcbiAgICAgICAgICAgIH0sIHRoaXMuY29sdW1uTWVudSk7IC8vIHRzbGludDpkaXNhYmxlLWxpbmU6YWxpZ25cbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNDaGFuZ2VkKFwic2Nyb2xsYWJsZVwiLCBjaGFuZ2VzKSAmJiB0aGlzLmlzU2Nyb2xsYWJsZSkge1xuICAgICAgICAgICAgdGhpcy5uZ1pvbmUub25TdGFibGUucGlwZSh0YWtlKDEpKS5zdWJzY3JpYmUoKCkgPT4gdGhpcy5hdHRhY2hTY3JvbGxTeW5jKCkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0NoYW5nZWQoXCJzZWxlY3RhYmxlXCIsIGNoYW5nZXMpICYmIHRoaXMuc2hvdWxkUmVzZXRTZWxlY3Rpb24oY2hhbmdlcy5zZWxlY3RhYmxlKSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuZGVmYXVsdFNlbGVjdGlvbikge1xuICAgICAgICAgICAgICAgIHRoaXMuZGVmYXVsdFNlbGVjdGlvbi5yZXNldCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5zZWxlY3Rpb25EaXJlY3RpdmUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGlvbkRpcmVjdGl2ZS5yZXNldCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChpc0NoYW5nZWQoJ2dyb3VwYWJsZScsIGNoYW5nZXMsIHRydWUpKSB7XG4gICAgICAgICAgICB0aGlzLmdyb3VwYWJsZSA9IGNoYW5nZXMuZ3JvdXBhYmxlLmN1cnJlbnRWYWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgICAgIHRoaXMuYXR0YWNoU2Nyb2xsU3luYygpO1xuICAgICAgICB0aGlzLmF0dGFjaEVsZW1lbnRFdmVudEhhbmRsZXJzKCk7XG4gICAgICAgIHRoaXMudXBkYXRlTmF2aWdhdGlvbk1ldGFkYXRhKCk7XG4gICAgICAgIHRoaXMuYXBwbHlBdXRvU2l6ZSgpO1xuICAgIH1cbiAgICBuZ0FmdGVyQ29udGVudENoZWNrZWQoKSB7XG4gICAgICAgIHRoaXMuY29sdW1uc0NvbnRhaW5lci5yZWZyZXNoKCk7XG4gICAgICAgIHRoaXMudmVyaWZ5U2V0dGluZ3MoKTtcbiAgICAgICAgdGhpcy5pbml0U2VsZWN0aW9uU2VydmljZSgpO1xuICAgIH1cbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgICAgIHRoaXMuc2hvdWxkR2VuZXJhdGVDb2x1bW5zID0gIXRoaXMuY29sdW1ucy5sZW5ndGg7XG4gICAgICAgIHRoaXMuYXV0b0dlbmVyYXRlQ29sdW1ucygpO1xuICAgICAgICB0aGlzLmNvbHVtbkxpc3QgPSBuZXcgQ29sdW1uTGlzdCh0aGlzLmNvbHVtbnMpO1xuICAgICAgICB0aGlzLmNvbHVtbnNDaGFuZ2VTdWJzY3JpcHRpb24gPSB0aGlzLmNvbHVtbnMuY2hhbmdlcy5zdWJzY3JpYmUoKCkgPT4gdGhpcy52ZXJpZnlTZXR0aW5ncygpKTtcbiAgICB9XG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIGlmICh0aGlzLm5hdmlnYWJsZSkge1xuICAgICAgICAgICAgdGhpcy5uYXZpZ2F0aW9uU2VydmljZS5pbml0KHRoaXMubmF2aWdhdGlvbk1ldGFkYXRhKCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5zZWxlY3Rpb25TdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuc3RhdGVDaGFuZ2VTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGVDaGFuZ2VTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5ncm91cEV4cGFuZENvbGxhcHNlU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmdyb3VwRXhwYW5kQ29sbGFwc2VTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5kZXRhaWxzU2VydmljZVN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5kZXRhaWxzU2VydmljZVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmVkaXRTZXJ2aWNlU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmVkaXRTZXJ2aWNlU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucGRmU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnBkZlN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmZpbHRlclN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5maWx0ZXJTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5zb3J0U3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnNvcnRTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5jb2x1bW5zQ2hhbmdlU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmNvbHVtbnNDaGFuZ2VTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5leGNlbFN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5leGNlbFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmNvbHVtbnNDb250YWluZXJDaGFuZ2VTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuY29sdW1uc0NvbnRhaW5lckNoYW5nZVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnNjcm9sbFN5bmNTZXJ2aWNlKSB7XG4gICAgICAgICAgICB0aGlzLnNjcm9sbFN5bmNTZXJ2aWNlLmRlc3Ryb3koKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5kZXRhY2hFbGVtZW50RXZlbnRIYW5kbGVycykge1xuICAgICAgICAgICAgdGhpcy5kZXRhY2hFbGVtZW50RXZlbnRIYW5kbGVycygpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmRlZmF1bHRTZWxlY3Rpb24pIHtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdFNlbGVjdGlvbi5kZXN0cm95KCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuY2VsbENsaWNrU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmNlbGxDbGlja1N1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmZvb3RlckNoYW5nZVN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5mb290ZXJDaGFuZ2VTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm5nWm9uZSA9IG51bGw7XG4gICAgICAgIGlmICh0aGlzLmNvbHVtblJlc2l6aW5nU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmNvbHVtblJlc2l6aW5nU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuY29sdW1uUmVvcmRlclN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5jb2x1bW5SZW9yZGVyU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMubG9jYWxpemF0aW9uU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmxvY2FsaXphdGlvblN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmNvbHVtblZpc2liaWxpdHlDaGFuZ2VTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuY29sdW1uVmlzaWJpbGl0eUNoYW5nZVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmNvbHVtbkxvY2tlZENoYW5nZVN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5jb2x1bW5Mb2NrZWRDaGFuZ2VTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5jb2x1bW5TdGlja3lDaGFuZ2VTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuY29sdW1uU3RpY2t5Q2hhbmdlU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZm9jdXNFbGVtZW50U3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmZvY3VzRWxlbWVudFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29sdW1uUmFuZ2VDaGFuZ2VTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGF0dGFjaFNjcm9sbFN5bmMoKSB7XG4gICAgICAgIGlmIChpc1VuaXZlcnNhbCgpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuaGVhZGVyKSB7XG4gICAgICAgICAgICB0aGlzLnNjcm9sbFN5bmNTZXJ2aWNlLnJlZ2lzdGVyRW1pdHRlcih0aGlzLmhlYWRlci5uYXRpdmVFbGVtZW50LCBcImhlYWRlclwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5mb290ZXIpIHtcbiAgICAgICAgICAgIHRoaXMuZm9vdGVyQ2hhbmdlU3Vic2NyaXB0aW9uID0gb2JzZXJ2ZSh0aGlzLmZvb3RlcilcbiAgICAgICAgICAgICAgICAuc3Vic2NyaWJlKGZvb3RlcnMgPT4gZm9vdGVyc1xuICAgICAgICAgICAgICAgIC5tYXAoZm9vdGVyID0+IGZvb3Rlci5uYXRpdmVFbGVtZW50KVxuICAgICAgICAgICAgICAgIC5maWx0ZXIoaXNQcmVzZW50KVxuICAgICAgICAgICAgICAgIC5mb3JFYWNoKGVsZW1lbnQgPT4gdGhpcy5zY3JvbGxTeW5jU2VydmljZS5yZWdpc3RlckVtaXR0ZXIoZWxlbWVudCwgXCJmb290ZXJcIikpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGFyaWFMYWJlbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxpemF0aW9uLmdldCgnZ3JpZExhYmVsJyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN3aXRjaGVzIHRoZSBzcGVjaWZpZWQgdGFibGUgcm93IGluIHRoZSBlZGl0IG1vZGUgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBlZGl0aW5nX3RlbXBsYXRlX2Zvcm1zX2dyaWQgJX0jdG9jLWVkaXRpbmctcmVjb3JkcykpLlxuICAgICAqXG4gICAgICogQHBhcmFtIHJvd0luZGV4IC0gVGhlIGRhdGEgcm93IGluZGV4IHRoYXQgd2lsbCBiZSBzd2l0Y2hlZCBpbiB0aGUgZWRpdCBtb2RlLlxuICAgICAqIEBwYXJhbSBncm91cCAtIFRoZSBbRm9ybUdyb3VwXSh7eyBzaXRlLmRhdGEudXJscy5hbmd1bGFyWydmb3JtZ3JvdXBhcGknXSB9fSlcbiAgICAgKiB0aGF0IGRlc2NyaWJlcyB0aGUgZWRpdCBmb3JtLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gQWRkaXRpb25hbCBvcHRpb25zIGNvbmZpZ3VyaW5nIHRoZSBmb2N1cyB0YXJnZXQgb25jZSB0aGUgZWRpdG9yIG9wZW5zLlxuICAgICAqL1xuICAgIGVkaXRSb3cocm93SW5kZXgsIGdyb3VwLCBvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuZWRpdFNlcnZpY2UuZWRpdFJvdyhyb3dJbmRleCwgZ3JvdXApO1xuICAgICAgICBpZiAoaXNQcmVzZW50KG9wdGlvbnMpICYmIG9wdGlvbnMuc2tpcEZvY3VzKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgcm93ID0gYHRyW2RhdGEta2VuZG8tZ3JpZC1pdGVtLWluZGV4PVwiJHtyb3dJbmRleH1cIl1gO1xuICAgICAgICBjb25zdCBjb2x1bW5JbmRleCA9IG9wdGlvbnMgJiYgb3B0aW9ucy5jb2x1bW5JbmRleDtcbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gaXNOYU4oY29sdW1uSW5kZXgpID8gcm93IDogYCR7cm93fSB0ZFtkYXRhLWtlbmRvLWdyaWQtY29sdW1uLWluZGV4PVwiJHtjb2x1bW5JbmRleH1cIl1gO1xuICAgICAgICB0aGlzLmZvY3VzRWRpdEVsZW1lbnQodGFyZ2V0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2xvc2VzIHRoZSBlZGl0b3IgZm9yIGEgZ2l2ZW4gcm93IChbc2VlIGV4YW1wbGVdKHslIHNsdWcgZWRpdGluZ190ZW1wbGF0ZV9mb3Jtc19ncmlkICV9I3RvYy1jYW5jZWxsaW5nLWVkaXRpbmcpKS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleCAtIFRoZSByb3cgaW5kZXggdGhhdCB3aWxsIGJlIHN3aXRjaGVkIG91dCBvZiB0aGUgZWRpdCBtb2RlLiBJZiBubyBpbmRleCBpcyBwcm92aWRlZCwgaXQgaXMgYXNzdW1lZFxuICAgICAqIHRoYXQgdGhlIG5ldyBpdGVtIGVkaXRvciB3aWxsIGJlIGNsb3NlZC5cbiAgICAgKi9cbiAgICBjbG9zZVJvdyhpbmRleCkge1xuICAgICAgICB0aGlzLmVkaXRTZXJ2aWNlLmNsb3NlKGluZGV4KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyByb3cgZWRpdG9yIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgZWRpdGluZ190ZW1wbGF0ZV9mb3Jtc19ncmlkICV9I3RvYy1hZGRpbmctcmVjb3JkcykpLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtGb3JtR3JvdXB9IGdyb3VwIC0gVGhlIFtGb3JtR3JvdXBdKHt7IHNpdGUuZGF0YS51cmxzLmFuZ3VsYXJbJ2Zvcm1ncm91cGFwaSddIH19KSB0aGF0IGRlc2NyaWJlc1xuICAgICAqIHRoZSBlZGl0IGZvcm0uIElmIGNhbGxlZCB3aXRoIGEgZGF0YSBpdGVtLCBpdCB3aWxsIGJ1aWxkIHRoZSBgRm9ybUdyb3VwYCBmcm9tIHRoZSBkYXRhIGl0ZW0gZmllbGRzLlxuICAgICAqL1xuICAgIGFkZFJvdyhncm91cCkge1xuICAgICAgICBjb25zdCBpc0Zvcm1Hcm91cCA9IGdyb3VwIGluc3RhbmNlb2YgRm9ybUdyb3VwO1xuICAgICAgICBpZiAoIWlzRm9ybUdyb3VwKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZHMgPSBPYmplY3Qua2V5cyhncm91cCkucmVkdWNlKGNyZWF0ZUNvbnRyb2woZ3JvdXApLCB7fSk7IC8vIEZvcm1CdWlsZGVyP1xuICAgICAgICAgICAgZ3JvdXAgPSBuZXcgRm9ybUdyb3VwKGZpZWxkcyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5lZGl0U2VydmljZS5hZGRSb3coZ3JvdXApO1xuICAgICAgICB0aGlzLmZvY3VzRWRpdEVsZW1lbnQoJy5rLWdyaWQtYWRkLXJvdycpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQdXRzIHRoZSBjZWxsIHRoYXQgaXMgc3BlY2lmaWVkIGJ5IHRoZSB0YWJsZSByb3cgYW5kIGNvbHVtbiBpbiBlZGl0IG1vZGUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gcm93SW5kZXggLSBUaGUgZGF0YSByb3cgaW5kZXggdGhhdCB3aWxsIGJlIHN3aXRjaGVkIGluIHRoZSBlZGl0IG1vZGUuXG4gICAgICogQHBhcmFtIHtudW1iZXJ8c3RyaW5nfGFueX0gY29sdW1uIC0gVGhlIGxlYWYgY29sdW1uIGluZGV4LCBvciB0aGUgZmllbGQgbmFtZSBvciB0aGUgY29sdW1uIGluc3RhbmNlIHRoYXQgc2hvdWxkIGJlIGVkaXRlZC5cbiAgICAgKiBAcGFyYW0ge0Zvcm1Hcm91cH0gZ3JvdXAgLSBUaGUgW0Zvcm1Hcm91cF0oe3sgc2l0ZS5kYXRhLnVybHMuYW5ndWxhclsnZm9ybWdyb3VwYXBpJ10gfX0pXG4gICAgICogdGhhdCBkZXNjcmliZXMgdGhlIGVkaXQgZm9ybS5cbiAgICAgKi9cbiAgICBlZGl0Q2VsbChyb3dJbmRleCwgY29sdW1uLCBncm91cCkge1xuICAgICAgICBjb25zdCBpbnN0YW5jZSA9IHRoaXMuY29sdW1uSW5zdGFuY2UoY29sdW1uKTtcbiAgICAgICAgdGhpcy5lZGl0U2VydmljZS5lZGl0Q2VsbChyb3dJbmRleCwgaW5zdGFuY2UsIGdyb3VwKTtcbiAgICAgICAgdGhpcy5mb2N1c0VkaXRFbGVtZW50KCcuay1ncmlkLWVkaXQtY2VsbCcpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDbG9zZXMgdGhlIGN1cnJlbnQgY2VsbCBpbiBlZGl0IG1vZGUgYW5kIGZpcmVzXG4gICAgICogdGhlIFtjZWxsQ2xvc2VdKHslIHNsdWcgYXBpX2dyaWRfZ3JpZGNvbXBvbmVudCAlfSN0b2MtY2VsbGNsb3NlKSBldmVudC5cbiAgICAgKlxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59IEluZGljYXRlcyB3aGV0aGVyIHRoZSBlZGl0ZWQgY2VsbCB3YXMgY2xvc2VkLlxuICAgICAqIEEgYGZhbHNlYCB2YWx1ZSBpbmRpY2F0ZXMgdGhhdCB0aGVcbiAgICAgKiBbY2VsbENsb3NlXSh7JSBzbHVnIGFwaV9ncmlkX2dyaWRjb21wb25lbnQgJX0jdG9jLWNlbGxjbG9zZSkgZXZlbnQgd2FzIHByZXZlbnRlZC5cbiAgICAgKi9cbiAgICBjbG9zZUNlbGwoKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5lZGl0U2VydmljZS5jbG9zZUNlbGwoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2xvc2VzIHRoZSBjdXJyZW50IGNlbGwgaW4gZWRpdCBtb2RlLlxuICAgICAqL1xuICAgIGNhbmNlbENlbGwoKSB7XG4gICAgICAgIHRoaXMuZWRpdFNlcnZpY2UuY2FuY2VsQ2VsbCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgZmxhZyB3aGljaCBpbmRpY2F0ZXMgaWYgYSByb3cgb3IgYSBjZWxsIGlzIGN1cnJlbnRseSBlZGl0ZWQuXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHtib29sZWFufSBBIGZsYWcgd2hpY2ggaW5kaWNhdGVzIGlmIGEgcm93IG9yIGEgY2VsbCBpcyBjdXJyZW50bHkgZWRpdGVkLlxuICAgICAqL1xuICAgIGlzRWRpdGluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWRpdFNlcnZpY2UuaXNFZGl0aW5nKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBmbGFnIHdoaWNoIGluZGljYXRlcyBpZiBhIGNlbGwgaXMgY3VycmVudGx5IGVkaXRlZC5cbiAgICAgKlxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59IEEgZmxhZyB3aGljaCBpbmRpY2F0ZXMgaWYgYSBjZWxsIGlzIGN1cnJlbnRseSBiZWluZyBlZGl0ZWQuXG4gICAgICovXG4gICAgaXNFZGl0aW5nQ2VsbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWRpdFNlcnZpY2UuaXNFZGl0aW5nQ2VsbCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbml0aWF0ZXMgdGhlIFBERiBleHBvcnQgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBwZGZleHBvcnRfZ3JpZCAlfSkpLlxuICAgICAqL1xuICAgIHNhdmVBc1BERigpIHtcbiAgICAgICAgdGhpcy5wZGZTZXJ2aWNlLnNhdmUodGhpcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEV4cG9ydHMgdGhlIEdyaWQgZWxlbWVudCB0byBhIERyYXdpbmcgW0dyb3VwXSh7JSBzbHVnIGFwaV9rZW5kby1kcmF3aW5nX2dyb3VwICV9KSBieSB1c2luZyB0aGUgYGtlbmRvLWdyaWQtcGRmYCBjb21wb25lbnQgb3B0aW9ucy5cbiAgICAgKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIHBkZmV4cG9ydF9ncmlkICV9I3RvYy1leHBvcnRpbmctbXVsdGlwbGUtZ3JpZHMtdG8tdGhlLXNhbWUtcGRmKSkuXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlfSAtIEEgcHJvbWlzZSB0aGF0IHdpbGwgYmUgcmVzb2x2ZWQgd2l0aCB0aGUgRHJhd2luZyBgR3JvdXBgLlxuICAgICAqL1xuICAgIGRyYXdQREYoKSB7XG4gICAgICAgIGNvbnN0IHByb21pc2UgPSBjcmVhdGVQcm9taXNlKCk7XG4gICAgICAgIHRoaXMucGRmU2VydmljZS5kcmF3KHRoaXMsIHByb21pc2UpO1xuICAgICAgICByZXR1cm4gcHJvbWlzZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSW5pdGlhdGVzIHRoZSBFeGNlbCBleHBvcnQgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBleGNlbGV4cG9ydF9ncmlkICV9KSkuXG4gICAgICovXG4gICAgc2F2ZUFzRXhjZWwoKSB7XG4gICAgICAgIHRoaXMuZXhjZWxTZXJ2aWNlLnNhdmUodGhpcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFwcGxpZXMgdGhlIG1pbmltdW0gcG9zc2libGUgd2lkdGggZm9yIHRoZSBzcGVjaWZpZWQgY29sdW1uLFxuICAgICAqIHNvIHRoYXQgdGhlIHdob2xlIHRleHQgZml0cyB3aXRob3V0IHdyYXBwaW5nLiBUaGlzIG1ldGhvZCBleHBlY3RzIHRoZSBHcmlkXG4gICAgICogdG8gYmUgcmVzaXphYmxlIChzZXQgYHJlc2l6YWJsZWAgdG8gYHRydWVgKS5cbiAgICAgKiBNYWtlcyBzZW5zZSB0byBleGVjdXRlIHRoaXMgbWV0aG9kIG9ubHlcbiAgICAgKiBhZnRlciB0aGUgR3JpZCBpcyBhbHJlYWR5IHBvcHVsYXRlZCB3aXRoIGRhdGEuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogX0BDb21wb25lbnQoe1xuICAgICAqICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAgICAgKiAgICB0ZW1wbGF0ZTogYFxuICAgICAqICAgICAgICA8a2VuZG8tZ3JpZFxuICAgICAqICAgICAgICAgICAgI2dyaWRcbiAgICAgKiAgICAgICAgICAgIFtkYXRhXT1cImdyaWREYXRhXCJcbiAgICAgKiAgICAgICAgICAgIFtyZXNpemFibGVdPVwidHJ1ZVwiXG4gICAgICogICAgICAgICAgICBzdHlsZT1cImhlaWdodDogMzAwcHhcIj5cbiAgICAgKiAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRUb29sYmFyVGVtcGxhdGU+XG4gICAgICogICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJrLWJ1dHRvblwiIChjbGljayk9XCJncmlkLmF1dG9GaXRDb2x1bW4oZ3JvdXBDb2x1bW4pXCI+XG4gICAgICogICAgICAgICAgICAgICAgICAgICBBdXRvLWZpdCB0aGUgZ3JvdXAgY29sdW1uXG4gICAgICogICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAqICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgKiAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbi1ncm91cCAjZ3JvdXBDb2x1bW4gdGl0bGU9XCJQcm9kdWN0IEluZm9cIj5cbiAgICAgKiAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW5cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgZmllbGQ9XCJQcm9kdWN0SURcIlxuICAgICAqICAgICAgICAgICAgICAgICAgICBbd2lkdGhdPVwiNTBcIlxuICAgICAqICAgICAgICAgICAgICAgICAgICBbbWluUmVzaXphYmxlV2lkdGhdPVwiMzBcIlxuICAgICAqICAgICAgICAgICAgICAgICAgICB0aXRsZT1cIklEXCI+XG4gICAgICogICAgICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAgICAgKlxuICAgICAqICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtblxuICAgICAqICAgICAgICAgICAgICAgICAgICBmaWVsZD1cIlByb2R1Y3ROYW1lXCJcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgdGl0bGU9XCJQcm9kdWN0IE5hbWVcIj5cbiAgICAgKiAgICAgICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICAgICAqICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbi1ncm91cD5cbiAgICAgKlxuICAgICAqICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uXG4gICAgICogICAgICAgICAgICAgICAgZmllbGQ9XCJVbml0UHJpY2VcIlxuICAgICAqICAgICAgICAgICAgICAgIHRpdGxlPVwiVW5pdCBQcmljZVwiXG4gICAgICogICAgICAgICAgICAgICAgW3dpZHRoXT1cIjE4MFwiXG4gICAgICogICAgICAgICAgICAgICAgZmlsdGVyPVwibnVtZXJpY1wiXG4gICAgICogICAgICAgICAgICAgICAgZm9ybWF0PVwiezA6Y31cIj5cbiAgICAgKiAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gICAgICogICAgICAgIDwva2VuZG8tZ3JpZD5cbiAgICAgKiAgICBgXG4gICAgICogfSlcbiAgICAgKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICAgICAqICAgIHB1YmxpYyBncmlkRGF0YTogYW55W10gPSBwcm9kdWN0cztcbiAgICAgKiB9XG4gICAgICpcbiAgICAgKiBjb25zdCBwcm9kdWN0cyA9IFt7XG4gICAgICogICAgXCJQcm9kdWN0SURcIjogMSxcbiAgICAgKiAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhaVwiLFxuICAgICAqICAgIFwiVW5pdFByaWNlXCI6IDE4LjAwMDAsXG4gICAgICogICAgXCJEaXNjb250aW51ZWRcIjogdHJ1ZVxuICAgICAqICB9LCB7XG4gICAgICogICAgXCJQcm9kdWN0SURcIjogMixcbiAgICAgKiAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhbmdcIixcbiAgICAgKiAgICBcIlVuaXRQcmljZVwiOiAxOS4wMDAwLFxuICAgICAqICAgIFwiRGlzY29udGludWVkXCI6IGZhbHNlXG4gICAgICogIH1cbiAgICAgKiBdO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGF1dG9GaXRDb2x1bW4oY29sdW1uKSB7XG4gICAgICAgIHRoaXMuY29sdW1uUmVzaXppbmdTZXJ2aWNlLmF1dG9GaXQoY29sdW1uKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRqdXN0cyB0aGUgd2lkdGggb2YgdGhlIHNwZWNpZmllZCBjb2x1bW5zIHRvIGZpdCB0aGUgZW50aXJlIGNvbnRlbnQsIGluY2x1ZGluZyBoZWFkZXJzLCB3aXRob3V0IHdyYXBwaW5nLlxuICAgICAqIElmIG5vIGNvbHVtbnMgYXJlIHNwZWNpZmllZCwgYGF1dG9GaXRDb2x1bW5zYCBpcyBhcHBsaWVkIHRvIGFsbCBjb2x1bW5zLlxuICAgICAqXG4gICAgICogVGhpcyBtZXRob2QgcmVxdWlyZXMgdGhlIEdyaWQgdG8gYmUgcmVzaXphYmxlIChzZXQgYHJlc2l6YWJsZWAgdG8gYHRydWVgKS5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBfQENvbXBvbmVudCh7XG4gICAgICogICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICAgICAqICAgIHRlbXBsYXRlOiBgXG4gICAgICogICAgICA8a2VuZG8tZ3JpZFxuICAgICAqICAgICAgICAgICNncmlkXG4gICAgICogICAgICAgICAgW2RhdGFdPVwiZ3JpZERhdGFcIlxuICAgICAqICAgICAgICAgIFtyZXNpemFibGVdPVwidHJ1ZVwiXG4gICAgICogICAgICAgICAgc3R5bGU9XCJoZWlnaHQ6IDMwMHB4XCI+XG4gICAgICogICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZFRvb2xiYXJUZW1wbGF0ZT5cbiAgICAgKiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImstYnV0dG9uXCIgKGNsaWNrKT1cImdyaWQuYXV0b0ZpdENvbHVtbnMoW2ZpcnN0Q29sdW1uLCBsYXN0Q29sdW1uXSlcIj5cbiAgICAgKiAgICAgICAgICAgICAgICAgIEF1dG8tZml0IHRoZSBmaXJzdCBhbmQgbGFzdCBjb2x1bW5cbiAgICAgKiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICogICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJrLWJ1dHRvblwiIChjbGljayk9XCJncmlkLmF1dG9GaXRDb2x1bW5zKClcIj5cbiAgICAgKiAgICAgICAgICAgICAgICAgIEF1dG8tZml0IGFsbCBjb2x1bW5zXG4gICAgICogICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAqICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uLWdyb3VwIHRpdGxlPVwiUHJvZHVjdCBJbmZvXCI+XG4gICAgICogICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtblxuICAgICAqICAgICAgICAgICAgICAgICAgI2ZpcnN0Q29sdW1uXG4gICAgICogICAgICAgICAgICAgICAgICBmaWVsZD1cIlByb2R1Y3RJRFwiXG4gICAgICogICAgICAgICAgICAgICAgICBbd2lkdGhdPVwiNTBcIlxuICAgICAqICAgICAgICAgICAgICAgICAgW21pblJlc2l6YWJsZVdpZHRoXT1cIjMwXCJcbiAgICAgKiAgICAgICAgICAgICAgICAgIHRpdGxlPVwiSURcIj5cbiAgICAgKiAgICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAgICAgKlxuICAgICAqICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW5cbiAgICAgKiAgICAgICAgICAgICAgICAgIGZpZWxkPVwiUHJvZHVjdE5hbWVcIlxuICAgICAqICAgICAgICAgICAgICAgICAgdGl0bGU9XCJQcm9kdWN0IE5hbWVcIlxuICAgICAqICAgICAgICAgICAgICAgICAgPlxuICAgICAqICAgICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICAgICAqICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4tZ3JvdXA+XG4gICAgICpcbiAgICAgKiAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW5cbiAgICAgKiAgICAgICAgICAgICAgI2xhc3RDb2x1bW5cbiAgICAgKiAgICAgICAgICAgICAgZmllbGQ9XCJVbml0UHJpY2VcIlxuICAgICAqICAgICAgICAgICAgICB0aXRsZT1cIlVuaXQgUHJpY2VcIlxuICAgICAqICAgICAgICAgICAgICBbd2lkdGhdPVwiMTgwXCJcbiAgICAgKiAgICAgICAgICAgICAgZmlsdGVyPVwibnVtZXJpY1wiXG4gICAgICogICAgICAgICAgICAgIGZvcm1hdD1cInswOmN9XCI+XG4gICAgICogICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAgICAgKiAgICAgIDwva2VuZG8tZ3JpZD5cbiAgICAgKiAgICBgXG4gICAgICogfSlcbiAgICAgKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICAgICAqICAgIHB1YmxpYyBncmlkRGF0YTogYW55W10gPSBwcm9kdWN0cztcbiAgICAgKiB9XG4gICAgICpcbiAgICAgKiBjb25zdCBwcm9kdWN0cyA9IFt7XG4gICAgICogICAgXCJQcm9kdWN0SURcIjogMSxcbiAgICAgKiAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhaVwiLFxuICAgICAqICAgIFwiVW5pdFByaWNlXCI6IDE4LjAwMDAsXG4gICAgICogICAgXCJEaXNjb250aW51ZWRcIjogdHJ1ZVxuICAgICAqICB9LCB7XG4gICAgICogICAgXCJQcm9kdWN0SURcIjogMixcbiAgICAgKiAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhbmdcIixcbiAgICAgKiAgICBcIlVuaXRQcmljZVwiOiAxOS4wMDAwLFxuICAgICAqICAgIFwiRGlzY29udGludWVkXCI6IGZhbHNlXG4gICAgICogIH1cbiAgICAgKiBdO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGF1dG9GaXRDb2x1bW5zKGNvbHVtbnMgPSB0aGlzLmNvbHVtbnMpIHtcbiAgICAgICAgbGV0IGNvbHM7XG4gICAgICAgIGlmIChjb2x1bW5zIGluc3RhbmNlb2YgUXVlcnlMaXN0KSB7XG4gICAgICAgICAgICBjb2xzID0gY29sdW1ucy50b0FycmF5KCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb2xzID0gY29sdW1ucztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbHVtblJlc2l6aW5nU2VydmljZS5hdXRvRml0KC4uLmNvbHMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgbm90aWZ5UGFnZUNoYW5nZShzb3VyY2UsIGV2ZW50KSB7XG4gICAgICAgIGlmIChzb3VyY2UgPT09IFwibGlzdFwiICYmICF0aGlzLmlzVmlydHVhbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucGFnZUNoYW5nZS5lbWl0KGV2ZW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG5vdGlmeVNjcm9sbEJvdHRvbSgpIHtcbiAgICAgICAgaWYgKHRoaXMuc2Nyb2xsYWJsZSA9PT0gJ25vbmUnKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGhhc09ic2VydmVycyh0aGlzLnNjcm9sbEJvdHRvbSkpIHtcbiAgICAgICAgICAgIHRoaXMubmdab25lLnJ1bigoKSA9PiB0aGlzLnNjcm9sbEJvdHRvbS5lbWl0KHsgc2VuZGVyOiB0aGlzIH0pKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZm9jdXNFZGl0RWxlbWVudChjb250YWluZXJTZWxlY3Rvcikge1xuICAgICAgICBpZiAodGhpcy5mb2N1c0VsZW1lbnRTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuZm9jdXNFbGVtZW50U3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5mb2N1c0VsZW1lbnRTdWJzY3JpcHRpb24gPSB0aGlzLm5nWm9uZS5vblN0YWJsZS5hc09ic2VydmFibGUoKS5waXBlKHRha2UoMSkpLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3Qgd3JhcHBlciA9IHRoaXMud3JhcHBlci5uYXRpdmVFbGVtZW50O1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5zZXRFZGl0Rm9jdXMod3JhcHBlci5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKSkgJiYgdGhpcy5pc0xvY2tlZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldEVkaXRGb2N1cyh3cmFwcGVyLnF1ZXJ5U2VsZWN0b3IoYC5rLWdyaWQtY29udGVudCAke2NvbnRhaW5lclNlbGVjdG9yfWApKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5mb2N1c0VsZW1lbnRTdWJzY3JpcHRpb24gPSBudWxsO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGb2N1c2VzIHRoZSBsYXN0IGFjdGl2ZSBvciB0aGUgZmlyc3QgY2VsbCBvZiB0aGUgR3JpZC5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtOYXZpZ2F0aW9uQ2VsbH0gVGhlIGZvY3VzZWQgY2VsbC5cbiAgICAgKi9cbiAgICBmb2N1cygpIHtcbiAgICAgICAgdGhpcy5hc3NlcnROYXZpZ2FibGUoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMubmF2aWdhdGlvblNlcnZpY2UuZm9jdXNDZWxsKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZvY3VzZXMgdGhlIGNlbGwgd2l0aCB0aGUgc3BlY2lmaWVkIHJvdyBhbmQgY29sdW1uIGluZGV4LlxuICAgICAqXG4gICAgICogVGhlIHJvdyBpbmRleCBpcyBiYXNlZCBvbiB0aGUgbG9naWNhbCBzdHJ1Y3R1cmUgb2YgdGhlIEdyaWQgYW5kIGRvZXMgbm90IGNvcnJlc3BvbmQgdG8gdGhlIGRhdGEgaXRlbSBpbmRleDpcbiAgICAgKiAqIEhlYWRlciByb3dzIGFyZSBpbmNsdWRlZCwgc3RhcnRpbmcgYXQgaW5kZXggMC5cbiAgICAgKiAqIEdyb3VwIGhlYWRlcnMgYW5kIGZvb3RlcnMgYXJlIGluY2x1ZGVkLlxuICAgICAqICogVGhlIHJvdyBpbmRleGluZyBpcyBhYnNvbHV0ZSBhbmQgZG9lcyBub3QgY2hhbmdlIHdpdGggcGFnaW5nLlxuICAgICAqXG4gICAgICogSWYgdGhlIEdyaWQgaXMgY29uZmlndXJlZCBmb3Igc2Nyb2xsaW5nLCBpbmNsdWRpbmcgdmlydHVhbCBzY3JvbGxpbmcsIHRoZSBzY3JvbGwgcG9zaXRpb24gd2lsbCBiZSB1cGRhdGVkLlxuICAgICAqIElmIHRoZSByb3cgaXMgbm90IHByZXNlbnQgb24gdGhlIGN1cnJlbnQgcGFnZSwgdGhlIG1ldGhvZCB3aWxsIGhhdmUgbm8gZWZmZWN0LlxuICAgICAqXG4gICAgICogQHBhcmFtIHJvd0luZGV4IC0gVGhlIGxvZ2ljYWwgcm93IGluZGV4IHRvIGZvY3VzLiBUaGUgdG9wIGhlYWRlciByb3cgaGFzIGFuIGluZGV4IDAuXG4gICAgICogQHBhcmFtIGNvbEluZGV4IC0gVGhlIGNvbHVtbiBpbmRleCB0byBmb2N1cy5cbiAgICAgKiBAcmV0dXJucyB7TmF2aWdhdGlvbkNlbGx9IFRoZSBmb2N1c2VkIGNlbGwuXG4gICAgICpcbiAgICAgKi9cbiAgICBmb2N1c0NlbGwocm93SW5kZXgsIGNvbEluZGV4KSB7XG4gICAgICAgIHRoaXMuYXNzZXJ0TmF2aWdhYmxlKCk7XG4gICAgICAgIHJldHVybiB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmZvY3VzQ2VsbChyb3dJbmRleCwgY29sSW5kZXgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGb2N1c2VzIHRoZSBuZXh0IGNlbGwsIG9wdGlvbmFsbHkgd3JhcHBpbmcgdG8gdGhlIG5leHQgcm93LlxuICAgICAqXG4gICAgICogQHBhcmFtIHdyYXAgLSBBIEJvb2xlYW4gdmFsdWUgd2hpY2ggaW5kaWNhdGVzIGlmIHRoZSBmb2N1cyB3aWxsIG1vdmUgdG8gdGhlIG5leHQgcm93LiBEZWZhdWx0cyB0byBgdHJ1ZWAuXG4gICAgICogQHJldHVybnMge05hdmlnYXRpb25DZWxsfSBUaGUgZm9jdXNlZCBjZWxsLiBJZiB0aGUgZm9jdXMgaXMgYWxyZWFkeSBvbiB0aGUgbGFzdCBjZWxsLCByZXR1cm5zIGBudWxsYC5cbiAgICAgKi9cbiAgICBmb2N1c05leHRDZWxsKHdyYXAgPSB0cnVlKSB7XG4gICAgICAgIHRoaXMuYXNzZXJ0TmF2aWdhYmxlKCk7XG4gICAgICAgIHJldHVybiB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmZvY3VzTmV4dENlbGwod3JhcCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZvY3VzZXMgdGhlIHByZXZpb3VzIGNlbGwuIE9wdGlvbmFsbHkgd3JhcHMgdG8gdGhlIHByZXZpb3VzIHJvdy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB3cmFwIC0gQSBCb29sZWFuIHZhbHVlIHdoaWNoIGluZGljYXRlcyBpZiB0aGUgZm9jdXMgd2lsbCBtb3ZlIHRvIHRoZSBuZXh0IHJvdy4gRGVmYXVsdHMgdG8gYHRydWVgLlxuICAgICAqIEByZXR1cm5zIHtOYXZpZ2F0aW9uQ2VsbH0gVGhlIGZvY3VzZWQgY2VsbC4gSWYgdGhlIGZvY3VzIGlzIGFscmVhZHkgb24gdGhlIGZpcnN0IGNlbGwsIHJldHVybnMgYG51bGxgLlxuICAgICAqL1xuICAgIGZvY3VzUHJldkNlbGwod3JhcCA9IHRydWUpIHtcbiAgICAgICAgdGhpcy5hc3NlcnROYXZpZ2FibGUoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMubmF2aWdhdGlvblNlcnZpY2UuZm9jdXNQcmV2Q2VsbCh3cmFwKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2Nyb2xscyB0byB0aGUgc3BlY2lmaWVkIHJvdyBhbmQgY29sdW1uIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgc2Nyb2xsbW1vZGVzX2dyaWQgJX0jdG9jLXNjcm9sbGluZy10by1hLXNwZWNpZmljLXJvdy1hbmQtY29sdW1uLWluZGV4KSkuXG4gICAgICovXG4gICAgc2Nyb2xsVG8ocmVxdWVzdCkge1xuICAgICAgICB0aGlzLnNjcm9sbFJlcXVlc3RTZXJ2aWNlLnNjcm9sbFRvKHJlcXVlc3QpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGFuZ2VzIHRoZSBwb3NpdGlvbiBvZiB0aGUgc3BlY2lmaWVkIGNvbHVtbi5cbiAgICAgKiBUaGUgcmVvcmRlcmluZyBvZiBjb2x1bW5zIG9wZXJhdGVzIG9ubHkgb24gdGhlIGxldmVsXG4gICAgICogd2hpY2ggaXMgaW5mZXJyZWQgYnkgdGhlIHNvdXJjZSBjb2x1bW4uXG4gICAgICogRm9yIHRoZSBgcmVvcmRlckNvbHVtbmAgbWV0aG9kIHRvIHdvcmsgcHJvcGVybHksXG4gICAgICogdGhlIGBzb3VyY2VgIGNvbHVtbiBoYXMgdG8gYmUgdmlzaWJsZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7Q29sdW1uQmFzZX0gc291cmNlIC0gVGhlIGNvbHVtbiB3aG9zZSBwb3NpdGlvbiB3aWxsIGJlIGNoYW5nZWQuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGRlc3RJbmRleCAtIFRoZSBuZXcgcG9zaXRpb24gb2YgdGhlIGNvbHVtbi5cbiAgICAgKiBAcGFyYW0ge0NvbHVtblJlb3JkZXJDb25maWd9IG9wdGlvbnMgLSBBZGRpdGlvbmFsIG9wdGlvbnMuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogX0BDb21wb25lbnQoe1xuICAgICAqICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAgICAgKiAgICB0ZW1wbGF0ZTogYFxuICAgICAqICAgICAgICA8a2VuZG8tZ3JpZFxuICAgICAqICAgICAgICAgICAgI2dyaWRcbiAgICAgKiAgICAgICAgICAgIFtkYXRhXT1cImdyaWREYXRhXCJcbiAgICAgKiAgICAgICAgICAgIFtyZW9yZGVyYWJsZV09XCJ0cnVlXCJcbiAgICAgKiAgICAgICAgICAgIHN0eWxlPVwiaGVpZ2h0OiAzMDBweFwiPlxuICAgICAqICAgICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZFRvb2xiYXJUZW1wbGF0ZT5cbiAgICAgKiAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImstYnV0dG9uXCJcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgIChjbGljayk9XCJncmlkLnJlb3JkZXJDb2x1bW4oZ3JvdXBDb2x1bW4sIDIsIHsgYmVmb3JlOiB0cnVlIH0pXCI+XG4gICAgICogICAgICAgICAgICAgICAgICAgICBNb3ZlIHRoZSBncm91cCBjb2x1bW4gYmVmb3JlIHRoZSBsYXN0IG9uZS5cbiAgICAgKiAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICogICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAqICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uLWdyb3VwICNncm91cENvbHVtbiB0aXRsZT1cIlByb2R1Y3QgSW5mb1wiPlxuICAgICAqICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtblxuICAgICAqICAgICAgICAgICAgICAgICAgICBmaWVsZD1cIlByb2R1Y3RJRFwiXG4gICAgICogICAgICAgICAgICAgICAgICAgIFt3aWR0aF09XCI1MFwiXG4gICAgICogICAgICAgICAgICAgICAgICAgIHRpdGxlPVwiSURcIj5cbiAgICAgKiAgICAgICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICAgICAqXG4gICAgICogICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uXG4gICAgICogICAgICAgICAgICAgICAgICAgIGZpZWxkPVwiUHJvZHVjdE5hbWVcIlxuICAgICAqICAgICAgICAgICAgICAgICAgICB0aXRsZT1cIlByb2R1Y3QgTmFtZVwiPlxuICAgICAqICAgICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gICAgICogICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uLWdyb3VwPlxuICAgICAqXG4gICAgICogICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW5cbiAgICAgKiAgICAgICAgICAgICAgICBmaWVsZD1cIlVuaXRQcmljZVwiXG4gICAgICogICAgICAgICAgICAgICAgdGl0bGU9XCJVbml0IFByaWNlXCJcbiAgICAgKiAgICAgICAgICAgICAgICBbd2lkdGhdPVwiMTgwXCJcbiAgICAgKiAgICAgICAgICAgICAgICBmb3JtYXQ9XCJ7MDpjfVwiPlxuICAgICAqICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAgICAgKlxuICAgICAqICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uXG4gICAgICogICAgICAgICAgICAgICAgZmllbGQ9XCJEaXNjb250aW51ZWRcIlxuICAgICAqICAgICAgICAgICAgICAgIHRpdGxlPVwiRGlzY29udGludWVkXCJcbiAgICAgKiAgICAgICAgICAgICAgICBbd2lkdGhdPVwiMTAwXCI+XG4gICAgICogICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICAgICAqICAgICAgICA8L2tlbmRvLWdyaWQ+XG4gICAgICogICAgYFxuICAgICAqIH0pXG4gICAgICogY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAgICAgKiAgICBwdWJsaWMgZ3JpZERhdGE6IGFueVtdID0gcHJvZHVjdHM7XG4gICAgICogfVxuICAgICAqXG4gICAgICogY29uc3QgcHJvZHVjdHMgPSBbe1xuICAgICAqICAgIFwiUHJvZHVjdElEXCI6IDEsXG4gICAgICogICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYWlcIixcbiAgICAgKiAgICBcIlVuaXRQcmljZVwiOiAxOC4wMDAwLFxuICAgICAqICAgIFwiRGlzY29udGludWVkXCI6IHRydWVcbiAgICAgKiAgfSwge1xuICAgICAqICAgIFwiUHJvZHVjdElEXCI6IDIsXG4gICAgICogICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYW5nXCIsXG4gICAgICogICAgXCJVbml0UHJpY2VcIjogMTkuMDAwMCxcbiAgICAgKiAgICBcIkRpc2NvbnRpbnVlZFwiOiBmYWxzZVxuICAgICAqICB9XG4gICAgICogXTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICByZW9yZGVyQ29sdW1uKHNvdXJjZSwgZGVzdEluZGV4LCBvcHRpb25zID0geyBiZWZvcmU6IGZhbHNlIH0pIHtcbiAgICAgICAgY29uc3QgY29sdW1uc0ZvckxldmVsID0gc29ydENvbHVtbnModGhpcy5hbGxDb2x1bW5zRm9yTGV2ZWwoc291cmNlLmxldmVsKSk7XG4gICAgICAgIGxldCB0YXJnZXQgPSBjb2x1bW5zRm9yTGV2ZWxbZGVzdEluZGV4XTtcbiAgICAgICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBsYXN0Tm9uTG9ja2VkID0gdGFyZ2V0LmlzTG9ja2VkICYmXG4gICAgICAgICAgICAhc291cmNlLmlzTG9ja2VkICYmXG4gICAgICAgICAgICB0aGlzLmNvbHVtbnNDb250YWluZXIubm9uTG9ja2VkQ29sdW1ucy5sZW5ndGggPT09IDE7XG4gICAgICAgIGlmIChsYXN0Tm9uTG9ja2VkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzU3BhbkNvbHVtbkNvbXBvbmVudCh0YXJnZXQpICYmICFvcHRpb25zLmJlZm9yZSkge1xuICAgICAgICAgICAgdGFyZ2V0ID0gdGFyZ2V0LmNoaWxkQ29sdW1ucy5sYXN0O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucmVvcmRlcih7XG4gICAgICAgICAgICBiZWZvcmU6IG9wdGlvbnMuYmVmb3JlLFxuICAgICAgICAgICAgc291cmNlOiBzb3VyY2UsXG4gICAgICAgICAgICB0YXJnZXQ6IHRhcmdldFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQSBmdW5jdGlvbiB3aGljaCBkZXRlcm1pbmVzIGlmIGEgc3BlY2lmaWMgcm93IGlzIGV4cGFuZGVkLlxuICAgICAqL1xuICAgIHNldCBpc0RldGFpbEV4cGFuZGVkKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuZGV0YWlsc1NlcnZpY2UudXNlckNhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgfVxuICAgIGdldCBpc0RldGFpbEV4cGFuZGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kZXRhaWxzU2VydmljZS51c2VyQ2FsbGJhY2s7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEEgZnVuY3Rpb24gd2hpY2ggZGV0ZXJtaW5lcyBpZiBhIHNwZWNpZmljIGdyb3VwIHJvdyBpcyBleHBhbmRlZC5cbiAgICAgKi9cbiAgICBzZXQgaXNHcm91cEV4cGFuZGVkKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuZ3JvdXBzU2VydmljZS51c2VyQ2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgICAgdGhpcy5ncm91cGFibGUgPSBpc1ByZXNlbnQoY2FsbGJhY2spO1xuICAgIH1cbiAgICBnZXQgaXNHcm91cEV4cGFuZGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ncm91cHNTZXJ2aWNlLnVzZXJDYWxsYmFjaztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlb3JkZXIoeyB0YXJnZXQsIHNvdXJjZSwgYmVmb3JlLCBjaGFuZ2VDb250YWluZXIgfSkge1xuICAgICAgICB0aGlzLm5nWm9uZS5ydW4oKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgY29sdW1uc0ZvckxldmVsID0gc29ydENvbHVtbnModGhpcy5hbGxDb2x1bW5zRm9yTGV2ZWwoc291cmNlLmxldmVsKSk7XG4gICAgICAgICAgICBsZXQgbmV3SW5kZXggPSBjb2x1bW5zRm9yTGV2ZWwuaW5kZXhPZih0YXJnZXQpO1xuICAgICAgICAgICAgaWYgKHRhcmdldC5wYXJlbnQgJiYgdGFyZ2V0LnBhcmVudC5pc1NwYW5Db2x1bW4pIHtcbiAgICAgICAgICAgICAgICBuZXdJbmRleCA9IGNvbHVtbnNGb3JMZXZlbC5pbmRleE9mKHRhcmdldC5wYXJlbnQpO1xuICAgICAgICAgICAgICAgIGlmIChiZWZvcmUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0ID0gdGFyZ2V0LnBhcmVudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgb2xkSW5kZXggPSBjb2x1bW5zRm9yTGV2ZWwuaW5kZXhPZihzb3VyY2UpO1xuICAgICAgICAgICAgaWYgKGNoYW5nZUNvbnRhaW5lcikge1xuICAgICAgICAgICAgICAgIGlmIChiZWZvcmUgJiYgMCA8IG5ld0luZGV4ICYmIG9sZEluZGV4IDwgbmV3SW5kZXgpIHsgLy8gZHJvcHBlZCBiZWZvcmUgdGhlIGZpcnN0IG5vdCBsb2NrZWQgY29sdW1uXG4gICAgICAgICAgICAgICAgICAgIG5ld0luZGV4LS07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKCFiZWZvcmUgJiYgb2xkSW5kZXggPiBuZXdJbmRleCkgeyAvLyBkcm9wcGVkIGFmdGVyIHRoZSBsYXN0IGxvY2tlZCBjb2x1bW5cbiAgICAgICAgICAgICAgICAgICAgbmV3SW5kZXgrKztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBhcmdzID0gbmV3IENvbHVtblJlb3JkZXJFdmVudCh7XG4gICAgICAgICAgICAgICAgY29sdW1uOiBzb3VyY2UsXG4gICAgICAgICAgICAgICAgb2xkSW5kZXg6IG9sZEluZGV4LFxuICAgICAgICAgICAgICAgIG5ld0luZGV4OiBuZXdJbmRleFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmNvbHVtblJlb3JkZXIuZW1pdChhcmdzKTtcbiAgICAgICAgICAgIGlmIChhcmdzLmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNoYW5nZUNvbnRhaW5lcikge1xuICAgICAgICAgICAgICAgIHRoaXMuY29sdW1uTG9ja2VkQ2hhbmdlLmVtaXQobmV3IENvbHVtbkxvY2tlZENoYW5nZUV2ZW50KFtzb3VyY2VdKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUNvbHVtbkluZGljZXMoeyBjb2x1bW5zRm9yTGV2ZWwsIHNvdXJjZSwgdGFyZ2V0LCBiZWZvcmUgfSk7XG4gICAgICAgICAgICBpZiAoc291cmNlLmxvY2tlZCAhPT0gdGFyZ2V0LmxvY2tlZCkge1xuICAgICAgICAgICAgICAgIHNvdXJjZS5sb2NrZWQgPSB0YXJnZXQubG9ja2VkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5jb2x1bW5zQ29udGFpbmVyLnJlZnJlc2goKTtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB1cGRhdGVDb2x1bW5JbmRpY2VzKHsgY29sdW1uc0ZvckxldmVsLCBzb3VyY2UsIHRhcmdldCwgYmVmb3JlIH0pIHtcbiAgICAgICAgY29uc3QgZXhwYW5kZWRDb2x1bW5zID0gZXhwYW5kQ29sdW1uc1dpdGhTcGFuKGNvbHVtbnNGb3JMZXZlbCk7XG4gICAgICAgIGNvbnN0IHNvdXJjZUNvbHVtbkluZGV4ID0gZXhwYW5kZWRDb2x1bW5zLmluZGV4T2Yoc291cmNlKTtcbiAgICAgICAgbGV0IG5leHRTb3VyY2VJbmRleCA9IDA7XG4gICAgICAgIGxldCBuZXh0SW5kZXggPSAwO1xuICAgICAgICBsZXQgdG9Ta2lwID0gMTtcbiAgICAgICAgLy8gUG9zc2libGUgb25seSB3aGVuIGNhbGxlZCBmcm9tIHRoZSBBUEkuXG4gICAgICAgIGlmIChzb3VyY2UuaXNTcGFuQ29sdW1uKSB7XG4gICAgICAgICAgICB0b1NraXAgKz0gc291cmNlLmNoaWxkQ29sdW1ucy5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGkgPSAwO1xuICAgICAgICB3aGlsZSAoaSA8IGV4cGFuZGVkQ29sdW1ucy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGxldCBjb2x1bW4gPSBleHBhbmRlZENvbHVtbnNbaV07XG4gICAgICAgICAgICBpZiAoY29sdW1uID09PSB0YXJnZXQpIHtcbiAgICAgICAgICAgICAgICBuZXh0U291cmNlSW5kZXggPSBiZWZvcmUgPyBuZXh0SW5kZXggOiBuZXh0SW5kZXggKyAxO1xuICAgICAgICAgICAgICAgIG5leHRJbmRleCA9IGJlZm9yZSA/IG5leHRJbmRleCArIHRvU2tpcCA6IG5leHRJbmRleDtcbiAgICAgICAgICAgICAgICBjb2x1bW4ub3JkZXJJbmRleCA9IG5leHRJbmRleDtcbiAgICAgICAgICAgICAgICBpZiAobmV4dFNvdXJjZUluZGV4ID09PSBuZXh0SW5kZXggKyAxKSB7XG4gICAgICAgICAgICAgICAgICAgIG5leHRJbmRleCArPSB0b1NraXA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoY29sdW1uID09PSBzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICBpICs9IHRvU2tpcDtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbHVtbi5vcmRlckluZGV4ID0gbmV4dEluZGV4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmV4dEluZGV4Kys7XG4gICAgICAgICAgICBpKys7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChpID0gc291cmNlQ29sdW1uSW5kZXg7IGkgPCBzb3VyY2VDb2x1bW5JbmRleCArIHRvU2tpcDsgaSsrKSB7XG4gICAgICAgICAgICBleHBhbmRlZENvbHVtbnNbaV0ub3JkZXJJbmRleCA9IG5leHRTb3VyY2VJbmRleCsrO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudXBkYXRlSW5kaWNlc0ZvckxldmVsKHNvdXJjZS5sZXZlbCArIDEpO1xuICAgIH1cbiAgICB1cGRhdGVJbmRpY2VzRm9yTGV2ZWwobGV2ZWwpIHtcbiAgICAgICAgY29uc3QgY29sc0ZvclBhcmVudExldmVsID0gdGhpcy5hbGxDb2x1bW5zRm9yTGV2ZWwobGV2ZWwgLSAxKTtcbiAgICAgICAgY29uc3QgY29sc0ZvckxldmVsID0gW107XG4gICAgICAgIHNvcnRDb2x1bW5zKGNvbHNGb3JQYXJlbnRMZXZlbCkuZm9yRWFjaCgoYykgPT4ge1xuICAgICAgICAgICAgaWYgKGMuaXNDb2x1bW5Hcm91cCkge1xuICAgICAgICAgICAgICAgIGNvbHNGb3JMZXZlbC5wdXNoKC4uLmMuY2hpbGRyZW5BcnJheS5zb3J0KChhLCBiKSA9PiBhLm9yZGVySW5kZXggLSBiLm9yZGVySW5kZXgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGV4cGFuZENvbHVtbnNXaXRoU3Bhbihjb2xzRm9yTGV2ZWwpLm1hcCgoYywgaSkgPT4gYy5vcmRlckluZGV4ID0gaSk7XG4gICAgICAgIGlmIChsZXZlbCA8IHRoaXMuY29sdW1uTGlzdC50b3RhbENvbHVtbkxldmVscygpKSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUluZGljZXNGb3JMZXZlbChsZXZlbCArIDEpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFsbENvbHVtbnNGb3JMZXZlbChsZXZlbCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW5MaXN0LnRvQXJyYXkoKS5maWx0ZXIoY29sdW1uID0+IGNvbHVtbi5sZXZlbCA9PT0gbGV2ZWwpO1xuICAgIH1cbiAgICBpbml0U2VsZWN0aW9uU2VydmljZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnNlbGVjdGFibGUpIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uU2VydmljZS5uZ09uRGVzdHJveSgpO1xuICAgICAgICAgICAgdGhpcy5jZWxsU2VsZWN0aW9uU2VydmljZS5uZ09uRGVzdHJveSgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5zZWxlY3Rpb25EaXJlY3RpdmUgJiYgIWlzUHJlc2VudCh0aGlzLmRlZmF1bHRTZWxlY3Rpb24pKSB7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHRTZWxlY3Rpb24gPSBuZXcgU2VsZWN0aW9uKHRoaXMsIHRoaXMuY2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNlbGxTZWxlY3Rpb25Nb2RlID0gdGhpcy5zZWxlY3RhYmxlWydjZWxsJ107XG4gICAgICAgIGNvbnN0IGFjdGl2ZVNlcnZpY2UgPSBjZWxsU2VsZWN0aW9uTW9kZSA/IHRoaXMuY2VsbFNlbGVjdGlvblNlcnZpY2UgOiB0aGlzLnNlbGVjdGlvblNlcnZpY2U7XG4gICAgICAgIGNvbnN0IGluYWN0aXZlU2VydmljZSA9IGNlbGxTZWxlY3Rpb25Nb2RlID8gdGhpcy5zZWxlY3Rpb25TZXJ2aWNlIDogdGhpcy5jZWxsU2VsZWN0aW9uU2VydmljZTtcbiAgICAgICAgaWYgKGluYWN0aXZlU2VydmljZS5hY3RpdmUpIHtcbiAgICAgICAgICAgIGluYWN0aXZlU2VydmljZS5uZ09uRGVzdHJveSgpO1xuICAgICAgICAgICAgYWN0aXZlU2VydmljZS5hZGRTdWJzY3JpcHRpb25zKCk7XG4gICAgICAgICAgICBpbmFjdGl2ZVNlcnZpY2UuYWN0aXZlID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgYWN0aXZlU2VydmljZS5hY3RpdmUgPSB0cnVlO1xuICAgICAgICBhY3RpdmVTZXJ2aWNlLmluaXQoe1xuICAgICAgICAgICAgY2VsbFNlbGVjdGVkOiBjZWxsU2VsZWN0aW9uTW9kZSA/IHRoaXMuY2VsbFNlbGVjdGVkIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgcm93U2VsZWN0ZWQ6IGNlbGxTZWxlY3Rpb25Nb2RlID8gdW5kZWZpbmVkIDogdGhpcy5yb3dTZWxlY3RlZCxcbiAgICAgICAgICAgIHNlbGVjdGFibGU6IHRoaXMuc2VsZWN0YWJsZSxcbiAgICAgICAgICAgIHZpZXc6IHRoaXMudmlldyxcbiAgICAgICAgICAgIGNvbHVtbnM6IGNlbGxTZWxlY3Rpb25Nb2RlID8gdGhpcy5jb2x1bW5MaXN0LnRvQXJyYXkoKSA6IHVuZGVmaW5lZFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKCF0aGlzLnNlbGVjdGlvbkRpcmVjdGl2ZSAmJiAhdGhpcy5zZWxlY3RhYmxlU2V0dGluZ3MuZW5hYmxlZCkge1xuICAgICAgICAgICAgdGhpcy5kZWZhdWx0U2VsZWN0aW9uLnJlc2V0KCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdGlvblN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjZWxsU2VsZWN0aW9uTW9kZSkge1xuICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb25TdWJzY3JpcHRpb24gPSB0aGlzLmNlbGxTZWxlY3Rpb25TZXJ2aWNlLmNoYW5nZXMuc3Vic2NyaWJlKChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMubmdab25lLnJ1bigoKSA9PiB0aGlzLnNlbGVjdGlvbkNoYW5nZS5lbWl0KGV2ZW50KSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uU3Vic2NyaXB0aW9uID0gdGhpcy5zZWxlY3Rpb25TZXJ2aWNlLmNoYW5nZXMuc3Vic2NyaWJlKChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMubmdab25lLnJ1bigoKSA9PiB0aGlzLnNlbGVjdGlvbkNoYW5nZS5lbWl0KGV2ZW50KSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzZXRFZGl0Rm9jdXMoZWxlbWVudCkge1xuICAgICAgICBpZiAoZWxlbWVudCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubmF2aWdhdGlvblNlcnZpY2UudHJ5Rm9jdXMoZWxlbWVudCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29sdW1uSW5zdGFuY2UoY29sdW1uKSB7XG4gICAgICAgIGxldCBpbnN0YW5jZTtcbiAgICAgICAgaWYgKHR5cGVvZiBjb2x1bW4gPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICBpbnN0YW5jZSA9IHRoaXMuY29sdW1uc0NvbnRhaW5lci5sb2NrZWRMZWFmQ29sdW1ucy50b0FycmF5KClcbiAgICAgICAgICAgICAgICAuY29uY2F0KHRoaXMuY29sdW1uc0NvbnRhaW5lci5ub25Mb2NrZWRMZWFmQ29sdW1ucy50b0FycmF5KCkpW2NvbHVtbl07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGNvbHVtbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGluc3RhbmNlID0gdGhpcy5jb2x1bW5MaXN0LmZpbHRlcigoaXRlbSkgPT4gaXRlbS5maWVsZCA9PT0gY29sdW1uKVswXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGluc3RhbmNlID0gY29sdW1uO1xuICAgICAgICB9XG4gICAgICAgIGlmICghaW5zdGFuY2UgJiYgaXNEZXZNb2RlKCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBjb2x1bW4gJHtjb2x1bW59YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGluc3RhbmNlO1xuICAgIH1cbiAgICB2ZXJpZnlTZXR0aW5ncygpIHtcbiAgICAgICAgaWYgKGlzRGV2TW9kZSgpKSB7XG4gICAgICAgICAgICBjb25zdCBsb2NrZWQgPSB0aGlzLmxvY2tlZExlYWZDb2x1bW5zLmxlbmd0aCB8fCAodGhpcy5jb2x1bW5NZW51ICYmIHRoaXMuY29sdW1uTWVudS5sb2NrKTtcbiAgICAgICAgICAgIGNvbnN0IHN0aWNreUNvbHVtbnMgPSB0aGlzLnN0aWNreUNvbHVtbnMubGVuZ3RoIHx8ICh0aGlzLmNvbHVtbk1lbnUgJiYgdGhpcy5jb2x1bW5NZW51LnN0aWNrKTtcbiAgICAgICAgICAgIGlmIChsb2NrZWQgJiYgdGhpcy5kZXRhaWxUZW1wbGF0ZSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSGF2aW5nIGJvdGggZGV0YWlsIHRlbXBsYXRlIGFuZCBsb2NrZWQgY29sdW1ucyBpcyBub3Qgc3VwcG9ydGVkLicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMubG9ja2VkTGVhZkNvbHVtbnMubGVuZ3RoICYmICF0aGlzLm5vbkxvY2tlZExlYWZDb2x1bW5zLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVGhlcmUgc2hvdWxkIGJlIGF0IGxlYXN0IG9uZSBub24tbG9ja2VkIGNvbHVtbicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKChsb2NrZWQgfHwgdGhpcy52aXJ0dWFsQ29sdW1ucykgJiYgZXhwYW5kQ29sdW1ucyh0aGlzLmNvbHVtbkxpc3QudG9BcnJheSgpKS5maWx0ZXIoY29sdW1uID0+ICFjb2x1bW4ud2lkdGggJiYgIWlzQ29sdW1uR3JvdXBDb21wb25lbnQoY29sdW1uKSkubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKChsb2NrZWQgPyAnTG9ja2VkJyA6ICdWaXJ0dWFsJykgKyAnIGNvbHVtbnMgZmVhdHVyZSByZXF1aXJlcyBhbGwgY29sdW1ucyB0byBoYXZlIHNldCB3aWR0aC4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChsb2NrZWQgJiYgIXRoaXMuaXNTY3JvbGxhYmxlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdMb2NrZWQgY29sdW1ucyBhcmUgb25seSBzdXBwb3J0ZWQgd2hlbiBzY3JvbGxpbmcgaXMgZW5hYmxlZC4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmNvbHVtbkxpc3QuZmlsdGVyKGlzQ29sdW1uR3JvdXBDb21wb25lbnQpLmZpbHRlcigoeCkgPT4gIXguaGFzQ2hpbGRyZW4pLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ29sdW1uR3JvdXBDb21wb25lbnQgc2hvdWxkIGNvbnRhaW4gQ29sdW1uQ29tcG9uZW50IG9yIENvbW1hbmRDb2x1bW5Db21wb25lbnQuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5jb2x1bW5MaXN0LmZpbHRlcih4ID0+IHgubG9ja2VkICYmIHgucGFyZW50ICYmICF4LnBhcmVudC5pc0xvY2tlZCkubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdMb2NrZWQgY2hpbGQgY29sdW1ucyByZXF1aXJlIHRoZWlyIHBhcmVudCBjb2x1bW5zIHRvIGJlIGxvY2tlZC4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgodGhpcy5yb3dIZWlnaHQgfHwgdGhpcy5kZXRhaWxSb3dIZWlnaHQpICYmICF0aGlzLmlzVmlydHVhbCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignUm93IGhlaWdodCBhbmQgZGV0YWlsIHJvdyBoZWlnaHQgc2V0dGluZ3MgcmVxdWlyZSB2aXJ0dWFsIHNjcm9sbGluZyBtb2RlIHRvIGJlIGVuYWJsZWQuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc3RpY2t5Q29sdW1ucyAmJiBleHBhbmRDb2x1bW5zKHRoaXMuY29sdW1uTGlzdC50b0FycmF5KCkpLmZpbHRlcihjb2x1bW4gPT4gIWNvbHVtbi53aWR0aCAmJiAhaXNDb2x1bW5Hcm91cENvbXBvbmVudChjb2x1bW4pKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1N0aWNreSBjb2x1bW5zIGZlYXR1cmUgcmVxdWlyZXMgYWxsIGNvbHVtbnMgdG8gaGF2ZSBzZXQgd2lkdGguJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc3RpY2t5Q29sdW1ucyAmJiAhdGhpcy5pc1Njcm9sbGFibGUpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1N0aWNreSBjb2x1bW5zIGFyZSBvbmx5IHN1cHBvcnRlZCB3aGVuIHNjcm9sbGluZyBpcyBlbmFibGVkLicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHN0aWNreUNvbHVtbnMgJiYgdGhpcy52aXJ0dWFsQ29sdW1ucykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSGF2aW5nIGJvdGggc3RpY2t5IGNvbHVtbnMgYW5kIGNvbHVtbiB2aXJ0dWFsaXphdGlvbiBpcyBub3Qgc3VwcG9ydGVkLicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMucm93U3RpY2t5ICYmIHRoaXMuc2Nyb2xsYWJsZSA9PT0gJ3ZpcnR1YWwnKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdIYXZpbmcgYm90aCBzdGlja3kgcm93cyBhbmQgcm93IHZpcnR1YWxpemF0aW9uIChzY3JvbGxhYmxlPVwidmlydHVhbFwiKSBpcyBub3Qgc3VwcG9ydGVkLicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMucm93U3RpY2t5ICYmIHRoaXMuZ3JvdXBhYmxlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdIYXZpbmcgYm90aCBzdGlja3kgcm93cyBhbmQgZ3JvdXBpbmcgaXMgbm90IHN1cHBvcnRlZC4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhbGlkYXRlQ29sdW1uc0ZpZWxkKHRoaXMuY29sdW1uTGlzdCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXV0b0dlbmVyYXRlQ29sdW1ucygpIHtcbiAgICAgICAgaWYgKHRoaXMuc2hvdWxkR2VuZXJhdGVDb2x1bW5zICYmICF0aGlzLmNvbHVtbnMubGVuZ3RoICYmIHRoaXMudmlldy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRoaXMuY29sdW1ucy5yZXNldChPYmplY3Qua2V5cyh0aGlzLnZpZXcuYXQoMCkpLm1hcChmaWVsZCA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IGNvbHVtbiA9IG5ldyBDb2x1bW5Db21wb25lbnQoKTtcbiAgICAgICAgICAgICAgICBjb2x1bW4uZmllbGQgPSBmaWVsZDtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29sdW1uO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGF0dGFjaFN0YXRlQ2hhbmdlc0VtaXR0ZXIoKSB7XG4gICAgICAgIHRoaXMuc3RhdGVDaGFuZ2VTdWJzY3JpcHRpb24gPVxuICAgICAgICAgICAgbWVyZ2UodGhpcy5wYWdlQ2hhbmdlLnBpcGUobWFwKHggPT4gKHtcbiAgICAgICAgICAgICAgICBmaWx0ZXI6IHRoaXMuZmlsdGVyLCBncm91cDogdGhpcy5ncm91cCwgc2tpcDogeC5za2lwLCBzb3J0OiB0aGlzLnNvcnQsIHRha2U6IHgudGFrZVxuICAgICAgICAgICAgfSkpKSwgdGhpcy5zb3J0Q2hhbmdlLnBpcGUobWFwKHNvcnQgPT4gKHsgZmlsdGVyOiB0aGlzLmZpbHRlciwgZ3JvdXA6IHRoaXMuZ3JvdXAsIHNraXA6IHRoaXMuc2tpcCwgc29ydDogc29ydCwgdGFrZTogdGhpcy5wYWdlU2l6ZSB9KSkpLCB0aGlzLmdyb3VwQ2hhbmdlLnBpcGUobWFwKGdyb3VwID0+ICh7XG4gICAgICAgICAgICAgICAgZmlsdGVyOiB0aGlzLmZpbHRlciwgZ3JvdXA6IGdyb3VwLCBza2lwOiB0aGlzLnNraXAsIHNvcnQ6IHRoaXMuc29ydCwgdGFrZTogdGhpcy5wYWdlU2l6ZVxuICAgICAgICAgICAgfSkpKSwgdGhpcy5maWx0ZXJDaGFuZ2UucGlwZShtYXAoZmlsdGVyJCQxID0+ICh7XG4gICAgICAgICAgICAgICAgZmlsdGVyOiBmaWx0ZXIkJDEsIGdyb3VwOiB0aGlzLmdyb3VwLCBza2lwOiAwLCBzb3J0OiB0aGlzLnNvcnQsIHRha2U6IHRoaXMucGFnZVNpemVcbiAgICAgICAgICAgIH0pKSkpXG4gICAgICAgICAgICAgICAgLnN1YnNjcmliZSh4ID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlQ2VsbCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FuY2VsQ2VsbCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuZGF0YVN0YXRlQ2hhbmdlLmVtaXQoeCk7XG4gICAgICAgICAgICB9KTtcbiAgICB9XG4gICAgYXR0YWNoRWRpdEhhbmRsZXJzKCkge1xuICAgICAgICBpZiAoIXRoaXMuZWRpdFNlcnZpY2UpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVkaXRTZXJ2aWNlU3Vic2NyaXB0aW9uID0gdGhpcy5lZGl0U2VydmljZVxuICAgICAgICAgICAgLmNoYW5nZXMuc3Vic2NyaWJlKHRoaXMuZW1pdENSVURFdmVudC5iaW5kKHRoaXMpKTtcbiAgICB9XG4gICAgZW1pdENSVURFdmVudChhcmdzKSB7XG4gICAgICAgIGNvbnN0IHsgYWN0aW9uLCByb3dJbmRleCwgZm9ybUdyb3VwIH0gPSBhcmdzO1xuICAgICAgICBsZXQgZGF0YUl0ZW0gPSB0aGlzLnZpZXcuYXQocm93SW5kZXggLSB0aGlzLnNraXApO1xuICAgICAgICBpZiAoYWN0aW9uICE9PSAnYWRkJyAmJiAhZGF0YUl0ZW0pIHtcbiAgICAgICAgICAgIGRhdGFJdGVtID0gZm9ybUdyb3VwLnZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2xvc2VDZWxsKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oYXJncywge1xuICAgICAgICAgICAgZGF0YUl0ZW06IGRhdGFJdGVtLFxuICAgICAgICAgICAgc2VuZGVyOiB0aGlzXG4gICAgICAgIH0pO1xuICAgICAgICBzd2l0Y2ggKGFjdGlvbikge1xuICAgICAgICAgICAgY2FzZSAnYWRkJzpcbiAgICAgICAgICAgICAgICB0aGlzLmFkZC5lbWl0KGFyZ3MpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnY2FuY2VsJzpcbiAgICAgICAgICAgICAgICB0aGlzLmNhbmNlbC5lbWl0KGFyZ3MpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZWRpdCc6XG4gICAgICAgICAgICAgICAgdGhpcy5lZGl0LmVtaXQoYXJncyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdyZW1vdmUnOlxuICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlLmVtaXQoYXJncyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdzYXZlJzpcbiAgICAgICAgICAgICAgICB0aGlzLnNhdmUuZW1pdChhcmdzKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2NlbGxDbG9zZSc6XG4gICAgICAgICAgICAgICAgdGhpcy5jZWxsQ2xvc2UuZW1pdChhcmdzKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6IGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIGF0dGFjaERvbUV2ZW50SGFuZGxlcnMoKSB7XG4gICAgICAgIHRoaXMuY2VsbENsaWNrU3Vic2NyaXB0aW9uID0gdGhpcy5kb21FdmVudHMuY2VsbENsaWNrLnN1YnNjcmliZSgoYXJncykgPT4ge1xuICAgICAgICAgICAgdGhpcy5jZWxsQ2xpY2suZW1pdChPYmplY3QuYXNzaWduKHsgc2VuZGVyOiB0aGlzIH0sIGFyZ3MpKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGF0dGFjaEVsZW1lbnRFdmVudEhhbmRsZXJzKCkge1xuICAgICAgICBpZiAoaXNVbml2ZXJzYWwoKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHdyYXBwZXIgPSB0aGlzLndyYXBwZXIubmF0aXZlRWxlbWVudDtcbiAgICAgICAgY29uc3QgYXJpYVJvb3QgPSB0aGlzLmFyaWFSb290Lm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIHRoaXMubmdab25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc2l6ZUNoZWNrID0gdGhpcy5yZXNpemVDaGVjay5iaW5kKHRoaXMpO1xuICAgICAgICAgICAgY29uc3QgcmVzaXplU3Vic2NyaXB0aW9uID0gdGhpcy5yZW5kZXJlci5saXN0ZW4oJ3dpbmRvdycsICdyZXNpemUnLCByZXNpemVDaGVjayk7XG4gICAgICAgICAgICBjb25zdCBvcmllbnRhdGlvblN1YnNjcmlwdGlvbiA9IHRoaXMucmVuZGVyZXIubGlzdGVuKCd3aW5kb3cnLCAnb3JpZW50YXRpb25jaGFuZ2UnLCByZXNpemVDaGVjayk7XG4gICAgICAgICAgICBjb25zdCBkb2N1bWVudENsaWNrU3Vic2NyaXB0aW9uID0gdGhpcy5yZW5kZXJlci5saXN0ZW4oJ2RvY3VtZW50JywgJ2NsaWNrJywgKGFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBhY3RpdmVFbGVtZW50ID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5lZGl0U2VydmljZS5zaG91bGRDbG9zZUNlbGwoKSAmJlxuICAgICAgICAgICAgICAgICAgICAhY2xvc2VzdChhcmdzLnRhcmdldCwgbWF0Y2hlc0NsYXNzZXMoJ2stYW5pbWF0aW9uLWNvbnRhaW5lciBrLWdyaWQtaWdub3JlLWNsaWNrJykpICYmXG4gICAgICAgICAgICAgICAgICAgICEoYWN0aXZlRWxlbWVudCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgKGNsb3Nlc3QoYWN0aXZlRWxlbWVudCwgbWF0Y2hlc0NsYXNzZXMoJ2stYW5pbWF0aW9uLWNvbnRhaW5lcicpKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzSW5FZGl0ZWRDZWxsKGFjdGl2ZUVsZW1lbnQsIHRoaXMud3JhcHBlci5uYXRpdmVFbGVtZW50KSkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZWRpdFNlcnZpY2UuY2xvc2VDZWxsKGFyZ3MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uc3Qgd2luZG93Qmx1clN1YnNjcmlwdGlvbiA9IHRoaXMucmVuZGVyZXIubGlzdGVuKCd3aW5kb3cnLCAnYmx1cicsIChhcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgYWN0aXZlRWxlbWVudCA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XG4gICAgICAgICAgICAgICAgaWYgKGFjdGl2ZUVsZW1lbnQgJiYgIShtYXRjaGVzTm9kZU5hbWUoJ2lucHV0JykoYWN0aXZlRWxlbWVudCkgJiYgYWN0aXZlRWxlbWVudC50eXBlID09PSAnZmlsZScgJiZcbiAgICAgICAgICAgICAgICAgICAgaXNJbkVkaXRlZENlbGwoYWN0aXZlRWxlbWVudCwgdGhpcy53cmFwcGVyLm5hdGl2ZUVsZW1lbnQpKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVkaXRTZXJ2aWNlLmNsb3NlQ2VsbChhcmdzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5kb21FdmVudHMud2luZG93Qmx1ci5lbWl0KGFyZ3MpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCBjbGlja1N1YnNjcmlwdGlvbiA9IHRoaXMucmVuZGVyZXIubGlzdGVuKHdyYXBwZXIsICdjbGljaycsIChhcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5kb21FdmVudHMuY2xpY2suZW1pdChhcmdzKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uc3Qga2V5ZG93blN1YnNjcmlwdGlvbiA9IHRoaXMucmVuZGVyZXIubGlzdGVuKHdyYXBwZXIsICdrZXlkb3duJywgKGFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmRvbUV2ZW50cy5rZXlkb3duLmVtaXQoYXJncyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8vIGZvY3VzSW4gYW5kIGZvY3VzT3V0IGFyZSByZWxhdGl2ZSB0byB0aGUgZWxlbWVudCB3aXRoIEFSSUEgcm9sZSBcImdyaWRcIlxuICAgICAgICAgICAgbGV0IGZvY3VzZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIGNvbnN0IGZvY3VzSW5TdWJzY3JpcHRpb24gPSB0aGlzLnJlbmRlcmVyLmxpc3RlbihhcmlhUm9vdCwgJ2ZvY3VzaW4nLCAoYXJncykgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZG9tRXZlbnRzLmZvY3VzLmVtaXQoYXJncyk7XG4gICAgICAgICAgICAgICAgaWYgKCFmb2N1c2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZG9tRXZlbnRzLmZvY3VzSW4uZW1pdChhcmdzKTtcbiAgICAgICAgICAgICAgICAgICAgZm9jdXNlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCBmb2N1c091dFN1YnNjcmlwdGlvbiA9IHRoaXMucmVuZGVyZXIubGlzdGVuKGFyaWFSb290LCAnZm9jdXNvdXQnLCAoYXJncykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5leHQgPSBhcmdzLnJlbGF0ZWRUYXJnZXQgfHwgZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcbiAgICAgICAgICAgICAgICBjb25zdCBvdXRzaWRlID0gIWNsb3Nlc3QobmV4dCwgKG5vZGUpID0+IG5vZGUgPT09IGFyaWFSb290KTtcbiAgICAgICAgICAgICAgICBpZiAob3V0c2lkZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRvbUV2ZW50cy5mb2N1c091dC5lbWl0KGFyZ3MpO1xuICAgICAgICAgICAgICAgICAgICBmb2N1c2VkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmRldGFjaEVsZW1lbnRFdmVudEhhbmRsZXJzID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlc2l6ZVN1YnNjcmlwdGlvbigpO1xuICAgICAgICAgICAgICAgIG9yaWVudGF0aW9uU3Vic2NyaXB0aW9uKCk7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnRDbGlja1N1YnNjcmlwdGlvbigpO1xuICAgICAgICAgICAgICAgIHdpbmRvd0JsdXJTdWJzY3JpcHRpb24oKTtcbiAgICAgICAgICAgICAgICBjbGlja1N1YnNjcmlwdGlvbigpO1xuICAgICAgICAgICAgICAgIGtleWRvd25TdWJzY3JpcHRpb24oKTtcbiAgICAgICAgICAgICAgICBmb2N1c0luU3Vic2NyaXB0aW9uKCk7XG4gICAgICAgICAgICAgICAgZm9jdXNPdXRTdWJzY3JpcHRpb24oKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBtYXRjaGVzTWVkaWEoYykge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXNwb25zaXZlU2VydmljZS5tYXRjaGVzTWVkaWEoYy5tZWRpYSk7XG4gICAgfVxuICAgIHJlc2l6ZUNoZWNrKCkge1xuICAgICAgICBpZiAod2luZG93LmlubmVyV2lkdGggIT09IHRoaXMuY2FjaGVkV2luZG93V2lkdGgpIHtcbiAgICAgICAgICAgIHRoaXMuY2FjaGVkV2luZG93V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICAgICAgICAgIGxldCBoYXNDaGFuZ2VzID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLmNvbHVtbkxpc3QuZmlsdGVySGllcmFyY2h5KGNvbHVtbiA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgbWF0Y2hlc01lZGlhID0gdGhpcy5tYXRjaGVzTWVkaWEoY29sdW1uKTtcbiAgICAgICAgICAgICAgICBpZiAoY29sdW1uLm1hdGNoZXNNZWRpYSAhPT0gbWF0Y2hlc01lZGlhKSB7XG4gICAgICAgICAgICAgICAgICAgIGhhc0NoYW5nZXMgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBjb2x1bW4ubWF0Y2hlc01lZGlhID0gbWF0Y2hlc01lZGlhO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY29sdW1uLmlzVmlzaWJsZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKGhhc0NoYW5nZXMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm5nWm9uZS5ydW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVtaXRQREZFeHBvcnRFdmVudCgpIHtcbiAgICAgICAgY29uc3QgYXJncyA9IG5ldyBQREZFeHBvcnRFdmVudCgpO1xuICAgICAgICB0aGlzLnBkZkV4cG9ydC5lbWl0KGFyZ3MpO1xuICAgICAgICBpZiAoIWFyZ3MuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcbiAgICAgICAgICAgIHRoaXMuc2F2ZUFzUERGKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3luY0hlYWRlckhlaWdodChvYnNlcnZhYmxlKSB7XG4gICAgICAgIHJldHVybiBvYnNlcnZhYmxlXG4gICAgICAgICAgICAucGlwZShmaWx0ZXIoKCkgPT4gaXNQcmVzZW50KHRoaXMubG9ja2VkSGVhZGVyKSkpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKCgpID0+IHN5bmNSb3dzSGVpZ2h0KHRoaXMubG9ja2VkSGVhZGVyLm5hdGl2ZUVsZW1lbnQuY2hpbGRyZW5bMF0sIHRoaXMuaGVhZGVyLm5hdGl2ZUVsZW1lbnQuY2hpbGRyZW5bMF0pKTtcbiAgICB9XG4gICAgY29sdW1uc0NvbnRhaW5lckNoYW5nZSgpIHtcbiAgICAgICAgdGhpcy5jb2x1bW5zQ29udGFpbmVyQ2hhbmdlU3Vic2NyaXB0aW9uID1cbiAgICAgICAgICAgIHRoaXMuc3luY0hlYWRlckhlaWdodCh0aGlzLmNvbHVtbnNDb250YWluZXIuY2hhbmdlcy5waXBlKGZpbHRlcigoKSA9PiB0aGlzLmxvY2tlZENvbHVtbnMubGVuZ3RoID4gMCksIHN3aXRjaE1hcCgoKSA9PiB0aGlzLm5nWm9uZS5vblN0YWJsZS5hc09ic2VydmFibGUoKS5waXBlKHRha2UoMSkpKSkpO1xuICAgIH1cbiAgICBoYW5kbGVDb2x1bW5SZXNpemUoKSB7XG4gICAgICAgIGNvbnN0IHJlc2l6ZXMgPSB0aGlzLmNvbHVtblJlc2l6aW5nU2VydmljZS5jaGFuZ2VzO1xuICAgICAgICB0aGlzLmNvbHVtblJlc2l6aW5nU3Vic2NyaXB0aW9uID0gcmVzaXplcy5waXBlKHRhcChlID0+IHtcbiAgICAgICAgICAgIGlmIChlLnR5cGUgPT09ICdzdGFydCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKHRoaXMud3JhcHBlci5uYXRpdmVFbGVtZW50LCAnay1ncmlkLWNvbHVtbi1yZXNpemluZycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZS50eXBlID09PSAnZW5kJykge1xuICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3ModGhpcy53cmFwcGVyLm5hdGl2ZUVsZW1lbnQsICdrLWdyaWQtY29sdW1uLXJlc2l6aW5nJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pLCBmaWx0ZXIoZSA9PiBlLnR5cGUgPT09ICdzdGFydCcpLCBzd2l0Y2hNYXAoKCkgPT4gcmVzaXplcy5waXBlKFxuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IHJ4anMtbm8tdW5zYWZlLXRha2V1bnRpbFxuICAgICAgICB0YWtlVW50aWwocmVzaXplcy5waXBlKGZpbHRlcihlID0+IGUudHlwZSA9PT0gJ3RyaWdnZXJBdXRvRml0JykpKSwgZmlsdGVyKGUgPT4gZS50eXBlID09PSAnZW5kJykpKSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUodGhpcy5ub3RpZnlSZXNpemUuYmluZCh0aGlzKSk7XG4gICAgfVxuICAgIG5vdGlmeVJlc2l6ZShlKSB7XG4gICAgICAgIGNvbnN0IGFyZ3MgPSBlLnJlc2l6ZWRDb2x1bW5zXG4gICAgICAgICAgICAuZmlsdGVyKGl0ZW0gPT4gaXNUcnV0aHkoaXRlbS5jb2x1bW4ucmVzaXphYmxlKSAmJiAhaXRlbS5jb2x1bW4uaXNDb2x1bW5Hcm91cClcbiAgICAgICAgICAgIC5tYXAoaXRlbSA9PiAoe1xuICAgICAgICAgICAgY29sdW1uOiBpdGVtLmNvbHVtbixcbiAgICAgICAgICAgIG5ld1dpZHRoOiBpdGVtLmNvbHVtbi53aWR0aCxcbiAgICAgICAgICAgIG9sZFdpZHRoOiBpdGVtLm9sZFdpZHRoXG4gICAgICAgIH0pKTtcbiAgICAgICAgdGhpcy5jb2x1bW5SZXNpemUuZW1pdChhcmdzKTtcbiAgICB9XG4gICAgYXNzZXJ0TmF2aWdhYmxlKCkge1xuICAgICAgICBpZiAoaXNEZXZNb2RlKCkgJiYgIXRoaXMubmF2aWdhYmxlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBHcmlkIHNob3VsZCBiZSBjb25maWd1cmVkIGFzIFtuYXZpZ2FibGVdPVwidHJ1ZVwiIHRvIGNvbnRyb2wgZm9jdXMnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBuYXZpZ2F0aW9uTWV0YWRhdGEoKSB7XG4gICAgICAgIGNvbnN0IGlzVmlydHVhbCA9IHRoaXMuaXNWaXJ0dWFsO1xuICAgICAgICBjb25zdCBwYWdlU2l6ZSA9IHRoaXMucGFnZVNpemU7XG4gICAgICAgIGNvbnN0IGRhdGFSb3dzID0gaXNWaXJ0dWFsID8gdGhpcy52aWV3LnRvdGFsIDogcGFnZVNpemU7XG4gICAgICAgIGNvbnN0IGFkZFJvd09mZnNldCA9IHRoaXMuZWRpdFNlcnZpY2UuaGFzTmV3SXRlbSA/IDEgOiAwO1xuICAgICAgICBjb25zdCBmaWx0ZXJSb3dPZmZzZXQgPSBoYXNGaWx0ZXJSb3codGhpcy5maWx0ZXJhYmxlKSA/IDEgOiAwO1xuICAgICAgICBjb25zdCBoZWFkZXJSb3dzID0gdGhpcy50b3RhbENvbHVtbkxldmVscyArIDEgKyBmaWx0ZXJSb3dPZmZzZXQgKyBhZGRSb3dPZmZzZXQ7XG4gICAgICAgIHJldHVybiBuZXcgTmF2aWdhdGlvbk1ldGFkYXRhKGRhdGFSb3dzLCBoZWFkZXJSb3dzLCBpc1ZpcnR1YWwsIHRoaXMuaGFzUGFnZXIsIGlzUHJlc2VudCh0aGlzLmRldGFpbFRlbXBsYXRlKSwgdGhpcy53cmFwcGVyLCB0aGlzLnZpcnR1YWxDb2x1bW5zLCB0aGlzLmNvbHVtbnNDb250YWluZXIpO1xuICAgIH1cbiAgICB1cGRhdGVOYXZpZ2F0aW9uTWV0YWRhdGEoKSB7XG4gICAgICAgIHRoaXMubmF2aWdhdGlvblNlcnZpY2UubWV0YWRhdGEgPSB0aGlzLm5hdmlnYXRpb25NZXRhZGF0YSgpO1xuICAgIH1cbiAgICBhcHBseUF1dG9TaXplKCkge1xuICAgICAgICBjb25zdCBjb2xzID0gdGhpcy5jb2x1bW5zLmZpbHRlcigoYykgPT4gdGhpcy5hdXRvU2l6ZSA/IGMuYXV0b1NpemUgIT09IGZhbHNlIDogYy5hdXRvU2l6ZSk7XG4gICAgICAgIGlmIChjb2xzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMubmdab25lLm9uU3RhYmxlLnBpcGUodGFrZSgxKSkuc3Vic2NyaWJlKF8gPT4gdGhpcy5hdXRvRml0Q29sdW1ucyhjb2xzKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25Db2x1bW5SYW5nZUNoYW5nZShyYW5nZSkge1xuICAgICAgICBjb25zdCB2aWV3cG9ydENvbHVtbnMgPSB0aGlzLnZpZXdwb3J0Q29sdW1ucyA9IFtdO1xuICAgICAgICBjb25zdCBsZWFmVmlld3BvcnRDb2x1bW5zID0gdGhpcy5jb2x1bW5zQ29udGFpbmVyXG4gICAgICAgICAgICAubm9uTG9ja2VkTGVhZkNvbHVtbnMudG9BcnJheSgpLnNsaWNlKHJhbmdlLnN0YXJ0LCByYW5nZS5lbmQgKyAxKTtcbiAgICAgICAgZm9yIChsZXQgaWR4ID0gMDsgaWR4IDwgbGVhZlZpZXdwb3J0Q29sdW1ucy5sZW5ndGg7IGlkeCsrKSB7XG4gICAgICAgICAgICBsZXQgY29sdW1uID0gbGVhZlZpZXdwb3J0Q29sdW1uc1tpZHhdO1xuICAgICAgICAgICAgd2hpbGUgKGNvbHVtbi5wYXJlbnQpIHtcbiAgICAgICAgICAgICAgICBjb2x1bW4gPSBjb2x1bW4ucGFyZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdG9BZGQgPSBbY29sdW1uXTtcbiAgICAgICAgICAgIHdoaWxlICh0b0FkZC5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBjb2x1bW4gPSB0b0FkZC5zaGlmdCgpO1xuICAgICAgICAgICAgICAgIHZpZXdwb3J0Q29sdW1ucy5wdXNoKGNvbHVtbik7XG4gICAgICAgICAgICAgICAgaWYgKGNvbHVtbi5pc0NvbHVtbkdyb3VwKSB7XG4gICAgICAgICAgICAgICAgICAgIHRvQWRkLnVuc2hpZnQuYXBwbHkodG9BZGQsIGNvbHVtbi5jaGlsZHJlbkFycmF5KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBsYXN0RnJvbUdyb3VwID0gdmlld3BvcnRDb2x1bW5zW3ZpZXdwb3J0Q29sdW1ucy5sZW5ndGggLSAxXTtcbiAgICAgICAgICAgIGNvbHVtbiA9IGxlYWZWaWV3cG9ydENvbHVtbnNbaWR4XTtcbiAgICAgICAgICAgIHdoaWxlIChjb2x1bW4gIT09IGxhc3RGcm9tR3JvdXAgJiYgaWR4IDwgbGVhZlZpZXdwb3J0Q29sdW1ucy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBpZHgrKztcbiAgICAgICAgICAgICAgICBjb2x1bW4gPSBsZWFmVmlld3BvcnRDb2x1bW5zW2lkeF07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJhbmdlLnN0YXJ0ID4gMCkge1xuICAgICAgICAgICAgY29uc3QgZmlyc3QgPSBsZWFmVmlld3BvcnRDb2x1bW5zWzBdO1xuICAgICAgICAgICAgbGV0IG9mZnNldCA9IHJhbmdlLm9mZnNldDtcbiAgICAgICAgICAgIGxldCBjdXJyZW50ID0gdmlld3BvcnRDb2x1bW5zWzBdO1xuICAgICAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgICAgIHdoaWxlIChjdXJyZW50ICE9PSBmaXJzdCkge1xuICAgICAgICAgICAgICAgIG9mZnNldCAtPSBjdXJyZW50LmlzQ29sdW1uR3JvdXAgPyAwIDogY3VycmVudC53aWR0aDtcbiAgICAgICAgICAgICAgICBpbmRleCsrO1xuICAgICAgICAgICAgICAgIGN1cnJlbnQgPSB2aWV3cG9ydENvbHVtbnNbaW5kZXhdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG9mZnNldCA+IDApIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0b3RhbExldmVscyA9IHRoaXMuY29sdW1uc0NvbnRhaW5lci50b3RhbExldmVscztcbiAgICAgICAgICAgICAgICBsZXQgcHJldmlvdXM7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaWR4ID0gMDsgaWR4IDw9IHRvdGFsTGV2ZWxzOyBpZHgrKykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBvZmZzZXRDb2x1bW4gPSBpZHggPCB0b3RhbExldmVscyA/IG5ldyBDb2x1bW5Hcm91cENvbXBvbmVudChwcmV2aW91cykgOiBuZXcgQ29sdW1uQmFzZSQxKHByZXZpb3VzKTtcbiAgICAgICAgICAgICAgICAgICAgcHJldmlvdXMgPSBvZmZzZXRDb2x1bW47XG4gICAgICAgICAgICAgICAgICAgIG9mZnNldENvbHVtbi50aXRsZSA9IFwiXFx1MDBBMFwiO1xuICAgICAgICAgICAgICAgICAgICBvZmZzZXRDb2x1bW4ud2lkdGggPSBvZmZzZXQ7XG4gICAgICAgICAgICAgICAgICAgIHZpZXdwb3J0Q29sdW1ucy51bnNoaWZ0KG9mZnNldENvbHVtbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMubGVhZlZpZXdwb3J0Q29sdW1ucyA9IHZpZXdwb3J0Q29sdW1ucy5maWx0ZXIoYyA9PiAhYy5pc0NvbHVtbkdyb3VwKTtcbiAgICB9XG4gICAgdG9nZ2xlRGV0YWlsUm93TGVnYWN5KGluZGV4LCBleHBhbmQpIHtcbiAgICAgICAgY29uc3QgaGFzQ2FsbGJhY2sgPSB0eXBlb2YgdGhpcy5pc0RldGFpbEV4cGFuZGVkID09PSAnZnVuY3Rpb24nO1xuICAgICAgICBpZiAoaXNEZXZNb2RlKCkgJiYgaGFzQ2FsbGJhY2spIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIGV4cGFuZFJvdyBhbmQgY29sbGFwc2VSb3cgbWV0aG9kcyBzaG91bGQgbm90IGJlIGNhbGxlZCB3aGVuIHVzaW5nIHRoZSAnICtcbiAgICAgICAgICAgICAgICAna2VuZG9HcmlkRGV0YWlsc0V4cGFuZEJ5IGRpcmVjdGl2ZSBvciB0aGUgaXNEZXRhaWxFeHBhbmRlZCBjYWxsYmFjay4gJyArXG4gICAgICAgICAgICAgICAgJ1RoZXNlIG1ldGhvZHMgYXJlIHByb3ZpZGVkIG9ubHkgZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IHdpdGggbGVnYWN5IHZlcnNpb25zLicpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghaXNEZXZNb2RlKCkgJiYgaGFzQ2FsbGJhY2spIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5kZXRhaWxzU2VydmljZS5pc0V4cGFuZGVkKGluZGV4LCBudWxsKSAhPT0gZXhwYW5kKSB7XG4gICAgICAgICAgICB0aGlzLmRldGFpbHNTZXJ2aWNlLnRvZ2dsZVJvdyhpbmRleCwgbnVsbCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdG9nZ2xlR3JvdXBSb3dMZWdhY3koaW5kZXgsIGV4cGFuZCkge1xuICAgICAgICBjb25zdCBoYXNDYWxsYmFjayA9IHR5cGVvZiB0aGlzLmlzR3JvdXBFeHBhbmRlZCA9PT0gJ2Z1bmN0aW9uJztcbiAgICAgICAgaWYgKGlzRGV2TW9kZSgpICYmIGhhc0NhbGxiYWNrKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBleHBhbmRHcm91cCBhbmQgY29sbGFwc2VHcm91cCBtZXRob2RzIHNob3VsZCBub3QgYmUgY2FsbGVkIHdoZW4gdXNpbmcgdGhlICcgK1xuICAgICAgICAgICAgICAgICdrZW5kb0dyaWRFeHBhbmRHcm91cEJ5IGRpcmVjdGl2ZSBvciB0aGUgaXNHcm91cEV4cGFuZGVkIGNhbGxiYWNrLiAnICtcbiAgICAgICAgICAgICAgICAnVGhlc2UgbWV0aG9kcyBhcmUgcHJvdmlkZWQgb25seSBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgd2l0aCBsZWdhY3kgdmVyc2lvbnMuJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc0Rldk1vZGUoKSAmJiBoYXNDYWxsYmFjaykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmdyb3Vwc1NlcnZpY2UuaXNFeHBhbmRlZCh7IGdyb3VwSW5kZXg6IGluZGV4IH0pICE9PSBleHBhbmQpIHtcbiAgICAgICAgICAgIHRoaXMuZ3JvdXBzU2VydmljZS50b2dnbGVSb3coeyBpbmRleCB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzaG91bGRSZXNldFNlbGVjdGlvbihzZWxlY3RhYmxlQ2hhbmdlcykge1xuICAgICAgICBjb25zdCBwcmV2aW91c1ZhbHVlID0gc2VsZWN0YWJsZUNoYW5nZXMucHJldmlvdXNWYWx1ZTtcbiAgICAgICAgaWYgKCFwcmV2aW91c1ZhbHVlKSB7XG4gICAgICAgICAgICAvLyBTZWxlY3Rpb24gd2FzIGRpc2FibGVkLCBubyBuZWVkIHRvIHJlc2V0LlxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGN1cnJlbnRWYWx1ZSA9IHNlbGVjdGFibGVDaGFuZ2VzLmN1cnJlbnRWYWx1ZTtcbiAgICAgICAgaWYgKCFjdXJyZW50VmFsdWUgfHwgY3VycmVudFZhbHVlLmVuYWJsZWQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAvLyBTZWxlY3Rpb24gZGlzYWJsZWQsIHJlc2V0LlxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHByZXZpb3VzVmFsdWUuY2VsbCAhPT0gY3VycmVudFZhbHVlLmNlbGw7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcImRhdGFcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcInBhZ2VTaXplXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJoZWlnaHRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcInJvd0hlaWdodFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiZGV0YWlsUm93SGVpZ2h0XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTnVtYmVyXSlcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcInNraXBcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzY3JvbGxhYmxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzZWxlY3RhYmxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBBcnJheSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtBcnJheV0pXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzb3J0XCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ0cmFja0J5XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0FycmF5XSlcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcImdyb3VwXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcInZpcnR1YWxDb2x1bW5zXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJhYmxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzb3J0YWJsZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwicGFnZWFibGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcImdyb3VwYWJsZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcIm5hdmlnYWJsZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtCb29sZWFuXSlcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcIm5hdmlnYXRhYmxlXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcImF1dG9TaXplXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBGdW5jdGlvbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtGdW5jdGlvbl0pXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJyb3dDbGFzc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZ1bmN0aW9uKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0Z1bmN0aW9uXSlcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcInJvd1N0aWNreVwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZ1bmN0aW9uKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0Z1bmN0aW9uXSlcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcInJvd1NlbGVjdGVkXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRnVuY3Rpb25dKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiY2VsbFNlbGVjdGVkXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcInJlc2l6YWJsZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcInJlb3JkZXJhYmxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwibG9hZGluZ1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uTWVudVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcImhpZGVIZWFkZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJDaGFuZ2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJwYWdlQ2hhbmdlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiZ3JvdXBDaGFuZ2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzb3J0Q2hhbmdlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwic2VsZWN0aW9uQ2hhbmdlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiZGF0YVN0YXRlQ2hhbmdlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiZ3JvdXBFeHBhbmRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJncm91cENvbGxhcHNlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiZGV0YWlsRXhwYW5kXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiZGV0YWlsQ29sbGFwc2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJlZGl0XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiY2FuY2VsXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwic2F2ZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcInJlbW92ZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcImFkZFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcImNlbGxDbG9zZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcImNlbGxDbGlja1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcInBkZkV4cG9ydFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcImV4Y2VsRXhwb3J0XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uUmVzaXplXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uUmVvcmRlclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcImNvbHVtblZpc2liaWxpdHlDaGFuZ2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjb2x1bW5Mb2NrZWRDaGFuZ2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjb2x1bW5TdGlja3lDaGFuZ2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzY3JvbGxCb3R0b21cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjb250ZW50U2Nyb2xsXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBDb250ZW50Q2hpbGRyZW4oQ29sdW1uQmFzZSQxKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgUXVlcnlMaXN0KVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ2F0dHIuZGlyJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiZGlyXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ2NsYXNzLmstd2lkZ2V0JyksXG4gICAgSG9zdEJpbmRpbmcoJ2NsYXNzLmstZ3JpZCcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJob3N0Q2xhc3Nlc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLWdyaWQtbG9ja2VkY29sdW1ucycpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJsb2NrZWRDbGFzc2VzXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ2NsYXNzLmstZ3JpZC12aXJ0dWFsJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcInZpcnR1YWxDbGFzc2VzXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ2NsYXNzLmstZ3JpZC1uby1zY3JvbGxiYXInKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwibm9TY3JvbGxiYXJDbGFzc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZHJlbihEZXRhaWxUZW1wbGF0ZURpcmVjdGl2ZSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFF1ZXJ5TGlzdClcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcImRldGFpbFRlbXBsYXRlQ2hpbGRyZW5cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZHJlbihDZWxsTG9hZGluZ1RlbXBsYXRlRGlyZWN0aXZlKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgUXVlcnlMaXN0KVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwibG9hZGluZ1RlbXBsYXRlQ2hpbGRyZW5cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZHJlbihOb1JlY29yZHNUZW1wbGF0ZURpcmVjdGl2ZSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFF1ZXJ5TGlzdClcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcIm5vUmVjb3Jkc1RlbXBsYXRlQ2hpbGRyZW5cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZHJlbihQYWdlclRlbXBsYXRlRGlyZWN0aXZlKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgUXVlcnlMaXN0KVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwicGFnZXJUZW1wbGF0ZUNoaWxkcmVuXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBDb250ZW50Q2hpbGRyZW4oVG9vbGJhclRlbXBsYXRlRGlyZWN0aXZlKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgUXVlcnlMaXN0KVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwidG9vbGJhclRlbXBsYXRlQ2hpbGRyZW5cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZHJlbihDb2x1bW5NZW51VGVtcGxhdGVEaXJlY3RpdmUpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBRdWVyeUxpc3QpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjb2x1bW5NZW51VGVtcGxhdGVzXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBWaWV3Q2hpbGQoJ2xvY2tlZEhlYWRlcicsIHsgc3RhdGljOiBmYWxzZSB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwibG9ja2VkSGVhZGVyXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBWaWV3Q2hpbGQoJ2hlYWRlcicsIHsgc3RhdGljOiBmYWxzZSB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiaGVhZGVyXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBWaWV3Q2hpbGRyZW4oJ2Zvb3RlcicpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBRdWVyeUxpc3QpXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmb290ZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIFZpZXdDaGlsZCgnYXJpYVJvb3QnLCB7IHN0YXRpYzogdHJ1ZSB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRWxlbWVudFJlZilcbl0sIEdyaWRDb21wb25lbnQucHJvdG90eXBlLCBcImFyaWFSb290XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBGdW5jdGlvbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtGdW5jdGlvbl0pXG5dLCBHcmlkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpc0RldGFpbEV4cGFuZGVkXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRnVuY3Rpb25dKVxuXSwgR3JpZENvbXBvbmVudC5wcm90b3R5cGUsIFwiaXNHcm91cEV4cGFuZGVkXCIsIG51bGwpO1xuR3JpZENvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgICAgIGV4cG9ydEFzOiAna2VuZG9HcmlkJyxcbiAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICBCcm93c2VyU3VwcG9ydFNlcnZpY2UsXG4gICAgICAgICAgICBMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICAgICAgQ29sdW1uSW5mb1NlcnZpY2UsXG4gICAgICAgICAgICBTZWxlY3Rpb25TZXJ2aWNlLFxuICAgICAgICAgICAgQ2VsbFNlbGVjdGlvblNlcnZpY2UsXG4gICAgICAgICAgICBEZXRhaWxzU2VydmljZSxcbiAgICAgICAgICAgIEdyb3Vwc1NlcnZpY2UsXG4gICAgICAgICAgICBHcm91cEluZm9TZXJ2aWNlLFxuICAgICAgICAgICAgQ2hhbmdlTm90aWZpY2F0aW9uU2VydmljZSxcbiAgICAgICAgICAgIEVkaXRTZXJ2aWNlLFxuICAgICAgICAgICAgUERGU2VydmljZSxcbiAgICAgICAgICAgIFN1c3BlbmRTZXJ2aWNlLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IENFTExfQ09OVEVYVCxcbiAgICAgICAgICAgICAgICB1c2VWYWx1ZTogybU1JDFcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcHJvdmlkZTogTDEwTl9QUkVGSVgsXG4gICAgICAgICAgICAgICAgdXNlVmFsdWU6ICdrZW5kby5ncmlkJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIEZpbHRlclNlcnZpY2UsXG4gICAgICAgICAgICBSZXNwb25zaXZlU2VydmljZSxcbiAgICAgICAgICAgIFBhZ2VyQ29udGV4dFNlcnZpY2UsXG4gICAgICAgICAgICBFeGNlbFNlcnZpY2UsXG4gICAgICAgICAgICBTY3JvbGxTeW5jU2VydmljZSxcbiAgICAgICAgICAgIFJlc2l6ZVNlcnZpY2UsXG4gICAgICAgICAgICBMb2NhbERhdGFDaGFuZ2VzU2VydmljZSxcbiAgICAgICAgICAgIERvbUV2ZW50c1NlcnZpY2UsXG4gICAgICAgICAgICBDb2x1bW5SZXNpemluZ1NlcnZpY2UsXG4gICAgICAgICAgICBTaW5nbGVQb3B1cFNlcnZpY2UsXG4gICAgICAgICAgICBEcmFnQW5kRHJvcFNlcnZpY2UsXG4gICAgICAgICAgICBEcmFnSGludFNlcnZpY2UsXG4gICAgICAgICAgICBEcm9wQ3VlU2VydmljZSxcbiAgICAgICAgICAgIENvbHVtblJlb3JkZXJTZXJ2aWNlLFxuICAgICAgICAgICAgTmF2aWdhdGlvblNlcnZpY2UsXG4gICAgICAgICAgICBGb2N1c1Jvb3QsXG4gICAgICAgICAgICBJZFNlcnZpY2UsXG4gICAgICAgICAgICBTY3JvbGxSZXF1ZXN0U2VydmljZSxcbiAgICAgICAgICAgIFNvcnRTZXJ2aWNlXG4gICAgICAgIF0sXG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZ3JpZCcsXG4gICAgICAgIHN0eWxlczogW1xuICAgICAgICAgICAgLy8gU3R5bGVzIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSB3aXRoIGtlbmRvLXRoZW1lLWRlZmF1bHRAdjIuNDYuMCBhbmQgZWFybGllci5cbiAgICAgICAgICAgIGAgICAuay1ncmlkIC5rLWdyaWQtYXJpYS1yb290IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgZmxleDogMSAxIGF1dG87XG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB9XG5cbiAgICAgICAgLmstZ3JpZCAuay1maWx0ZXItcm93IHRkIHtcbiAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgIH1gXG4gICAgICAgIF0sXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxuZy1jb250YWluZXIga2VuZG9HcmlkTG9jYWxpemVkTWVzc2FnZXNcbiAgICAgICAgICAgIGkxOG4tZ3JvdXBQYW5lbEVtcHR5PVwia2VuZG8uZ3JpZC5ncm91cFBhbmVsRW1wdHl8VGhlIGxhYmVsIHZpc2libGUgaW4gdGhlIEdyaWQgZ3JvdXAgcGFuZWwgd2hlbiBpdCBpcyBlbXB0eVwiXG4gICAgICAgICAgICBncm91cFBhbmVsRW1wdHk9XCJEcmFnIGEgY29sdW1uIGhlYWRlciBhbmQgZHJvcCBpdCBoZXJlIHRvIGdyb3VwIGJ5IHRoYXQgY29sdW1uXCJcblxuICAgICAgICAgICAgaTE4bi1ub1JlY29yZHM9XCJrZW5kby5ncmlkLm5vUmVjb3Jkc3xUaGUgbGFiZWwgdmlzaWJsZSBpbiB0aGUgR3JpZCB3aGVuIHRoZXJlIGFyZSBubyByZWNvcmRzXCJcbiAgICAgICAgICAgIG5vUmVjb3Jkcz1cIk5vIHJlY29yZHMgYXZhaWxhYmxlLlwiXG5cbiAgICAgICAgICAgIGkxOG4tcGFnZXJMYWJlbD1cImtlbmRvLmdyaWQucGFnZXJMYWJlbHxUaGUgbGFiZWwgZm9yIHRoZSBHcmlkIHBhZ2VyXCJcbiAgICAgICAgICAgIHBhZ2VyTGFiZWw9XCJ7eyAnUGFnZSBuYXZpZ2F0aW9uLCBwYWdlIHtjdXJyZW50UGFnZX0gb2Yge3RvdGFsUGFnZXN9JyB9fVwiXG5cbiAgICAgICAgICAgIGkxOG4tcGFnZXJGaXJzdFBhZ2U9XCJrZW5kby5ncmlkLnBhZ2VyRmlyc3RQYWdlfFRoZSBsYWJlbCBmb3IgdGhlIGZpcnN0IHBhZ2UgYnV0dG9uIGluIEdyaWQgcGFnZXJcIlxuICAgICAgICAgICAgcGFnZXJGaXJzdFBhZ2U9XCJHbyB0byB0aGUgZmlyc3QgcGFnZVwiXG5cbiAgICAgICAgICAgIGkxOG4tcGFnZXJQcmV2aW91c1BhZ2U9XCJrZW5kby5ncmlkLnBhZ2VyUHJldmlvdXNQYWdlfFRoZSBsYWJlbCBmb3IgdGhlIHByZXZpb3VzIHBhZ2UgYnV0dG9uIGluIEdyaWQgcGFnZXJcIlxuICAgICAgICAgICAgcGFnZXJQcmV2aW91c1BhZ2U9XCJHbyB0byB0aGUgcHJldmlvdXMgcGFnZVwiXG5cbiAgICAgICAgICAgIGkxOG4tcGFnZXJOZXh0UGFnZT1cImtlbmRvLmdyaWQucGFnZXJOZXh0UGFnZXxUaGUgbGFiZWwgZm9yIHRoZSBuZXh0IHBhZ2UgYnV0dG9uIGluIEdyaWQgcGFnZXJcIlxuICAgICAgICAgICAgcGFnZXJOZXh0UGFnZT1cIkdvIHRvIHRoZSBuZXh0IHBhZ2VcIlxuXG4gICAgICAgICAgICBpMThuLXBhZ2VyTGFzdFBhZ2U9XCJrZW5kby5ncmlkLnBhZ2VyTGFzdFBhZ2V8VGhlIGxhYmVsIGZvciB0aGUgbGFzdCBwYWdlIGJ1dHRvbiBpbiBHcmlkIHBhZ2VyXCJcbiAgICAgICAgICAgIHBhZ2VyTGFzdFBhZ2U9XCJHbyB0byB0aGUgbGFzdCBwYWdlXCJcblxuICAgICAgICAgICAgaTE4bi1wYWdlclBhZ2U9XCJrZW5kby5ncmlkLnBhZ2VyUGFnZXxUaGUgbGFiZWwgYmVmb3JlIHRoZSBjdXJyZW50IHBhZ2UgbnVtYmVyIGluIHRoZSBHcmlkIHBhZ2VyXCJcbiAgICAgICAgICAgIHBhZ2VyUGFnZT1cIlBhZ2VcIlxuXG4gICAgICAgICAgICBpMThuLXBhZ2VyT2Y9XCJrZW5kby5ncmlkLnBhZ2VyT2Z8VGhlIGxhYmVsIGJlZm9yZSB0aGUgdG90YWwgcGFnZXMgbnVtYmVyIGluIHRoZSBHcmlkIHBhZ2VyXCJcbiAgICAgICAgICAgIHBhZ2VyT2Y9XCJvZlwiXG5cbiAgICAgICAgICAgIGkxOG4tcGFnZXJJdGVtcz1cImtlbmRvLmdyaWQucGFnZXJJdGVtc3xUaGUgbGFiZWwgYWZ0ZXIgdGhlIHRvdGFsIHBhZ2VzIG51bWJlciBpbiB0aGUgR3JpZCBwYWdlclwiXG4gICAgICAgICAgICBwYWdlckl0ZW1zPVwiaXRlbXNcIlxuXG4gICAgICAgICAgICBpMThuLXBhZ2VyUGFnZU51bWJlcklucHV0VGl0bGU9XCJrZW5kby5ncmlkLnBhZ2VyUGFnZU51bWJlcklucHV0VGl0bGV8VGhlIGxhYmVsIGZvciB0aGUgcGFnZXIgaW5wdXQgaW4gdGhlIEdyaWQgcGFnZXJcIlxuICAgICAgICAgICAgcGFnZXJQYWdlTnVtYmVySW5wdXRUaXRsZT1cIlBhZ2UgTnVtYmVyXCJcblxuICAgICAgICAgICAgaTE4bi1wYWdlckl0ZW1zUGVyUGFnZT1cImtlbmRvLmdyaWQucGFnZXJJdGVtc1BlclBhZ2V8VGhlIGxhYmVsIGZvciB0aGUgcGFnZSBzaXplIGNob29zZXIgaW4gdGhlIEdyaWQgcGFnZXJcIlxuICAgICAgICAgICAgcGFnZXJJdGVtc1BlclBhZ2U9XCJpdGVtcyBwZXIgcGFnZVwiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVyPVwia2VuZG8uZ3JpZC5maWx0ZXJ8VGhlIGxhYmVsIG9mIHRoZSBmaWx0ZXIgY2VsbCBvciBpY29uXCJcbiAgICAgICAgICAgIGZpbHRlcj1cIkZpbHRlclwiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVySW5wdXRMYWJlbD1cImtlbmRvLmdyaWQuZmlsdGVySW5wdXRMYWJlbHxUaGUgbGFiZWwgb2YgdGhlIGZpbHRlciByb3cgYW5kIG1lbnUgaW5wdXRzXCJcbiAgICAgICAgICAgIGZpbHRlcklucHV0TGFiZWw9XCJ7eyAne2NvbHVtbk5hbWV9IEZpbHRlcicgfX1cIlxuXG4gICAgICAgICAgICBpMThuLWZpbHRlck1lbnVUaXRsZT1cImtlbmRvLmdyaWQuZmlsdGVyTWVudVRpdGxlfFRoZSB0aXRsZSBvZiB0aGUgZmlsdGVyIG1lbnUgaWNvblwiXG4gICAgICAgICAgICBmaWx0ZXJNZW51VGl0bGU9XCJ7eyAne2NvbHVtbk5hbWV9IEZpbHRlciBNZW51JyB9fVwiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVyTWVudU9wZXJhdG9yc0Ryb3BEb3duTGFiZWw9XCJrZW5kby5ncmlkLmZpbHRlck1lbnVPcGVyYXRvcnNEcm9wRG93bkxhYmVsfFRoZSBsYWJlbCBvZiB0aGUgZmlsdGVyIG1lbnUgb3BlcmF0b3JzIGRyb3Bkb3duXCJcbiAgICAgICAgICAgIGZpbHRlck1lbnVPcGVyYXRvcnNEcm9wRG93bkxhYmVsPVwie3sgJ3tjb2x1bW5OYW1lfSBGaWx0ZXIgT3BlcmF0b3JzJyB9fVwiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVyTWVudUxvZ2ljRHJvcERvd25MYWJlbD1cImtlbmRvLmdyaWQuZmlsdGVyTWVudUxvZ2ljRHJvcERvd25MYWJlbHxUaGUgbGFiZWwgb2YgdGhlIGZpbHRlciBtZW51IGxvZ2ljIGRyb3Bkb3duXCJcbiAgICAgICAgICAgIGZpbHRlck1lbnVMb2dpY0Ryb3BEb3duTGFiZWw9XCJ7eyAne2NvbHVtbk5hbWV9IEZpbHRlciBMb2dpYycgfX1cIlxuXG4gICAgICAgICAgICBpMThuLWZpbHRlckVxT3BlcmF0b3I9XCJrZW5kby5ncmlkLmZpbHRlckVxT3BlcmF0b3J8VGhlIHRleHQgb2YgdGhlIGVxdWFsIGZpbHRlciBvcGVyYXRvclwiXG4gICAgICAgICAgICBmaWx0ZXJFcU9wZXJhdG9yPVwiSXMgZXF1YWwgdG9cIlxuXG4gICAgICAgICAgICBpMThuLWZpbHRlck5vdEVxT3BlcmF0b3I9XCJrZW5kby5ncmlkLmZpbHRlck5vdEVxT3BlcmF0b3J8VGhlIHRleHQgb2YgdGhlIG5vdCBlcXVhbCBmaWx0ZXIgb3BlcmF0b3JcIlxuICAgICAgICAgICAgZmlsdGVyTm90RXFPcGVyYXRvcj1cIklzIG5vdCBlcXVhbCB0b1wiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVySXNOdWxsT3BlcmF0b3I9XCJrZW5kby5ncmlkLmZpbHRlcklzTnVsbE9wZXJhdG9yfFRoZSB0ZXh0IG9mIHRoZSBpcyBudWxsIGZpbHRlciBvcGVyYXRvclwiXG4gICAgICAgICAgICBmaWx0ZXJJc051bGxPcGVyYXRvcj1cIklzIG51bGxcIlxuXG4gICAgICAgICAgICBpMThuLWZpbHRlcklzTm90TnVsbE9wZXJhdG9yPVwia2VuZG8uZ3JpZC5maWx0ZXJJc05vdE51bGxPcGVyYXRvcnxUaGUgdGV4dCBvZiB0aGUgaXMgbm90IG51bGwgZmlsdGVyIG9wZXJhdG9yXCJcbiAgICAgICAgICAgIGZpbHRlcklzTm90TnVsbE9wZXJhdG9yPVwiSXMgbm90IG51bGxcIlxuXG4gICAgICAgICAgICBpMThuLWZpbHRlcklzRW1wdHlPcGVyYXRvcj1cImtlbmRvLmdyaWQuZmlsdGVySXNFbXB0eU9wZXJhdG9yfFRoZSB0ZXh0IG9mIHRoZSBpcyBlbXB0eSBmaWx0ZXIgb3BlcmF0b3JcIlxuICAgICAgICAgICAgZmlsdGVySXNFbXB0eU9wZXJhdG9yPVwiSXMgZW1wdHlcIlxuXG4gICAgICAgICAgICBpMThuLWZpbHRlcklzTm90RW1wdHlPcGVyYXRvcj1cImtlbmRvLmdyaWQuZmlsdGVySXNOb3RFbXB0eU9wZXJhdG9yfFRoZSB0ZXh0IG9mIHRoZSBpcyBub3QgZW1wdHkgZmlsdGVyIG9wZXJhdG9yXCJcbiAgICAgICAgICAgIGZpbHRlcklzTm90RW1wdHlPcGVyYXRvcj1cIklzIG5vdCBlbXB0eVwiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVyU3RhcnRzV2l0aE9wZXJhdG9yPVwia2VuZG8uZ3JpZC5maWx0ZXJTdGFydHNXaXRoT3BlcmF0b3J8VGhlIHRleHQgb2YgdGhlIHN0YXJ0cyB3aXRoIGZpbHRlciBvcGVyYXRvclwiXG4gICAgICAgICAgICBmaWx0ZXJTdGFydHNXaXRoT3BlcmF0b3I9XCJTdGFydHMgd2l0aFwiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVyQ29udGFpbnNPcGVyYXRvcj1cImtlbmRvLmdyaWQuZmlsdGVyQ29udGFpbnNPcGVyYXRvcnxUaGUgdGV4dCBvZiB0aGUgY29udGFpbnMgZmlsdGVyIG9wZXJhdG9yXCJcbiAgICAgICAgICAgIGZpbHRlckNvbnRhaW5zT3BlcmF0b3I9XCJDb250YWluc1wiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVyTm90Q29udGFpbnNPcGVyYXRvcj1cImtlbmRvLmdyaWQuZmlsdGVyTm90Q29udGFpbnNPcGVyYXRvcnxUaGUgdGV4dCBvZiB0aGUgZG9lcyBub3QgY29udGFpbiBmaWx0ZXIgb3BlcmF0b3JcIlxuICAgICAgICAgICAgZmlsdGVyTm90Q29udGFpbnNPcGVyYXRvcj1cIkRvZXMgbm90IGNvbnRhaW5cIlxuXG4gICAgICAgICAgICBpMThuLWZpbHRlckVuZHNXaXRoT3BlcmF0b3I9XCJrZW5kby5ncmlkLmZpbHRlckVuZHNXaXRoT3BlcmF0b3J8VGhlIHRleHQgb2YgdGhlIGVuZHMgd2l0aCBmaWx0ZXIgb3BlcmF0b3JcIlxuICAgICAgICAgICAgZmlsdGVyRW5kc1dpdGhPcGVyYXRvcj1cIkVuZHMgd2l0aFwiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVyR3RlT3BlcmF0b3I9XCJrZW5kby5ncmlkLmZpbHRlckd0ZU9wZXJhdG9yfFRoZSB0ZXh0IG9mIHRoZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgZmlsdGVyIG9wZXJhdG9yXCJcbiAgICAgICAgICAgIGZpbHRlckd0ZU9wZXJhdG9yPVwiSXMgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvXCJcblxuICAgICAgICAgICAgaTE4bi1maWx0ZXJHdE9wZXJhdG9yPVwia2VuZG8uZ3JpZC5maWx0ZXJHdE9wZXJhdG9yfFRoZSB0ZXh0IG9mIHRoZSBncmVhdGVyIHRoYW4gZmlsdGVyIG9wZXJhdG9yXCJcbiAgICAgICAgICAgIGZpbHRlckd0T3BlcmF0b3I9XCJJcyBncmVhdGVyIHRoYW5cIlxuXG4gICAgICAgICAgICBpMThuLWZpbHRlckx0ZU9wZXJhdG9yPVwia2VuZG8uZ3JpZC5maWx0ZXJMdGVPcGVyYXRvcnxUaGUgdGV4dCBvZiB0aGUgbGVzcyB0aGFuIG9yIGVxdWFsIGZpbHRlciBvcGVyYXRvclwiXG4gICAgICAgICAgICBmaWx0ZXJMdGVPcGVyYXRvcj1cIklzIGxlc3MgdGhhbiBvciBlcXVhbCB0b1wiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVyTHRPcGVyYXRvcj1cImtlbmRvLmdyaWQuZmlsdGVyTHRPcGVyYXRvcnxUaGUgdGV4dCBvZiB0aGUgbGVzcyB0aGFuIGZpbHRlciBvcGVyYXRvclwiXG4gICAgICAgICAgICBmaWx0ZXJMdE9wZXJhdG9yPVwiSXMgbGVzcyB0aGFuXCJcblxuICAgICAgICAgICAgaTE4bi1maWx0ZXJJc1RydWU9XCJrZW5kby5ncmlkLmZpbHRlcklzVHJ1ZXxUaGUgdGV4dCBvZiB0aGUgSXNUcnVlIGJvb2xlYW4gZmlsdGVyIG9wdGlvblwiXG4gICAgICAgICAgICBmaWx0ZXJJc1RydWU9XCJJcyBUcnVlXCJcblxuICAgICAgICAgICAgaTE4bi1maWx0ZXJJc0ZhbHNlPVwia2VuZG8uZ3JpZC5maWx0ZXJJc0ZhbHNlfFRoZSB0ZXh0IG9mIHRoZSBJc0ZhbHNlIGJvb2xlYW4gZmlsdGVyIG9wdGlvblwiXG4gICAgICAgICAgICBmaWx0ZXJJc0ZhbHNlPVwiSXMgRmFsc2VcIlxuXG4gICAgICAgICAgICBpMThuLWZpbHRlckJvb2xlYW5BbGw9XCJrZW5kby5ncmlkLmZpbHRlckJvb2xlYW5BbGx8VGhlIHRleHQgb2YgdGhlIChBbGwpIGJvb2xlYW4gZmlsdGVyIG9wdGlvblwiXG4gICAgICAgICAgICBmaWx0ZXJCb29sZWFuQWxsPVwiKEFsbClcIlxuXG4gICAgICAgICAgICBpMThuLWZpbHRlckFmdGVyT3JFcXVhbE9wZXJhdG9yPVwia2VuZG8uZ3JpZC5maWx0ZXJBZnRlck9yRXF1YWxPcGVyYXRvcnxUaGUgdGV4dCBvZiB0aGUgYWZ0ZXIgb3IgZXF1YWwgZGF0ZSBmaWx0ZXIgb3BlcmF0b3JcIlxuICAgICAgICAgICAgZmlsdGVyQWZ0ZXJPckVxdWFsT3BlcmF0b3I9XCJJcyBhZnRlciBvciBlcXVhbCB0b1wiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVyQWZ0ZXJPcGVyYXRvcj1cImtlbmRvLmdyaWQuZmlsdGVyQWZ0ZXJPcGVyYXRvcnxUaGUgdGV4dCBvZiB0aGUgYWZ0ZXIgZGF0ZSBmaWx0ZXIgb3BlcmF0b3JcIlxuICAgICAgICAgICAgZmlsdGVyQWZ0ZXJPcGVyYXRvcj1cIklzIGFmdGVyXCJcblxuICAgICAgICAgICAgaTE4bi1maWx0ZXJCZWZvcmVPcGVyYXRvcj1cImtlbmRvLmdyaWQuZmlsdGVyQmVmb3JlT3BlcmF0b3J8VGhlIHRleHQgb2YgdGhlIGJlZm9yZSBkYXRlIGZpbHRlciBvcGVyYXRvclwiXG4gICAgICAgICAgICBmaWx0ZXJCZWZvcmVPcGVyYXRvcj1cIklzIGJlZm9yZVwiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVyQmVmb3JlT3JFcXVhbE9wZXJhdG9yPVwia2VuZG8uZ3JpZC5maWx0ZXJCZWZvcmVPckVxdWFsT3BlcmF0b3J8VGhlIHRleHQgb2YgdGhlIGJlZm9yZSBvciBlcXVhbCBkYXRlIGZpbHRlciBvcGVyYXRvclwiXG4gICAgICAgICAgICBmaWx0ZXJCZWZvcmVPckVxdWFsT3BlcmF0b3I9XCJJcyBiZWZvcmUgb3IgZXF1YWwgdG9cIlxuXG4gICAgICAgICAgICBpMThuLWZpbHRlckZpbHRlckJ1dHRvbj1cImtlbmRvLmdyaWQuZmlsdGVyRmlsdGVyQnV0dG9ufFRoZSB0ZXh0IG9mIHRoZSBmaWx0ZXIgYnV0dG9uXCJcbiAgICAgICAgICAgIGZpbHRlckZpbHRlckJ1dHRvbj1cIkZpbHRlclwiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVyQ2xlYXJCdXR0b249XCJrZW5kby5ncmlkLmZpbHRlckNsZWFyQnV0dG9ufFRoZSB0ZXh0IG9mIHRoZSBjbGVhciBmaWx0ZXIgYnV0dG9uXCJcbiAgICAgICAgICAgIGZpbHRlckNsZWFyQnV0dG9uPVwiQ2xlYXJcIlxuXG4gICAgICAgICAgICBpMThuLWZpbHRlckFuZExvZ2ljPVwia2VuZG8uZ3JpZC5maWx0ZXJBbmRMb2dpY3xUaGUgdGV4dCBvZiB0aGUgQW5kIGZpbHRlciBsb2dpY1wiXG4gICAgICAgICAgICBmaWx0ZXJBbmRMb2dpYz1cIkFuZFwiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVyT3JMb2dpYz1cImtlbmRvLmdyaWQuZmlsdGVyT3JMb2dpY3xUaGUgdGV4dCBvZiB0aGUgT3IgZmlsdGVyIGxvZ2ljXCJcbiAgICAgICAgICAgIGZpbHRlck9yTG9naWM9XCJPclwiXG5cbiAgICAgICAgICAgIGkxOG4tbG9hZGluZz1cImtlbmRvLmdyaWQubG9hZGluZ3xUaGUgbG9hZGluZyB0ZXh0XCJcbiAgICAgICAgICAgIGxvYWRpbmc9XCJMb2FkaW5nXCJcblxuICAgICAgICAgICAgaTE4bi1ncmlkTGFiZWw9XCJrZW5kby5ncmlkLmdyaWRMYWJlbHxUaGUgR3JpZCBhcmlhLWxhYmVsXCJcbiAgICAgICAgICAgIGdyaWRMYWJlbD1cIkRhdGEgdGFibGVcIlxuXG4gICAgICAgICAgICBpMThuLWNvbHVtbk1lbnU9XCJrZW5kby5ncmlkLmNvbHVtbk1lbnV8VGhlIHRpdGxlIG9mIHRoZSBjb2x1bW4gbWVudSBpY29uXCJcbiAgICAgICAgICAgIGNvbHVtbk1lbnU9XCJ7eyAne2NvbHVtbk5hbWV9IENvbHVtbiBNZW51JyB9fVwiXG5cbiAgICAgICAgICAgIGkxOG4tY29sdW1ucz1cImtlbmRvLmdyaWQuY29sdW1uc3xUaGUgdGV4dCBzaG93biBpbiB0aGUgY29sdW1uIG1lbnUgZm9yIHRoZSBjb2x1bW5zIGl0ZW1cIlxuICAgICAgICAgICAgY29sdW1ucz1cIkNvbHVtbnNcIlxuXG4gICAgICAgICAgICBpMThuLWxvY2s9XCJrZW5kby5ncmlkLmxvY2t8VGhlIHRleHQgc2hvd24gaW4gdGhlIGNvbHVtbiBtZW51IGZvciB0aGUgbG9jayBpdGVtXCJcbiAgICAgICAgICAgIGxvY2s9XCJMb2NrXCJcblxuICAgICAgICAgICAgaTE4bi11bmxvY2s9XCJrZW5kby5ncmlkLnVubG9ja3xUaGUgdGV4dCBzaG93biBpbiB0aGUgY29sdW1uIG1lbnUgZm9yIHRoZSB1bmxvY2sgaXRlbVwiXG4gICAgICAgICAgICB1bmxvY2s9XCJVbmxvY2tcIlxuXG4gICAgICAgICAgICBpMThuLXNldENvbHVtblBvc2l0aW9uPVwia2VuZG8uZ3JpZC5zZXRDb2x1bW5Qb3NpdGlvbnxUaGUgdGV4dCBzaG93biBpbiB0aGUgY29sdW1uIG1lbnUgZm9yIHRoZSBzZXQgY29sdW1uIHBvc2l0aW9uIGl0ZW1cIlxuICAgICAgICAgICAgc2V0Q29sdW1uUG9zaXRpb249XCJTZXQgQ29sdW1uIFBvc2l0aW9uXCJcblxuICAgICAgICAgICAgaTE4bi1zdGljaz1cImtlbmRvLmdyaWQuc3RpY2t8VGhlIHRleHQgc2hvd24gaW4gdGhlIGNvbHVtbiBtZW51IGZvciB0aGUgc3RpY2sgaXRlbVwiXG4gICAgICAgICAgICBzdGljaz1cIlN0aWNrXCJcblxuICAgICAgICAgICAgaTE4bi11bnN0aWNrPVwia2VuZG8uZ3JpZC51bnN0aWNrfFRoZSB0ZXh0IHNob3duIGluIHRoZSBjb2x1bW4gbWVudSBmb3IgdGhlIHVuc3RpY2sgaXRlbVwiXG4gICAgICAgICAgICB1bnN0aWNrPVwiVW5zdGlja1wiXG5cbiAgICAgICAgICAgIGkxOG4tc29ydGFibGU9XCJrZW5kby5ncmlkLnNvcnRhYmxlfFRoZSBsYWJlbCBvZiB0aGUgc29ydCBpY29uXCJcbiAgICAgICAgICAgIHNvcnRhYmxlPVwiU29ydGFibGVcIlxuXG4gICAgICAgICAgICBpMThuLXNvcnRBc2NlbmRpbmc9XCJrZW5kby5ncmlkLnNvcnRBc2NlbmRpbmd8VGhlIHRleHQgc2hvd24gaW4gdGhlIGNvbHVtbiBtZW51IGZvciB0aGUgc29ydCBhc2NlbmRpbmcgaXRlbVwiXG4gICAgICAgICAgICBzb3J0QXNjZW5kaW5nPVwiU29ydCBBc2NlbmRpbmdcIlxuXG4gICAgICAgICAgICBpMThuLXNvcnREZXNjZW5kaW5nPVwia2VuZG8uZ3JpZC5zb3J0RGVzY2VuZGluZ3xUaGUgdGV4dCBzaG93biBpbiB0aGUgY29sdW1uIG1lbnUgZm9yIHRoZSBzb3J0IGRlc2NlbmRpbmcgaXRlbVwiXG4gICAgICAgICAgICBzb3J0RGVzY2VuZGluZz1cIlNvcnQgRGVzY2VuZGluZ1wiXG5cbiAgICAgICAgICAgIGkxOG4tc29ydGVkQXNjZW5kaW5nPVwia2VuZG8uZ3JpZC5zb3J0ZWRBc2NlbmRpbmd8VGhlIHN0YXR1cyBhbm5vdW5jZW1lbnQgd2hlbiBhIGNvbHVtbiBpcyBzb3J0ZWQgYXNjZW5kaW5nXCJcbiAgICAgICAgICAgIHNvcnRlZEFzY2VuZGluZz1cIlNvcnRlZCBBc2NlbmRpbmdcIlxuXG4gICAgICAgICAgICBpMThuLXNvcnRlZERlc2NlbmRpbmc9XCJrZW5kby5ncmlkLnNvcnRlZERlc2NlbmRpbmd8VGhlIHN0YXR1cyBhbm5vdW5jZW1lbnQgd2hlbiBhIGNvbHVtbiBpcyBzb3J0ZWQgZGVzY2VuZGluZ1wiXG4gICAgICAgICAgICBzb3J0ZWREZXNjZW5kaW5nPVwiU29ydGVkIERlc2NlbmRpbmdcIlxuXG4gICAgICAgICAgICBpMThuLXNvcnRlZERlZmF1bHQ9XCJrZW5kby5ncmlkLnNvcnRlZERlZmF1bHR8VGhlIHN0YXR1cyBhbm5vdW5jZW1lbnQgd2hlbiBhIGNvbHVtbiBpcyBubyBsb25nZXIgc29ydGVkXCJcbiAgICAgICAgICAgIHNvcnRlZERlZmF1bHQ9XCJOb3QgU29ydGVkXCJcblxuICAgICAgICAgICAgaTE4bi1jb2x1bW5zQXBwbHk9XCJrZW5kby5ncmlkLmNvbHVtbnNBcHBseXxUaGUgdGV4dCBzaG93biBpbiB0aGUgY29sdW1uIG1lbnUgb3IgY29sdW1uIGNob29zZXIgZm9yIHRoZSBjb2x1bW5zIGFwcGx5IGJ1dHRvblwiXG4gICAgICAgICAgICBjb2x1bW5zQXBwbHk9XCJBcHBseVwiXG5cbiAgICAgICAgICAgIGkxOG4tY29sdW1uc1Jlc2V0PVwia2VuZG8uZ3JpZC5jb2x1bW5zUmVzZXR8VGhlIHRleHQgc2hvd24gaW4gdGhlIGNvbHVtbiBtZW51IG9yIGNvbHVtbiBjaG9vc2VyIGZvciB0aGUgY29sdW1ucyByZXNldCBidXR0b25cIlxuICAgICAgICAgICAgY29sdW1uc1Jlc2V0PVwiUmVzZXRcIlxuXG4gICAgICAgICAgICBpMThuLWRldGFpbEV4cGFuZD1cImtlbmRvLmdyaWQuZGV0YWlsRXhwYW5kfFRoZSB0aXRsZSBvZiB0aGUgZXhwYW5kIGljb24gb2YgZGV0YWlsIHJvd3MuXCJcbiAgICAgICAgICAgIGRldGFpbEV4cGFuZD1cIkV4cGFuZCBEZXRhaWxzXCJcblxuICAgICAgICAgICAgaTE4bi1kZXRhaWxDb2xsYXBzZT1cImtlbmRvLmdyaWQuZGV0YWlsQ29sbGFwc2V8VGhlIHRpdGxlIG9mIHRoZSBjb2xsYXBzZSBpY29uIG9mIGRldGFpbCByb3dzLlwiXG4gICAgICAgICAgICBkZXRhaWxDb2xsYXBzZT1cIkNvbGxhcHNlIERldGFpbHNcIlxuXG4gICAgICAgICAgICBpMThuLWZpbHRlckRhdGVUb2RheT1cImtlbmRvLmdyaWQuZmlsdGVyRGF0ZVRvZGF5fFRoZSB0ZXh0IG9mIHRoZSBUb2RheSBidXR0b24gb2YgdGhlIERhdGUgZmlsdGVyLlwiXG4gICAgICAgICAgICBmaWx0ZXJEYXRlVG9kYXk9XCJUT0RBWVwiXG5cbiAgICAgICAgICAgIGkxOG4tZmlsdGVyRGF0ZVRvZ2dsZT1cImtlbmRvLmdyaWQuZmlsdGVyRGF0ZVRvZ2dsZXxUaGUgdGl0bGUgb2YgdGhlIFRvZ2dsZSBidXR0b24gb2YgdGhlIERhdGUgZmlsdGVyLlwiXG4gICAgICAgICAgICBmaWx0ZXJEYXRlVG9nZ2xlPVwiVG9nZ2xlIENhbGVuZGFyXCJcblxuICAgICAgICAgICAgaTE4bi1maWx0ZXJOdW1lcmljRGVjcmVtZW50PVwia2VuZG8uZ3JpZC5maWx0ZXJOdW1lcmljRGVjcmVtZW50fFRoZSB0aXRsZSBvZiB0aGUgRGVjcmVtZW50IGJ1dHRvbiBvZiB0aGUgTnVtZXJpYyBmaWx0ZXIuXCJcbiAgICAgICAgICAgIGZpbHRlck51bWVyaWNEZWNyZW1lbnQ9XCJEZWNyZW1lbnRcIlxuXG4gICAgICAgICAgICBpMThuLWZpbHRlck51bWVyaWNJbmNyZW1lbnQ9XCJrZW5kby5ncmlkLmZpbHRlck51bWVyaWNJbmNyZW1lbnR8VGhlIHRpdGxlIG9mIHRoZSBJbmNyZW1lbnQgYnV0dG9uIG9mIHRoZSBOdW1lcmljIGZpbHRlci5cIlxuICAgICAgICAgICAgZmlsdGVyTnVtZXJpY0luY3JlbWVudD1cIkluY3JlbWVudFwiXG5cbiAgICAgICAgICAgIGkxOG4tc2VsZWN0aW9uQ2hlY2tib3hMYWJlbD1cImtlbmRvLmdyaWQuc2VsZWN0aW9uQ2hlY2tib3hMYWJlbHxUaGUgbGFiZWxzIG9mIHRoZSBjaGVja2JveCBjb2x1bW4gY2hlY2tib3hlcy5cIlxuICAgICAgICAgICAgc2VsZWN0aW9uQ2hlY2tib3hMYWJlbD1cIlNlbGVjdCBSb3dcIlxuXG4gICAgICAgICAgICBpMThuLXNlbGVjdEFsbENoZWNrYm94TGFiZWw9XCJrZW5kby5ncmlkLnNlbGVjdEFsbENoZWNrYm94TGFiZWx8VGhlIGxhYmVsIG9mIHRoZSBjaGVja2JveCBjb2x1bW4gc2VsZWN0IGFsbCBjaGVja2JveC5cIlxuICAgICAgICAgICAgc2VsZWN0QWxsQ2hlY2tib3hMYWJlbD1cIlNlbGVjdCBBbGwgUm93c1wiXG4gICAgICAgID5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICAgIDxrZW5kby1ncmlkLXRvb2xiYXIgY2xhc3M9XCJrLXRvb2xiYXIgay1ncmlkLXRvb2xiYXJcIiAqbmdJZj1cInNob3dUb3BUb29sYmFyXCIgcG9zaXRpb249XCJ0b3BcIj48L2tlbmRvLWdyaWQtdG9vbGJhcj5cbiAgICAgICAgPGtlbmRvLXBhZ2VyXG4gICAgICAgICAgICAqbmdJZj1cInNob3dUb3BQYWdlclwiXG4gICAgICAgICAgICBbdGFiaW5kZXhdPVwibmF2aWdhYmxlID8gJzAnIDogJy0xJ1wiXG4gICAgICAgICAgICBbYXR0ci5yb2xlXT1cIm5hdmlnYWJsZSA/ICduYXZpZ2F0aW9uJyA6IHVuZGVmaW5lZFwiXG4gICAgICAgICAgICBjbGFzcz1cImstZ3JpZC1wYWdlci10b3BcIlxuICAgICAgICAgICAgW3RlbXBsYXRlXT1cInBhZ2VyVGVtcGxhdGVcIlxuICAgICAgICAgICAgW3BhZ2VTaXplXT1cInBhZ2VTaXplXCJcbiAgICAgICAgICAgIFt0b3RhbF09XCJ2aWV3LnRvdGFsXCJcbiAgICAgICAgICAgIFtza2lwXT1cInNraXBcIlxuICAgICAgICAgICAgW29wdGlvbnNdPVwicGFnZWFibGVcIlxuICAgICAgICAgICAgKHBhZ2VDaGFuZ2UpPVwibm90aWZ5UGFnZUNoYW5nZSgncGFnZXInLCAkZXZlbnQpXCI+XG4gICAgICAgIDwva2VuZG8tcGFnZXI+XG4gICAgICAgIDxrZW5kby1ncmlkLWdyb3VwLXBhbmVsXG4gICAgICAgICAgICAqbmdJZj1cInNob3dHcm91cFBhbmVsXCJcbiAgICAgICAgICAgIFt0ZXh0XT1cImdyb3VwYWJsZUVtcHR5VGV4dFwiXG4gICAgICAgICAgICBbZ3JvdXBzXT1cImdyb3VwXCJcbiAgICAgICAgICAgIChjaGFuZ2UpPVwiZ3JvdXBDaGFuZ2UuZW1pdCgkZXZlbnQpXCI+XG4gICAgICAgIDwva2VuZG8tZ3JpZC1ncm91cC1wYW5lbD5cbiAgICAgICAgPGRpdiAjYXJpYVJvb3RcbiAgICAgICAgICAgIGNsYXNzPVwiay1ncmlkLWFyaWEtcm9vdFwiXG4gICAgICAgICAgICByb2xlPVwiZ3JpZFwiXG4gICAgICAgICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cImFyaWFMYWJlbFwiXG4gICAgICAgICAgICBbYXR0ci5hcmlhLXJvd2NvdW50XT1cImFyaWFSb3dDb3VudFwiXG4gICAgICAgICAgICBbYXR0ci5hcmlhLWNvbGNvdW50XT1cImFyaWFDb2xDb3VudFwiPlxuICAgICAgICA8bmctdGVtcGxhdGUgW25nSWZdPVwiaXNTY3JvbGxhYmxlXCI+XG4gICAgICAgICAgICA8ZGl2ICpuZ0lmPVwiIWhpZGVIZWFkZXJcIlxuICAgICAgICAgICAgICAgIGNsYXNzPVwiay1ncmlkLWhlYWRlclwiXG4gICAgICAgICAgICAgICAgcm9sZT1cInByZXNlbnRhdGlvblwiXG4gICAgICAgICAgICAgICAgW3N0eWxlLnBhZGRpbmddPVwiaGVhZGVyUGFkZGluZ1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJpc0xvY2tlZFwiXG4gICAgICAgICAgICAgICAgICAgICAjbG9ja2VkSGVhZGVyXG4gICAgICAgICAgICAgICAgICAgICByb2xlPVwicHJlc2VudGF0aW9uXCJcbiAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiay1ncmlkLWhlYWRlci1sb2NrZWRcIlxuICAgICAgICAgICAgICAgICAgICAgW3N0eWxlLndpZHRoLnB4XT1cImxvY2tlZFdpZHRoXCI+XG4gICAgICAgICAgICAgICAgICAgIDx0YWJsZSBbbG9ja2VkXT1cInRydWVcIiByb2xlPVwicHJlc2VudGF0aW9uXCIgW3N0eWxlLndpZHRoLnB4XT1cImxvY2tlZFdpZHRoXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXAga2VuZG9HcmlkQ29sR3JvdXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb2xlPVwicHJlc2VudGF0aW9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbY29sdW1uc109XCJsb2NrZWRMZWFmQ29sdW1uc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2dyb3Vwc109XCJncm91cFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2RldGFpbFRlbXBsYXRlXT1cImRldGFpbFRlbXBsYXRlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2NvbGdyb3VwPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoZWFkIGtlbmRvR3JpZEhlYWRlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtyZXNpemFibGVdPVwicmVzaXphYmxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbc2Nyb2xsYWJsZV09XCJ0cnVlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbY29sdW1uc109XCJsb2NrZWRDb2x1bW5zXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbdG90YWxDb2x1bW5MZXZlbHNdPVwidG90YWxDb2x1bW5MZXZlbHNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtzb3J0XT1cInNvcnRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtncm91cHNdPVwiZ3JvdXBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtmaWx0ZXJdPVwiZmlsdGVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZmlsdGVyYWJsZV09XCJmaWx0ZXJhYmxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZ3JvdXBhYmxlXT1cInNob3dHcm91cFBhbmVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbcmVvcmRlcmFibGVdPVwicmVvcmRlcmFibGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtzb3J0YWJsZV09XCJzb3J0YWJsZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2NvbHVtbk1lbnVdPVwiY29sdW1uTWVudU9wdGlvbnNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtjb2x1bW5NZW51VGVtcGxhdGVdPVwiY29sdW1uTWVudVRlbXBsYXRlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbdG90YWxDb2x1bW5zQ291bnRdPVwibGVhZkNvbHVtbnMubGVuZ3RoXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZGV0YWlsVGVtcGxhdGVdPVwiZGV0YWlsVGVtcGxhdGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFt0YWJJbmRleF09XCJuYXZpZ2FibGUgPyAnLTEnIDogJzAnXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPlxuICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgI2hlYWRlciBjbGFzcz1cImstZ3JpZC1oZWFkZXItd3JhcFwiIHJvbGU9XCJwcmVzZW50YXRpb25cIiBkYXRhLXNjcm9sbGFibGVcbiAgICAgICAgICAgICAgICAgICAgW2tlbmRvR3JpZFJlc2l6YWJsZUNvbnRhaW5lcl09XCJsb2NrZWRMZWFmQ29sdW1ucy5sZW5ndGhcIlxuICAgICAgICAgICAgICAgICAgICBbbG9ja2VkV2lkdGhdPVwibG9ja2VkV2lkdGggKyBzY3JvbGxiYXJXaWR0aCArIDJcIj5cbiAgICAgICAgICAgICAgICAgICAgPHRhYmxlIHJvbGU9XCJwcmVzZW50YXRpb25cIiBbc3R5bGUud2lkdGgucHhdPVwibm9uTG9ja2VkV2lkdGhcIiBbdmlydHVhbENvbHVtbnNdPVwidmlydHVhbENvbHVtbnNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2xncm91cCBrZW5kb0dyaWRDb2xHcm91cFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvbGU9XCJwcmVzZW50YXRpb25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtjb2x1bW5zXT1cImhlYWRlckxlYWZDb2x1bW5zXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZ3JvdXBzXT1cImlzTG9ja2VkID8gW10gOiBncm91cFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2RldGFpbFRlbXBsYXRlXT1cImRldGFpbFRlbXBsYXRlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2NvbGdyb3VwPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoZWFkIGtlbmRvR3JpZEhlYWRlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtyZXNpemFibGVdPVwicmVzaXphYmxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb2xlPVwicHJlc2VudGF0aW9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbc2Nyb2xsYWJsZV09XCJ0cnVlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbY29sdW1uc109XCJoZWFkZXJDb2x1bW5zXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbdG90YWxDb2x1bW5MZXZlbHNdPVwidG90YWxDb2x1bW5MZXZlbHNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtzb3J0XT1cInNvcnRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtmaWx0ZXJdPVwiZmlsdGVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZmlsdGVyYWJsZV09XCJmaWx0ZXJhYmxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZ3JvdXBhYmxlXT1cInNob3dHcm91cFBhbmVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbcmVvcmRlcmFibGVdPVwicmVvcmRlcmFibGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtncm91cHNdPVwiaXNMb2NrZWQgPyBbXSA6IGdyb3VwXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbc29ydGFibGVdPVwic29ydGFibGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtjb2x1bW5NZW51XT1cImNvbHVtbk1lbnVPcHRpb25zXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbY29sdW1uTWVudVRlbXBsYXRlXT1cImNvbHVtbk1lbnVUZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2xvY2tlZENvbHVtbnNDb3VudF09XCJsb2NrZWRMZWFmQ29sdW1ucy5sZW5ndGhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFt0b3RhbENvbHVtbnNDb3VudF09XCJsZWFmQ29sdW1ucy5sZW5ndGhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtkZXRhaWxUZW1wbGF0ZV09XCJkZXRhaWxUZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW3RhYkluZGV4XT1cIm5hdmlnYWJsZSA/ICctMScgOiAnMCdcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+XG4gICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJ2aXJ0dWFsQ29sdW1uc1wiIGNsYXNzPVwiay13aWR0aC1jb250YWluZXJcIiByb2xlPVwicHJlc2VudGF0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IFtzdHlsZS53aWR0aC5weF09XCJjb2x1bW5zQ29udGFpbmVyLnVubG9ja2VkV2lkdGhcIj48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxrZW5kby1ncmlkLWxpc3RcbiAgICAgICAgICAgICAgICBbZGF0YV09XCJ2aWV3XCJcbiAgICAgICAgICAgICAgICBbcm93SGVpZ2h0XT1cInJvd0hlaWdodFwiXG4gICAgICAgICAgICAgICAgW2RldGFpbFJvd0hlaWdodF09XCJkZXRhaWxSb3dIZWlnaHRcIlxuICAgICAgICAgICAgICAgIFt0b3RhbF09XCJ0b3RhbENvdW50XCJcbiAgICAgICAgICAgICAgICBbdGFrZV09XCJwYWdlU2l6ZVwiXG4gICAgICAgICAgICAgICAgW2dyb3Vwc109XCJncm91cFwiXG4gICAgICAgICAgICAgICAgW2dyb3VwYWJsZV09XCJncm91cGFibGVcIlxuICAgICAgICAgICAgICAgIFtza2lwXT1cInNraXBcIlxuICAgICAgICAgICAgICAgIFt0cmFja0J5XT1cInRyYWNrQnlcIlxuICAgICAgICAgICAgICAgIFtjb2x1bW5zXT1cImNvbHVtbnNDb250YWluZXJcIlxuICAgICAgICAgICAgICAgIFtzZWxlY3RhYmxlXT1cInNlbGVjdGFibGVcIlxuICAgICAgICAgICAgICAgIFtmaWx0ZXJhYmxlXT1cImZpbHRlcmFibGVcIlxuICAgICAgICAgICAgICAgIFtkZXRhaWxUZW1wbGF0ZV09XCJkZXRhaWxUZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAgW25vUmVjb3Jkc1RlbXBsYXRlXT1cIm5vUmVjb3Jkc1RlbXBsYXRlXCJcbiAgICAgICAgICAgICAgICAocGFnZUNoYW5nZSk9XCJub3RpZnlQYWdlQ2hhbmdlKCdsaXN0JywgJGV2ZW50KVwiXG4gICAgICAgICAgICAgICAgW3Jvd0NsYXNzXT1cInJvd0NsYXNzXCJcbiAgICAgICAgICAgICAgICBbcm93U3RpY2t5XT1cInJvd1N0aWNreVwiXG4gICAgICAgICAgICAgICAgW2xvYWRpbmddPVwibG9hZGluZ1wiXG4gICAgICAgICAgICAgICAgW2lzVmlydHVhbF09XCJpc1ZpcnR1YWxcIlxuICAgICAgICAgICAgICAgIFtsb2FkaW5nVGVtcGxhdGVdPVwibG9hZGluZ1RlbXBsYXRlPy50ZW1wbGF0ZVJlZlwiXG4gICAgICAgICAgICAgICAgW3ZpcnR1YWxDb2x1bW5zXT1cInZpcnR1YWxDb2x1bW5zXCJcbiAgICAgICAgICAgICAgICAoc2Nyb2xsQm90dG9tKT1cIm5vdGlmeVNjcm9sbEJvdHRvbSgpXCJcbiAgICAgICAgICAgICAgICAoY29udGVudFNjcm9sbCk9XCJjb250ZW50U2Nyb2xsLmVtaXQoJGV2ZW50KVwiXG4gICAgICAgICAgICAgICAga2VuZG9EcmFnZ2FibGVcbiAgICAgICAgICAgICAgICBrZW5kb0dyaWRTZWxlY3Rpb25NYXJxdWVlXG4gICAgICAgICAgICAgICAgW2VuYWJsZURyYWddPVwibWFycXVlZVNlbGVjdGlvblwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgPC9rZW5kby1ncmlkLWxpc3Q+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgKm5nSWY9XCJzaG93Rm9vdGVyXCJcbiAgICAgICAgICAgICAgICBjbGFzcz1cImstZ3JpZC1mb290ZXJcIlxuICAgICAgICAgICAgICAgIFtzdHlsZS5wYWRkaW5nXT1cImhlYWRlclBhZGRpbmdcIj5cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICpuZ0lmPVwibG9ja2VkTGVhZkNvbHVtbnMubGVuZ3RoXCJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJrLWdyaWQtZm9vdGVyLWxvY2tlZFwiXG4gICAgICAgICAgICAgICAgICAgIFtzdHlsZS53aWR0aC5weF09XCJsb2NrZWRXaWR0aFwiPlxuICAgICAgICAgICAgICAgICAgICA8dGFibGUgcm9sZT1cInByZXNlbnRhdGlvblwiIFtsb2NrZWRdPVwidHJ1ZVwiIFtzdHlsZS53aWR0aC5weF09XCJsb2NrZWRXaWR0aFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbGdyb3VwIGtlbmRvR3JpZENvbEdyb3VwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2NvbHVtbnNdPVwibG9ja2VkTGVhZkNvbHVtbnNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtncm91cHNdPVwiZ3JvdXBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtkZXRhaWxUZW1wbGF0ZV09XCJkZXRhaWxUZW1wbGF0ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9jb2xncm91cD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0Zm9vdCBrZW5kb0dyaWRGb290ZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbc2Nyb2xsYWJsZV09XCJ0cnVlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZ3JvdXBzXT1cImdyb3VwXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbY29sdW1uc109XCJsb2NrZWRMZWFmQ29sdW1uc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2RldGFpbFRlbXBsYXRlXT1cImRldGFpbFRlbXBsYXRlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbbG9naWNhbFJvd0luZGV4XT1cImFyaWFSb3dDb3VudFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC90Zm9vdD5cbiAgICAgICAgICAgICAgICAgICAgPC90YWJsZT5cbiAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2ICNmb290ZXJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJrLWdyaWQtZm9vdGVyLXdyYXBcIiBkYXRhLXNjcm9sbGFibGVcbiAgICAgICAgICAgICAgICAgICAgW2tlbmRvR3JpZFJlc2l6YWJsZUNvbnRhaW5lcl09XCJsb2NrZWRMZWFmQ29sdW1ucy5sZW5ndGhcIlxuICAgICAgICAgICAgICAgICAgICBbbG9ja2VkV2lkdGhdPVwibG9ja2VkV2lkdGggKyBzY3JvbGxiYXJXaWR0aCArIDNcIj5cbiAgICAgICAgICAgICAgICAgICAgPHRhYmxlIHJvbGU9XCJwcmVzZW50YXRpb25cIiBbc3R5bGUud2lkdGgucHhdPVwibm9uTG9ja2VkV2lkdGhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2xncm91cCBrZW5kb0dyaWRDb2xHcm91cFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtjb2x1bW5zXT1cIm5vbkxvY2tlZExlYWZDb2x1bW5zXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZ3JvdXBzXT1cImlzTG9ja2VkID8gW10gOiBncm91cFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2RldGFpbFRlbXBsYXRlXT1cImRldGFpbFRlbXBsYXRlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2NvbGdyb3VwPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRmb290IGtlbmRvR3JpZEZvb3RlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtsb2dpY2FsUm93SW5kZXhdPVwiYXJpYVJvd0NvdW50XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbc2Nyb2xsYWJsZV09XCJ0cnVlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZ3JvdXBzXT1cImlzTG9ja2VkID8gW10gOiBncm91cFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2NvbHVtbnNdPVwibm9uTG9ja2VkTGVhZkNvbHVtbnNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtsb2NrZWRDb2x1bW5zQ291bnRdPVwibG9ja2VkTGVhZkNvbHVtbnMubGVuZ3RoXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZGV0YWlsVGVtcGxhdGVdPVwiZGV0YWlsVGVtcGxhdGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGZvb3Q+XG4gICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgPG5nLXRlbXBsYXRlIFtuZ0lmXT1cIiFpc1Njcm9sbGFibGVcIj5cbiAgICAgICAgICAgIDx0YWJsZSBbc3R5bGUudGFibGUtbGF5b3V0XT1cInJlc2l6YWJsZSA/ICdmaXhlZCcgOiBudWxsXCI+XG4gICAgICAgICAgICAgICAgPGNvbGdyb3VwIGtlbmRvR3JpZENvbEdyb3VwXG4gICAgICAgICAgICAgICAgICAgIFtjb2x1bW5zXT1cImxlYWZDb2x1bW5zXCJcbiAgICAgICAgICAgICAgICAgICAgW2dyb3Vwc109XCJncm91cFwiXG4gICAgICAgICAgICAgICAgICAgIFtkZXRhaWxUZW1wbGF0ZV09XCJkZXRhaWxUZW1wbGF0ZVwiPlxuICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XG4gICAgICAgICAgICAgICAgPHRoZWFkIGtlbmRvR3JpZEhlYWRlclxuICAgICAgICAgICAgICAgICAgICAqbmdJZj1cIiFoaWRlSGVhZGVyXCJcbiAgICAgICAgICAgICAgICAgICAgW3Jlc2l6YWJsZV09XCJyZXNpemFibGVcIlxuICAgICAgICAgICAgICAgICAgICBbc2Nyb2xsYWJsZV09XCJmYWxzZVwiXG4gICAgICAgICAgICAgICAgICAgIFtjb2x1bW5zXT1cInZpc2libGVDb2x1bW5zXCJcbiAgICAgICAgICAgICAgICAgICAgW3RvdGFsQ29sdW1uTGV2ZWxzXT1cInRvdGFsQ29sdW1uTGV2ZWxzXCJcbiAgICAgICAgICAgICAgICAgICAgW2dyb3Vwc109XCJncm91cFwiXG4gICAgICAgICAgICAgICAgICAgIFtncm91cGFibGVdPVwic2hvd0dyb3VwUGFuZWxcIlxuICAgICAgICAgICAgICAgICAgICBbcmVvcmRlcmFibGVdPVwicmVvcmRlcmFibGVcIlxuICAgICAgICAgICAgICAgICAgICBbc29ydF09XCJzb3J0XCJcbiAgICAgICAgICAgICAgICAgICAgW3NvcnRhYmxlXT1cInNvcnRhYmxlXCJcbiAgICAgICAgICAgICAgICAgICAgW2ZpbHRlcl09XCJmaWx0ZXJcIlxuICAgICAgICAgICAgICAgICAgICBbZmlsdGVyYWJsZV09XCJmaWx0ZXJhYmxlXCJcbiAgICAgICAgICAgICAgICAgICAgW2NvbHVtbk1lbnVdPVwiY29sdW1uTWVudU9wdGlvbnNcIlxuICAgICAgICAgICAgICAgICAgICBbY29sdW1uTWVudVRlbXBsYXRlXT1cImNvbHVtbk1lbnVUZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgIFtkZXRhaWxUZW1wbGF0ZV09XCJkZXRhaWxUZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgIFt0YWJJbmRleF09XCJuYXZpZ2FibGUgPyAnLTEnIDogJzAnXCI+XG4gICAgICAgICAgICAgICAgPC90aGVhZD5cbiAgICAgICAgICAgICAgICA8dGJvZHkga2VuZG9HcmlkVGFibGVCb2R5XG4gICAgICAgICAgICAgICAgICAgIFtpc0xvYWRpbmddPVwibG9hZGluZ1wiXG4gICAgICAgICAgICAgICAgICAgIFtncm91cHNdPVwiZ3JvdXBcIlxuICAgICAgICAgICAgICAgICAgICBbZGF0YV09XCJ2aWV3XCJcbiAgICAgICAgICAgICAgICAgICAgW3NraXBdPVwic2tpcFwiXG4gICAgICAgICAgICAgICAgICAgIFtjb2x1bW5zXT1cImxlYWZDb2x1bW5zXCJcbiAgICAgICAgICAgICAgICAgICAgW3NlbGVjdGFibGVdPVwic2VsZWN0YWJsZVwiXG4gICAgICAgICAgICAgICAgICAgIFtmaWx0ZXJhYmxlXT1cImZpbHRlcmFibGVcIlxuICAgICAgICAgICAgICAgICAgICBbbm9SZWNvcmRzVGVtcGxhdGVdPVwibm9SZWNvcmRzVGVtcGxhdGVcIlxuICAgICAgICAgICAgICAgICAgICBbZGV0YWlsVGVtcGxhdGVdPVwiZGV0YWlsVGVtcGxhdGVcIlxuICAgICAgICAgICAgICAgICAgICBbc2hvd0dyb3VwRm9vdGVyc109XCJzaG93R3JvdXBGb290ZXJzXCJcbiAgICAgICAgICAgICAgICAgICAgW3RyYWNrQnldPVwidHJhY2tCeVwiXG4gICAgICAgICAgICAgICAgICAgIFtyb3dDbGFzc109XCJyb3dDbGFzc1wiXG4gICAgICAgICAgICAgICAgICAgIGtlbmRvRHJhZ2dhYmxlXG4gICAgICAgICAgICAgICAgICAgIGtlbmRvR3JpZFNlbGVjdGlvbk1hcnF1ZWVcbiAgICAgICAgICAgICAgICAgICAgW2VuYWJsZURyYWddPVwibWFycXVlZVNlbGVjdGlvblwiPlxuICAgICAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICAgICAgPHRmb290IGtlbmRvR3JpZEZvb3RlclxuICAgICAgICAgICAgICAgICAgICAqbmdJZj1cInNob3dGb290ZXJcIlxuICAgICAgICAgICAgICAgICAgICBbc2Nyb2xsYWJsZV09XCJmYWxzZVwiXG4gICAgICAgICAgICAgICAgICAgIFtsb2dpY2FsUm93SW5kZXhdPVwiYXJpYVJvd0NvdW50XCJcbiAgICAgICAgICAgICAgICAgICAgW2dyb3Vwc109XCJncm91cFwiXG4gICAgICAgICAgICAgICAgICAgIFtjb2x1bW5zXT1cImxlYWZDb2x1bW5zXCJcbiAgICAgICAgICAgICAgICAgICAgW2RldGFpbFRlbXBsYXRlXT1cImRldGFpbFRlbXBsYXRlXCI+XG4gICAgICAgICAgICAgICAgPC90Zm9vdD5cbiAgICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgICAgICA8ZGl2ICpuZ0lmPVwibG9hZGluZ1wiIGtlbmRvR3JpZExvYWRpbmc+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxrZW5kby1wYWdlclxuICAgICAgICAgICAgKm5nSWY9XCJzaG93Qm90dG9tUGFnZXJcIlxuICAgICAgICAgICAgW3RhYmluZGV4XT1cIm5hdmlnYWJsZSA/ICcwJyA6ICctMSdcIlxuICAgICAgICAgICAgW2F0dHIucm9sZV09XCJuYXZpZ2FibGUgPyAnbmF2aWdhdGlvbicgOiB1bmRlZmluZWRcIlxuICAgICAgICAgICAgW3RlbXBsYXRlXT1cInBhZ2VyVGVtcGxhdGVcIlxuICAgICAgICAgICAgW3BhZ2VTaXplXT1cInBhZ2VTaXplXCJcbiAgICAgICAgICAgIFt0b3RhbF09XCJ2aWV3LnRvdGFsXCJcbiAgICAgICAgICAgIFtza2lwXT1cInNraXBcIlxuICAgICAgICAgICAgW29wdGlvbnNdPVwicGFnZWFibGVcIlxuICAgICAgICAgICAgKHBhZ2VDaGFuZ2UpPVwibm90aWZ5UGFnZUNoYW5nZSgncGFnZXInLCAkZXZlbnQpXCI+XG4gICAgICAgIDwva2VuZG8tcGFnZXI+XG4gICAgICAgIDxrZW5kby1ncmlkLXRvb2xiYXIgY2xhc3M9XCJrLXRvb2xiYXIgay1ncmlkLXRvb2xiYXIgay1ncmlkLXRvb2xiYXItYm90dG9tXCIgKm5nSWY9XCJzaG93Qm90dG9tVG9vbGJhclwiIHBvc2l0aW9uPVwiYm90dG9tXCI+PC9rZW5kby1ncmlkLXRvb2xiYXI+XG4gICAgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbQnJvd3NlclN1cHBvcnRTZXJ2aWNlLFxuICAgICAgICBTZWxlY3Rpb25TZXJ2aWNlLFxuICAgICAgICBDZWxsU2VsZWN0aW9uU2VydmljZSxcbiAgICAgICAgRWxlbWVudFJlZixcbiAgICAgICAgR3JvdXBJbmZvU2VydmljZSxcbiAgICAgICAgR3JvdXBzU2VydmljZSxcbiAgICAgICAgQ2hhbmdlTm90aWZpY2F0aW9uU2VydmljZSxcbiAgICAgICAgRGV0YWlsc1NlcnZpY2UsXG4gICAgICAgIEVkaXRTZXJ2aWNlLFxuICAgICAgICBGaWx0ZXJTZXJ2aWNlLFxuICAgICAgICBQREZTZXJ2aWNlLFxuICAgICAgICBSZXNwb25zaXZlU2VydmljZSxcbiAgICAgICAgUmVuZGVyZXIyLFxuICAgICAgICBFeGNlbFNlcnZpY2UsXG4gICAgICAgIE5nWm9uZSxcbiAgICAgICAgU2Nyb2xsU3luY1NlcnZpY2UsXG4gICAgICAgIERvbUV2ZW50c1NlcnZpY2UsXG4gICAgICAgIENvbHVtblJlc2l6aW5nU2VydmljZSxcbiAgICAgICAgQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgICAgIENvbHVtblJlb3JkZXJTZXJ2aWNlLFxuICAgICAgICBDb2x1bW5JbmZvU2VydmljZSxcbiAgICAgICAgTmF2aWdhdGlvblNlcnZpY2UsXG4gICAgICAgIFNvcnRTZXJ2aWNlLFxuICAgICAgICBTY3JvbGxSZXF1ZXN0U2VydmljZSxcbiAgICAgICAgTG9jYWxpemF0aW9uU2VydmljZV0pXG5dLCBHcmlkQ29tcG9uZW50KTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IHVwZGF0ZSA9IChhcnIsIGlkeCwgdmFsdWUpID0+IChbXG4gICAgLi4uYXJyLnNsaWNlKDAsIGlkeCArIDEpLFxuICAgIC4uLihhcnIuc2xpY2UoaWR4ICsgMSkubWFwKHggPT4geCArIHZhbHVlKSlcbl0pO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNsYXNzIFJvd0hlaWdodFNlcnZpY2Uge1xuICAgIGNvbnN0cnVjdG9yKHRvdGFsID0gMCwgcm93SGVpZ2h0LCBkZXRhaWxSb3dIZWlnaHQpIHtcbiAgICAgICAgdGhpcy50b3RhbCA9IHRvdGFsO1xuICAgICAgICB0aGlzLnJvd0hlaWdodCA9IHJvd0hlaWdodDtcbiAgICAgICAgdGhpcy5kZXRhaWxSb3dIZWlnaHQgPSBkZXRhaWxSb3dIZWlnaHQ7XG4gICAgICAgIHRoaXMub2Zmc2V0cyA9IFtdO1xuICAgICAgICB0aGlzLmhlaWdodHMgPSBbXTtcbiAgICAgICAgbGV0IGFnZyA9IDA7XG4gICAgICAgIGZvciAobGV0IGlkeCA9IDA7IGlkeCA8IHRvdGFsOyBpZHgrKykge1xuICAgICAgICAgICAgdGhpcy5vZmZzZXRzLnB1c2goYWdnKTtcbiAgICAgICAgICAgIGFnZyArPSByb3dIZWlnaHQ7XG4gICAgICAgICAgICB0aGlzLmhlaWdodHMucHVzaChyb3dIZWlnaHQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGhlaWdodChyb3dJbmRleCkge1xuICAgICAgICByZXR1cm4gdGhpcy5oZWlnaHRzW3Jvd0luZGV4XTtcbiAgICB9XG4gICAgZXhwYW5kRGV0YWlsKHJvd0luZGV4KSB7XG4gICAgICAgIGlmICh0aGlzLmhlaWdodChyb3dJbmRleCkgPT09IHRoaXMucm93SGVpZ2h0KSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVJvd0hlaWdodChyb3dJbmRleCwgdGhpcy5kZXRhaWxSb3dIZWlnaHQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbGxhcHNlRGV0YWlsKHJvd0luZGV4KSB7XG4gICAgICAgIGlmICh0aGlzLmhlaWdodChyb3dJbmRleCkgPiB0aGlzLnJvd0hlaWdodCkge1xuICAgICAgICAgICAgdGhpcy51cGRhdGVSb3dIZWlnaHQocm93SW5kZXgsIHRoaXMuZGV0YWlsUm93SGVpZ2h0ICogLTEpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlzRXhwYW5kZWQocm93SW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGVpZ2h0KHJvd0luZGV4KSA+IHRoaXMucm93SGVpZ2h0O1xuICAgIH1cbiAgICBpbmRleChwb3NpdGlvbikge1xuICAgICAgICBpZiAocG9zaXRpb24gPCAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMub2Zmc2V0cy5yZWR1Y2UoKHByZXYsIGN1cnJlbnQsIGlkeCkgPT4ge1xuICAgICAgICAgICAgaWYgKHByZXYgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwcmV2O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoY3VycmVudCA9PT0gcG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaWR4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoY3VycmVudCA+IHBvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlkeCAtIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9LCB1bmRlZmluZWQpOyAvLyB0c2xpbnQ6ZGlzYWJsZS1saW5lOmFsaWduXG4gICAgICAgIHJldHVybiByZXN1bHQgPT09IHVuZGVmaW5lZCA/IHRoaXMudG90YWwgLSAxIDogcmVzdWx0O1xuICAgIH1cbiAgICBvZmZzZXQocm93SW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub2Zmc2V0c1tyb3dJbmRleF07XG4gICAgfVxuICAgIHRvdGFsSGVpZ2h0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5oZWlnaHRzLnJlZHVjZSgocHJldiwgY3VycikgPT4gcHJldiArIGN1cnIsIDApO1xuICAgIH1cbiAgICB1cGRhdGVSb3dIZWlnaHQocm93SW5kZXgsIHZhbHVlKSB7XG4gICAgICAgIGlmICh0aGlzLnRvdGFsID4gMCkge1xuICAgICAgICAgICAgdGhpcy5oZWlnaHRzW3Jvd0luZGV4XSArPSB2YWx1ZTtcbiAgICAgICAgICAgIHRoaXMub2Zmc2V0cyA9IHVwZGF0ZSh0aGlzLm9mZnNldHMsIHJvd0luZGV4LCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBTY3JvbGxBY3Rpb24ge1xuICAgIGNvbnN0cnVjdG9yKG9mZnNldCkge1xuICAgICAgICB0aGlzLm9mZnNldCA9IG9mZnNldDtcbiAgICB9XG59XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY2xhc3MgUGFnZUFjdGlvbiB7XG4gICAgY29uc3RydWN0b3Ioc2tpcCwgdGFrZSQkMSkge1xuICAgICAgICB0aGlzLnNraXAgPSBza2lwO1xuICAgICAgICB0aGlzLnRha2UgPSB0YWtlJCQxO1xuICAgIH1cbn1cbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBTY3JvbGxCb3R0b21BY3Rpb24ge1xufVxuY29uc3QgU0NST0xMX0JPVFRPTV9USFJFU0hPTEQgPSAyO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNsYXNzIFNjcm9sbGVyU2VydmljZSB7XG4gICAgY29uc3RydWN0b3Ioc2Nyb2xsT2JzZXJ2YWJsZSkge1xuICAgICAgICB0aGlzLnNjcm9sbE9ic2VydmFibGUgPSBzY3JvbGxPYnNlcnZhYmxlO1xuICAgICAgICB0aGlzLmZpcnN0TG9hZGVkID0gMDtcbiAgICB9XG4gICAgY3JlYXRlKHJvd0hlaWdodFNlcnZpY2UsIHNraXAsIHRha2UkJDEsIHRvdGFsKSB7XG4gICAgICAgIHRoaXMucm93SGVpZ2h0U2VydmljZSA9IHJvd0hlaWdodFNlcnZpY2U7XG4gICAgICAgIHRoaXMuZmlyc3RMb2FkZWQgPSBza2lwO1xuICAgICAgICB0aGlzLmxhc3RMb2FkZWQgPSBza2lwICsgdGFrZSQkMTtcbiAgICAgICAgdGhpcy50YWtlID0gdGFrZSQkMTtcbiAgICAgICAgdGhpcy50b3RhbCA9IHRvdGFsO1xuICAgICAgICB0aGlzLmxhc3RTY3JvbGxUb3AgPSAwO1xuICAgICAgICBjb25zdCBzdWJqZWN0ID0gbmV3IEJlaGF2aW9yU3ViamVjdChuZXcgU2Nyb2xsQWN0aW9uKHRoaXMucm93SGVpZ2h0U2VydmljZS5vZmZzZXQoc2tpcCkpKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24gPSBPYnNlcnZhYmxlLmNyZWF0ZShvYnNlcnZlciA9PiB7XG4gICAgICAgICAgICB0aGlzLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICB0aGlzLnNjcm9sbFN1YnNjcmlwdGlvbiA9IHRoaXMuc2Nyb2xsT2JzZXJ2YWJsZS5zdWJzY3JpYmUoeCA9PiB0aGlzLm9uU2Nyb2xsKHgsIG9ic2VydmVyKSk7XG4gICAgICAgIH0pLnN1YnNjcmliZSh4ID0+IHN1YmplY3QubmV4dCh4KSk7XG4gICAgICAgIHJldHVybiBzdWJqZWN0O1xuICAgIH1cbiAgICBkZXN0cm95KCkge1xuICAgICAgICB0aGlzLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIGlmICh0aGlzLnN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvblNjcm9sbCh7IHNjcm9sbFRvcCwgb2Zmc2V0SGVpZ2h0LCBzY3JvbGxIZWlnaHQsIGNsaWVudEhlaWdodCB9LCBvYnNlcnZlcikge1xuICAgICAgICBpZiAodGhpcy5sYXN0U2Nyb2xsVG9wID09PSBzY3JvbGxUb3ApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB1cCA9IHRoaXMubGFzdFNjcm9sbFRvcCA+PSBzY3JvbGxUb3A7XG4gICAgICAgIHRoaXMubGFzdFNjcm9sbFRvcCA9IHNjcm9sbFRvcDtcbiAgICAgICAgbGV0IGZpcnN0SXRlbUluZGV4ID0gdGhpcy5yb3dIZWlnaHRTZXJ2aWNlLmluZGV4KHNjcm9sbFRvcCk7XG4gICAgICAgIGxldCBmaXJzdEl0ZW1PZmZzZXQgPSB0aGlzLnJvd0hlaWdodFNlcnZpY2Uub2Zmc2V0KGZpcnN0SXRlbUluZGV4KTtcbiAgICAgICAgY29uc3QgbGFzdEl0ZW1JbmRleCA9IHRoaXMucm93SGVpZ2h0U2VydmljZS5pbmRleChzY3JvbGxUb3AgKyBvZmZzZXRIZWlnaHQpO1xuICAgICAgICBpZiAoIXVwKSB7XG4gICAgICAgICAgICBpZiAobGFzdEl0ZW1JbmRleCA+PSB0aGlzLmxhc3RMb2FkZWQgJiYgdGhpcy5sYXN0TG9hZGVkIDwgdGhpcy50b3RhbCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG92ZXJmbG93ID0gKGZpcnN0SXRlbUluZGV4ICsgdGhpcy50YWtlKSAtIHRoaXMudG90YWw7XG4gICAgICAgICAgICAgICAgaWYgKG92ZXJmbG93ID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBmaXJzdEl0ZW1JbmRleCA9IGZpcnN0SXRlbUluZGV4IC0gb3ZlcmZsb3c7XG4gICAgICAgICAgICAgICAgICAgIGZpcnN0SXRlbU9mZnNldCA9IHRoaXMucm93SGVpZ2h0U2VydmljZS5vZmZzZXQoZmlyc3RJdGVtSW5kZXgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmZpcnN0TG9hZGVkID0gZmlyc3RJdGVtSW5kZXg7XG4gICAgICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dChuZXcgU2Nyb2xsQWN0aW9uKGZpcnN0SXRlbU9mZnNldCkpO1xuICAgICAgICAgICAgICAgIGxldCBuZXh0VGFrZSA9IHRoaXMuZmlyc3RMb2FkZWQgKyB0aGlzLnRha2U7XG4gICAgICAgICAgICAgICAgdGhpcy5sYXN0TG9hZGVkID0gTWF0aC5taW4obmV4dFRha2UsIHRoaXMudG90YWwpO1xuICAgICAgICAgICAgICAgIG5leHRUYWtlID0gbmV4dFRha2UgPiB0aGlzLnRvdGFsID8gdGhpcy50b3RhbCAtIHRoaXMuZmlyc3RMb2FkZWQgOiB0aGlzLnRha2U7XG4gICAgICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dChuZXcgUGFnZUFjdGlvbih0aGlzLmZpcnN0TG9hZGVkLCB0aGlzLnRha2UpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IGF0Qm90dG9tID0gc2Nyb2xsSGVpZ2h0IC0gY2xpZW50SGVpZ2h0IC0gc2Nyb2xsVG9wIDwgU0NST0xMX0JPVFRPTV9USFJFU0hPTEQ7XG4gICAgICAgICAgICAgICAgaWYgKGF0Qm90dG9tKSB7XG4gICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLm5leHQobmV3IFNjcm9sbEJvdHRvbUFjdGlvbigpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHVwICYmIGZpcnN0SXRlbUluZGV4IDwgdGhpcy5maXJzdExvYWRlZCkge1xuICAgICAgICAgICAgY29uc3Qgbm9uVmlzaWJsZUJ1ZmZlciA9IE1hdGguZmxvb3IodGhpcy50YWtlICogMC4zKTtcbiAgICAgICAgICAgIHRoaXMuZmlyc3RMb2FkZWQgPSBNYXRoLm1heChmaXJzdEl0ZW1JbmRleCAtIG5vblZpc2libGVCdWZmZXIsIDApO1xuICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dChuZXcgU2Nyb2xsQWN0aW9uKHRoaXMucm93SGVpZ2h0U2VydmljZS5vZmZzZXQodGhpcy5maXJzdExvYWRlZCkpKTtcbiAgICAgICAgICAgIHRoaXMubGFzdExvYWRlZCA9IE1hdGgubWluKHRoaXMuZmlyc3RMb2FkZWQgKyB0aGlzLnRha2UsIHRoaXMudG90YWwpO1xuICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dChuZXcgUGFnZUFjdGlvbih0aGlzLmZpcnN0TG9hZGVkLCB0aGlzLnRha2UpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB1bnN1YnNjcmliZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuc2Nyb2xsU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnNjcm9sbFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgdGhpcy5zY3JvbGxTdWJzY3JpcHRpb24gPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBOT05fREFUQV9DRUxMX0NMQVNTRVMgPSAnay1oaWVyYXJjaHktY2VsbCBrLWRldGFpbC1jZWxsIGstZ3JvdXAtY2VsbCc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgTk9OX0RBVEFfUk9XX0NMQVNTRVMgPSAnay1ncm91cGluZy1yb3cgay1ncm91cC1mb290ZXIgay1kZXRhaWwtcm93IGstZ3JpZC1ub3JlY29yZHMnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IElHTk9SRV9UQVJHRVRfQ0xBU1NTRVMgPSAnay1pY29uJztcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBJR05PUkVfQ09OVEFJTkVSX0NMQVNTRVMgPSAnay13aWRnZXQgay1ncmlkLWlnbm9yZS1jbGljayc7XG5cbmNvbnN0IGVsZW1lbnRBdCA9IChpbmRleCwgZWxlbWVudHMsIGVsZW1lbnRPZmZzZXQpID0+IHtcbiAgICBmb3IgKGxldCBpZHggPSAwLCBlbGVtZW50SWR4ID0gMDsgaWR4IDwgZWxlbWVudHMubGVuZ3RoOyBpZHgrKykge1xuICAgICAgICBjb25zdCBvZmZzZXQgPSBlbGVtZW50T2Zmc2V0KGVsZW1lbnRzW2lkeF0pO1xuICAgICAgICBpZiAoZWxlbWVudElkeCA8PSBpbmRleCAmJiBpbmRleCA8PSBlbGVtZW50SWR4ICsgb2Zmc2V0IC0gMSkge1xuICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnRzW2lkeF07XG4gICAgICAgIH1cbiAgICAgICAgZWxlbWVudElkeCArPSBvZmZzZXQ7XG4gICAgfVxufTtcbmNvbnN0IHJvd0F0ID0gKGluZGV4LCByb3dzKSA9PiBlbGVtZW50QXQoaW5kZXgsIHJvd3MsIHJvdyA9PiByb3cuaGFzQXR0cmlidXRlKCdkYXRhLWtlbmRvLWdyaWQtaXRlbS1pbmRleCcpID8gMSA6IDApO1xuY29uc3QgY2VsbEF0ID0gKGluZGV4LCBjZWxscykgPT4gZWxlbWVudEF0KGluZGV4LCBjZWxscywgY2VsbCA9PiAhaGFzQ2xhc3NlcyhjZWxsLCBOT05fREFUQV9DRUxMX0NMQVNTRVMpID8gcGFyc2VJbnQoY2VsbC5nZXRBdHRyaWJ1dGUoJ2NvbFNwYW4nKSwgMTApIHx8IDEgOiAwKTtcbmNvbnN0IEVNUFRZX09CSkVDVCA9IHt9O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IFNDUk9MTEVSX0ZBQ1RPUllfVE9LRU4gPSBuZXcgSW5qZWN0aW9uVG9rZW4oJ2dyaWQtc2Nyb2xsLXNlcnZpY2UtZmFjdG9yeScpO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIERFRkFVTFRfU0NST0xMRVJfRkFDVE9SWShvYnNlcnZhYmxlKSB7XG4gICAgcmV0dXJuIG5ldyBTY3JvbGxlclNlcnZpY2Uob2JzZXJ2YWJsZSk7XG59XG5jb25zdCB3aGVlbERlbHRhWSA9IChlKSA9PiB7XG4gICAgY29uc3QgZGVsdGFZID0gZS53aGVlbERlbHRhWTtcbiAgICBpZiAoZS53aGVlbERlbHRhICYmIChkZWx0YVkgPT09IHVuZGVmaW5lZCB8fCBkZWx0YVkpKSB7XG4gICAgICAgIHJldHVybiBlLndoZWVsRGVsdGE7XG4gICAgfVxuICAgIGVsc2UgaWYgKGUuZGV0YWlsICYmIGUuYXhpcyA9PT0gZS5WRVJUSUNBTF9BWElTKSB7XG4gICAgICAgIHJldHVybiAoLWUuZGV0YWlsKSAqIDEwO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbn07XG5jb25zdCBwcmV2ZW50TG9ja2VkU2Nyb2xsID0gKGFyZ3MsIGVsZW1lbnQpID0+IHtcbiAgICBjb25zdCBkZWx0YSA9IHdoZWVsRGVsdGFZKGFyZ3MpO1xuICAgIGNvbnN0IHNjcm9sbFRvcCA9IGVsZW1lbnQuc2Nyb2xsVG9wO1xuICAgIGNvbnN0IGFsbG93U2Nyb2xsID0gKHNjcm9sbFRvcCA9PT0gMCAmJiAwIDwgZGVsdGEpIHx8IChlbGVtZW50LnNjcm9sbEhlaWdodCA8PSBlbGVtZW50Lm9mZnNldEhlaWdodCArIHNjcm9sbFRvcCAmJiBkZWx0YSA8IDApO1xuICAgIGlmICghYWxsb3dTY3JvbGwpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG59O1xuY29uc3QgdHJhbnNsYXRlWSA9IChyZW5kZXJlciwgdmFsdWUpID0+IGVsID0+IHJlbmRlcmVyLnNldFN0eWxlKGVsLCBcInRyYW5zZm9ybVwiLCBgdHJhbnNsYXRlWSgke3ZhbHVlfXB4KWApO1xuY29uc3QgbWF5YmVOYXRpdmVFbGVtZW50ID0gZWwgPT4gZWwgPyBlbC5uYXRpdmVFbGVtZW50IDogbnVsbDtcbmNvbnN0IGhhc1Njcm9sbGJhciA9IChlbCwgcGFyZW50KSA9PiBlbC5uYXRpdmVFbGVtZW50Lm9mZnNldFdpZHRoID4gcGFyZW50Lm5hdGl2ZUVsZW1lbnQuY2xpZW50V2lkdGg7XG5jb25zdCBzZXRIZWlnaHQkMSA9IHJlbmRlcmVyID0+ICh7IGVsLCBoZWlnaHQgfSkgPT4gcmVuZGVyZXIuc2V0U3R5bGUoZWwsIFwiaGVpZ2h0XCIsIGAke2hlaWdodH1weGApO1xuY29uc3QgYnVmZmVyU2l6ZSA9IDE7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IExpc3RDb21wb25lbnQgPSBjbGFzcyBMaXN0Q29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3RvcihzY3JvbGxlckZhY3RvcnksIGRldGFpbHNTZXJ2aWNlLCBjaGFuZ2VOb3RpZmljYXRpb24sIHN1c3BlbmRTZXJ2aWNlLCBncm91cHNTZXJ2aWNlLCBuZ1pvbmUsIHJlbmRlcmVyLCBzY3JvbGxTeW5jU2VydmljZSwgcmVzaXplU2VydmljZSwgZWRpdFNlcnZpY2UsIHN1cHBvcnRTZXJ2aWNlLCBuYXZpZ2F0aW9uU2VydmljZSwgc2Nyb2xsUmVxdWVzdFNlcnZpY2UsIGxvY2FsaXphdGlvbiwgY29sdW1uUmVzaXppbmdTZXJ2aWNlLCBjaGFuZ2VEZXRlY3RvciwgcGRmU2VydmljZSwgY29sdW1uSW5mbykge1xuICAgICAgICB0aGlzLmNoYW5nZU5vdGlmaWNhdGlvbiA9IGNoYW5nZU5vdGlmaWNhdGlvbjtcbiAgICAgICAgdGhpcy5zdXNwZW5kU2VydmljZSA9IHN1c3BlbmRTZXJ2aWNlO1xuICAgICAgICB0aGlzLmdyb3Vwc1NlcnZpY2UgPSBncm91cHNTZXJ2aWNlO1xuICAgICAgICB0aGlzLm5nWm9uZSA9IG5nWm9uZTtcbiAgICAgICAgdGhpcy5yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgICAgICB0aGlzLnNjcm9sbFN5bmNTZXJ2aWNlID0gc2Nyb2xsU3luY1NlcnZpY2U7XG4gICAgICAgIHRoaXMucmVzaXplU2VydmljZSA9IHJlc2l6ZVNlcnZpY2U7XG4gICAgICAgIHRoaXMuZWRpdFNlcnZpY2UgPSBlZGl0U2VydmljZTtcbiAgICAgICAgdGhpcy5zdXBwb3J0U2VydmljZSA9IHN1cHBvcnRTZXJ2aWNlO1xuICAgICAgICB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlID0gbmF2aWdhdGlvblNlcnZpY2U7XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uID0gbG9jYWxpemF0aW9uO1xuICAgICAgICB0aGlzLmNvbHVtblJlc2l6aW5nU2VydmljZSA9IGNvbHVtblJlc2l6aW5nU2VydmljZTtcbiAgICAgICAgdGhpcy5jaGFuZ2VEZXRlY3RvciA9IGNoYW5nZURldGVjdG9yO1xuICAgICAgICB0aGlzLnBkZlNlcnZpY2UgPSBwZGZTZXJ2aWNlO1xuICAgICAgICB0aGlzLmNvbHVtbkluZm8gPSBjb2x1bW5JbmZvO1xuICAgICAgICB0aGlzLmdyb3VwcyA9IFtdO1xuICAgICAgICB0aGlzLnNraXAgPSAwO1xuICAgICAgICB0aGlzLmNvbHVtbnMgPSBuZXcgQ29sdW1uc0NvbnRhaW5lcigoKSA9PiBbXSk7XG4gICAgICAgIHRoaXMuc2VsZWN0YWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmdyb3VwYWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLnRyYWNrQnkgPSBkZWZhdWx0VHJhY2tCeTtcbiAgICAgICAgdGhpcy5jb250ZW50U2Nyb2xsID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLnBhZ2VDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuc2Nyb2xsQm90dG9tID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLmNvbHVtbnNTdGFydElkeCA9IDA7XG4gICAgICAgIHRoaXMucmVzaXplU2Vuc29ycyA9IG5ldyBRdWVyeUxpc3QoKTtcbiAgICAgICAgdGhpcy5kaXNwYXRjaGVyID0gbmV3IFN1YmplY3QoKTtcbiAgICAgICAgdGhpcy5jb250YWluZXJTY3JvbGxUb3AgPSAwO1xuICAgICAgICB0aGlzLnNjcm9sbExlZnQgPSAwO1xuICAgICAgICB0aGlzLnJ0bCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnNjcm9sbGVyID0gc2Nyb2xsZXJGYWN0b3J5KHRoaXMuZGlzcGF0Y2hlcik7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucyA9XG4gICAgICAgICAgICBkZXRhaWxzU2VydmljZS5jaGFuZ2VzLnN1YnNjcmliZSh4ID0+IHRoaXMuZGV0YWlsRXhwYW5kKHgpKS5hZGQoc2Nyb2xsUmVxdWVzdFNlcnZpY2UucmVxdWVzdHMuc3Vic2NyaWJlKHggPT4gdGhpcy5zY3JvbGxUbyh4KSkpO1xuICAgIH1cbiAgICBnZXQgaG9zdENsYXNzKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZ2V0IGhvc3RSb2xlKCkge1xuICAgICAgICByZXR1cm4gJ3ByZXNlbnRhdGlvbic7XG4gICAgfVxuICAgIGdldCBzaG93Rm9vdGVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ncm91cGFibGUgJiYgdGhpcy5ncm91cGFibGUuc2hvd0Zvb3RlcjtcbiAgICB9XG4gICAgZ2V0IHRvdGFsV2lkdGgoKSB7XG4gICAgICAgIGlmICh0aGlzLnZpcnR1YWxDb2x1bW5zICYmIHRoaXMuY29sdW1ucy51bmxvY2tlZFdpZHRoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW5zLnVubG9ja2VkV2lkdGg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IGxvY2tlZExlYWZDb2x1bW5zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW5zLmxvY2tlZExlYWZDb2x1bW5zO1xuICAgIH1cbiAgICBnZXQgbm9uTG9ja2VkTGVhZkNvbHVtbnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbHVtbnMubm9uTG9ja2VkTGVhZkNvbHVtbnM7XG4gICAgfVxuICAgIGdldCBub25Mb2NrZWRDb2x1bW5zVG9SZW5kZXIoKSB7XG4gICAgICAgIGlmICh0aGlzLnZpcnR1YWxDb2x1bW5zICYmICF0aGlzLnBkZlNlcnZpY2UuZXhwb3J0aW5nKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy52aWV3cG9ydENvbHVtbnM7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMubm9uTG9ja2VkTGVhZkNvbHVtbnM7XG4gICAgfVxuICAgIGdldCBsZWFmQ29sdW1ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1ucy5sZWFmQ29sdW1uc1RvUmVuZGVyO1xuICAgIH1cbiAgICBnZXQgbG9ja2VkV2lkdGgoKSB7XG4gICAgICAgIGNvbnN0IGdyb3VwQ2VsbHNXaWR0aCA9IHRoaXMuZ3JvdXBzLmxlbmd0aCAqIEdST1VQX0NFTExfV0lEVEg7XG4gICAgICAgIHJldHVybiBleHBhbmRDb2x1bW5zKHRoaXMubG9ja2VkTGVhZkNvbHVtbnMudG9BcnJheSgpKS5yZWR1Y2UoKHByZXYsIGN1cnIpID0+IHByZXYgKyAoY3Vyci53aWR0aCB8fCAwKSwgZ3JvdXBDZWxsc1dpZHRoKTtcbiAgICB9XG4gICAgZ2V0IG5vbkxvY2tlZFdpZHRoKCkge1xuICAgICAgICBpZiAoKCF0aGlzLnJ0bCAmJiB0aGlzLmxvY2tlZExlYWZDb2x1bW5zLmxlbmd0aCkgfHwgdGhpcy52aXJ0dWFsQ29sdW1ucykge1xuICAgICAgICAgICAgcmV0dXJuIHN1bUNvbHVtbldpZHRocyhleHBhbmRDb2x1bW5zKHRoaXMubm9uTG9ja2VkQ29sdW1uc1RvUmVuZGVyLnRvQXJyYXkoKSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGdldCBpc0xvY2tlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9ja2VkTGVhZkNvbHVtbnMubGVuZ3RoID4gMDtcbiAgICB9XG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuYWRkKHRoaXMubmdab25lLnJ1bk91dHNpZGVBbmd1bGFyKHRoaXMuaGFuZGxlUm93U3luYy5iaW5kKHRoaXMpKSk7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQodGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIodGhpcy5oYW5kbGVSb3dOYXZpZ2F0aW9uTG9ja2VkLmJpbmQodGhpcykpKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZChtZXJnZSh0aGlzLmNvbHVtbnMuY2hhbmdlcywgdGhpcy5yZXNpemVTZXJ2aWNlLmNoYW5nZXMpLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy52aXJ0dWFsQ29sdW1ucykge1xuICAgICAgICAgICAgICAgIHRoaXMubmdab25lLnJ1bigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlVmlld3BvcnRDb2x1bW5zKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IubWFya0ZvckNoZWNrKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZCh0aGlzLmxvY2FsaXphdGlvbi5jaGFuZ2VzLnN1YnNjcmliZSgoeyBydGwgfSkgPT4gdGhpcy5ydGwgPSBydGwpKTtcbiAgICB9XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlcykge1xuICAgICAgICBjb25zdCBoYXNJbml0aWFsU2tpcCA9IGNoYW5nZXMuc2tpcCAmJiBjaGFuZ2VzLnNraXAuZmlyc3RDaGFuZ2UgJiYgY2hhbmdlcy5za2lwLmN1cnJlbnRWYWx1ZSA+IDA7XG4gICAgICAgIGlmIChoYXNJbml0aWFsU2tpcCkge1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVJbml0aWFsU2Nyb2xsVG9Ta2lwKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQ2hhbmdlZChcInNraXBcIiwgY2hhbmdlcykgJiYgIXRoaXMucmViaW5kKSB7XG4gICAgICAgICAgICB0aGlzLnNraXBTY3JvbGwgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5jb250YWluZXIubmF0aXZlRWxlbWVudC5zY3JvbGxUb3AgPSB0aGlzLnJvd0hlaWdodFNlcnZpY2Uub2Zmc2V0KHRoaXMuc2tpcCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFueUNoYW5nZWQoW1widG90YWxcIiwgXCJ0YWtlXCJdLCBjaGFuZ2VzKSkge1xuICAgICAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5yZWJpbmQgPSBmYWxzZTtcbiAgICB9XG4gICAgbmdEb0NoZWNrKCkge1xuICAgICAgICBpZiAodGhpcy52aXJ0dWFsQ29sdW1ucyAmJiAoIXRoaXMudmlld3BvcnRDb2x1bW5zIHx8IHRoaXMudmlld3BvcnRXaWR0aENoYW5nZSgpKSkge1xuICAgICAgICAgICAgdGhpcy51cGRhdGVWaWV3cG9ydENvbHVtbnMoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgICAgIGlmICh0aGlzLnNraXAgJiYgdGhpcy5pc1ZpcnR1YWwpIHtcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQuc2Nyb2xsVG9wID0gdGhpcy5yb3dIZWlnaHRTZXJ2aWNlLm9mZnNldCh0aGlzLnNraXApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucmVzZXROYXZpZ2F0aW9uVmlld3BvcnQoKTtcbiAgICAgICAgdGhpcy5hdHRhY2hDb250YWluZXJTY3JvbGwoKTtcbiAgICAgICAgdGhpcy5pbml0UmVzaXplU2VydmljZSgpO1xuICAgIH1cbiAgICBuZ0FmdGVyVmlld0NoZWNrZWQoKSB7XG4gICAgICAgIGNvbnN0IGlzTG9ja2VkID0gdGhpcy5pc0xvY2tlZDtcbiAgICAgICAgaWYgKGlzTG9ja2VkICYmICF0aGlzLmhhc0xvY2tlZENvbnRhaW5lcikge1xuICAgICAgICAgICAgdGhpcy5zeW5jUm93c0hlaWdodCgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaGFzTG9ja2VkQ29udGFpbmVyID0gaXNMb2NrZWQ7XG4gICAgfVxuICAgIHN5bmNSb3dzSGVpZ2h0KCkge1xuICAgICAgICBpZiAodGhpcy5sb2NrZWRDb250YWluZXIpIHtcbiAgICAgICAgICAgIHN5bmNSb3dzSGVpZ2h0KHRoaXMubG9ja2VkVGFibGUubmF0aXZlRWxlbWVudCwgdGhpcy50YWJsZS5uYXRpdmVFbGVtZW50KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgaWYgKHRoaXMuc3Vic2NyaXB0aW9ucykge1xuICAgICAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucmVzaXplU2VydmljZSkge1xuICAgICAgICAgICAgdGhpcy5yZXNpemVTZXJ2aWNlLmRlc3Ryb3koKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNsZWFudXBTY3JvbGxlcigpO1xuICAgIH1cbiAgICBpbml0KCkge1xuICAgICAgICBpZiAodGhpcy5zdXNwZW5kU2VydmljZS5zY3JvbGwpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJvd0hlaWdodFNlcnZpY2UgPSBuZXcgUm93SGVpZ2h0U2VydmljZSh0aGlzLnRvdGFsLCB0aGlzLnJvd0hlaWdodCwgdGhpcy5kZXRhaWxSb3dIZWlnaHQpO1xuICAgICAgICB0aGlzLnRvdGFsSGVpZ2h0ID0gdGhpcy5yb3dIZWlnaHRTZXJ2aWNlLnRvdGFsSGVpZ2h0KCk7XG4gICAgICAgIGlmICghaXNVbml2ZXJzYWwoKSkge1xuICAgICAgICAgICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIodGhpcy5jcmVhdGVTY3JvbGxlci5iaW5kKHRoaXMpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBsb2NrZWRTY3JvbGwoKSB7XG4gICAgICAgIGlmICghdGhpcy5zdXNwZW5kU2VydmljZS5zY3JvbGwpIHtcbiAgICAgICAgICAgIGNvbnN0IGxvY2tlZFNjcm9sbFRvcCA9IHRoaXMubG9ja2VkQ29udGFpbmVyLm5hdGl2ZUVsZW1lbnQuc2Nyb2xsVG9wO1xuICAgICAgICAgICAgaWYgKGxvY2tlZFNjcm9sbFRvcCAhPT0gdGhpcy5jb250YWluZXJTY3JvbGxUb3ApIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5uYXRpdmVFbGVtZW50LnNjcm9sbFRvcCA9IHRoaXMuY29udGFpbmVyU2Nyb2xsVG9wID0gbG9ja2VkU2Nyb2xsVG9wO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGxvY2tlZE1vdXNld2hlZWwoYXJncykge1xuICAgICAgICBpZiAoIWFyZ3MuY3RybEtleSkge1xuICAgICAgICAgICAgcHJldmVudExvY2tlZFNjcm9sbChhcmdzLCB0aGlzLmNvbnRhaW5lci5uYXRpdmVFbGVtZW50KTtcbiAgICAgICAgICAgIGNvbnN0IHNjcm9sbERlbHRhID0gd2hlZWxEZWx0YVkoYXJncyk7XG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5uYXRpdmVFbGVtZW50LnNjcm9sbFRvcCAtPSBzY3JvbGxEZWx0YTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBsb2NrZWRLZXlkb3duKGFyZ3MpIHtcbiAgICAgICAgaWYgKGFyZ3Mua2V5Q29kZSA9PT0gS2V5cy5QYWdlRG93biB8fCBhcmdzLmtleUNvZGUgPT09IEtleXMuUGFnZVVwKSB7XG4gICAgICAgICAgICBjb25zdCBkaXIgPSBhcmdzLmtleUNvZGUgPT09IEtleXMuUGFnZURvd24gPyAxIDogLTE7XG4gICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gdGhpcy5jb250YWluZXIubmF0aXZlRWxlbWVudDtcbiAgICAgICAgICAgIGVsZW1lbnQuc2Nyb2xsVG9wICs9IGVsZW1lbnQub2Zmc2V0SGVpZ2h0ICogZGlyICogMC44O1xuICAgICAgICAgICAgYXJncy5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRldGFpbEV4cGFuZCh7IGluZGV4LCBleHBhbmQgfSkge1xuICAgICAgICBpZiAoZXhwYW5kKSB7XG4gICAgICAgICAgICB0aGlzLnJvd0hlaWdodFNlcnZpY2UuZXhwYW5kRGV0YWlsKGluZGV4KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucm93SGVpZ2h0U2VydmljZS5jb2xsYXBzZURldGFpbChpbmRleCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50b3RhbEhlaWdodCA9IHRoaXMucm93SGVpZ2h0U2VydmljZS50b3RhbEhlaWdodCgpO1xuICAgICAgICB0aGlzLnJlc2V0TmF2aWdhdGlvblZpZXdwb3J0KCk7XG4gICAgfVxuICAgIGF0dGFjaENvbnRhaW5lclNjcm9sbCgpIHtcbiAgICAgICAgaWYgKGlzVW5pdmVyc2FsKCkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuYWRkKGZyb21FdmVudCh0aGlzLmNvbnRhaW5lci5uYXRpdmVFbGVtZW50LCAnc2Nyb2xsJykucGlwZShtYXAoKGV2ZW50KSA9PiBldmVudC50YXJnZXQpLCBmaWx0ZXIoKCkgPT4gIXRoaXMuc3VzcGVuZFNlcnZpY2Uuc2Nyb2xsKSwgdGFwKCh0YXJnZXQpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLm9uQ29udGFpbmVyU2Nyb2xsKHRhcmdldCk7XG4gICAgICAgICAgICAgICAgdGhpcy5yZXNldE5hdmlnYXRpb25WaWV3cG9ydCgpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnZpcnR1YWxDb2x1bW5zKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlQ29sdW1uU2Nyb2xsKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHJvd1ZpZXdwb3J0ID0gdGhpcy5uYXZpZ2F0aW9uU2VydmljZS52aWV3cG9ydCB8fCBFTVBUWV9PQkpFQ1Q7XG4gICAgICAgICAgICAgICAgY29uc3QgY29sdW1uVmlld3BvcnQgPSB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmNvbHVtblZpZXdwb3J0IHx8IEVNUFRZX09CSkVDVDtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnRTY3JvbGwuZW1pdCh7XG4gICAgICAgICAgICAgICAgICAgIHNjcm9sbExlZnQ6IHRhcmdldC5zY3JvbGxMZWZ0LFxuICAgICAgICAgICAgICAgICAgICBzY3JvbGxUb3A6IHRhcmdldC5zY3JvbGxUb3AsXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0Um93OiByb3dWaWV3cG9ydC5maXJzdEl0ZW1JbmRleCxcbiAgICAgICAgICAgICAgICAgICAgZW5kUm93OiByb3dWaWV3cG9ydC5sYXN0SXRlbUluZGV4LFxuICAgICAgICAgICAgICAgICAgICBzdGFydENvbHVtbjogY29sdW1uVmlld3BvcnQuZmlyc3RJdGVtSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgIGVuZENvbHVtbjogY29sdW1uVmlld3BvcnQubGFzdEl0ZW1JbmRleFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSkpLnN1YnNjcmliZSh0aGlzLmRpc3BhdGNoZXIpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2Nyb2xsU3luY1NlcnZpY2UucmVnaXN0ZXJFbWl0dGVyKHRoaXMuY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQsIFwiYm9keVwiKTtcbiAgICB9XG4gICAgY3JlYXRlU2Nyb2xsZXIoKSB7XG4gICAgICAgIHRoaXMuY2xlYW51cFNjcm9sbGVyKCk7XG4gICAgICAgIGNvbnN0IG9ic2VydmFibGUgPSB0aGlzLnNjcm9sbGVyXG4gICAgICAgICAgICAuY3JlYXRlKHRoaXMucm93SGVpZ2h0U2VydmljZSwgdGhpcy5za2lwLCB0aGlzLnRha2UsIHRoaXMudG90YWwpO1xuICAgICAgICB0aGlzLnNraXBTY3JvbGwgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zY3JvbGxlclN1YnNjcmlwdGlvbiA9IG9ic2VydmFibGUucGlwZShmaWx0ZXIoKHgpID0+IHggaW5zdGFuY2VvZiBQYWdlQWN0aW9uKSwgZmlsdGVyKCgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRlbXAgPSB0aGlzLnNraXBTY3JvbGw7XG4gICAgICAgICAgICB0aGlzLnNraXBTY3JvbGwgPSBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybiAhdGVtcDtcbiAgICAgICAgfSksIHRhcCgoKSA9PiB0aGlzLnJlYmluZCA9IHRydWUpKVxuICAgICAgICAgICAgLnN1YnNjcmliZSgoeCkgPT4gdGhpcy5uZ1pvbmUucnVuKCgpID0+IHRoaXMucGFnZUNoYW5nZS5lbWl0KHgpKSk7XG4gICAgICAgIHRoaXMuc2Nyb2xsZXJTdWJzY3JpcHRpb24uYWRkKG9ic2VydmFibGUucGlwZShmaWx0ZXIoKHgpID0+IHggaW5zdGFuY2VvZiBTY3JvbGxBY3Rpb24pKVxuICAgICAgICAgICAgLnN1YnNjcmliZSh0aGlzLnNjcm9sbC5iaW5kKHRoaXMpKSk7XG4gICAgICAgIHRoaXMuc2Nyb2xsZXJTdWJzY3JpcHRpb24uYWRkKG9ic2VydmFibGUucGlwZShmaWx0ZXIoKHgpID0+IHggaW5zdGFuY2VvZiBTY3JvbGxCb3R0b21BY3Rpb24pKVxuICAgICAgICAgICAgLnN1YnNjcmliZSgoKSA9PiB0aGlzLnNjcm9sbEJvdHRvbS5lbWl0KCkpKTtcbiAgICB9XG4gICAgc2Nyb2xsKHsgb2Zmc2V0ID0gMCB9KSB7XG4gICAgICAgIGlmICh0aGlzLmlzVmlydHVhbCkge1xuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIG1heWJlTmF0aXZlRWxlbWVudCh0aGlzLnRhYmxlKSxcbiAgICAgICAgICAgICAgICBtYXliZU5hdGl2ZUVsZW1lbnQodGhpcy5sb2NrZWRUYWJsZSlcbiAgICAgICAgICAgIF0uZmlsdGVyKGlzUHJlc2VudCkuZm9yRWFjaCh0cmFuc2xhdGVZKHRoaXMucmVuZGVyZXIsIG9mZnNldCkpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucmVzZXROYXZpZ2F0aW9uVmlld3BvcnQoKTtcbiAgICB9XG4gICAgb25Db250YWluZXJTY3JvbGwoeyBzY3JvbGxUb3AgfSkge1xuICAgICAgICB0aGlzLmNvbnRhaW5lclNjcm9sbFRvcCA9IHNjcm9sbFRvcDtcbiAgICAgICAgaWYgKHRoaXMubG9ja2VkQ29udGFpbmVyKSB7XG4gICAgICAgICAgICB0aGlzLmxvY2tlZENvbnRhaW5lci5uYXRpdmVFbGVtZW50LnNjcm9sbFRvcCA9IHNjcm9sbFRvcDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBoYW5kbGVJbml0aWFsU2Nyb2xsVG9Ta2lwKCkge1xuICAgICAgICBjb25zdCBzaG91bGRTY3JvbGwgPSAoKSA9PiB0aGlzLmlzVmlydHVhbCAmJiB0aGlzLnNraXAgPiAwICYmIHRoaXMudG90YWwgPiAwO1xuICAgICAgICBjb25zdCBzdWIgPSB0aGlzLmNoYW5nZU5vdGlmaWNhdGlvbi5jaGFuZ2VzXG4gICAgICAgICAgICAucGlwZShmaWx0ZXIoc2hvdWxkU2Nyb2xsKSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoXyA9PiB7XG4gICAgICAgICAgICB0aGlzLnNjcm9sbFRvKHsgcm93OiB0aGlzLnNraXAgfSk7XG4gICAgICAgICAgICBzdWIudW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGhhbmRsZVJvd1N5bmMoKSB7XG4gICAgICAgIGNvbnN0IGlzTG9ja2VkID0gKCkgPT4gaXNQcmVzZW50KHRoaXMubG9ja2VkQ29udGFpbmVyKTtcbiAgICAgICAgY29uc3Qgb25TdGFibGUgPSAoKSA9PiB0aGlzLm5nWm9uZS5vblN0YWJsZS5hc09ic2VydmFibGUoKS5waXBlKHRha2UoMSkpO1xuICAgICAgICByZXR1cm4gbWVyZ2UodGhpcy5jaGFuZ2VOb3RpZmljYXRpb24uY2hhbmdlcywgdGhpcy5ncm91cHNTZXJ2aWNlLmNoYW5nZXNcbiAgICAgICAgICAgIC5waXBlKGZpbHRlcihpc0xvY2tlZCksIHN3aXRjaE1hcFRvKG9uU3RhYmxlKCkpKSwgdGhpcy5lZGl0U2VydmljZS5jaGFuZ2VkLCB0aGlzLnJlc2l6ZVNlcnZpY2UuY2hhbmdlcywgdGhpcy5jb2x1bW5SZXNpemluZ1NlcnZpY2UuY2hhbmdlc1xuICAgICAgICAgICAgLnBpcGUoZmlsdGVyKGNoYW5nZSA9PiBjaGFuZ2UudHlwZSA9PT0gJ2VuZCcpKSwgdGhpcy5zdXBwb3J0U2VydmljZS5jaGFuZ2VzKVxuICAgICAgICAgICAgLnBpcGUodGFwKCgpID0+IHRoaXMucmVzZXROYXZpZ2F0aW9uVmlld3BvcnQoKSksIGZpbHRlcihpc0xvY2tlZCkpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHNjcm9sbFRvcCA9IHRoaXMuY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQuc2Nyb2xsVG9wO1xuICAgICAgICAgICAgY29uc3Qgc2Nyb2xsTGVmdCA9IHRoaXMuY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQuc2Nyb2xsTGVmdDtcbiAgICAgICAgICAgIHRoaXMuc3luY1Jvd3NIZWlnaHQoKTtcbiAgICAgICAgICAgIHRoaXMuc3luY0NvbnRhaW5lckhlaWdodCgpO1xuICAgICAgICAgICAgdGhpcy5sb2NrZWRDb250YWluZXIubmF0aXZlRWxlbWVudC5zY3JvbGxUb3AgPSB0aGlzLmNvbnRhaW5lci5uYXRpdmVFbGVtZW50LnNjcm9sbFRvcCA9IHNjcm9sbFRvcDtcbiAgICAgICAgICAgIC8vIGZpeGVzIHNjcm9sbCBsZWZ0IHBvc2l0aW9uIGluIElFIHdoZW4gZWRpdGluZ1xuICAgICAgICAgICAgdGhpcy5jb250YWluZXIubmF0aXZlRWxlbWVudC5zY3JvbGxMZWZ0ID0gc2Nyb2xsTGVmdDtcbiAgICAgICAgICAgIHRoaXMucmVzaXplU2Vuc29ycy5mb3JFYWNoKHNlbnNvciA9PiBzZW5zb3IuYWNjZXB0U2l6ZSgpKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGhhbmRsZVJvd05hdmlnYXRpb25Mb2NrZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmNoYW5nZXMucGlwZShmaWx0ZXIoKCkgPT4gaXNQcmVzZW50KHRoaXMubG9ja2VkQ29udGFpbmVyKSksIGRlbGF5KDEwKSkuc3Vic2NyaWJlKChhcmdzKSA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy5sb2NrZWRMZWFmQ29sdW1ucy5sZW5ndGggPD0gYXJncy5wcmV2Q29sSW5kZXggJiYgYXJncy5jb2xJbmRleCA8IHRoaXMubG9ja2VkTGVhZkNvbHVtbnMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2VsbCA9IHRoaXMubmF2aWdhdGlvblNlcnZpY2UuYWN0aXZlQ2VsbDtcbiAgICAgICAgICAgICAgICBpZiAoY2VsbCAmJiBjZWxsLmNvbEluZGV4ICsgY2VsbC5jb2xTcGFuIDwgYXJncy5wcmV2Q29sSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXIubmF0aXZlRWxlbWVudC5zY3JvbGxMZWZ0ID0gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzY3JvbGxUb1ZpcnR1YWxSb3coaXRlbUluZGV4KSB7XG4gICAgICAgIGlmIChpc1ByZXNlbnQodGhpcy5kZXRhaWxUZW1wbGF0ZSkpIHtcbiAgICAgICAgICAgIGl0ZW1JbmRleCA9IE1hdGguZmxvb3IoaXRlbUluZGV4IC8gMik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb2Zmc2V0ID0gdGhpcy5yb3dIZWlnaHRTZXJ2aWNlLm9mZnNldChpdGVtSW5kZXgpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5uYXRpdmVFbGVtZW50LnNjcm9sbFRvcCA9IG9mZnNldDtcbiAgICAgICAgdGhpcy5yZXNldE5hdmlnYXRpb25WaWV3cG9ydCgpO1xuICAgIH1cbiAgICBzY3JvbGxUbyh7IHJvdywgY29sdW1uIH0pIHtcbiAgICAgICAgaWYgKGlzTnVtYmVyKHJvdykpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmlzVmlydHVhbCkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2Nyb2xsVG9WaXJ0dWFsUm93KHJvdyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gcm93QXQocm93LCB0aGlzLnRhYmxlLm5hdGl2ZUVsZW1lbnQucm93cyk7XG4gICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXIubmF0aXZlRWxlbWVudC5zY3JvbGxUb3AgPSBlbGVtZW50Lm9mZnNldFRvcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzTnVtYmVyKGNvbHVtbikpIHtcbiAgICAgICAgICAgIGNvbHVtbiAtPSB0aGlzLmxvY2tlZExlYWZDb2x1bW5zLmxlbmd0aDtcbiAgICAgICAgICAgIGlmICh0aGlzLnZpcnR1YWxDb2x1bW5zKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29sdW1ucyA9IHRoaXMuY29sdW1ucy5sZWFmQ29sdW1uc1RvUmVuZGVyO1xuICAgICAgICAgICAgICAgIGxldCBvZmZzZXQgPSAwO1xuICAgICAgICAgICAgICAgIGZvciAobGV0IGlkeCA9IDA7IGlkeCA8IGNvbHVtbjsgaWR4KyspIHtcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0ICs9IGNvbHVtbnNbaWR4XS53aWR0aCB8fCAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBzdGFydE9mZnNldCA9IHRoaXMubG9ja2VkTGVhZkNvbHVtbnMubGVuZ3RoID8gMCA6IHRoaXMuZ3JvdXBzLmxlbmd0aCAqIEdST1VQX0NFTExfV0lEVEggKyAodGhpcy5kZXRhaWxUZW1wbGF0ZSAmJiBjb2x1bW4gPiAwID8gR1JPVVBfQ0VMTF9XSURUSCA6IDApO1xuICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQuc2Nyb2xsTGVmdCA9IHRoaXMubm9ybWFsaXplU2Nyb2xsTGVmdChvZmZzZXQgKyBzdGFydE9mZnNldCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChjb2x1bW4gPT09IDAgJiYgdGhpcy5kZXRhaWxUZW1wbGF0ZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQuc2Nyb2xsTGVmdCA9IHRoaXMubm9ybWFsaXplU2Nyb2xsTGVmdCgwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpcnN0Um93ID0gcm93QXQoMCwgdGhpcy50YWJsZS5uYXRpdmVFbGVtZW50LnJvd3MpO1xuICAgICAgICAgICAgICAgIGlmIChmaXJzdFJvdykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gY2VsbEF0KGNvbHVtbiwgZmlyc3RSb3cuY2VsbHMpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXIubmF0aXZlRWxlbWVudC5zY3JvbGxMZWZ0ID0gdGhpcy5lbGVtZW50U2Nyb2xsTGVmdChlbGVtZW50KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXNldE5hdmlnYXRpb25WaWV3cG9ydCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmNvbnRhaW5lciB8fCAhdGhpcy5uYXZpZ2F0aW9uU2VydmljZS5lbmFibGVkIHx8XG4gICAgICAgICAgICAhdGhpcy5uYXZpZ2F0aW9uU2VydmljZS5uZWVkc1ZpZXdwb3J0KCkgfHwgdGhpcy5kYXRhLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHsgc2Nyb2xsVG9wLCBvZmZzZXRIZWlnaHQgfSA9IHRoaXMuY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIGNvbnN0IHNjcm9sbEJvdHRvbSA9IHNjcm9sbFRvcCArIG9mZnNldEhlaWdodDtcbiAgICAgICAgY29uc3QgZmlyc3RJdGVtSW5kZXggPSB0aGlzLnJvd0hlaWdodFNlcnZpY2UuaW5kZXgoc2Nyb2xsVG9wKTtcbiAgICAgICAgbGV0IGxhc3RJdGVtSW5kZXggPSB0aGlzLnJvd0hlaWdodFNlcnZpY2UuaW5kZXgoc2Nyb2xsQm90dG9tKTtcbiAgICAgICAgY29uc3QgbGFzdEl0ZW1PZmZzZXQgPSB0aGlzLnJvd0hlaWdodFNlcnZpY2Uub2Zmc2V0KGxhc3RJdGVtSW5kZXgpO1xuICAgICAgICBjb25zdCBsYXN0SXRlbU92ZXJmbG93cyA9IGxhc3RJdGVtT2Zmc2V0ICsgdGhpcy5yb3dIZWlnaHQgPiBzY3JvbGxCb3R0b207XG4gICAgICAgIGlmIChsYXN0SXRlbUluZGV4ID4gMCAmJiBsYXN0SXRlbU92ZXJmbG93cykge1xuICAgICAgICAgICAgbGFzdEl0ZW1JbmRleC0tO1xuICAgICAgICB9XG4gICAgICAgIGxldCB2aWV3cG9ydFN0YXJ0ID0gZmlyc3RJdGVtSW5kZXg7XG4gICAgICAgIGxldCB2aWV3cG9ydEVuZCA9IGxhc3RJdGVtSW5kZXg7XG4gICAgICAgIGlmIChpc1ByZXNlbnQodGhpcy5kZXRhaWxUZW1wbGF0ZSkpIHtcbiAgICAgICAgICAgIHZpZXdwb3J0U3RhcnQgKj0gMjtcbiAgICAgICAgICAgIHZpZXdwb3J0RW5kICo9IDI7XG4gICAgICAgICAgICBjb25zdCBmaXJzdEl0ZW1IZWlnaHQgPSB0aGlzLnJvd0hlaWdodFNlcnZpY2Uub2Zmc2V0KGZpcnN0SXRlbUluZGV4KTtcbiAgICAgICAgICAgIGlmIChmaXJzdEl0ZW1IZWlnaHQgKyB0aGlzLnJvd0hlaWdodCA8IHNjcm9sbFRvcCkge1xuICAgICAgICAgICAgICAgIHZpZXdwb3J0U3RhcnQrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGxhc3RJdGVtSGVpZ2h0ID0gdGhpcy5yb3dIZWlnaHRTZXJ2aWNlLmhlaWdodChsYXN0SXRlbUluZGV4KTtcbiAgICAgICAgICAgIGNvbnN0IGxhc3RJdGVtRXhwYW5kZWQgPSB0aGlzLnJvd0hlaWdodFNlcnZpY2UuaXNFeHBhbmRlZChsYXN0SXRlbUluZGV4KTtcbiAgICAgICAgICAgIGNvbnN0IGxhc3RJdGVtRGV0YWlsT3ZlcmZsb3dzID0gbGFzdEl0ZW1PZmZzZXQgKyBsYXN0SXRlbUhlaWdodCA+IHNjcm9sbEJvdHRvbTtcbiAgICAgICAgICAgIGlmIChsYXN0SXRlbUV4cGFuZGVkICYmICFsYXN0SXRlbURldGFpbE92ZXJmbG93cykge1xuICAgICAgICAgICAgICAgIHZpZXdwb3J0RW5kKys7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5uYXZpZ2F0aW9uU2VydmljZS5zZXRWaWV3cG9ydCh2aWV3cG9ydFN0YXJ0LCB2aWV3cG9ydEVuZCk7XG4gICAgfVxuICAgIGNsZWFudXBTY3JvbGxlcigpIHtcbiAgICAgICAgaWYgKHRoaXMuc2Nyb2xsZXJTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuc2Nyb2xsZXJTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5zY3JvbGxlcikge1xuICAgICAgICAgICAgdGhpcy5zY3JvbGxlci5kZXN0cm95KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaW5pdFJlc2l6ZVNlcnZpY2UoKSB7XG4gICAgICAgIHRoaXMucmVzaXplU2VydmljZS5jb25uZWN0KG1lcmdlKC4uLnRoaXMucmVzaXplU2Vuc29ycy5tYXAoc2Vuc29yID0+IHNlbnNvci5yZXNpemUpKSk7XG4gICAgfVxuICAgIHN5bmNDb250YWluZXJIZWlnaHQoKSB7XG4gICAgICAgIFttYXliZU5hdGl2ZUVsZW1lbnQodGhpcy5sb2NrZWRDb250YWluZXIpXVxuICAgICAgICAgICAgLmZpbHRlcihpc1ByZXNlbnQpXG4gICAgICAgICAgICAubWFwKGVsID0+IHtcbiAgICAgICAgICAgIGVsLnN0eWxlLmhlaWdodCA9ICcnO1xuICAgICAgICAgICAgbGV0IGhlaWdodCA9IHRoaXMuY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgICAgaWYgKGhhc1Njcm9sbGJhcih0aGlzLnRhYmxlLCB0aGlzLmNvbnRhaW5lcikpIHtcbiAgICAgICAgICAgICAgICBoZWlnaHQgLT0gdGhpcy5zdXBwb3J0U2VydmljZS5zY3JvbGxiYXJXaWR0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7IGVsLCBoZWlnaHQgfTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5mb3JFYWNoKHNldEhlaWdodCQxKHRoaXMucmVuZGVyZXIpKTtcbiAgICB9XG4gICAgdXBkYXRlVmlld3BvcnRDb2x1bW5zKHJhbmdlKSB7XG4gICAgICAgIGNvbnN0IGNvbHVtbnMgPSB0aGlzLmNvbHVtbnMubm9uTG9ja2VkTGVhZkNvbHVtbnMudG9BcnJheSgpO1xuICAgICAgICBsZXQgeyBzdGFydElkeCwgZW5kSWR4LCBvZmZzZXQgfSA9IHJhbmdlIHx8IHRoaXMuY2FsY3VsYXRlVmlld3BvcnRDb2x1bW5zKCk7XG4gICAgICAgIGNvbnN0IHN0YXJ0ID0gTWF0aC5tYXgoMCwgc3RhcnRJZHggLSBidWZmZXJTaXplKTtcbiAgICAgICAgY29uc3QgZW5kID0gTWF0aC5taW4oZW5kSWR4ICsgYnVmZmVyU2l6ZSwgY29sdW1ucy5sZW5ndGggLSAxKTtcbiAgICAgICAgaWYgKHN0YXJ0IDwgc3RhcnRJZHgpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGlkeCA9IHN0YXJ0SWR4IC0gMTsgaWR4ID49IHN0YXJ0OyBpZHgtLSkge1xuICAgICAgICAgICAgICAgIG9mZnNldCAtPSBjb2x1bW5zW2lkeF0ud2lkdGg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGN1cnJlbnRDb2x1bW5zID0gY29sdW1ucy5zbGljZShzdGFydCwgZW5kICsgMSk7XG4gICAgICAgIHRoaXMudmlld3BvcnRDb2x1bW5zV2lkdGggPSBjdXJyZW50Q29sdW1ucy5yZWR1Y2UoKHRvdGFsLCBjb2x1bW4pID0+IHRvdGFsICsgY29sdW1uLndpZHRoLCAwKTtcbiAgICAgICAgaWYgKHN0YXJ0ID4gMCkge1xuICAgICAgICAgICAgY29uc3Qgb2Zmc2V0Q29sdW1uID0gbmV3IENvbHVtbkJhc2UkMSgpO1xuICAgICAgICAgICAgb2Zmc2V0Q29sdW1uLndpZHRoID0gb2Zmc2V0O1xuICAgICAgICAgICAgY3VycmVudENvbHVtbnMudW5zaGlmdChvZmZzZXRDb2x1bW4pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudmlld3BvcnRDb2x1bW5zID0gbmV3IFF1ZXJ5TGlzdCgpO1xuICAgICAgICB0aGlzLnZpZXdwb3J0Q29sdW1ucy5yZXNldChjdXJyZW50Q29sdW1ucyk7XG4gICAgICAgIHRoaXMuY29sdW1uc1N0YXJ0SWR4ID0gc3RhcnQ7XG4gICAgICAgIHRoaXMuY29sdW1uc0VuZElkeCA9IGVuZDtcbiAgICAgICAgdGhpcy5jb2x1bW5JbmZvLmNvbHVtblJhbmdlQ2hhbmdlLmVtaXQoeyBzdGFydCwgZW5kLCBvZmZzZXQgfSk7XG4gICAgICAgIGlmICghcmFuZ2UpIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlQ29sdW1uVmlld3BvcnQoc3RhcnRJZHgsIGVuZElkeCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaGFuZGxlQ29sdW1uU2Nyb2xsKCkge1xuICAgICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLmNvbnRhaW5lci5uYXRpdmVFbGVtZW50O1xuICAgICAgICBjb25zdCBzY3JvbGxMZWZ0ID0gY29udGFpbmVyLnNjcm9sbExlZnQ7XG4gICAgICAgIGlmICh0aGlzLnNjcm9sbExlZnQgIT09IHNjcm9sbExlZnQpIHtcbiAgICAgICAgICAgIHRoaXMuc2Nyb2xsTGVmdCA9IHNjcm9sbExlZnQ7XG4gICAgICAgICAgICBjb25zdCByYW5nZSA9IHRoaXMuY2FsY3VsYXRlVmlld3BvcnRDb2x1bW5zKCk7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUNvbHVtblZpZXdwb3J0KHJhbmdlLnN0YXJ0SWR4LCByYW5nZS5lbmRJZHgpO1xuICAgICAgICAgICAgaWYgKHJhbmdlLnN0YXJ0SWR4IDwgdGhpcy5jb2x1bW5zU3RhcnRJZHggfHwgdGhpcy5jb2x1bW5zRW5kSWR4IDwgcmFuZ2UuZW5kSWR4KSB7XG4gICAgICAgICAgICAgICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy5jb2x1bW5VcGRhdGVGcmFtZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jb2x1bW5VcGRhdGVGcmFtZSA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubmdab25lLnJ1bigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVZpZXdwb3J0Q29sdW1ucyhyYW5nZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZURldGVjdG9yLm1hcmtGb3JDaGVjaygpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICB1cGRhdGVDb2x1bW5WaWV3cG9ydChzdGFydElkeCwgZW5kSWR4KSB7XG4gICAgICAgIGNvbnN0IGxvY2tlZENvdW50ID0gdGhpcy5sb2NrZWRMZWFmQ29sdW1ucy5sZW5ndGg7XG4gICAgICAgIGNvbnN0IGxlYWZDb2x1bW5zJCQxID0gdGhpcy5ub25Mb2NrZWRMZWFmQ29sdW1ucy50b0FycmF5KCk7XG4gICAgICAgIGNvbnN0IHZpZXdwb3J0U3RhcnQgPSBsb2NrZWRDb3VudCArIHN0YXJ0SWR4ICsgKHRoaXMuZGV0YWlsVGVtcGxhdGUgJiYgc3RhcnRJZHggPiAwID8gMSA6IDApO1xuICAgICAgICBsZXQgdmlld3BvcnRFbmQgPSBsb2NrZWRDb3VudCArIGVuZElkeCArICh0aGlzLmRldGFpbFRlbXBsYXRlID8gMSA6IDApO1xuICAgICAgICBmb3IgKGxldCBpZHggPSAwOyBpZHggPCBsZWFmQ29sdW1ucyQkMS5sZW5ndGg7IGlkeCsrKSB7XG4gICAgICAgICAgICBjb25zdCBjb2x1bW4gPSBsZWFmQ29sdW1ucyQkMVtpZHhdO1xuICAgICAgICAgICAgaWYgKGNvbHVtbi5pc1NwYW5Db2x1bW4pIHtcbiAgICAgICAgICAgICAgICB2aWV3cG9ydEVuZCArPSBjb2x1bW4uY2hpbGRDb2x1bW5zLmxlbmd0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLnNldENvbHVtblZpZXdwb3J0KHZpZXdwb3J0U3RhcnQsIHZpZXdwb3J0RW5kKTtcbiAgICB9XG4gICAgY2FsY3VsYXRlVmlld3BvcnRDb2x1bW5zKCkge1xuICAgICAgICBjb25zdCB7IHNjcm9sbExlZnQsIGNsaWVudFdpZHRoIH0gPSB0aGlzLmNvbnRhaW5lci5uYXRpdmVFbGVtZW50O1xuICAgICAgICBjb25zdCBjb2x1bW5zID0gdGhpcy5jb2x1bW5zLm5vbkxvY2tlZExlYWZDb2x1bW5zLnRvQXJyYXkoKTtcbiAgICAgICAgY29uc3Qgbm9ybWFsaXplZFNjcm9sbExlZnQgPSB0aGlzLm5vcm1hbGl6ZVNjcm9sbExlZnQoc2Nyb2xsTGVmdCk7XG4gICAgICAgIGNvbnN0IHZpZXdwb3J0RW5kID0gbm9ybWFsaXplZFNjcm9sbExlZnQgKyBjbGllbnRXaWR0aDtcbiAgICAgICAgbGV0IHN0YXJ0SWR4O1xuICAgICAgICBsZXQgZW5kSWR4ID0gMDtcbiAgICAgICAgbGV0IGN1cnJlbnQgPSAwO1xuICAgICAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICAgICAgbGV0IGlkeDtcbiAgICAgICAgZm9yIChpZHggPSAwOyBpZHggPCBjb2x1bW5zLmxlbmd0aDsgaWR4KyspIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbHVtbiA9IGNvbHVtbnNbaWR4XTtcbiAgICAgICAgICAgIGN1cnJlbnQgKz0gY29sdW1uLndpZHRoIHx8IDA7XG4gICAgICAgICAgICBpZiAoc3RhcnRJZHggPT09IHVuZGVmaW5lZCAmJiBjdXJyZW50ID4gbm9ybWFsaXplZFNjcm9sbExlZnQpIHtcbiAgICAgICAgICAgICAgICBzdGFydElkeCA9IGlkeDtcbiAgICAgICAgICAgICAgICBvZmZzZXQgPSBjdXJyZW50IC0gKGNvbHVtbi53aWR0aCB8fCAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChjdXJyZW50ID49IHZpZXdwb3J0RW5kKSB7XG4gICAgICAgICAgICAgICAgZW5kSWR4ID0gaWR4O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghZW5kSWR4ICYmIGlkeCA+IDApIHtcbiAgICAgICAgICAgIGVuZElkeCA9IGNvbHVtbnMubGVuZ3RoIC0gMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBzdGFydElkeCwgZW5kSWR4LCBvZmZzZXQgfTtcbiAgICB9XG4gICAgdmlld3BvcnRXaWR0aENoYW5nZSgpIHtcbiAgICAgICAgY29uc3QgY3VycmVudFdpZHRoID0gdGhpcy52aWV3cG9ydENvbHVtbnMudG9BcnJheSgpLnJlZHVjZSgodG90YWwsIGNvbHVtbikgPT4gdG90YWwgKyBjb2x1bW4ud2lkdGgsIDApO1xuICAgICAgICByZXR1cm4gY3VycmVudFdpZHRoICE9PSB0aGlzLnZpZXdwb3J0Q29sdW1uc1dpZHRoO1xuICAgIH1cbiAgICBub3JtYWxpemVTY3JvbGxMZWZ0KHBvc2l0aW9uKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJ0bCA/IHJ0bFNjcm9sbFBvc2l0aW9uKHBvc2l0aW9uLCB0aGlzLmNvbnRhaW5lci5uYXRpdmVFbGVtZW50LCB0aGlzLnN1cHBvcnRTZXJ2aWNlLnJ0bFNjcm9sbExlZnQpIDogcG9zaXRpb247XG4gICAgfVxuICAgIGVsZW1lbnRTY3JvbGxMZWZ0KGVsZW1lbnQpIHtcbiAgICAgICAgaWYgKHRoaXMucnRsKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5ub3JtYWxpemVTY3JvbGxMZWZ0KHRoaXMuY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQuc2Nyb2xsV2lkdGggLSBlbGVtZW50Lm9mZnNldExlZnQgLSBlbGVtZW50Lm9mZnNldFdpZHRoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZWxlbWVudC5vZmZzZXRMZWZ0O1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZyhcImNsYXNzLmstZ3JpZC1jb250YWluZXJcIiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIExpc3RDb21wb25lbnQucHJvdG90eXBlLCBcImhvc3RDbGFzc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKFwiYXR0ci5yb2xlXCIpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIExpc3RDb21wb25lbnQucHJvdG90eXBlLCBcImhvc3RSb2xlXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQXJyYXkpXG5dLCBMaXN0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJkYXRhXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBBcnJheSlcbl0sIExpc3RDb21wb25lbnQucHJvdG90eXBlLCBcImdyb3Vwc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwidG90YWxcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIExpc3RDb21wb25lbnQucHJvdG90eXBlLCBcInJvd0hlaWdodFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwic3RpY2t5Um93SGVpZ2h0XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG5dLCBMaXN0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJkZXRhaWxSb3dIZWlnaHRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIExpc3RDb21wb25lbnQucHJvdG90eXBlLCBcInRha2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIExpc3RDb21wb25lbnQucHJvdG90eXBlLCBcInNraXBcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIENvbHVtbnNDb250YWluZXIpXG5dLCBMaXN0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJjb2x1bW5zXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBEZXRhaWxUZW1wbGF0ZURpcmVjdGl2ZSlcbl0sIExpc3RDb21wb25lbnQucHJvdG90eXBlLCBcImRldGFpbFRlbXBsYXRlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOb1JlY29yZHNUZW1wbGF0ZURpcmVjdGl2ZSlcbl0sIExpc3RDb21wb25lbnQucHJvdG90eXBlLCBcIm5vUmVjb3Jkc1RlbXBsYXRlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBMaXN0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJzZWxlY3RhYmxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBMaXN0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJncm91cGFibGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIExpc3RDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlcmFibGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZ1bmN0aW9uKVxuXSwgTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwicm93Q2xhc3NcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZ1bmN0aW9uKVxuXSwgTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwicm93U3RpY2t5XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwibG9hZGluZ1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pXG5dLCBMaXN0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJ0cmFja0J5XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwidmlydHVhbENvbHVtbnNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBMaXN0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJpc1ZpcnR1YWxcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFRlbXBsYXRlUmVmKVxuXSwgTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwibG9hZGluZ1RlbXBsYXRlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwiY29udGVudFNjcm9sbFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIExpc3RDb21wb25lbnQucHJvdG90eXBlLCBcInBhZ2VDaGFuZ2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBMaXN0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJzY3JvbGxCb3R0b21cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIFZpZXdDaGlsZCgnY29udGFpbmVyJywgeyBzdGF0aWM6IHRydWUgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEVsZW1lbnRSZWYpXG5dLCBMaXN0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJjb250YWluZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIFZpZXdDaGlsZCgnbG9ja2VkQ29udGFpbmVyJywgeyBzdGF0aWM6IGZhbHNlIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFbGVtZW50UmVmKVxuXSwgTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwibG9ja2VkQ29udGFpbmVyXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBWaWV3Q2hpbGQoJ2xvY2tlZFRhYmxlJywgeyBzdGF0aWM6IGZhbHNlIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFbGVtZW50UmVmKVxuXSwgTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwibG9ja2VkVGFibGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIFZpZXdDaGlsZCgndGFibGUnLCB7IHN0YXRpYzogdHJ1ZSB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRWxlbWVudFJlZilcbl0sIExpc3RDb21wb25lbnQucHJvdG90eXBlLCBcInRhYmxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBWaWV3Q2hpbGRyZW4oUmVzaXplU2Vuc29yQ29tcG9uZW50KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgUXVlcnlMaXN0KVxuXSwgTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwicmVzaXplU2Vuc29yc1wiLCB2b2lkIDApO1xuTGlzdENvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IFNDUk9MTEVSX0ZBQ1RPUllfVE9LRU4sXG4gICAgICAgICAgICAgICAgdXNlVmFsdWU6IERFRkFVTFRfU0NST0xMRVJfRkFDVE9SWVxuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWdyaWQtbGlzdCcsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgPGRpdiAjbG9ja2VkQ29udGFpbmVyIGNsYXNzPVwiay1ncmlkLWNvbnRlbnQtbG9ja2VkXCIgcm9sZT1cInByZXNlbnRhdGlvblwiXG4gICAgICAgICpuZ0lmPVwiaXNMb2NrZWRcIiBbc3R5bGUud2lkdGgucHhdPVwibG9ja2VkV2lkdGhcIlxuICAgICAgICBba2VuZG9FdmVudHNPdXRzaWRlQW5ndWxhcl09XCJ7XG4gICAgICAgICAgICBrZXlkb3duOiBsb2NrZWRLZXlkb3duLFxuICAgICAgICAgICAgc2Nyb2xsOiBsb2NrZWRTY3JvbGwsXG4gICAgICAgICAgICBtb3VzZXdoZWVsOiBsb2NrZWRNb3VzZXdoZWVsLFxuICAgICAgICAgICAgRE9NTW91c2VTY3JvbGw6IGxvY2tlZE1vdXNld2hlZWxcbiAgICAgICAgfVwiXG4gICAgICAgIFtzY29wZV09XCJ0aGlzXCJcbiAgICAgICAgPlxuICAgICAgICA8ZGl2IHJvbGU9XCJwcmVzZW50YXRpb25cIiBjbGFzcz1cImstZ3JpZC10YWJsZS13cmFwXCI+XG4gICAgICAgICAgICA8dGFibGUgW2xvY2tlZF09XCJ0cnVlXCIgI2xvY2tlZFRhYmxlIGNsYXNzPVwiay1ncmlkLXRhYmxlXCIgcm9sZT1cInByZXNlbnRhdGlvblwiIFtzdHlsZS53aWR0aC5weF09XCJsb2NrZWRXaWR0aFwiPlxuICAgICAgICAgICAgICAgIDxjb2xncm91cCBrZW5kb0dyaWRDb2xHcm91cFxuICAgICAgICAgICAgICAgICAgICByb2xlPVwicHJlc2VudGF0aW9uXCJcbiAgICAgICAgICAgICAgICAgICAgW2dyb3Vwc109XCJncm91cHNcIlxuICAgICAgICAgICAgICAgICAgICBbY29sdW1uc109XCJsb2NrZWRMZWFmQ29sdW1uc1wiXG4gICAgICAgICAgICAgICAgICAgIFtkZXRhaWxUZW1wbGF0ZV09XCJkZXRhaWxUZW1wbGF0ZVwiPlxuICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XG4gICAgICAgICAgICAgICAgPHRib2R5IGtlbmRvR3JpZFRhYmxlQm9keVxuICAgICAgICAgICAgICAgICAgICByb2xlPVwicHJlc2VudGF0aW9uXCJcbiAgICAgICAgICAgICAgICAgICAgW2dyb3Vwc109XCJncm91cHNcIlxuICAgICAgICAgICAgICAgICAgICBbaXNMb2NrZWRdPVwidHJ1ZVwiXG4gICAgICAgICAgICAgICAgICAgIFtkYXRhXT1cImRhdGFcIlxuICAgICAgICAgICAgICAgICAgICBbbm9SZWNvcmRzVGV4dF09XCInJ1wiXG4gICAgICAgICAgICAgICAgICAgIFtjb2x1bW5zXT1cImxvY2tlZExlYWZDb2x1bW5zXCJcbiAgICAgICAgICAgICAgICAgICAgW3RvdGFsQ29sdW1uc0NvdW50XT1cImxlYWZDb2x1bW5zLmxlbmd0aFwiXG4gICAgICAgICAgICAgICAgICAgIFtkZXRhaWxUZW1wbGF0ZV09XCJkZXRhaWxUZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgIFtzaG93R3JvdXBGb290ZXJzXT1cInNob3dGb290ZXJcIlxuICAgICAgICAgICAgICAgICAgICBbc2tpcF09XCJza2lwXCJcbiAgICAgICAgICAgICAgICAgICAgW3NlbGVjdGFibGVdPVwic2VsZWN0YWJsZVwiXG4gICAgICAgICAgICAgICAgICAgIFt0cmFja0J5XT1cInRyYWNrQnlcIlxuICAgICAgICAgICAgICAgICAgICBbZmlsdGVyYWJsZV09XCJmaWx0ZXJhYmxlXCJcbiAgICAgICAgICAgICAgICAgICAgW3Jvd0NsYXNzXT1cInJvd0NsYXNzXCJcbiAgICAgICAgICAgICAgICAgICAgW2lzTG9hZGluZ109XCJsb2FkaW5nXCJcbiAgICAgICAgICAgICAgICAgICAgW2lzVmlydHVhbF09XCJpc1ZpcnR1YWxcIlxuICAgICAgICAgICAgICAgICAgICBbbG9hZGluZ1RlbXBsYXRlXT1cImxvYWRpbmdUZW1wbGF0ZVwiPlxuICAgICAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICAgICAgPGtlbmRvLXJlc2l6ZS1zZW5zb3I+PC9rZW5kby1yZXNpemUtc2Vuc29yPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImstaGVpZ2h0LWNvbnRhaW5lclwiIHJvbGU9XCJwcmVzZW50YXRpb25cIj5cbiAgICAgICAgICAgIDxkaXYgW3N0eWxlLmhlaWdodC5weF09XCJ0b3RhbEhlaWdodFwiPjwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj48ZGl2ICNjb250YWluZXJcbiAgICAgICAgICAgICAgIGNsYXNzPVwiay1ncmlkLWNvbnRlbnQgay12aXJ0dWFsLWNvbnRlbnRcIlxuICAgICAgICAgICAgICAgcm9sZT1cInByZXNlbnRhdGlvblwiIHRhYmluZGV4PVwiLTFcIlxuICAgICAgICAgICAgICAgW2tlbmRvR3JpZFJlc2l6YWJsZUNvbnRhaW5lcl09XCJsb2NrZWRMZWFmQ29sdW1ucy5sZW5ndGhcIlxuICAgICAgICAgICAgICAgW2xvY2tlZFdpZHRoXT1cImxvY2tlZFdpZHRoICsgMVwiPlxuICAgICAgICA8ZGl2IHJvbGU9XCJwcmVzZW50YXRpb25cIiBjbGFzcz1cImstZ3JpZC10YWJsZS13cmFwXCI+XG4gICAgICAgICAgICA8dGFibGUgW3N0eWxlLndpZHRoLnB4XT1cIm5vbkxvY2tlZFdpZHRoXCIgI3RhYmxlIFt2aXJ0dWFsQ29sdW1uc109XCJ2aXJ0dWFsQ29sdW1uc1wiXG4gICAgICAgICAgICAgIGNsYXNzPVwiay1ncmlkLXRhYmxlXCIgcm9sZT1cInByZXNlbnRhdGlvblwiPlxuICAgICAgICAgICAgICAgIDxjb2xncm91cCBrZW5kb0dyaWRDb2xHcm91cFxuICAgICAgICAgICAgICAgICAgICByb2xlPVwicHJlc2VudGF0aW9uXCJcbiAgICAgICAgICAgICAgICAgICAgW2dyb3Vwc109XCJpc0xvY2tlZCA/IFtdIDogZ3JvdXBzXCJcbiAgICAgICAgICAgICAgICAgICAgW2NvbHVtbnNdPVwibm9uTG9ja2VkQ29sdW1uc1RvUmVuZGVyXCJcbiAgICAgICAgICAgICAgICAgICAgW2RldGFpbFRlbXBsYXRlXT1cImRldGFpbFRlbXBsYXRlXCI+XG4gICAgICAgICAgICAgICAgPC9jb2xncm91cD5cbiAgICAgICAgICAgICAgICA8dGJvZHkga2VuZG9HcmlkVGFibGVCb2R5XG4gICAgICAgICAgICAgICAgICAgIHJvbGU9XCJwcmVzZW50YXRpb25cIlxuICAgICAgICAgICAgICAgICAgICBbc2tpcEdyb3VwRGVjb3JhdGlvbl09XCJpc0xvY2tlZFwiXG4gICAgICAgICAgICAgICAgICAgIFtkYXRhXT1cImRhdGFcIlxuICAgICAgICAgICAgICAgICAgICBbZ3JvdXBzXT1cImdyb3Vwc1wiXG4gICAgICAgICAgICAgICAgICAgIFtzaG93R3JvdXBGb290ZXJzXT1cInNob3dGb290ZXJcIlxuICAgICAgICAgICAgICAgICAgICBbY29sdW1uc109XCJub25Mb2NrZWRDb2x1bW5zVG9SZW5kZXJcIlxuICAgICAgICAgICAgICAgICAgICBbYWxsQ29sdW1uc109XCJub25Mb2NrZWRMZWFmQ29sdW1uc1wiXG4gICAgICAgICAgICAgICAgICAgIFtkZXRhaWxUZW1wbGF0ZV09XCJkZXRhaWxUZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgIFtub1JlY29yZHNUZW1wbGF0ZV09XCJub1JlY29yZHNUZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgIFtsb2NrZWRDb2x1bW5zQ291bnRdPVwibG9ja2VkTGVhZkNvbHVtbnMubGVuZ3RoXCJcbiAgICAgICAgICAgICAgICAgICAgW3RvdGFsQ29sdW1uc0NvdW50XT1cImxlYWZDb2x1bW5zLmxlbmd0aFwiXG4gICAgICAgICAgICAgICAgICAgIFtza2lwXT1cInNraXBcIlxuICAgICAgICAgICAgICAgICAgICBbc2VsZWN0YWJsZV09XCJzZWxlY3RhYmxlXCJcbiAgICAgICAgICAgICAgICAgICAgW3RyYWNrQnldPVwidHJhY2tCeVwiXG4gICAgICAgICAgICAgICAgICAgIFtmaWx0ZXJhYmxlXT1cImZpbHRlcmFibGVcIlxuICAgICAgICAgICAgICAgICAgICBbcm93Q2xhc3NdPVwicm93Q2xhc3NcIlxuICAgICAgICAgICAgICAgICAgICBbcm93U3RpY2t5XT1cInJvd1N0aWNreVwiXG4gICAgICAgICAgICAgICAgICAgIFt2aXJ0dWFsQ29sdW1uc109XCJ2aXJ0dWFsQ29sdW1uc1wiXG4gICAgICAgICAgICAgICAgICAgIFtpc0xvYWRpbmddPVwibG9hZGluZ1wiXG4gICAgICAgICAgICAgICAgICAgIFtpc1ZpcnR1YWxdPVwiaXNWaXJ0dWFsXCJcbiAgICAgICAgICAgICAgICAgICAgW2xvYWRpbmdUZW1wbGF0ZV09XCJsb2FkaW5nVGVtcGxhdGVcIj5cbiAgICAgICAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICAgICAgPC90YWJsZT5cbiAgICAgICAgICAgIDxrZW5kby1yZXNpemUtc2Vuc29yICpuZ0lmPVwiaXNMb2NrZWRcIj48L2tlbmRvLXJlc2l6ZS1zZW5zb3I+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8a2VuZG8tcmVzaXplLXNlbnNvciAqbmdJZj1cImlzTG9ja2VkIHx8IHZpcnR1YWxDb2x1bW5zXCI+PC9rZW5kby1yZXNpemUtc2Vuc29yPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiay1oZWlnaHQtY29udGFpbmVyXCIgcm9sZT1cInByZXNlbnRhdGlvblwiPlxuICAgICAgICAgICAgPGRpdiBbc3R5bGUuaGVpZ2h0LnB4XT1cInRvdGFsSGVpZ2h0XCI+PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2ICpuZ0lmPVwidmlydHVhbENvbHVtbnNcIiBjbGFzcz1cImstd2lkdGgtY29udGFpbmVyXCIgcm9sZT1cInByZXNlbnRhdGlvblwiPlxuICAgICAgICAgICAgPGRpdiBbc3R5bGUud2lkdGgucHhdPVwidG90YWxXaWR0aFwiPjwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2ICpuZ0lmPVwibG9hZGluZ1wiIGtlbmRvR3JpZExvYWRpbmc+XG4gICAgPC9kaXY+XG4gICAgYFxuICAgIH0pLFxuICAgIF9fcGFyYW0oMCwgSW5qZWN0KFNDUk9MTEVSX0ZBQ1RPUllfVE9LRU4pKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdCwgRGV0YWlsc1NlcnZpY2UsXG4gICAgICAgIENoYW5nZU5vdGlmaWNhdGlvblNlcnZpY2UsXG4gICAgICAgIFN1c3BlbmRTZXJ2aWNlLFxuICAgICAgICBHcm91cHNTZXJ2aWNlLFxuICAgICAgICBOZ1pvbmUsXG4gICAgICAgIFJlbmRlcmVyMixcbiAgICAgICAgU2Nyb2xsU3luY1NlcnZpY2UsXG4gICAgICAgIFJlc2l6ZVNlcnZpY2UsXG4gICAgICAgIEVkaXRTZXJ2aWNlLFxuICAgICAgICBCcm93c2VyU3VwcG9ydFNlcnZpY2UsXG4gICAgICAgIE5hdmlnYXRpb25TZXJ2aWNlLFxuICAgICAgICBTY3JvbGxSZXF1ZXN0U2VydmljZSxcbiAgICAgICAgTG9jYWxpemF0aW9uU2VydmljZSxcbiAgICAgICAgQ29sdW1uUmVzaXppbmdTZXJ2aWNlLFxuICAgICAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICAgICAgUERGU2VydmljZSxcbiAgICAgICAgQ29sdW1uSW5mb1NlcnZpY2VdKVxuXSwgTGlzdENvbXBvbmVudCk7XG5cbi8qKlxuICogQSBkaXJlY3RpdmUgd2hpY2ggZW5jYXBzdWxhdGVzIHRoZSBpbi1tZW1vcnkgaGFuZGxpbmcgb2YgZGF0YSBvcGVyYXRpb25zIHN1Y2ggYXMgW3BhZ2luZ10oeyUgc2x1ZyBwYWdpbmdfZ3JpZCAlfSksXG4gKiBbc29ydGluZ10oeyUgc2x1ZyBzb3J0aW5nX2dyaWQgJX0pLCBhbmQgW2dyb3VwaW5nXSh7JSBzbHVnIGdyb3VwaW5nYmFzaWNzX2dyaWQgJX0pXG4gKiAoW21vcmUgaW5mb3JtYXRpb24gYW5kIGV4YW1wbGVzXSh7JSBzbHVnIGF1dG9tYXRpY29wZXJhdGlvbnNfZ3JpZCAlfSkpLlxuICovXG5sZXQgRGF0YUJpbmRpbmdEaXJlY3RpdmUgPSBjbGFzcyBEYXRhQmluZGluZ0RpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IoZ3JpZCwgY2hhbmdlRGV0ZWN0b3IsIGxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlKSB7XG4gICAgICAgIHRoaXMuZ3JpZCA9IGdyaWQ7XG4gICAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IgPSBjaGFuZ2VEZXRlY3RvcjtcbiAgICAgICAgdGhpcy5sb2NhbERhdGFDaGFuZ2VzU2VydmljZSA9IGxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgc2tpcDogMFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLm9yaWdpbmFsRGF0YSA9IFtdO1xuICAgICAgICBpZiAobG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2UpIHtcbiAgICAgICAgICAgIHRoaXMuZGF0YUNoYW5nZWRTdWJzY3JpcHRpb24gPSB0aGlzLmxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlLmNoYW5nZXMuc3Vic2NyaWJlKHRoaXMucmViaW5kLmJpbmQodGhpcykpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlZmluZXMgdGhlIG51bWJlciBvZiByZWNvcmRzIHRoYXQgd2lsbCBiZSBza2lwcGVkIGJ5IHRoZSBwYWdlci5cbiAgICAgKi9cbiAgICBzZXQgc2tpcCh2YWx1ZSkge1xuICAgICAgICBpZiAoIWlzUHJlc2VudCh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHZhbHVlID0gMDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmdyaWQuc2tpcCA9IHRoaXMuc3RhdGUuc2tpcCA9IHZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIHRoZSBkZXNjcmlwdG9ycyBieSB3aGljaCB0aGUgZGF0YSB3aWxsIGJlIHNvcnRlZC5cbiAgICAgKi9cbiAgICBzZXQgc29ydCh2YWx1ZSkge1xuICAgICAgICB0aGlzLmdyaWQuc29ydCA9IHRoaXMuc3RhdGUuc29ydCA9IHZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIHRoZSBkZXNjcmlwdG9yIGJ5IHdoaWNoIHRoZSBkYXRhIHdpbGwgYmUgZmlsdGVyZWQuXG4gICAgICovXG4gICAgc2V0IGZpbHRlcih2YWx1ZSkge1xuICAgICAgICB0aGlzLmdyaWQuZmlsdGVyID0gdGhpcy5zdGF0ZS5maWx0ZXIgPSB2YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyB0aGUgcGFnZSBzaXplIHVzZWQgYnkgdGhlIEdyaWQgcGFnZXIuXG4gICAgICovXG4gICAgc2V0IHBhZ2VTaXplKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuZ3JpZC5wYWdlU2l6ZSA9IHRoaXMuc3RhdGUudGFrZSA9IHZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgZGVzY3JpcHRvcnMgYnkgd2hpY2ggdGhlIGRhdGEgd2lsbCBiZSBncm91cGVkLlxuICAgICAqL1xuICAgIHNldCBncm91cCh2YWx1ZSkge1xuICAgICAgICB0aGlzLmdyaWQuZ3JvdXAgPSB0aGlzLnN0YXRlLmdyb3VwID0gdmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBhcnJheSBvZiBkYXRhIHdoaWNoIHdpbGwgYmUgdXNlZCB0byBwb3B1bGF0ZSB0aGUgR3JpZC5cbiAgICAgKi9cbiAgICBzZXQgZGF0YSh2YWx1ZSkge1xuICAgICAgICB0aGlzLm9yaWdpbmFsRGF0YSA9IHZhbHVlIHx8IFtdO1xuICAgICAgICBpZiAodGhpcy5sb2NhbERhdGFDaGFuZ2VzU2VydmljZSkge1xuICAgICAgICAgICAgdGhpcy5sb2NhbERhdGFDaGFuZ2VzU2VydmljZS5kYXRhID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5kYXRhQ2hhbmdlZCA9IHRydWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5hcHBseVN0YXRlKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLnN0YXRlQ2hhbmdlU3Vic2NyaXB0aW9uID0gdGhpcy5ncmlkXG4gICAgICAgICAgICAuZGF0YVN0YXRlQ2hhbmdlXG4gICAgICAgICAgICAuc3Vic2NyaWJlKHRoaXMub25TdGF0ZUNoYW5nZS5iaW5kKHRoaXMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZUNoYW5nZVN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5zdGF0ZUNoYW5nZVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmRhdGFDaGFuZ2VkU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmRhdGFDaGFuZ2VkU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXMpIHtcbiAgICAgICAgaWYgKGFueUNoYW5nZWQoW1wicGFnZVNpemVcIiwgXCJza2lwXCIsIFwic29ydFwiLCBcImdyb3VwXCIsIFwiZmlsdGVyXCJdLCBjaGFuZ2VzKSkge1xuICAgICAgICAgICAgdGhpcy5yZWJpbmQoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBuZ0RvQ2hlY2soKSB7XG4gICAgICAgIGlmICh0aGlzLmRhdGFDaGFuZ2VkKSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUdyaWREYXRhKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uU3RhdGVDaGFuZ2Uoc3RhdGUkJDEpIHtcbiAgICAgICAgdGhpcy5hcHBseVN0YXRlKHN0YXRlJCQxKTtcbiAgICAgICAgdGhpcy5yZWJpbmQoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlYmluZCgpIHtcbiAgICAgICAgdGhpcy5kYXRhID0gdGhpcy5vcmlnaW5hbERhdGE7XG4gICAgICAgIHRoaXMudXBkYXRlR3JpZERhdGEoKTtcbiAgICAgICAgdGhpcy5ub3RpZnlEYXRhQ2hhbmdlKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE5vdGlmaWVzIHRoZSBHcmlkIHRoYXQgaXRzIGRhdGEgaGFzIGNoYW5nZWQuXG4gICAgICovXG4gICAgbm90aWZ5RGF0YUNoYW5nZSgpIHtcbiAgICAgICAgdGhpcy5ncmlkLm9uRGF0YUNoYW5nZSgpO1xuICAgICAgICBpZiAodGhpcy5jaGFuZ2VEZXRlY3Rvcikge1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VEZXRlY3Rvci5tYXJrRm9yQ2hlY2soKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwcm9jZXNzKHN0YXRlJCQxKSB7XG4gICAgICAgIHJldHVybiBwcm9jZXNzKHRoaXMub3JpZ2luYWxEYXRhLCBzdGF0ZSQkMSk7XG4gICAgfVxuICAgIGFwcGx5U3RhdGUoeyBza2lwLCB0YWtlOiB0YWtlJCQxLCBzb3J0LCBncm91cCwgZmlsdGVyOiBmaWx0ZXIkJDEgfSkge1xuICAgICAgICB0aGlzLnNraXAgPSBza2lwO1xuICAgICAgICB0aGlzLnBhZ2VTaXplID0gdGFrZSQkMTtcbiAgICAgICAgdGhpcy5zb3J0ID0gc29ydDtcbiAgICAgICAgdGhpcy5ncm91cCA9IGdyb3VwO1xuICAgICAgICB0aGlzLmZpbHRlciA9IGZpbHRlciQkMTtcbiAgICB9XG4gICAgdXBkYXRlR3JpZERhdGEoKSB7XG4gICAgICAgIHRoaXMuZ3JpZC5kYXRhID0gdGhpcy5wcm9jZXNzKHRoaXMuc3RhdGUpO1xuICAgICAgICB0aGlzLmRhdGFDaGFuZ2VkID0gZmFsc2U7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlciksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtOdW1iZXJdKVxuXSwgRGF0YUJpbmRpbmdEaXJlY3RpdmUucHJvdG90eXBlLCBcInNraXBcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBBcnJheSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtBcnJheV0pXG5dLCBEYXRhQmluZGluZ0RpcmVjdGl2ZS5wcm90b3R5cGUsIFwic29ydFwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKVxuXSwgRGF0YUJpbmRpbmdEaXJlY3RpdmUucHJvdG90eXBlLCBcImZpbHRlclwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlciksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtOdW1iZXJdKVxuXSwgRGF0YUJpbmRpbmdEaXJlY3RpdmUucHJvdG90eXBlLCBcInBhZ2VTaXplXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQXJyYXkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbQXJyYXldKVxuXSwgRGF0YUJpbmRpbmdEaXJlY3RpdmUucHJvdG90eXBlLCBcImdyb3VwXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoXCJrZW5kb0dyaWRCaW5kaW5nXCIpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBBcnJheSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtBcnJheV0pXG5dLCBEYXRhQmluZGluZ0RpcmVjdGl2ZS5wcm90b3R5cGUsIFwiZGF0YVwiLCBudWxsKTtcbkRhdGFCaW5kaW5nRGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkQmluZGluZ10nXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtHcmlkQ29tcG9uZW50LFxuICAgICAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICAgICAgTG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2VdKVxuXSwgRGF0YUJpbmRpbmdEaXJlY3RpdmUpO1xuXG4vKipcbiAqIEEgZGlyZWN0aXZlIHdoaWNoIHN0b3JlcyB0aGUgcm93IHNlbGVjdGlvbiBzdGF0ZSBvZiB0aGUgR3JpZCBpbiBtZW1vcnlcbiAqIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgc2VsZWN0aW9uX2dyaWQgJX0jdG9jLWR1cmluZy1kYXRhLW9wZXJhdGlvbnMpKS5cbiAqL1xubGV0IFNlbGVjdGlvbkRpcmVjdGl2ZSA9IGNsYXNzIFNlbGVjdGlvbkRpcmVjdGl2ZSBleHRlbmRzIFNlbGVjdGlvbiB7XG4gICAgY29uc3RydWN0b3IoZ3JpZCwgY2QpIHtcbiAgICAgICAgc3VwZXIoZ3JpZCwgY2QpO1xuICAgICAgICB0aGlzLmdyaWQgPSBncmlkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIGlmICh0aGlzLmdyaWQuc2VsZWN0YWJsZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHRoaXMuZ3JpZC5zZWxlY3RhYmxlID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmdyaWQuc2VsZWN0aW9uRGlyZWN0aXZlID0gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBzdXBlci5kZXN0cm95KCk7XG4gICAgfVxufTtcblNlbGVjdGlvbkRpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZFNlbGVjdEJ5XSdcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0dyaWRDb21wb25lbnQsIENoYW5nZURldGVjdG9yUmVmXSlcbl0sIFNlbGVjdGlvbkRpcmVjdGl2ZSk7XG5cbi8qKlxuICogQSBkaXJlY3RpdmUgd2hpY2ggY29udHJvbHMgdGhlIGV4cGFuZGVkIHN0YXRlIG9mIHRoZSBtYXN0ZXIgZGV0YWlsIHJvd3MuXG4gKi9cbmxldCBFeHBhbmREZXRhaWxzRGlyZWN0aXZlID0gY2xhc3MgRXhwYW5kRGV0YWlsc0RpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IoZ3JpZCkge1xuICAgICAgICB0aGlzLmdyaWQgPSBncmlkO1xuICAgICAgICAvKipcbiAgICAgICAgICogRmlyZXMgd2hlbiB0aGUgZXhwYW5kZWREZXRhaWxLZXlzIGFyZSBjaGFuZ2VkLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5leHBhbmRlZERldGFpbEtleXNDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZWZpbmVzIHRoZSBjb2xsZWN0aW9uIHRoYXQgd2lsbCBzdG9yZSB0aGUgZXhwYW5kZWQga2V5cy5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZXhwYW5kZWREZXRhaWxLZXlzID0gW107XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTcGVjaWZpZXMgaWYgdGhlIGl0ZW1zIHNob3VsZCBiZSBpbml0aWFsbHkgZXhwYW5kZWQuXG4gICAgICAgICAqIEBkZWZhdWx0IGZhbHNlXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmluaXRpYWxseUV4cGFuZGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucyA9IG5ldyBTdWJzY3JpcHRpb24oKTtcbiAgICAgICAgdGhpcy5ncmlkLmlzRGV0YWlsRXhwYW5kZWQgPSB0aGlzLmlzRXhwYW5kZWQuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZChtZXJnZSh0aGlzLmdyaWQuZGV0YWlsRXhwYW5kLnBpcGUobWFwKGUgPT4gKE9iamVjdC5hc3NpZ24oeyBleHBhbmQ6IHRydWUgfSwgZSkpKSksIHRoaXMuZ3JpZC5kZXRhaWxDb2xsYXBzZS5waXBlKG1hcChlID0+IChPYmplY3QuYXNzaWduKHsgZXhwYW5kOiBmYWxzZSB9LCBlKSkpKSkuc3Vic2NyaWJlKHRoaXMudG9nZ2xlU3RhdGUuYmluZCh0aGlzKSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIHRoZSBpdGVtIGtleSB0aGF0IHdpbGwgYmUgc3RvcmVkIGluIHRoZSBgZXhwYW5kZWREZXRhaWxLZXlzYCBjb2xsZWN0aW9uIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgbWFzdGVyX2RldGFpbF9leHBhbmRlZF9zdGF0ZV9ncmlkICV9I3RvYy1idWlsdC1pbi1kaXJlY3RpdmUpKS5cbiAgICAgKi9cbiAgICBnZXQgZXhwYW5kRGV0YWlsc0tleSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2V4cGFuZEJ5O1xuICAgIH1cbiAgICBzZXQgZXhwYW5kRGV0YWlsc0tleShrZXkpIHtcbiAgICAgICAgaWYgKGlzU3RyaW5nKGtleSkpIHtcbiAgICAgICAgICAgIHRoaXMuX2V4cGFuZEJ5ID0gZ2V0dGVyKGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9leHBhbmRCeSA9IGtleTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBBIGRlcHJlY2F0ZWQgYWxpYXMgZm9yIHNldHRpbmcgdGhlIGBleHBhbmREZXRhaWxzS2V5YCBwcm9wZXJ0eS5cbiAgICAgKi9cbiAgICBnZXQgZXhwYW5kRGV0YWlsQnkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmV4cGFuZERldGFpbHNLZXk7XG4gICAgfVxuICAgIHNldCBleHBhbmREZXRhaWxCeShrZXkpIHtcbiAgICAgICAgdGhpcy5leHBhbmREZXRhaWxzS2V5ID0ga2V5O1xuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxuICAgIGdldCBrZXlHZXR0ZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9leHBhbmRCeSB8fCBnZXR0ZXIodW5kZWZpbmVkKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGlzRXhwYW5kZWQoYXJncykge1xuICAgICAgICBjb25zdCBrZXkgPSB0aGlzLmtleUdldHRlcihhcmdzLmRhdGFJdGVtKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXhwYW5kZWREZXRhaWxLZXlzLmluZGV4T2Yoa2V5KSA+IC0xID8gIXRoaXMuaW5pdGlhbGx5RXhwYW5kZWQgOiB0aGlzLmluaXRpYWxseUV4cGFuZGVkO1xuICAgIH1cbiAgICB0b2dnbGVTdGF0ZShhcmdzKSB7XG4gICAgICAgIGNvbnN0IGtleSA9IHRoaXMua2V5R2V0dGVyKGFyZ3MuZGF0YUl0ZW0pO1xuICAgICAgICBpZiAoQm9vbGVhbih0aGlzLmluaXRpYWxseUV4cGFuZGVkKSAhPT0gYXJncy5leHBhbmQpIHtcbiAgICAgICAgICAgIHRoaXMuZXhwYW5kZWREZXRhaWxLZXlzLnB1c2goa2V5KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5leHBhbmRlZERldGFpbEtleXMuaW5kZXhPZihrZXkpO1xuICAgICAgICAgICAgdGhpcy5leHBhbmRlZERldGFpbEtleXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmV4cGFuZGVkRGV0YWlsS2V5c0NoYW5nZS5lbWl0KHRoaXMuZXhwYW5kZWREZXRhaWxLZXlzKTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIEV4cGFuZERldGFpbHNEaXJlY3RpdmUucHJvdG90eXBlLCBcImV4cGFuZGVkRGV0YWlsS2V5c0NoYW5nZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoJ2tlbmRvR3JpZEV4cGFuZERldGFpbHNCeScpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSlcbl0sIEV4cGFuZERldGFpbHNEaXJlY3RpdmUucHJvdG90eXBlLCBcImV4cGFuZERldGFpbHNLZXlcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSlcbl0sIEV4cGFuZERldGFpbHNEaXJlY3RpdmUucHJvdG90eXBlLCBcImV4cGFuZERldGFpbEJ5XCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQXJyYXkpXG5dLCBFeHBhbmREZXRhaWxzRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJleHBhbmRlZERldGFpbEtleXNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBFeHBhbmREZXRhaWxzRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJpbml0aWFsbHlFeHBhbmRlZFwiLCB2b2lkIDApO1xuRXhwYW5kRGV0YWlsc0RpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZEV4cGFuZERldGFpbHNCeV0nLFxuICAgICAgICBleHBvcnRBczogJ2tlbmRvR3JpZEV4cGFuZERldGFpbHNCeSdcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0dyaWRDb21wb25lbnRdKVxuXSwgRXhwYW5kRGV0YWlsc0RpcmVjdGl2ZSk7XG5cbmNvbnN0IG1hcFBhcmVudEdyb3VwID0gKHBhcmVudEdyb3VwKSA9PiB7XG4gICAgY29uc3QgcGFyZW50R3JvdXBLZXlzID0gW107XG4gICAgd2hpbGUgKHBhcmVudEdyb3VwKSB7XG4gICAgICAgIHBhcmVudEdyb3VwS2V5cy5wdXNoKHsgZmllbGQ6IHBhcmVudEdyb3VwLmdyb3VwLmZpZWxkLCB2YWx1ZTogcGFyZW50R3JvdXAuZ3JvdXAudmFsdWUgfSk7XG4gICAgICAgIHBhcmVudEdyb3VwID0gcGFyZW50R3JvdXAucGFyZW50R3JvdXA7XG4gICAgfVxuICAgIHJldHVybiBwYXJlbnRHcm91cEtleXM7XG59O1xuY29uc3QgREVGQVVMVF9LRVlfR0VUVEVSID0gKGdyb3VwUm93QXJncykgPT4gKHtcbiAgICBmaWVsZDogZ3JvdXBSb3dBcmdzLmdyb3VwLmZpZWxkLFxuICAgIHZhbHVlOiBncm91cFJvd0FyZ3MuZ3JvdXAudmFsdWUsXG4gICAgcGFyZW50R3JvdXBLZXlzOiBtYXBQYXJlbnRHcm91cChncm91cFJvd0FyZ3MucGFyZW50R3JvdXApXG59KTtcbi8qKlxuICogQSBkaXJlY3RpdmUgd2hpY2ggY29udHJvbHMgdGhlIGV4cGFuZGVkIHN0YXRlIG9mIHRoZSBncm91cCByb3dzXG4gKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGdyb3Vwc19leHBhbmRlZF9zdGF0ZV9ncmlkICV9I3RvYy1idWlsdC1pbi1kaXJlY3RpdmUpKS5cbiAqL1xubGV0IEV4cGFuZEdyb3VwRGlyZWN0aXZlID0gY2xhc3MgRXhwYW5kR3JvdXBEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKGdyaWQpIHtcbiAgICAgICAgdGhpcy5ncmlkID0gZ3JpZDtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVzIHdoZW4gdGhlIGV4cGFuZGVkR3JvdXBLZXlzIGFyZSBjaGFuZ2VkLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5leHBhbmRlZEdyb3VwS2V5c0NoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNwZWNpZmllcyBpZiB0aGUgZ3JvdXAgaXRlbXMgc2hvdWxkIGJlIGluaXRpYWxseSBleHBhbmRlZC5cbiAgICAgICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZ3JvdXBzSW5pdGlhbGx5RXhwYW5kZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gbmV3IFN1YnNjcmlwdGlvbigpO1xuICAgICAgICB0aGlzLmdyaWQuaXNHcm91cEV4cGFuZGVkID0gdGhpcy5pc0V4cGFuZGVkLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQobWVyZ2UodGhpcy5ncmlkLmdyb3VwRXhwYW5kLnBpcGUobWFwKGUgPT4gKE9iamVjdC5hc3NpZ24oeyBleHBhbmQ6IHRydWUgfSwgZSkpKSksIHRoaXMuZ3JpZC5ncm91cENvbGxhcHNlLnBpcGUobWFwKGUgPT4gKE9iamVjdC5hc3NpZ24oeyBleHBhbmQ6IGZhbHNlIH0sIGUpKSkpKS5zdWJzY3JpYmUodGhpcy50b2dnbGVTdGF0ZS5iaW5kKHRoaXMpKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlZmluZXMgdGhlIGl0ZW0gZm9ybWF0IHRoYXQgd2lsbCBiZSBzdG9yZWQgaW4gdGhlIGBleHBhbmRlZEdyb3VwS2V5c2BcbiAgICAgKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGdyb3Vwc19leHBhbmRlZF9zdGF0ZV9ncmlkICV9I3RvYy1jdXN0b20tZ3JvdXAta2V5LWZvcm1hdCkpLlxuICAgICAqL1xuICAgIGdldCBleHBhbmRHcm91cEJ5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZXhwYW5kR3JvdXBCeTtcbiAgICB9XG4gICAgc2V0IGV4cGFuZEdyb3VwQnkoa2V5KSB7XG4gICAgICAgIGlmICh0eXBlb2Yga2V5ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICB0aGlzLl9leHBhbmRHcm91cEJ5ID0ga2V5O1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlZmluZXMgdGhlIGNvbGxlY3Rpb24gdGhhdCB3aWxsIHN0b3JlIHRoZSBleHBhbmRlZCBncm91cCBrZXlzLlxuICAgICAqL1xuICAgIGdldCBleHBhbmRlZEdyb3VwS2V5cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2V4cGFuZGVkR3JvdXBLZXlzO1xuICAgIH1cbiAgICBzZXQgZXhwYW5kZWRHcm91cEtleXMoZXhwYW5kZWRHcm91cHMpIHtcbiAgICAgICAgdGhpcy5fZXhwYW5kZWRHcm91cEtleXMgPSAoZXhwYW5kZWRHcm91cHMgfHwgW10pLnNsaWNlKCk7XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMudW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gICAgZ2V0IGtleUdldHRlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXhwYW5kR3JvdXBCeSB8fCBERUZBVUxUX0tFWV9HRVRURVI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBpc0V4cGFuZGVkKGdyb3VwQXJncykge1xuICAgICAgICBjb25zdCBpdGVtSW5kZXggPSB0aGlzLmdldEl0ZW1JbmRleChncm91cEFyZ3MpO1xuICAgICAgICByZXR1cm4gaXRlbUluZGV4ID4gLTEgPyAhdGhpcy5ncm91cHNJbml0aWFsbHlFeHBhbmRlZCA6IHRoaXMuZ3JvdXBzSW5pdGlhbGx5RXhwYW5kZWQ7XG4gICAgfVxuICAgIGdldEl0ZW1JbmRleChncm91cEFyZ3MpIHtcbiAgICAgICAgaWYgKHRoaXMuZXhwYW5kR3JvdXBCeSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZXhwYW5kZWRHcm91cEtleXMuaW5kZXhPZih0aGlzLmtleUdldHRlcihncm91cEFyZ3MpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5leHBhbmRlZEdyb3VwS2V5cy5maW5kSW5kZXgoaXRlbSA9PiB7XG4gICAgICAgICAgICBsZXQgaW5kZXggPSAwO1xuICAgICAgICAgICAgbGV0IHBhcmVudEdyb3VwID0gZ3JvdXBBcmdzLnBhcmVudEdyb3VwO1xuICAgICAgICAgICAgd2hpbGUgKGlzUHJlc2VudChwYXJlbnRHcm91cCkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWlzUHJlc2VudChpdGVtLnBhcmVudEdyb3VwS2V5cykgfHwgIWlzUHJlc2VudChpdGVtLnBhcmVudEdyb3VwS2V5c1tpbmRleF0pIHx8XG4gICAgICAgICAgICAgICAgICAgIHBhcmVudEdyb3VwLmdyb3VwLnZhbHVlICE9PSBpdGVtLnBhcmVudEdyb3VwS2V5c1tpbmRleF0udmFsdWUgfHxcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50R3JvdXAuZ3JvdXAuZmllbGQgIT09IGl0ZW0ucGFyZW50R3JvdXBLZXlzW2luZGV4XS5maWVsZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHBhcmVudEdyb3VwID0gcGFyZW50R3JvdXAucGFyZW50R3JvdXA7XG4gICAgICAgICAgICAgICAgaW5kZXgrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBpdGVtLnZhbHVlID09PSBncm91cEFyZ3MuZ3JvdXAudmFsdWUgJiYgaXRlbS5maWVsZCA9PT0gZ3JvdXBBcmdzLmdyb3VwLmZpZWxkO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgdG9nZ2xlU3RhdGUoZ3JvdXBBcmdzKSB7XG4gICAgICAgIGNvbnN0IGtleSA9IHRoaXMua2V5R2V0dGVyKGdyb3VwQXJncyk7XG4gICAgICAgIGlmIChCb29sZWFuKHRoaXMuZ3JvdXBzSW5pdGlhbGx5RXhwYW5kZWQpICE9PSBncm91cEFyZ3MuZXhwYW5kKSB7XG4gICAgICAgICAgICB0aGlzLmV4cGFuZGVkR3JvdXBLZXlzLnB1c2goa2V5KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5leHBhbmRlZEdyb3VwS2V5cy5pbmRleE9mKGtleSk7XG4gICAgICAgICAgICB0aGlzLmV4cGFuZGVkR3JvdXBLZXlzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5leHBhbmRlZEdyb3VwS2V5c0NoYW5nZS5lbWl0KHRoaXMuZXhwYW5kZWRHcm91cEtleXMuc2xpY2UoKSk7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBFeHBhbmRHcm91cERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiZXhwYW5kZWRHcm91cEtleXNDaGFuZ2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCdrZW5kb0dyaWRFeHBhbmRHcm91cEJ5JyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKVxuXSwgRXhwYW5kR3JvdXBEaXJlY3RpdmUucHJvdG90eXBlLCBcImV4cGFuZEdyb3VwQnlcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBBcnJheSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtBcnJheV0pXG5dLCBFeHBhbmRHcm91cERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiZXhwYW5kZWRHcm91cEtleXNcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgRXhwYW5kR3JvdXBEaXJlY3RpdmUucHJvdG90eXBlLCBcImdyb3Vwc0luaXRpYWxseUV4cGFuZGVkXCIsIHZvaWQgMCk7XG5FeHBhbmRHcm91cERpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZEV4cGFuZEdyb3VwQnldJyxcbiAgICAgICAgZXhwb3J0QXM6ICdrZW5kb0dyaWRFeHBhbmRHcm91cEJ5J1xuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbR3JpZENvbXBvbmVudF0pXG5dLCBFeHBhbmRHcm91cERpcmVjdGl2ZSk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBNZXNzYWdlcyBleHRlbmRzIENvbXBvbmVudE1lc3NhZ2VzIHtcbn1cbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJncm91cFBhbmVsRW1wdHlcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJub1JlY29yZHNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJwYWdlckxhYmVsXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwicGFnZXJGaXJzdFBhZ2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJwYWdlckxhc3RQYWdlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwicGFnZXJQcmV2aW91c1BhZ2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJwYWdlck5leHRQYWdlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwicGFnZXJQYWdlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwicGFnZXJJdGVtc1BlclBhZ2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJwYWdlck9mXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwicGFnZXJJdGVtc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcInBhZ2VyUGFnZU51bWJlcklucHV0VGl0bGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJmaWx0ZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJmaWx0ZXJJbnB1dExhYmVsXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwiZmlsdGVyTWVudVRpdGxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwiZmlsdGVyTWVudU9wZXJhdG9yc0Ryb3BEb3duTGFiZWxcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJmaWx0ZXJNZW51TG9naWNEcm9wRG93bkxhYmVsXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwiZmlsdGVyRXFPcGVyYXRvclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImZpbHRlck5vdEVxT3BlcmF0b3JcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJmaWx0ZXJJc051bGxPcGVyYXRvclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImZpbHRlcklzTm90TnVsbE9wZXJhdG9yXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwiZmlsdGVySXNFbXB0eU9wZXJhdG9yXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwiZmlsdGVySXNOb3RFbXB0eU9wZXJhdG9yXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwiZmlsdGVyU3RhcnRzV2l0aE9wZXJhdG9yXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwiZmlsdGVyQ29udGFpbnNPcGVyYXRvclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImZpbHRlck5vdENvbnRhaW5zT3BlcmF0b3JcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJmaWx0ZXJFbmRzV2l0aE9wZXJhdG9yXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwiZmlsdGVyR3RlT3BlcmF0b3JcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJmaWx0ZXJHdE9wZXJhdG9yXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwiZmlsdGVyTHRlT3BlcmF0b3JcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJmaWx0ZXJMdE9wZXJhdG9yXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwiZmlsdGVySXNUcnVlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwiZmlsdGVySXNGYWxzZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImZpbHRlckJvb2xlYW5BbGxcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJmaWx0ZXJBZnRlck9yRXF1YWxPcGVyYXRvclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImZpbHRlckFmdGVyT3BlcmF0b3JcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJmaWx0ZXJCZWZvcmVPcGVyYXRvclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImZpbHRlckJlZm9yZU9yRXF1YWxPcGVyYXRvclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImZpbHRlckZpbHRlckJ1dHRvblwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImZpbHRlckNsZWFyQnV0dG9uXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwiZmlsdGVyQW5kTG9naWNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJmaWx0ZXJPckxvZ2ljXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwibG9hZGluZ1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImdyaWRMYWJlbFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImNvbHVtbk1lbnVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJzZXRDb2x1bW5Qb3NpdGlvblwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImNvbHVtbnNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJsb2NrXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwidW5sb2NrXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwic3RpY2tcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJ1bnN0aWNrXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwic29ydGFibGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJzb3J0QXNjZW5kaW5nXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwic29ydERlc2NlbmRpbmdcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJzb3J0ZWRBc2NlbmRpbmdcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJzb3J0ZWREZXNjZW5kaW5nXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwic29ydGVkRGVmYXVsdFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImNvbHVtbnNBcHBseVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImNvbHVtbnNSZXNldFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImRldGFpbEV4cGFuZFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImRldGFpbENvbGxhcHNlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwiZmlsdGVyRGF0ZVRvZGF5XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwiZmlsdGVyRGF0ZVRvZ2dsZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcImZpbHRlck51bWVyaWNEZWNyZW1lbnRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIE1lc3NhZ2VzLnByb3RvdHlwZSwgXCJmaWx0ZXJOdW1lcmljSW5jcmVtZW50XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBNZXNzYWdlcy5wcm90b3R5cGUsIFwic2VsZWN0aW9uQ2hlY2tib3hMYWJlbFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTWVzc2FnZXMucHJvdG90eXBlLCBcInNlbGVjdEFsbENoZWNrYm94TGFiZWxcIiwgdm9pZCAwKTtcblxudmFyIExvY2FsaXplZE1lc3NhZ2VzRGlyZWN0aXZlXzE7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IExvY2FsaXplZE1lc3NhZ2VzRGlyZWN0aXZlID0gTG9jYWxpemVkTWVzc2FnZXNEaXJlY3RpdmVfMSA9IGNsYXNzIExvY2FsaXplZE1lc3NhZ2VzRGlyZWN0aXZlIGV4dGVuZHMgTWVzc2FnZXMge1xuICAgIGNvbnN0cnVjdG9yKHNlcnZpY2UpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5zZXJ2aWNlID0gc2VydmljZTtcbiAgICB9XG59O1xuTG9jYWxpemVkTWVzc2FnZXNEaXJlY3RpdmUgPSBMb2NhbGl6ZWRNZXNzYWdlc0RpcmVjdGl2ZV8xID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcHJvdmlkZTogTWVzc2FnZXMsXG4gICAgICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gTG9jYWxpemVkTWVzc2FnZXNEaXJlY3RpdmVfMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkTG9jYWxpemVkTWVzc2FnZXNdJ1xuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTG9jYWxpemF0aW9uU2VydmljZV0pXG5dLCBMb2NhbGl6ZWRNZXNzYWdlc0RpcmVjdGl2ZSk7XG5cbnZhciBDdXN0b21NZXNzYWdlc0NvbXBvbmVudF8xO1xuLyoqXG4gKiBDdXN0b20gY29tcG9uZW50IG1lc3NhZ2VzIG92ZXJyaWRlIGRlZmF1bHQgY29tcG9uZW50IG1lc3NhZ2VzXG4gKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGdsb2JhbGl6YXRpb25fZ3JpZCAlfSN0b2MtbG9jYWxpemF0aW9uKSkuXG4gKi9cbmxldCBDdXN0b21NZXNzYWdlc0NvbXBvbmVudCA9IEN1c3RvbU1lc3NhZ2VzQ29tcG9uZW50XzEgPSBjbGFzcyBDdXN0b21NZXNzYWdlc0NvbXBvbmVudCBleHRlbmRzIE1lc3NhZ2VzIHtcbiAgICBjb25zdHJ1Y3RvcihzZXJ2aWNlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuc2VydmljZSA9IHNlcnZpY2U7XG4gICAgfVxuICAgIGdldCBvdmVycmlkZSgpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufTtcbkN1c3RvbU1lc3NhZ2VzQ29tcG9uZW50ID0gQ3VzdG9tTWVzc2FnZXNDb21wb25lbnRfMSA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IE1lc3NhZ2VzLFxuICAgICAgICAgICAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IEN1c3RvbU1lc3NhZ2VzQ29tcG9uZW50XzEpXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZ3JpZC1tZXNzYWdlcycsXG4gICAgICAgIHRlbXBsYXRlOiBgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTG9jYWxpemF0aW9uU2VydmljZV0pXG5dLCBDdXN0b21NZXNzYWdlc0NvbXBvbmVudCk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgRmlsdGVyUm93Q29tcG9uZW50ID0gY2xhc3MgRmlsdGVyUm93Q29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb24sIGNvbHVtbkluZm9TZXJ2aWNlKSB7XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uID0gbG9jYWxpemF0aW9uO1xuICAgICAgICB0aGlzLmNvbHVtbkluZm9TZXJ2aWNlID0gY29sdW1uSW5mb1NlcnZpY2U7XG4gICAgICAgIHRoaXMuY29sdW1ucyA9IFtdO1xuICAgICAgICB0aGlzLmdyb3VwcyA9IFtdO1xuICAgICAgICB0aGlzLmZpbHRlclJvd0NsYXNzID0gdHJ1ZTtcbiAgICB9XG4gICAgYWRkU3RpY2t5U3R5bGVzKGNvbHVtbikge1xuICAgICAgICBjb25zdCBzdGlja3kgPSBjb2x1bW4uc3RpY2t5ID8gdGhpcy5jb2x1bW5JbmZvU2VydmljZS5zdGlja3lDb2x1bW5zU3R5bGVzKGNvbHVtbikgOiBudWxsO1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RpY2t5LCBjb2x1bW4uZmlsdGVyU3R5bGUpO1xuICAgIH1cbiAgICBmaWx0ZXJMYWJlbChjb2x1bW4pIHtcbiAgICAgICAgY29uc3QgbG9jYWxpemF0aW9uTXNnID0gdGhpcy5sb2NhbGl6YXRpb24uZ2V0KCdmaWx0ZXJJbnB1dExhYmVsJykgfHwgJyc7XG4gICAgICAgIGNvbnN0IGNvbHVtbk5hbWUgPSBjb2x1bW4udGl0bGUgfHwgY29sdW1uLmZpZWxkO1xuICAgICAgICByZXR1cm4gcmVwbGFjZU1lc3NhZ2VQbGFjZWhvbGRlcihsb2NhbGl6YXRpb25Nc2csICdjb2x1bW5OYW1lJywgY29sdW1uTmFtZSk7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KVxuXSwgRmlsdGVyUm93Q29tcG9uZW50LnByb3RvdHlwZSwgXCJjb2x1bW5zXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBGaWx0ZXJSb3dDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQXJyYXkpXG5dLCBGaWx0ZXJSb3dDb21wb25lbnQucHJvdG90eXBlLCBcImdyb3Vwc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRGV0YWlsVGVtcGxhdGVEaXJlY3RpdmUpXG5dLCBGaWx0ZXJSb3dDb21wb25lbnQucHJvdG90eXBlLCBcImRldGFpbFRlbXBsYXRlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG5dLCBGaWx0ZXJSb3dDb21wb25lbnQucHJvdG90eXBlLCBcImxvZ2ljYWxSb3dJbmRleFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgRmlsdGVyUm93Q29tcG9uZW50LnByb3RvdHlwZSwgXCJsb2NrZWRDb2x1bW5zQ291bnRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLWZpbHRlci1yb3cnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEZpbHRlclJvd0NvbXBvbmVudC5wcm90b3R5cGUsIFwiZmlsdGVyUm93Q2xhc3NcIiwgdm9pZCAwKTtcbkZpbHRlclJvd0NvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZEZpbHRlclJvd10nLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8dGRcbiAgICAgICAgICAgIFtjbGFzcy5rLWdyb3VwLWNlbGxdPVwidHJ1ZVwiXG4gICAgICAgICAgICAqbmdGb3I9XCJsZXQgZyBvZiBncm91cHNcIlxuICAgICAgICAgICAgcm9sZT1cInByZXNlbnRhdGlvblwiPlxuICAgICAgICA8L3RkPlxuICAgICAgICA8dGRcbiAgICAgICAgICAgIFtjbGFzcy5rLWhpZXJhcmNoeS1jZWxsXT1cInRydWVcIlxuICAgICAgICAgICAgKm5nSWY9XCJkZXRhaWxUZW1wbGF0ZT8udGVtcGxhdGVSZWZcIlxuICAgICAgICAgICAgcm9sZT1cInByZXNlbnRhdGlvblwiPlxuICAgICAgICA8L3RkPlxuICAgICAgICA8dGQgKm5nRm9yPVwibGV0IGNvbHVtbiBvZiBjb2x1bW5zOyBsZXQgY29sdW1uSW5kZXggPSBpbmRleFwiXG4gICAgICAgICAgICBbY2xhc3Muay1ncmlkLWhlYWRlci1zdGlja3ldPVwiY29sdW1uLnN0aWNreVwiXG4gICAgICAgICAgICBbbmdTdHlsZV09XCJhZGRTdGlja3lTdHlsZXMoY29sdW1uKVwiXG4gICAgICAgICAgICBbbmdDbGFzc109XCJjb2x1bW4uZmlsdGVyQ2xhc3NcIlxuICAgICAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCJmaWx0ZXJMYWJlbChjb2x1bW4pXCJcbiAgICAgICAgICAgIGtlbmRvR3JpZEZpbHRlckNlbGxcbiAgICAgICAgICAgICAgICBbY29sdW1uXT1cImNvbHVtblwiXG4gICAgICAgICAgICAgICAgW2ZpbHRlcl09XCJmaWx0ZXJcIlxuICAgICAgICAgICAga2VuZG9HcmlkTG9naWNhbENlbGxcbiAgICAgICAgICAgICAgICBbbG9naWNhbFJvd0luZGV4XT1cImxvZ2ljYWxSb3dJbmRleFwiXG4gICAgICAgICAgICAgICAgW2xvZ2ljYWxDb2xJbmRleF09XCJsb2NrZWRDb2x1bW5zQ291bnQgKyBjb2x1bW5JbmRleFwiXG4gICAgICA+PC90ZD5cbiAgICBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBDb2x1bW5JbmZvU2VydmljZV0pXG5dLCBGaWx0ZXJSb3dDb21wb25lbnQpO1xuXG5jb25zdCBhcmVEaWZmZXJlbnQgPSAoYSwgYikgPT4gYS5maWVsZCAhPT0gYi5maWVsZCB8fCBhLm9wZXJhdG9yICE9PSBiLm9wZXJhdG9yIHx8IGEudmFsdWUgIT09IGIudmFsdWU7XG5jb25zdCBpc0NoYW5nZWQkMSA9IChhLCBiKSA9PiB7XG4gICAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaWR4ID0gMCwgbGVuID0gYS5sZW5ndGg7IGlkeCA8IGxlbjsgaWR4KyspIHtcbiAgICAgICAgY29uc3QgcHJldiA9IGFbaWR4XTtcbiAgICAgICAgY29uc3QgY3VyciA9IGJbaWR4XTtcbiAgICAgICAgaWYgKGlzQ29tcG9zaXRlRmlsdGVyRGVzY3JpcHRvcihwcmV2KSkge1xuICAgICAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLXVzZS1iZWZvcmUtZGVjbGFyZVxuICAgICAgICAgICAgaWYgKGRpZmZGaWx0ZXJzKHByZXYsIGN1cnJbaWR4XSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChhcmVEaWZmZXJlbnQocHJldiwgY3VycikpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn07XG5jb25zdCBjb3B5T2JqZWN0ID0gKG9iaikgPT4ge1xuICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xuICAgIE9iamVjdC5hc3NpZ24ocmVzdWx0LCBvYmopO1xuICAgIGlmIChvYmouY29uc3RydWN0b3IgIT09IE9iamVjdCkge1xuICAgICAgICBjb25zdCBwcm90byA9IG9iai5jb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG4gICAgICAgIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHByb3RvKS5mb3JFYWNoKChwcm9wZXJ0eSkgPT4ge1xuICAgICAgICAgICAgaWYgKHByb3BlcnR5ICE9PSAnY29uc3RydWN0b3InICYmIHByb3RvLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdFtwcm9wZXJ0eV0gPSBvYmpbcHJvcGVydHldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5jb25zdCBjbG9uZUZpbHRlciA9IChmaWx0ZXIkJDEpID0+IGNvcHlPYmplY3QoZmlsdGVyJCQxKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBjbG9uZUZpbHRlcnMgPSAoZmlsdGVyJCQxKSA9PiB7XG4gICAgaWYgKCFmaWx0ZXIkJDEpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoaXNDb21wb3NpdGVGaWx0ZXJEZXNjcmlwdG9yKGZpbHRlciQkMSkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGZpbHRlcnM6IGNsb25lRmlsdGVycyhmaWx0ZXIkJDEuZmlsdGVycyksXG4gICAgICAgICAgICBsb2dpYzogZmlsdGVyJCQxLmxvZ2ljXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoZmlsdGVyJCQxKSkge1xuICAgICAgICByZXR1cm4gZmlsdGVyJCQxLm1hcChjbG9uZUZpbHRlcnMpO1xuICAgIH1cbiAgICByZXR1cm4gY2xvbmVGaWx0ZXIoZmlsdGVyJCQxKTtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgZGlmZkZpbHRlcnMgPSAoYSwgYikgPT4ge1xuICAgIGlmIChpc1ByZXNlbnQoYSkgJiYgIWlzUHJlc2VudChiKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKCFpc1ByZXNlbnQoYSkgJiYgaXNQcmVzZW50KGIpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gaXNQcmVzZW50KGEpICYmIGlzUHJlc2VudChiKSAmJiBpc0NoYW5nZWQkMShhLmZpbHRlcnMsIGIuZmlsdGVycyk7XG59O1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IEZpbHRlckNlbGxDb21wb25lbnQgPSBjbGFzcyBGaWx0ZXJDZWxsQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuX3RlbXBsYXRlQ29udGV4dCA9IHt9O1xuICAgIH1cbiAgICBnZXQgZmlsdGVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZmlsdGVyO1xuICAgIH1cbiAgICBzZXQgZmlsdGVyKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX2ZpbHRlciA9IGNsb25lRmlsdGVycyh2YWx1ZSk7XG4gICAgfVxuICAgIGdldCB0ZW1wbGF0ZUNvbnRleHQoKSB7XG4gICAgICAgIHRoaXMuX3RlbXBsYXRlQ29udGV4dC5jb2x1bW4gPSB0aGlzLmNvbHVtbjtcbiAgICAgICAgdGhpcy5fdGVtcGxhdGVDb250ZXh0LmZpbHRlciA9IHRoaXMuZmlsdGVyO1xuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tc3RyaW5nLWxpdGVyYWxcbiAgICAgICAgdGhpcy5fdGVtcGxhdGVDb250ZXh0W1wiJGltcGxpY2l0XCJdID0gdGhpcy5maWx0ZXI7XG4gICAgICAgIHJldHVybiB0aGlzLl90ZW1wbGF0ZUNvbnRleHQ7XG4gICAgfVxuICAgIGdldCBoYXNUZW1wbGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIGlzUHJlc2VudCh0aGlzLmNvbHVtbi5maWx0ZXJDZWxsVGVtcGxhdGVSZWYpO1xuICAgIH1cbiAgICBnZXQgaXNGaWx0ZXJhYmxlKCkge1xuICAgICAgICByZXR1cm4gaXNQcmVzZW50KHRoaXMuY29sdW1uKSAmJiAhaXNOdWxsT3JFbXB0eVN0cmluZyh0aGlzLmNvbHVtbi5maWVsZCkgJiYgdGhpcy5jb2x1bW4uZmlsdGVyYWJsZTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQ29sdW1uQ29tcG9uZW50KVxuXSwgRmlsdGVyQ2VsbENvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSlcbl0sIEZpbHRlckNlbGxDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlclwiLCBudWxsKTtcbkZpbHRlckNlbGxDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0dyaWRGaWx0ZXJDZWxsXScsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxuZy10ZW1wbGF0ZSBbbmdJZl09XCJpc0ZpbHRlcmFibGVcIj5cbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgW25nU3dpdGNoXT1cImhhc1RlbXBsYXRlXCI+XG4gICAgICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdTd2l0Y2hDYXNlPVwiZmFsc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgPG5nLWNvbnRhaW5lciBrZW5kb0ZpbHRlckNlbGxIb3N0IFtjb2x1bW5dPVwiY29sdW1uXCIgW2ZpbHRlcl09XCJmaWx0ZXJcIj48L25nLWNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ1N3aXRjaENhc2U9XCJ0cnVlXCI+XG4gICAgICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgKm5nSWY9XCJjb2x1bW4uZmlsdGVyQ2VsbFRlbXBsYXRlUmVmXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cImNvbHVtbi5maWx0ZXJDZWxsVGVtcGxhdGVSZWZcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cInRlbXBsYXRlQ29udGV4dFwiPlxuICAgICAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgYFxuICAgIH0pXG5dLCBGaWx0ZXJDZWxsQ29tcG9uZW50KTtcblxuY29uc3QgbG9jYWxpemVPcGVyYXRvcnMgPSBvcGVyYXRvcnMgPT4gbG9jYWxpemF0aW9uID0+IE9iamVjdC5rZXlzKG9wZXJhdG9ycykucmVkdWNlKChhY2MsIGtleSkgPT4ge1xuICAgIGFjY1tvcGVyYXRvcnNba2V5XV0gPSBsb2NhbGl6YXRpb24uZ2V0KGtleSk7XG4gICAgcmV0dXJuIGFjYztcbn0sIHt9KTsgLy8gdHNsaW50OmRpc2FibGUtbGluZTphbGlnblxuY29uc3Qgb3BlcmF0b3JUZXh0cyA9IGxvY2FsaXplT3BlcmF0b3JzKHtcbiAgICBcImZpbHRlckVxT3BlcmF0b3JcIjogXCJlcVwiLFxuICAgIFwiZmlsdGVyTm90RXFPcGVyYXRvclwiOiBcIm5lcVwiLFxuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpvYmplY3QtbGl0ZXJhbC1zb3J0LWtleXNcbiAgICBcImZpbHRlckd0ZU9wZXJhdG9yXCI6IFwiZ3RlXCIsXG4gICAgXCJmaWx0ZXJHdE9wZXJhdG9yXCI6IFwiZ3RcIixcbiAgICBcImZpbHRlckx0ZU9wZXJhdG9yXCI6IFwibHRlXCIsXG4gICAgXCJmaWx0ZXJMdE9wZXJhdG9yXCI6IFwibHRcIixcbiAgICBcImZpbHRlcklzTnVsbE9wZXJhdG9yXCI6IFwiaXNudWxsXCIsXG4gICAgXCJmaWx0ZXJJc05vdE51bGxPcGVyYXRvclwiOiBcImlzbm90bnVsbFwiLFxuICAgIFwiZmlsdGVySXNFbXB0eU9wZXJhdG9yXCI6IFwiaXNlbXB0eVwiLFxuICAgIFwiZmlsdGVySXNOb3RFbXB0eU9wZXJhdG9yXCI6IFwiaXNub3RlbXB0eVwiLFxuICAgIFwiZmlsdGVyQ29udGFpbnNPcGVyYXRvclwiOiBcImNvbnRhaW5zXCIsXG4gICAgXCJmaWx0ZXJOb3RDb250YWluc09wZXJhdG9yXCI6IFwiZG9lc25vdGNvbnRhaW5cIixcbiAgICBcImZpbHRlclN0YXJ0c1dpdGhPcGVyYXRvclwiOiBcInN0YXJ0c3dpdGhcIixcbiAgICBcImZpbHRlckVuZHNXaXRoT3BlcmF0b3JcIjogXCJlbmRzd2l0aFwiLFxuICAgIFwiZmlsdGVyQWZ0ZXJPckVxdWFsT3BlcmF0b3JcIjogXCJhZnRlci1lcVwiLFxuICAgIFwiZmlsdGVyQWZ0ZXJPcGVyYXRvclwiOiBcImFmdGVyXCIsXG4gICAgXCJmaWx0ZXJCZWZvcmVPckVxdWFsT3BlcmF0b3JcIjogXCJiZWZvcmUtZXFcIixcbiAgICBcImZpbHRlckJlZm9yZU9wZXJhdG9yXCI6IFwiYmVmb3JlXCJcbn0pO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IHRvSlNPTiA9ICh4cykgPT4geHMubWFwKHggPT4geC50b0pTT04oKSk7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY2xhc3MgRmlsdGVyT3BlcmF0b3JCYXNlIHtcbiAgICBjb25zdHJ1Y3RvcihvcGVyYXRvciwgbG9jYWxpemF0aW9uKSB7XG4gICAgICAgIHRoaXMub3BlcmF0b3IgPSBvcGVyYXRvcjtcbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb24gPSBsb2NhbGl6YXRpb247XG4gICAgICAgIHRoaXMubWVzc2FnZXMgPSBvcGVyYXRvclRleHRzKHRoaXMubG9jYWxpemF0aW9uKTtcbiAgICAgICAgdGhpcy5fdGV4dCA9IHRoaXMubWVzc2FnZXNbdGhpcy5vcGVyYXRvcl07XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uLmNoYW5nZXMuc3Vic2NyaWJlKHRoaXMucmVmcmVzaFRleHQuYmluZCh0aGlzKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IHRoYXQgd2lsbCBiZSBkaXNwbGF5ZWQgaW4gdGhlIGRyb3AtZG93biBsaXN0LlxuICAgICAqIEByZWFkb25seVxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICogQG1lbWJlck9mIEZpbHRlck9wZXJhdG9yQmFzZVxuICAgICAqL1xuICAgIGdldCB0ZXh0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdGV4dDtcbiAgICB9XG4gICAgLyoqXG4gICAgICpcbiAgICAgKi9cbiAgICBzZXQgdGV4dCh2YWx1ZSkge1xuICAgICAgICB0aGlzLl90ZXh0ID0gaXNOdWxsT3JFbXB0eVN0cmluZyh2YWx1ZSkgPyB0aGlzLm1lc3NhZ2VzW3RoaXMub3BlcmF0b3JdIDogdmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0ZXh0OiB0aGlzLnRleHQsXG4gICAgICAgICAgICB2YWx1ZTogdGhpcy5vcGVyYXRvclxuICAgICAgICB9O1xuICAgIH1cbiAgICByZWZyZXNoVGV4dCgpIHtcbiAgICAgICAgY29uc3QgdXBkYXRlID0gdGhpcy5fdGV4dCA9PT0gdGhpcy5tZXNzYWdlc1t0aGlzLm9wZXJhdG9yXTtcbiAgICAgICAgdGhpcy5tZXNzYWdlcyA9IG9wZXJhdG9yVGV4dHModGhpcy5sb2NhbGl6YXRpb24pO1xuICAgICAgICBpZiAodXBkYXRlKSB7XG4gICAgICAgICAgICB0aGlzLl90ZXh0ID0gdGhpcy5tZXNzYWdlc1t0aGlzLm9wZXJhdG9yXTtcbiAgICAgICAgfVxuICAgIH1cbn1cbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtTdHJpbmddKVxuXSwgRmlsdGVyT3BlcmF0b3JCYXNlLnByb3RvdHlwZSwgXCJ0ZXh0XCIsIG51bGwpO1xuXG5jb25zdCBpbnNlcnREZWZhdWx0RmlsdGVyID0gKGluZGV4LCByb290RmlsdGVyLCBmaWx0ZXIkJDEpID0+IHtcbiAgICByb290RmlsdGVyID0gKHJvb3RGaWx0ZXIgfHwgeyBmaWx0ZXJzOiBbXSwgbG9naWM6IFwiYW5kXCIgfSk7XG4gICAgcm9vdEZpbHRlci5maWx0ZXJzW2luZGV4XSA9IGZpbHRlciQkMTtcbiAgICByZXR1cm4gZmlsdGVyJCQxO1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBzZXRGaWx0ZXIgPSAoaW5kZXgsIGZpbHRlciQkMSwgZmllbGQsIGRlZmF1bHRPcGVyYXRvcikgPT4ge1xuICAgIGlmIChpc1ByZXNlbnQoZmlsdGVyJCQxKSAmJiBpc1ByZXNlbnQoZmlsdGVyJCQxLmZpbHRlcnMpICYmIGZpbHRlciQkMS5maWx0ZXJzLmxlbmd0aCA+IGluZGV4KSB7XG4gICAgICAgIHJldHVybiBmaWx0ZXIkJDEuZmlsdGVyc1tpbmRleF07XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gaW5zZXJ0RGVmYXVsdEZpbHRlcihpbmRleCwgZmlsdGVyJCQxLCB7XG4gICAgICAgICAgICBmaWVsZCxcbiAgICAgICAgICAgIG9wZXJhdG9yOiBkZWZhdWx0T3BlcmF0b3JcbiAgICAgICAgfSk7XG4gICAgfVxufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBsb2dpY09wZXJhdG9ycyA9IChsb2NhbGl6YXRpb24pID0+IFtcbiAgICB7IHRleHQ6IGxvY2FsaXphdGlvbi5nZXQoXCJmaWx0ZXJBbmRMb2dpY1wiKSwgdmFsdWU6IFwiYW5kXCIgfSxcbiAgICB7IHRleHQ6IGxvY2FsaXphdGlvbi5nZXQoXCJmaWx0ZXJPckxvZ2ljXCIpLCB2YWx1ZTogXCJvclwiIH1cbl07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgZmxhdHRlbiA9IChmaWx0ZXIkJDEpID0+IHtcbiAgICBpZiAoaXNQcmVzZW50KGZpbHRlciQkMS5maWx0ZXJzKSkge1xuICAgICAgICByZXR1cm4gZmlsdGVyJCQxLmZpbHRlcnMucmVkdWNlKChhY2MsIGN1cnIpID0+IGFjYy5jb25jYXQoaXNDb21wb3NpdGVGaWx0ZXJEZXNjcmlwdG9yKGN1cnIpID8gZmxhdHRlbihjdXJyKSA6IFtjdXJyXSksIFtdKTtcbiAgICB9XG4gICAgcmV0dXJuIFtdO1xufTtcbmNvbnN0IHRyaW1GaWx0ZXJCeUZpZWxkID0gKGZpbHRlciQkMSwgZmllbGQpID0+IHtcbiAgICBpZiAoaXNQcmVzZW50KGZpbHRlciQkMSkgJiYgaXNQcmVzZW50KGZpbHRlciQkMS5maWx0ZXJzKSkge1xuICAgICAgICBmaWx0ZXIkJDEuZmlsdGVycyA9IGZpbHRlciQkMS5maWx0ZXJzLmZpbHRlcih4ID0+IHtcbiAgICAgICAgICAgIGlmIChpc0NvbXBvc2l0ZUZpbHRlckRlc2NyaXB0b3IoeCkpIHtcbiAgICAgICAgICAgICAgICB0cmltRmlsdGVyQnlGaWVsZCh4LCBmaWVsZCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHguZmlsdGVycy5sZW5ndGg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geC5maWVsZCAhPT0gZmllbGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgZmlsdGVyc0J5RmllbGQgPSAoZmlsdGVyJCQxLCBmaWVsZCkgPT4gZmxhdHRlbihmaWx0ZXIkJDEgfHwge30pLmZpbHRlcih4ID0+IHguZmllbGQgPT09IGZpZWxkKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBmaWx0ZXJCeUZpZWxkID0gKGZpbHRlciQkMSwgZmllbGQpID0+IHtcbiAgICBsZXQgW2N1cnJlbnRGaWx0ZXJdID0gZmlsdGVyc0J5RmllbGQoZmlsdGVyJCQxLCBmaWVsZCk7XG4gICAgcmV0dXJuIGN1cnJlbnRGaWx0ZXI7XG59O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IHJlbW92ZUZpbHRlciA9IChmaWx0ZXIkJDEsIGZpZWxkKSA9PiB7XG4gICAgdHJpbUZpbHRlckJ5RmllbGQoZmlsdGVyJCQxLCBmaWVsZCk7XG4gICAgcmV0dXJuIGZpbHRlciQkMTtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgbG9jYWxpemVPcGVyYXRvcnMkMSA9IG9wZXJhdG9ycyA9PiBsb2NhbGl6YXRpb24gPT4gT2JqZWN0LmtleXMob3BlcmF0b3JzKS5tYXAoa2V5ID0+ICh7XG4gICAgdGV4dDogbG9jYWxpemF0aW9uLmdldChrZXkpLFxuICAgIHZhbHVlOiBvcGVyYXRvcnNba2V5XVxufSkpO1xuLyoqXG4gKiBBbiBhYnN0cmFjdCBiYXNlIGNsYXNzIGZvciB0aGUgZmlsdGVyLWNlbGwgY29tcG9uZW50IChbc2VlIGV4YW1wbGVdKHslIHNsdWcgcmV1c2FibGVjdXN0b21maWx0ZXJzX2dyaWQgJX0jdG9jLWZpbHRlci1yb3cpKS5cbiAqL1xuY2xhc3MgQmFzZUZpbHRlckNlbGxDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGZpbHRlclNlcnZpY2UpIHtcbiAgICAgICAgdGhpcy5maWx0ZXJTZXJ2aWNlID0gZmlsdGVyU2VydmljZTtcbiAgICAgICAgdGhpcy5vcGVyYXRvckxpc3QgPSBuZXcgUXVlcnlMaXN0KCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgaG9zdENsYXNzZXMoKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBnZXQgb3BlcmF0b3JzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fb3BlcmF0b3JzLmxlbmd0aCA/IHRoaXMuX29wZXJhdG9ycyA6IHRoaXMuZGVmYXVsdE9wZXJhdG9ycztcbiAgICB9XG4gICAgc2V0IG9wZXJhdG9ycyh2YWx1ZXMpIHtcbiAgICAgICAgdGhpcy5fb3BlcmF0b3JzID0gdmFsdWVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xuICAgICAgICB0aGlzLm9wZXJhdGlvbkxpc3RTdWJzY3JpcHRpb24gPSBvYnNlcnZlKHRoaXMub3BlcmF0b3JMaXN0KVxuICAgICAgICAgICAgLnBpcGUobWFwKHEgPT4gcS50b0FycmF5KCkpLCBtYXAodG9KU09OKSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoeCA9PiB7XG4gICAgICAgICAgICB0aGlzLm9wZXJhdG9ycyA9IHg7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgaWYgKHRoaXMub3BlcmF0aW9uTGlzdFN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5vcGVyYXRpb25MaXN0U3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZmlsdGVyQnlGaWVsZChmaWVsZCkge1xuICAgICAgICByZXR1cm4gZmlsdGVyQnlGaWVsZCh0aGlzLmZpbHRlciwgZmllbGQpO1xuICAgIH1cbiAgICBmaWx0ZXJzQnlGaWVsZChmaWVsZCkge1xuICAgICAgICByZXR1cm4gZmlsdGVyc0J5RmllbGQodGhpcy5maWx0ZXIsIGZpZWxkKTtcbiAgICB9XG4gICAgcmVtb3ZlRmlsdGVyKGZpZWxkKSB7XG4gICAgICAgIHJldHVybiByZW1vdmVGaWx0ZXIodGhpcy5maWx0ZXIsIGZpZWxkKTtcbiAgICB9XG4gICAgdXBkYXRlRmlsdGVyKGZpbHRlciQkMSkge1xuICAgICAgICBjb25zdCByb290ID0gdGhpcy5maWx0ZXIgfHwge1xuICAgICAgICAgICAgZmlsdGVyczogW10sXG4gICAgICAgICAgICBsb2dpYzogXCJhbmRcIlxuICAgICAgICB9O1xuICAgICAgICBsZXQgW2N1cnJlbnRGaWx0ZXJdID0gZmxhdHRlbihyb290KS5maWx0ZXIoeCA9PiB4LmZpZWxkID09PSBmaWx0ZXIkJDEuZmllbGQpO1xuICAgICAgICBpZiAoIWlzUHJlc2VudChjdXJyZW50RmlsdGVyKSkge1xuICAgICAgICAgICAgcm9vdC5maWx0ZXJzLnB1c2goZmlsdGVyJCQxKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oY3VycmVudEZpbHRlciwgZmlsdGVyJCQxKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcm9vdDtcbiAgICB9XG4gICAgYXBwbHlGaWx0ZXIoZmlsdGVyJCQxKSB7XG4gICAgICAgIHRoaXMuZmlsdGVyU2VydmljZS5maWx0ZXIoZmlsdGVyJCQxKTtcbiAgICB9XG59XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnY2xhc3Muay1maWx0ZXJjZWxsJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIEJhc2VGaWx0ZXJDZWxsQ29tcG9uZW50LnByb3RvdHlwZSwgXCJob3N0Q2xhc3Nlc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZHJlbihGaWx0ZXJPcGVyYXRvckJhc2UpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBRdWVyeUxpc3QpXG5dLCBCYXNlRmlsdGVyQ2VsbENvbXBvbmVudC5wcm90b3R5cGUsIFwib3BlcmF0b3JMaXN0XCIsIHZvaWQgMCk7XG5cbmNvbnN0IG51bWVyaWNPcGVyYXRvcnMgPSBsb2NhbGl6ZU9wZXJhdG9ycyQxKHtcbiAgICBcImZpbHRlckVxT3BlcmF0b3JcIjogXCJlcVwiLFxuICAgIFwiZmlsdGVyTm90RXFPcGVyYXRvclwiOiBcIm5lcVwiLFxuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpvYmplY3QtbGl0ZXJhbC1zb3J0LWtleXNcbiAgICBcImZpbHRlckd0ZU9wZXJhdG9yXCI6IFwiZ3RlXCIsXG4gICAgXCJmaWx0ZXJHdE9wZXJhdG9yXCI6IFwiZ3RcIixcbiAgICBcImZpbHRlckx0ZU9wZXJhdG9yXCI6IFwibHRlXCIsXG4gICAgXCJmaWx0ZXJMdE9wZXJhdG9yXCI6IFwibHRcIixcbiAgICBcImZpbHRlcklzTnVsbE9wZXJhdG9yXCI6IFwiaXNudWxsXCIsXG4gICAgXCJmaWx0ZXJJc05vdE51bGxPcGVyYXRvclwiOiBcImlzbm90bnVsbFwiXG59KTtcbi8qKlxuICogUmVwcmVzZW50cyBhIGJhc2UgbnVtZXJpYyBmaWx0ZXIgY29tcG9uZW50LlxuICovXG5jbGFzcyBOdW1lcmljRmlsdGVyQ29tcG9uZW50IGV4dGVuZHMgQmFzZUZpbHRlckNlbGxDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGZpbHRlclNlcnZpY2UsIGxvY2FsaXphdGlvbikge1xuICAgICAgICBzdXBlcihmaWx0ZXJTZXJ2aWNlKTtcbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb24gPSBsb2NhbGl6YXRpb247XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgZGVmYXVsdCBmaWx0ZXIgb3BlcmF0b3IuIERlZmF1bHRzIHRvIGBlcWAuXG4gICAgICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm9wZXJhdG9yID0gXCJlcVwiO1xuICAgICAgICAvKipcbiAgICAgICAgICogU3BlY2lmaWVzIHRoZSB2YWx1ZSB0aGF0IGlzIHVzZWQgdG8gaW5jcmVtZW50IG9yIGRlY3JlbWVudCB0aGUgY29tcG9uZW50IHZhbHVlLlxuICAgICAgICAgKiBAdHlwZSB7bnVtZXJpY31cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc3RlcCA9IDE7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTcGVjaWZpZXMgd2hldGhlciB0aGUgKipVcCoqIGFuZCAqKkRvd24qKiBzcGluIGJ1dHRvbnMgd2lsbCBiZSByZW5kZXJlZC5cbiAgICAgICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnNwaW5uZXJzID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5kZWZhdWx0T3BlcmF0b3JzID0gbnVtZXJpY09wZXJhdG9ycyh0aGlzLmxvY2FsaXphdGlvbik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyB0aGUgbnVtYmVyIGZvcm1hdCB1c2VkIHdoZW4gdGhlIGNvbXBvbmVudCBpcyBub3QgZm9jdXNlZC5cbiAgICAgKiBCeSBkZWZhdWx0LCB0aGUgYGNvbHVtbi5mb3JtYXRgIHZhbHVlIGlzIHVzZWQgKGlmIHNldCkuXG4gICAgICovXG4gICAgc2V0IGZvcm1hdCh2YWx1ZSkge1xuICAgICAgICB0aGlzLl9mb3JtYXQgPSB2YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHJlYWRvbmx5XG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBnZXQgZm9ybWF0KCkge1xuICAgICAgICByZXR1cm4gIWlzTnVsbE9yRW1wdHlTdHJpbmcodGhpcy5fZm9ybWF0KSA/IHRoaXMuX2Zvcm1hdCA6IHRoaXMuY29sdW1uRm9ybWF0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgY3VycmVudCBmaWx0ZXIgZm9yIHRoZSBhc3NvY2lhdGVkIGNvbHVtbiBmaWVsZC5cbiAgICAgKiBAcmVhZG9ubHlcbiAgICAgKiBAdHlwZSB7RmlsdGVyRGVzY3JpcHRvcn1cbiAgICAgKi9cbiAgICBnZXQgY3VycmVudEZpbHRlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyQnlGaWVsZCh0aGlzLmNvbHVtbi5maWVsZCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBjdXJyZW50IGZpbHRlciBvcGVyYXRvciBmb3IgdGhlIGFzc29jaWF0ZWQgY29sdW1uIGZpZWxkLlxuICAgICAqIEByZWFkb25seVxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgZ2V0IGN1cnJlbnRPcGVyYXRvcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY3VycmVudEZpbHRlciA/IHRoaXMuY3VycmVudEZpbHRlci5vcGVyYXRvciA6IHRoaXMub3BlcmF0b3I7XG4gICAgfVxuICAgIGdldCBjb2x1bW5Gb3JtYXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbHVtbiAmJiAhaXNOdWxsT3JFbXB0eVN0cmluZyh0aGlzLmNvbHVtbi5mb3JtYXQpID9cbiAgICAgICAgICAgIGV4dHJhY3RGb3JtYXQodGhpcy5jb2x1bW4uZm9ybWF0KSA6IFwibjJcIjtcbiAgICB9XG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uID0gdGhpcy5sb2NhbGl6YXRpb24uY2hhbmdlcy5zdWJzY3JpYmUodGhpcy5sb2NhbGl6YXRpb25DaGFuZ2UuYmluZCh0aGlzKSk7XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5zdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICAgICAgc3VwZXIubmdPbkRlc3Ryb3koKTtcbiAgICB9XG4gICAgbG9jYWxpemF0aW9uQ2hhbmdlKCkge1xuICAgICAgICB0aGlzLmRlZmF1bHRPcGVyYXRvcnMgPSBudW1lcmljT3BlcmF0b3JzKHRoaXMubG9jYWxpemF0aW9uKTtcbiAgICAgICAgaWYgKHRoaXMub3BlcmF0b3JMaXN0Lmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5vcGVyYXRvcnMgPSB0b0pTT04odGhpcy5vcGVyYXRvckxpc3QudG9BcnJheSgpKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIENvbHVtbkNvbXBvbmVudClcbl0sIE51bWVyaWNGaWx0ZXJDb21wb25lbnQucHJvdG90eXBlLCBcImNvbHVtblwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgTnVtZXJpY0ZpbHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZmlsdGVyXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBOdW1lcmljRmlsdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJvcGVyYXRvclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgTnVtZXJpY0ZpbHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwic3RlcFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgTnVtZXJpY0ZpbHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwibWluXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG5dLCBOdW1lcmljRmlsdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJtYXhcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBOdW1lcmljRmlsdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzcGlubmVyc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgTnVtZXJpY0ZpbHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZGVjaW1hbHNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtTdHJpbmddKVxuXSwgTnVtZXJpY0ZpbHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZm9ybWF0XCIsIG51bGwpO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBudW1lcmljIGZpbHRlciBjZWxsLlxuICpcbiAqIEBleGFtcGxlXG4gKiAgYGBgaHRtbC1uby1ydW5cbiAqICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIiB0aXRsZT1cIlByb2R1Y3QgTmFtZVwiPlxuICogICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZEZpbHRlckNlbGxUZW1wbGF0ZSBsZXQtZmlsdGVyIGxldC1jb2x1bW49XCJjb2x1bW5cIj5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLW51bWVyaWMtZmlsdGVyLWNlbGxcbiAqICAgICAgICAgICAgICBbY29sdW1uXT1cImNvbHVtblwiXG4gKiAgICAgICAgICAgICAgW2ZpbHRlcl09XCJmaWx0ZXJcIj5cbiAqICAgICAgICAgIDwva2VuZG8tZ3JpZC1udW1lcmljLWZpbHRlci1jZWxsPlxuICogICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgYGBgXG4gKi9cbmxldCBOdW1lcmljRmlsdGVyQ2VsbENvbXBvbmVudCA9IGNsYXNzIE51bWVyaWNGaWx0ZXJDZWxsQ29tcG9uZW50IGV4dGVuZHMgTnVtZXJpY0ZpbHRlckNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoZmlsdGVyU2VydmljZSwgbG9jYWxpemF0aW9uKSB7XG4gICAgICAgIHN1cGVyKGZpbHRlclNlcnZpY2UsIGxvY2FsaXphdGlvbik7XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uID0gbG9jYWxpemF0aW9uO1xuICAgICAgICAvKipcbiAgICAgICAgICogRGV0ZXJtaW5lcyB0aGUgZGVsYXkgdGltZSAoaW4gbWlsbGlzZWNvbmRzKSBiZWZvcmUgdGhlIGZpbHRlciB2YWx1ZSBpcyBzdWJtaXR0ZWQuXG4gICAgICAgICAqIEEgdmFsdWUgb2YgYDBgIGluZGljYXRlcyBubyBkZWxheS4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgYDUwMGAuXG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5maWx0ZXJEZWxheSA9IDUwMDtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERldGVybWluZXMgaWYgdGhlIGRyb3AtZG93biBmaWx0ZXIgb3BlcmF0b3JzIHdpbGwgYmUgZGlzcGxheWVkLlxuICAgICAgICAgKiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBgdHJ1ZWAuXG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zaG93T3BlcmF0b3JzID0gdHJ1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG1lc3NhZ2VGb3Ioa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvY2FsaXphdGlvbi5nZXQoa2V5KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBjb2x1bW5MYWJlbCgpIHtcbiAgICAgICAgY29uc3QgbG9jYWxpemF0aW9uTXNnID0gdGhpcy5sb2NhbGl6YXRpb24uZ2V0KCdmaWx0ZXJJbnB1dExhYmVsJykgfHwgJyc7XG4gICAgICAgIGNvbnN0IGNvbHVtbk5hbWUgPSB0aGlzLmNvbHVtbi50aXRsZSB8fCB0aGlzLmNvbHVtbi5maWVsZDtcbiAgICAgICAgcmV0dXJuIHJlcGxhY2VNZXNzYWdlUGxhY2Vob2xkZXIobG9jYWxpemF0aW9uTXNnLCAnY29sdW1uTmFtZScsIGNvbHVtbk5hbWUpO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG5dLCBOdW1lcmljRmlsdGVyQ2VsbENvbXBvbmVudC5wcm90b3R5cGUsIFwiZmlsdGVyRGVsYXlcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBOdW1lcmljRmlsdGVyQ2VsbENvbXBvbmVudC5wcm90b3R5cGUsIFwic2hvd09wZXJhdG9yc1wiLCB2b2lkIDApO1xuTnVtZXJpY0ZpbHRlckNlbGxDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWdyaWQtbnVtZXJpYy1maWx0ZXItY2VsbCcsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxrZW5kby1ncmlkLWZpbHRlci13cmFwcGVyLWNlbGxcbiAgICAgICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAgICAgICAgICAgIFtmaWx0ZXJdPVwiZmlsdGVyXCJcbiAgICAgICAgICAgIFtvcGVyYXRvcnNdPVwib3BlcmF0b3JzXCJcbiAgICAgICAgICAgIFtkZWZhdWx0T3BlcmF0b3JdPVwib3BlcmF0b3JcIlxuICAgICAgICAgICAgW3Nob3dPcGVyYXRvcnNdPVwic2hvd09wZXJhdG9yc1wiXG4gICAgICAgID5cbiAgICAgICAgICAgIDxrZW5kby1udW1lcmljdGV4dGJveFxuICAgICAgICAgICAgICAgIGtlbmRvR3JpZEZvY3VzYWJsZVxuICAgICAgICAgICAgICAgIGtlbmRvRmlsdGVySW5wdXRcbiAgICAgICAgICAgICAgICBbY29sdW1uTGFiZWxdPVwiY29sdW1uTGFiZWxcIlxuICAgICAgICAgICAgICAgIFtmaWx0ZXJEZWxheV09XCJmaWx0ZXJEZWxheVwiXG4gICAgICAgICAgICAgICAgW2F1dG9Db3JyZWN0XT1cInRydWVcIlxuICAgICAgICAgICAgICAgIFt2YWx1ZV09XCJjdXJyZW50RmlsdGVyPy52YWx1ZVwiXG4gICAgICAgICAgICAgICAgW2Zvcm1hdF09XCJmb3JtYXRcIlxuICAgICAgICAgICAgICAgIFtkZWNpbWFsc109XCJkZWNpbWFsc1wiXG4gICAgICAgICAgICAgICAgW3NwaW5uZXJzXT1cInNwaW5uZXJzXCJcbiAgICAgICAgICAgICAgICBbbWluXT1cIm1pblwiXG4gICAgICAgICAgICAgICAgW21heF09XCJtYXhcIlxuICAgICAgICAgICAgICAgIFtzdGVwXT1cInN0ZXBcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxrZW5kby1udW1lcmljdGV4dGJveC1tZXNzYWdlc1xuICAgICAgICAgICAgICAgICAgICBbaW5jcmVtZW50XT1cIm1lc3NhZ2VGb3IoJ2ZpbHRlck51bWVyaWNJbmNyZW1lbnQnKVwiXG4gICAgICAgICAgICAgICAgICAgIFtkZWNyZW1lbnRdPVwibWVzc2FnZUZvcignZmlsdGVyTnVtZXJpY0RlY3JlbWVudCcpXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPC9rZW5kby1udW1lcmljdGV4dGJveC1tZXNzYWdlcz5cbiAgICAgICAgICAgIDwva2VuZG8tbnVtZXJpY3RleHRib3g+XG4gICAgICAgIDwva2VuZG8tZ3JpZC1maWx0ZXItd3JhcHBlci1jZWxsPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0ZpbHRlclNlcnZpY2UsXG4gICAgICAgIExvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgTnVtZXJpY0ZpbHRlckNlbGxDb21wb25lbnQpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IEZpbHRlcklucHV0RGlyZWN0aXZlID0gY2xhc3MgRmlsdGVySW5wdXREaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHZhbHVlQWNjZXNzb3JzLCBuZ1pvbmUsIGVsZW1lbnQsIHJlbmRlcmVyKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICAgICAgdGhpcy5jaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuY29tcG9zaW5nID0gZmFsc2U7XG4gICAgICAgIHRoaXMuZmlsdGVyRGVsYXkgPSA1MDA7XG4gICAgICAgIHRoaXMuY2hhbmdlUmVxdWVzdHMgPSBuZXcgU3ViamVjdCgpO1xuICAgICAgICB0aGlzLmFjY2Vzc29yID0gdmFsdWVBY2Nlc3NvcnNbMF07XG4gICAgICAgIG5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB1bnN1YnNjcmliZVN0YXJ0ID0gcmVuZGVyZXIubGlzdGVuKGVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ2NvbXBvc2l0aW9uc3RhcnQnLCAoKSA9PiB0aGlzLmNvbXBvc2luZyA9IHRydWUpO1xuICAgICAgICAgICAgY29uc3QgdW5zdWJzY3JpYmVFbmQgPSByZW5kZXJlci5saXN0ZW4oZWxlbWVudC5uYXRpdmVFbGVtZW50LCAnY29tcG9zaXRpb25lbmQnLCAoKSA9PiB0aGlzLmNvbXBvc2luZyA9IGZhbHNlKTtcbiAgICAgICAgICAgIHRoaXMudW5zdWJzY3JpYmVFdmVudHMgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdW5zdWJzY3JpYmVTdGFydCgpO1xuICAgICAgICAgICAgICAgIHVuc3Vic2NyaWJlRW5kKCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgc2V0IHZhbHVlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuYWNjZXNzb3Iud3JpdGVWYWx1ZSh2YWx1ZSk7XG4gICAgfVxuICAgIHNldCBkaXNhYmxlZCh2YWx1ZSkge1xuICAgICAgICB0aGlzLmFjY2Vzc29yLnNldERpc2FibGVkU3RhdGUodmFsdWUpO1xuICAgIH1cbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgICAgIHRoaXMuYWRkQXJpYUF0dHJpYnV0ZXMoKTtcbiAgICAgICAgdGhpcy5hY2Nlc3Nvci5yZWdpc3Rlck9uQ2hhbmdlKHggPT4gdGhpcy5maWx0ZXJEZWxheSA+IDAgP1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VSZXF1ZXN0cy5uZXh0KHgpIDpcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlLmVtaXQoeCkpO1xuICAgICAgICB0aGlzLnN1YnNjcmliZUNoYW5nZXMoKTtcbiAgICB9XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlcykge1xuICAgICAgICBpZiAoaXNDaGFuZ2VkKCdmaWx0ZXJEZWxheScsIGNoYW5nZXMpKSB7XG4gICAgICAgICAgICB0aGlzLnVuc3Vic2NyaWJlQ2hhbmdlcygpO1xuICAgICAgICAgICAgdGhpcy5zdWJzY3JpYmVDaGFuZ2VzKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMudW5zdWJzY3JpYmVDaGFuZ2VzKCk7XG4gICAgICAgIHRoaXMudW5zdWJzY3JpYmVFdmVudHMoKTtcbiAgICB9XG4gICAgc3Vic2NyaWJlQ2hhbmdlcygpIHtcbiAgICAgICAgdGhpcy5jaGFuZ2VSZXF1ZXN0c1N1YnNjcmlwdGlvbiA9IHRoaXMuY2hhbmdlUmVxdWVzdHNcbiAgICAgICAgICAgIC5waXBlKGRlYm91bmNlVGltZSh0aGlzLmZpbHRlckRlbGF5KSwgZmlsdGVyKCgpID0+ICF0aGlzLmNvbXBvc2luZykpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKHggPT4gdGhpcy5jaGFuZ2UuZW1pdCh4KSk7XG4gICAgfVxuICAgIHVuc3Vic2NyaWJlQ2hhbmdlcygpIHtcbiAgICAgICAgaWYgKHRoaXMuY2hhbmdlUmVxdWVzdHNTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlUmVxdWVzdHNTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhZGRBcmlhQXR0cmlidXRlcygpIHtcbiAgICAgICAgY29uc3QgYXJpYVZhbHVlID0gdGhpcy5jb2x1bW5MYWJlbDtcbiAgICAgICAgaWYgKHRoaXMua2VuZG9JbnB1dCAmJiB0aGlzLmtlbmRvSW5wdXQuZm9jdXNhYmxlSWQgJiYgaXNEb2N1bWVudEF2YWlsYWJsZSgpKSB7XG4gICAgICAgICAgICBjb25zdCBmb2N1c2FibGVFbGVtZW50ID0gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7dGhpcy5rZW5kb0lucHV0LmZvY3VzYWJsZUlkfWApO1xuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRBdHRyaWJ1dGUoZm9jdXNhYmxlRWxlbWVudCwgJ2FyaWEtbGFiZWwnLCBhcmlhVmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRBdHRyaWJ1dGUodGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsICdhcmlhLWxhYmVsJywgYXJpYVZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBDb250ZW50Q2hpbGQoS2VuZG9JbnB1dCwgeyBzdGF0aWM6IHRydWUgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIEZpbHRlcklucHV0RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJrZW5kb0lucHV0XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG5dLCBGaWx0ZXJJbnB1dERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiZmlsdGVyRGVsYXlcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIEZpbHRlcklucHV0RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJjb2x1bW5MYWJlbFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1N0cmluZ10pXG5dLCBGaWx0ZXJJbnB1dERpcmVjdGl2ZS5wcm90b3R5cGUsIFwidmFsdWVcIiwgbnVsbCk7XG5GaWx0ZXJJbnB1dERpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvRmlsdGVySW5wdXRdJ1xuICAgIH0pLFxuICAgIF9fcGFyYW0oMCwgU2VsZigpKSwgX19wYXJhbSgwLCBJbmplY3QoTkdfVkFMVUVfQUNDRVNTT1IpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0FycmF5LCBOZ1pvbmUsXG4gICAgICAgIEVsZW1lbnRSZWYsXG4gICAgICAgIFJlbmRlcmVyMl0pXG5dLCBGaWx0ZXJJbnB1dERpcmVjdGl2ZSk7XG5cbmNvbnN0IEVNUFRZX1ZBTFVFX09QRVJBVE9SUyA9IG5ldyBTZXQoWydpc251bGwnLCAnaXNub3RudWxsJywgJ2lzZW1wdHknLCAnaXNub3RlbXB0eSddKTtcbmNvbnN0IGlzRW1wdHlWYWx1ZU9wZXJhdG9yID0gKG9wZXJhdG9yKSA9PiBFTVBUWV9WQUxVRV9PUEVSQVRPUlMuaGFzKG9wZXJhdG9yKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBGaWx0ZXJJbnB1dFdyYXBwZXJDb21wb25lbnQgZXh0ZW5kcyBCYXNlRmlsdGVyQ2VsbENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoZmlsdGVyU2VydmljZSkge1xuICAgICAgICBzdXBlcihmaWx0ZXJTZXJ2aWNlKTtcbiAgICAgICAgdGhpcy5vcGVyYXRvcnMgPSBbXTtcbiAgICB9XG4gICAgZ2V0IGN1cnJlbnRGaWx0ZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZpbHRlckJ5RmllbGQodGhpcy5jb2x1bW4uZmllbGQpO1xuICAgIH1cbiAgICBnZXQgY3VycmVudE9wZXJhdG9yKCkge1xuICAgICAgICBjb25zdCBmaWx0ZXIkJDEgPSB0aGlzLmN1cnJlbnRGaWx0ZXI7XG4gICAgICAgIGlmICghdGhpcy5fb3BlcmF0b3IpIHtcbiAgICAgICAgICAgIHRoaXMuX29wZXJhdG9yID0gZmlsdGVyJCQxID8gZmlsdGVyJCQxLm9wZXJhdG9yIDogdGhpcy5kZWZhdWx0T3BlcmF0b3I7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX29wZXJhdG9yO1xuICAgIH1cbiAgICBzZXQgY3VycmVudE9wZXJhdG9yKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX29wZXJhdG9yID0gdmFsdWU7XG4gICAgICAgIGNvbnN0IGVtcHR5VmFsdWVPcGVyYXRvciA9IGlzRW1wdHlWYWx1ZU9wZXJhdG9yKHZhbHVlKTtcbiAgICAgICAgdGhpcy5maWx0ZXJJbnB1dERpc2FibGVkID0gZW1wdHlWYWx1ZU9wZXJhdG9yO1xuICAgICAgICBpZiAoZW1wdHlWYWx1ZU9wZXJhdG9yKSB7XG4gICAgICAgICAgICB0aGlzLmFwcGx5Tm9WYWx1ZUZpbHRlcih2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIWlzQmxhbmsodmFsdWUpICYmIGlzUHJlc2VudCh0aGlzLmN1cnJlbnRGaWx0ZXIpKSB7XG4gICAgICAgICAgICB0aGlzLm9uQ2hhbmdlKHRoaXMuY3VycmVudEZpbHRlci52YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IGRlZmF1bHRPcGVyYXRvcigpIHtcbiAgICAgICAgaWYgKCFpc051bGxPckVtcHR5U3RyaW5nKHRoaXMuX2RlZmF1bHRPcGVyYXRvcikpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9kZWZhdWx0T3BlcmF0b3I7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5vcGVyYXRvcnMgJiYgdGhpcy5vcGVyYXRvcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5vcGVyYXRvcnNbMF0udmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFwiZXFcIjtcbiAgICB9XG4gICAgc2V0IGRlZmF1bHRPcGVyYXRvcih2YWx1ZSkge1xuICAgICAgICB0aGlzLl9kZWZhdWx0T3BlcmF0b3IgPSB2YWx1ZTtcbiAgICB9XG4gICAgc2V0IGZpbHRlcklucHV0RGlzYWJsZWQoZGlzYWJsZWQpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlucHV0KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pbnB1dC5kaXNhYmxlZCA9IGRpc2FibGVkO1xuICAgIH1cbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgICAgIGlmIChpc1ByZXNlbnQodGhpcy5pbnB1dCkpIHtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlU3Vic2NyaXB0aW9uID0gdGhpcy5pbnB1dC5jaGFuZ2Uuc3Vic2NyaWJlKHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKSk7XG4gICAgICAgICAgICB0aGlzLmZpbHRlcklucHV0RGlzYWJsZWQgPSBpc0VtcHR5VmFsdWVPcGVyYXRvcih0aGlzLmN1cnJlbnRPcGVyYXRvcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIHN1cGVyLm5nT25EZXN0cm95KCk7XG4gICAgICAgIGlmICh0aGlzLmNoYW5nZVN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvbkNoYW5nZSh2YWx1ZSkge1xuICAgICAgICBpZiAoIWlzTnVsbE9yRW1wdHlTdHJpbmcodmFsdWUpIHx8IHRoaXMuZmlsdGVyQnlGaWVsZCh0aGlzLmNvbHVtbi5maWVsZCkpIHtcbiAgICAgICAgICAgIHRoaXMuZmlsdGVyQ2hhbmdlKGlzTnVsbE9yRW1wdHlTdHJpbmcodmFsdWUpID9cbiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUZpbHRlcih0aGlzLmNvbHVtbi5maWVsZCkgOlxuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlRmlsdGVyKHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGQ6IHRoaXMuY29sdW1uLmZpZWxkLFxuICAgICAgICAgICAgICAgICAgICBvcGVyYXRvcjogdGhpcy5jdXJyZW50T3BlcmF0b3IsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvbkNsZWFyKCkge1xuICAgICAgICB0aGlzLm9uQ2hhbmdlKG51bGwpO1xuICAgICAgICB0aGlzLmZpbHRlcklucHV0RGlzYWJsZWQgPSBpc0VtcHR5VmFsdWVPcGVyYXRvcih0aGlzLmRlZmF1bHRPcGVyYXRvcik7XG4gICAgfVxuICAgIGFwcGx5Tm9WYWx1ZUZpbHRlcihvcGVyYXRvcikge1xuICAgICAgICB0aGlzLmZpbHRlckNoYW5nZSh0aGlzLnVwZGF0ZUZpbHRlcih7XG4gICAgICAgICAgICBmaWVsZDogdGhpcy5jb2x1bW4uZmllbGQsXG4gICAgICAgICAgICBvcGVyYXRvcjogb3BlcmF0b3IsXG4gICAgICAgICAgICB2YWx1ZTogbnVsbFxuICAgICAgICB9KSk7XG4gICAgfVxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXMpIHtcbiAgICAgICAgaWYgKGlzQ2hhbmdlZChcImZpbHRlclwiLCBjaGFuZ2VzLCBmYWxzZSkpIHtcbiAgICAgICAgICAgIHRoaXMuX29wZXJhdG9yID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuZmlsdGVySW5wdXREaXNhYmxlZCA9IGlzRW1wdHlWYWx1ZU9wZXJhdG9yKHRoaXMuY3VycmVudE9wZXJhdG9yKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KVxuXSwgRmlsdGVySW5wdXRXcmFwcGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJvcGVyYXRvcnNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIENvbHVtbkNvbXBvbmVudClcbl0sIEZpbHRlcklucHV0V3JhcHBlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBGaWx0ZXJJbnB1dFdyYXBwZXJDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgQ29udGVudENoaWxkKEZpbHRlcklucHV0RGlyZWN0aXZlLCB7IHN0YXRpYzogZmFsc2UgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZpbHRlcklucHV0RGlyZWN0aXZlKVxuXSwgRmlsdGVySW5wdXRXcmFwcGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpbnB1dFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1N0cmluZ10pXG5dLCBGaWx0ZXJJbnB1dFdyYXBwZXJDb21wb25lbnQucHJvdG90eXBlLCBcImRlZmF1bHRPcGVyYXRvclwiLCBudWxsKTtcblxuY29uc3QgRU1QVFlfRklMVEVSX09QRVJBVE9SUyA9IFsnaXNudWxsJywgJ2lzbm90bnVsbCcsICdpc2VtcHR5JywgJ2lzbm90ZW1wdHknXTtcbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgRmlsdGVyQ2VsbFdyYXBwZXJDb21wb25lbnQgPSBjbGFzcyBGaWx0ZXJDZWxsV3JhcHBlckNvbXBvbmVudCBleHRlbmRzIEZpbHRlcklucHV0V3JhcHBlckNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoZmlsdGVyU2VydmljZSkge1xuICAgICAgICBzdXBlcihmaWx0ZXJTZXJ2aWNlKTtcbiAgICAgICAgdGhpcy5zaG93T3BlcmF0b3JzID0gdHJ1ZTtcbiAgICB9XG4gICAgZ2V0IGhvc3RDbGFzc2VzKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZ2V0IG92ZXJyaWRlQmFzZUNsYXNzZXMoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZ2V0IHNob3dCdXR0b24oKSB7XG4gICAgICAgIGNvbnN0IGZpbHRlciQkMSA9IHRoaXMuY3VycmVudEZpbHRlcjtcbiAgICAgICAgcmV0dXJuIGlzUHJlc2VudChmaWx0ZXIkJDEpICYmICghaXNOdWxsT3JFbXB0eVN0cmluZyhmaWx0ZXIkJDEudmFsdWUpIHx8XG4gICAgICAgICAgICBFTVBUWV9GSUxURVJfT1BFUkFUT1JTLmluZGV4T2YoU3RyaW5nKGZpbHRlciQkMS5vcGVyYXRvcikpID49IDApO1xuICAgIH1cbiAgICBmaWx0ZXJDaGFuZ2UoZmlsdGVyJCQxKSB7XG4gICAgICAgIHRoaXMuYXBwbHlGaWx0ZXIoZmlsdGVyJCQxKTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ2NsYXNzLmstZmlsdGVyY2VsbC13cmFwcGVyJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIEZpbHRlckNlbGxXcmFwcGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJob3N0Q2xhc3Nlc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLWZpbHRlcmNlbGwnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgRmlsdGVyQ2VsbFdyYXBwZXJDb21wb25lbnQucHJvdG90eXBlLCBcIm92ZXJyaWRlQmFzZUNsYXNzZXNcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgRmlsdGVyQ2VsbFdyYXBwZXJDb21wb25lbnQucHJvdG90eXBlLCBcInNob3dPcGVyYXRvcnNcIiwgdm9pZCAwKTtcbkZpbHRlckNlbGxXcmFwcGVyQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLWZpbHRlci13cmFwcGVyLWNlbGwnLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgICAgIDxrZW5kby1ncmlkLWZpbHRlci1jZWxsLW9wZXJhdG9yc1xuICAgICAgICAgICAgW3Nob3dPcGVyYXRvcnNdPVwic2hvd09wZXJhdG9yc1wiXG4gICAgICAgICAgICBbb3BlcmF0b3JzXT1cIm9wZXJhdG9yc1wiXG4gICAgICAgICAgICAoY2xlYXIpPVwib25DbGVhcigpXCJcbiAgICAgICAgICAgIFtzaG93QnV0dG9uXT1cInNob3dCdXR0b25cIlxuICAgICAgICAgICAgWyh2YWx1ZSldPVwiY3VycmVudE9wZXJhdG9yXCI+XG4gICAgICAgIDwva2VuZG8tZ3JpZC1maWx0ZXItY2VsbC1vcGVyYXRvcnM+XG4gICAgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRmlsdGVyU2VydmljZV0pXG5dLCBGaWx0ZXJDZWxsV3JhcHBlckNvbXBvbmVudCk7XG5cbi8vIHRzbGludDpkaXNhYmxlOm5vLWFjY2Vzcy1taXNzaW5nLW1lbWJlclxuY29uc3Qgc3RyaW5nT3BlcmF0b3JzID0gbG9jYWxpemVPcGVyYXRvcnMkMSh7XG4gICAgXCJmaWx0ZXJFcU9wZXJhdG9yXCI6IFwiZXFcIixcbiAgICBcImZpbHRlck5vdEVxT3BlcmF0b3JcIjogXCJuZXFcIixcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6b2JqZWN0LWxpdGVyYWwtc29ydC1rZXlzXG4gICAgXCJmaWx0ZXJDb250YWluc09wZXJhdG9yXCI6IFwiY29udGFpbnNcIixcbiAgICBcImZpbHRlck5vdENvbnRhaW5zT3BlcmF0b3JcIjogXCJkb2Vzbm90Y29udGFpblwiLFxuICAgIFwiZmlsdGVyU3RhcnRzV2l0aE9wZXJhdG9yXCI6IFwic3RhcnRzd2l0aFwiLFxuICAgIFwiZmlsdGVyRW5kc1dpdGhPcGVyYXRvclwiOiBcImVuZHN3aXRoXCIsXG4gICAgXCJmaWx0ZXJJc051bGxPcGVyYXRvclwiOiBcImlzbnVsbFwiLFxuICAgIFwiZmlsdGVySXNOb3ROdWxsT3BlcmF0b3JcIjogXCJpc25vdG51bGxcIixcbiAgICBcImZpbHRlcklzRW1wdHlPcGVyYXRvclwiOiBcImlzZW1wdHlcIixcbiAgICBcImZpbHRlcklzTm90RW1wdHlPcGVyYXRvclwiOiBcImlzbm90ZW1wdHlcIlxufSk7XG4vKipcbiAqIFJlcHJlc2VudHMgYSBiYXNlIHN0cmluZyBmaWx0ZXIgY29tcG9uZW50LlxuICovXG5jbGFzcyBTdHJpbmdGaWx0ZXJDb21wb25lbnQgZXh0ZW5kcyBCYXNlRmlsdGVyQ2VsbENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoZmlsdGVyU2VydmljZSwgbG9jYWxpemF0aW9uKSB7XG4gICAgICAgIHN1cGVyKGZpbHRlclNlcnZpY2UpO1xuICAgICAgICB0aGlzLmxvY2FsaXphdGlvbiA9IGxvY2FsaXphdGlvbjtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBkZWZhdWx0IGZpbHRlciBvcGVyYXRvci4gRGVmYXVsdHMgdG8gYGNvbnRhaW5zYC5cbiAgICAgICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMub3BlcmF0b3IgPSBcImNvbnRhaW5zXCI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBjdXJyZW50IGZpbHRlciBmb3IgdGhlIGFzc29jaWF0ZWQgY29sdW1uIGZpZWxkLlxuICAgICAqIEByZWFkb25seVxuICAgICAqIEB0eXBlIHtGaWx0ZXJEZXNjcmlwdG9yfVxuICAgICAqL1xuICAgIGdldCBjdXJyZW50RmlsdGVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5maWx0ZXJCeUZpZWxkKCh0aGlzLmNvbHVtbiB8fCB7fSkuZmllbGQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgY3VycmVudCBmaWx0ZXIgb3BlcmF0b3IgZm9yIHRoZSBhc3NvY2lhdGVkIGNvbHVtbiBmaWVsZC5cbiAgICAgKiBAcmVhZG9ubHlcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIGdldCBjdXJyZW50T3BlcmF0b3IoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRGaWx0ZXIgPyB0aGlzLmN1cnJlbnRGaWx0ZXIub3BlcmF0b3IgOiB0aGlzLm9wZXJhdG9yO1xuICAgIH1cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24gPSB0aGlzLmxvY2FsaXphdGlvbi5jaGFuZ2VzLnN1YnNjcmliZSh0aGlzLmxvY2FsaXphdGlvbkNoYW5nZS5iaW5kKHRoaXMpKTtcbiAgICB9XG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIGlmICh0aGlzLnN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgICAgICBzdXBlci5uZ09uRGVzdHJveSgpO1xuICAgIH1cbiAgICBsb2NhbGl6YXRpb25DaGFuZ2UoKSB7XG4gICAgICAgIHRoaXMuZGVmYXVsdE9wZXJhdG9ycyA9IHN0cmluZ09wZXJhdG9ycyh0aGlzLmxvY2FsaXphdGlvbik7XG4gICAgICAgIGlmICh0aGlzLm9wZXJhdG9yTGlzdC5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRoaXMub3BlcmF0b3JzID0gdG9KU09OKHRoaXMub3BlcmF0b3JMaXN0LnRvQXJyYXkoKSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBDb2x1bW5Db21wb25lbnQpXG5dLCBTdHJpbmdGaWx0ZXJDb21wb25lbnQucHJvdG90eXBlLCBcImNvbHVtblwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgU3RyaW5nRmlsdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIFN0cmluZ0ZpbHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwib3BlcmF0b3JcIiwgdm9pZCAwKTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgc3RyaW5nLWZpbHRlciBjZWxsIGNvbXBvbmVudFxuICogKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2MtY29uZmlndXJhdGlvbi1jb21wb25lbnRzLWZvci1maWx0ZXItdGVtcGxhdGVzKSkuXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiAgYGBgaHRtbC1uby1ydW5cbiAqICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIiB0aXRsZT1cIlByb2R1Y3QgTmFtZVwiPlxuICogICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZEZpbHRlckNlbGxUZW1wbGF0ZSBsZXQtZmlsdGVyIGxldC1jb2x1bW49XCJjb2x1bW5cIj5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLXN0cmluZy1maWx0ZXItY2VsbFxuICogICAgICAgICAgICAgIFtzaG93T3BlcmF0b3JzXT1cImZhbHNlXCJcbiAqICAgICAgICAgICAgICBbY29sdW1uXT1cImNvbHVtblwiXG4gKiAgICAgICAgICAgICAgW2ZpbHRlcl09XCJmaWx0ZXJcIj5cbiAqICAgICAgICAgIDwva2VuZG8tZ3JpZC1zdHJpbmctZmlsdGVyLWNlbGw+XG4gKiAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICBgYGBcbiAqL1xubGV0IFN0cmluZ0ZpbHRlckNlbGxDb21wb25lbnQgPSBjbGFzcyBTdHJpbmdGaWx0ZXJDZWxsQ29tcG9uZW50IGV4dGVuZHMgU3RyaW5nRmlsdGVyQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3RvcihmaWx0ZXJTZXJ2aWNlLCBsb2NhbGl6YXRpb24pIHtcbiAgICAgICAgc3VwZXIoZmlsdGVyU2VydmljZSwgbG9jYWxpemF0aW9uKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERldGVybWluZXMgdGhlIGRlbGF5IHRpbWUgKGluIG1pbGxpc2Vjb25kcykgYmVmb3JlIHRoZSBmaWx0ZXIgdmFsdWUgaXMgc3VibWl0dGVkLlxuICAgICAgICAgKiBBIHZhbHVlIG9mIGAwYCBpbmRpY2F0ZXMgbm8gZGVsYXkuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGA1MDBgLlxuICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZmlsdGVyRGVsYXkgPSA1MDA7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZXRlcm1pbmVzIGlmIHRoZSBkcm9wLWRvd24gZmlsdGVyIG9wZXJhdG9ycyB3aWxsIGJlIGRpc3BsYXllZC5cbiAgICAgICAgICogVGhlIGRlZmF1bHQgdmFsdWUgaXMgYHRydWVgLlxuICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc2hvd09wZXJhdG9ycyA9IHRydWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgY29sdW1uTGFiZWwoKSB7XG4gICAgICAgIGNvbnN0IGxvY2FsaXphdGlvbk1zZyA9IHRoaXMubG9jYWxpemF0aW9uLmdldCgnZmlsdGVySW5wdXRMYWJlbCcpIHx8ICcnO1xuICAgICAgICBjb25zdCBjb2x1bW5OYW1lID0gdGhpcy5jb2x1bW4udGl0bGUgfHwgdGhpcy5jb2x1bW4uZmllbGQ7XG4gICAgICAgIHJldHVybiByZXBsYWNlTWVzc2FnZVBsYWNlaG9sZGVyKGxvY2FsaXphdGlvbk1zZywgJ2NvbHVtbk5hbWUnLCBjb2x1bW5OYW1lKTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgU3RyaW5nRmlsdGVyQ2VsbENvbXBvbmVudC5wcm90b3R5cGUsIFwiZmlsdGVyRGVsYXlcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBTdHJpbmdGaWx0ZXJDZWxsQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzaG93T3BlcmF0b3JzXCIsIHZvaWQgMCk7XG5TdHJpbmdGaWx0ZXJDZWxsQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLXN0cmluZy1maWx0ZXItY2VsbCcsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxrZW5kby1ncmlkLWZpbHRlci13cmFwcGVyLWNlbGxcbiAgICAgICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAgICAgICAgICAgIFtmaWx0ZXJdPVwiZmlsdGVyXCJcbiAgICAgICAgICAgIFtvcGVyYXRvcnNdPVwib3BlcmF0b3JzXCJcbiAgICAgICAgICAgIFtkZWZhdWx0T3BlcmF0b3JdPVwib3BlcmF0b3JcIlxuICAgICAgICAgICAgW3Nob3dPcGVyYXRvcnNdPVwic2hvd09wZXJhdG9yc1wiPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgY2xhc3M9XCJrLXRleHRib3hcIlxuICAgICAgICAgICAgICAgIGtlbmRvR3JpZEZvY3VzYWJsZVxuICAgICAgICAgICAgICAgIGtlbmRvRmlsdGVySW5wdXRcbiAgICAgICAgICAgICAgICBbY29sdW1uTGFiZWxdPVwiY29sdW1uTGFiZWxcIlxuICAgICAgICAgICAgICAgIFtmaWx0ZXJEZWxheV09XCJmaWx0ZXJEZWxheVwiXG4gICAgICAgICAgICAgICAgW25nTW9kZWxdPVwiY3VycmVudEZpbHRlcj8udmFsdWVcIiAvPlxuICAgICAgICA8L2tlbmRvLWdyaWQtZmlsdGVyLXdyYXBwZXItY2VsbD5cbiAgICBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtGaWx0ZXJTZXJ2aWNlLFxuICAgICAgICBMb2NhbGl6YXRpb25TZXJ2aWNlXSlcbl0sIFN0cmluZ0ZpbHRlckNlbGxDb21wb25lbnQpO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBjb21wb25lbnQgd2hpY2ggYWNjb21tb2RhdGVzIHRoZSBmaWx0ZXIgb3BlcmF0b3JzLlxuICovXG5sZXQgRmlsdGVyQ2VsbE9wZXJhdG9yc0NvbXBvbmVudCA9IGNsYXNzIEZpbHRlckNlbGxPcGVyYXRvcnNDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbikge1xuICAgICAgICB0aGlzLmxvY2FsaXphdGlvbiA9IGxvY2FsaXphdGlvbjtcbiAgICAgICAgdGhpcy5jbGVhclRleHQgPSAnQ2xlYXInO1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIGZpbHRlciBvcGVyYXRvcnMgdGhhdCB3aWxsIGJlIGRpc3BsYXllZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMub3BlcmF0b3JzID0gW107XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZXRlcm1pbmVzIGlmIHRoZSBsaXN0IG9mIG9wZXJhdG9ycyB3aWxsIGJlIGRpc3BsYXllZC5cbiAgICAgICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnNob3dPcGVyYXRvcnMgPSB0cnVlO1xuICAgICAgICAvKipcbiAgICAgICAgICogRmlyZXMgd2hlbiB0aGUgb3BlcmF0b3IgaXMgc2VsZWN0ZWQuXG4gICAgICAgICAqIEB0eXBlIHtFdmVudEVtaXR0ZXI8c3RyaW5nPn1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMudmFsdWVDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSAqKkNsZWFyKiogYnV0dG9uIGlzIGNsaWNrZWQuXG4gICAgICAgICAqIEB0eXBlIHtFdmVudEVtaXR0ZXI8e30+fVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jbGVhciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBob3N0Q2xhc3NlcygpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvbkNoYW5nZShkYXRhSXRlbSkge1xuICAgICAgICB0aGlzLnZhbHVlQ2hhbmdlLmVtaXQoZGF0YUl0ZW0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY2xlYXJDbGljaygpIHtcbiAgICAgICAgdGhpcy5jbGVhci5lbWl0KCk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGNsZWFyS2V5ZG93bihhcmdzKSB7XG4gICAgICAgIGlmIChhcmdzLmtleUNvZGUgPT09IEtleXMuRW50ZXIgfHwgYXJncy5rZXlDb2RlID09PSBLZXlzLlNwYWNlKSB7XG4gICAgICAgICAgICB0aGlzLmNsZWFyLmVtaXQoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZHJvcGRvd25LZXlkb3duKGFyZ3MpIHtcbiAgICAgICAgaWYgKGFyZ3MuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhcmdzLmtleUNvZGUgPT09IEtleXMuRW50ZXIgJiYgIXRoaXMuZHJvcGRvd24uaXNPcGVuKSB7XG4gICAgICAgICAgICB0aGlzLmRyb3Bkb3duLnRvZ2dsZSh0cnVlKTtcbiAgICAgICAgICAgIGFyZ3MucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb24uY2hhbmdlcy5zdWJzY3JpYmUoKCkgPT4gdGhpcy5jbGVhclRleHQgPSB0aGlzLmxvY2FsaXphdGlvbi5nZXQoXCJmaWx0ZXJDbGVhckJ1dHRvblwiKSk7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLWZpbHRlcmNlbGwtb3BlcmF0b3InKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgRmlsdGVyQ2VsbE9wZXJhdG9yc0NvbXBvbmVudC5wcm90b3R5cGUsIFwiaG9zdENsYXNzZXNcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBWaWV3Q2hpbGQoJ2Ryb3Bkb3duJywgeyBzdGF0aWM6IGZhbHNlIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBEcm9wRG93bkxpc3RDb21wb25lbnQpXG5dLCBGaWx0ZXJDZWxsT3BlcmF0b3JzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJkcm9wZG93blwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQXJyYXkpXG5dLCBGaWx0ZXJDZWxsT3BlcmF0b3JzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJvcGVyYXRvcnNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBGaWx0ZXJDZWxsT3BlcmF0b3JzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzaG93QnV0dG9uXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgRmlsdGVyQ2VsbE9wZXJhdG9yc0NvbXBvbmVudC5wcm90b3R5cGUsIFwic2hvd09wZXJhdG9yc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgRmlsdGVyQ2VsbE9wZXJhdG9yc0NvbXBvbmVudC5wcm90b3R5cGUsIFwidmFsdWVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBGaWx0ZXJDZWxsT3BlcmF0b3JzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ2YWx1ZUNoYW5nZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIEZpbHRlckNlbGxPcGVyYXRvcnNDb21wb25lbnQucHJvdG90eXBlLCBcImNsZWFyXCIsIHZvaWQgMCk7XG5GaWx0ZXJDZWxsT3BlcmF0b3JzQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLWZpbHRlci1jZWxsLW9wZXJhdG9ycycsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxrZW5kby1kcm9wZG93bmxpc3RcbiAgICAgICAgICAgICNkcm9wZG93blxuICAgICAgICAgICAgKm5nSWY9XCJzaG93T3BlcmF0b3JzXCJcbiAgICAgICAgICAgIGtlbmRvR3JpZEZvY3VzYWJsZVxuICAgICAgICAgICAgW2RhdGFdPVwib3BlcmF0b3JzXCJcbiAgICAgICAgICAgIGNsYXNzPVwiay1kcm9wZG93bi1vcGVyYXRvclwiXG4gICAgICAgICAgICAodmFsdWVDaGFuZ2UpPVwib25DaGFuZ2UoJGV2ZW50KVwiXG4gICAgICAgICAgICBbdmFsdWVdPVwidmFsdWVcIlxuICAgICAgICAgICAgaWNvbkNsYXNzPVwiay1pLWZpbHRlclwiXG4gICAgICAgICAgICBbdmFsdWVQcmltaXRpdmVdPVwidHJ1ZVwiXG4gICAgICAgICAgICB0ZXh0RmllbGQ9XCJ0ZXh0XCJcbiAgICAgICAgICAgIFtwb3B1cFNldHRpbmdzXT1cInsgd2lkdGg6ICdhdXRvJyB9XCJcbiAgICAgICAgICAgIHZhbHVlRmllbGQ9XCJ2YWx1ZVwiXG4gICAgICAgICAgICAoa2V5ZG93bik9XCJkcm9wZG93bktleWRvd24oJGV2ZW50KVwiPlxuICAgICAgICA8L2tlbmRvLWRyb3Bkb3dubGlzdD5cbiAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgIGtlbmRvR3JpZEZvY3VzYWJsZVxuICAgICAgICAgICAgW25nQ2xhc3NdPVwieydrLWNsZWFyLWJ1dHRvbi12aXNpYmxlJzogc2hvd0J1dHRvbn1cIlxuICAgICAgICAgICAgY2xhc3M9XCJrLWJ1dHRvbiBrLWJ1dHRvbi1pY29uXCJcbiAgICAgICAgICAgIFt0aXRsZV09XCJjbGVhclRleHRcIlxuICAgICAgICAgICAgKGNsaWNrKT1cImNsZWFyQ2xpY2soKVwiXG4gICAgICAgICAgICAoa2V5ZG93bik9XCJjbGVhcktleWRvd24oJGV2ZW50KVwiPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiay1pY29uIGstaS1maWx0ZXItY2xlYXJcIj48L3NwYW4+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgRmlsdGVyQ2VsbE9wZXJhdG9yc0NvbXBvbmVudCk7XG5cbi8vIHRzbGludDpkaXNhYmxlOm5vLWFjY2Vzcy1taXNzaW5nLW1lbWJlclxuY29uc3Qgc3RyaW5nT3BlcmF0b3JzJDEgPSBsb2NhbGl6ZU9wZXJhdG9ycyQxKHtcbiAgICBcImZpbHRlckNvbnRhaW5zT3BlcmF0b3JcIjogXCJjb250YWluc1wiLFxuICAgIFwiZmlsdGVyTm90Q29udGFpbnNPcGVyYXRvclwiOiBcImRvZXNub3Rjb250YWluXCIsXG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm9iamVjdC1saXRlcmFsLXNvcnQta2V5c1xuICAgIFwiZmlsdGVyRXFPcGVyYXRvclwiOiBcImVxXCIsXG4gICAgXCJmaWx0ZXJOb3RFcU9wZXJhdG9yXCI6IFwibmVxXCIsXG4gICAgXCJmaWx0ZXJTdGFydHNXaXRoT3BlcmF0b3JcIjogXCJzdGFydHN3aXRoXCIsXG4gICAgXCJmaWx0ZXJFbmRzV2l0aE9wZXJhdG9yXCI6IFwiZW5kc3dpdGhcIixcbiAgICBcImZpbHRlcklzTnVsbE9wZXJhdG9yXCI6IFwiaXNudWxsXCIsXG4gICAgXCJmaWx0ZXJJc05vdE51bGxPcGVyYXRvclwiOiBcImlzbm90bnVsbFwiLFxuICAgIFwiZmlsdGVySXNFbXB0eU9wZXJhdG9yXCI6IFwiaXNlbXB0eVwiLFxuICAgIFwiZmlsdGVySXNOb3RFbXB0eU9wZXJhdG9yXCI6IFwiaXNub3RlbXB0eVwiXG59KTtcbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgQXV0b0NvbXBsZXRlRmlsdGVyQ2VsbENvbXBvbmVudCA9IGNsYXNzIEF1dG9Db21wbGV0ZUZpbHRlckNlbGxDb21wb25lbnQgZXh0ZW5kcyBCYXNlRmlsdGVyQ2VsbENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoZmlsdGVyU2VydmljZSwgY29sdW1uLCBsb2NhbGl6YXRpb24pIHtcbiAgICAgICAgc3VwZXIoZmlsdGVyU2VydmljZSk7XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uID0gbG9jYWxpemF0aW9uO1xuICAgICAgICB0aGlzLnNob3dPcGVyYXRvcnMgPSB0cnVlO1xuICAgICAgICB0aGlzLmRlZmF1bHRPcGVyYXRvcnMgPSBzdHJpbmdPcGVyYXRvcnMkMSh0aGlzLmxvY2FsaXphdGlvbik7XG4gICAgICAgIHRoaXMuY29sdW1uID0gY29sdW1uO1xuICAgIH1cbiAgICBzZXQgdmFsdWVGaWVsZCh2YWx1ZSkge1xuICAgICAgICB0aGlzLl92YWx1ZUZpZWxkID0gdmFsdWU7XG4gICAgfVxuICAgIGdldCB2YWx1ZUZpZWxkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdmFsdWVGaWVsZCA/IHRoaXMuX3ZhbHVlRmllbGQgOiB0aGlzLmNvbHVtbi5maWVsZDtcbiAgICB9XG4gICAgZ2V0IGN1cnJlbnRGaWx0ZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZpbHRlckJ5RmllbGQodGhpcy5jb2x1bW4uZmllbGQpO1xuICAgIH1cbiAgICBnZXQgY3VycmVudE9wZXJhdG9yKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jdXJyZW50RmlsdGVyID8gdGhpcy5jdXJyZW50RmlsdGVyLm9wZXJhdG9yIDogXCJjb250YWluc1wiO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgQXV0b0NvbXBsZXRlRmlsdGVyQ2VsbENvbXBvbmVudC5wcm90b3R5cGUsIFwic2hvd09wZXJhdG9yc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQ29sdW1uQ29tcG9uZW50KVxuXSwgQXV0b0NvbXBsZXRlRmlsdGVyQ2VsbENvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBBdXRvQ29tcGxldGVGaWx0ZXJDZWxsQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KVxuXSwgQXV0b0NvbXBsZXRlRmlsdGVyQ2VsbENvbXBvbmVudC5wcm90b3R5cGUsIFwiZGF0YVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1N0cmluZ10pXG5dLCBBdXRvQ29tcGxldGVGaWx0ZXJDZWxsQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ2YWx1ZUZpZWxkXCIsIG51bGwpO1xuQXV0b0NvbXBsZXRlRmlsdGVyQ2VsbENvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZ3JpZC1hdXRvY29tcGxldGUtZmlsdGVyLWNlbGwnLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8a2VuZG8tZ3JpZC1maWx0ZXItd3JhcHBlci1jZWxsXG4gICAgICAgICAgICBbY29sdW1uXT1cImNvbHVtblwiXG4gICAgICAgICAgICBbZmlsdGVyXT1cImZpbHRlclwiXG4gICAgICAgICAgICBbb3BlcmF0b3JzXT1cIm9wZXJhdG9yc1wiXG4gICAgICAgICAgICBbc2hvd09wZXJhdG9yc109XCJzaG93T3BlcmF0b3JzXCI+XG4gICAgICAgICAgICA8a2VuZG8tYXV0b2NvbXBsZXRlXG4gICAgICAgICAgICAgICAga2VuZG9GaWx0ZXJJbnB1dFxuICAgICAgICAgICAgICAgIFtkYXRhXT1cImRhdGFcIlxuICAgICAgICAgICAgICAgIFt2YWx1ZUZpZWxkXT1cInZhbHVlRmllbGRcIlxuICAgICAgICAgICAgICAgIFt2YWx1ZV09XCJjdXJyZW50RmlsdGVyPy52YWx1ZVwiPlxuICAgICAgICAgICAgPC9rZW5kby1hdXRvY29tcGxldGU+XG4gICAgICAgIDwva2VuZG8tZ3JpZC1maWx0ZXItd3JhcHBlci1jZWxsPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0ZpbHRlclNlcnZpY2UsXG4gICAgICAgIENvbHVtbkNvbXBvbmVudCxcbiAgICAgICAgTG9jYWxpemF0aW9uU2VydmljZV0pXG5dLCBBdXRvQ29tcGxldGVGaWx0ZXJDZWxsQ29tcG9uZW50KTtcblxuLy8gdHNsaW50OmRpc2FibGU6bm8tYWNjZXNzLW1pc3NpbmctbWVtYmVyXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY2xhc3MgQm9vbGVhbkZpbHRlckNvbXBvbmVudCBleHRlbmRzIEJhc2VGaWx0ZXJDZWxsQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3RvcihmaWx0ZXJTZXJ2aWNlLCBsb2NhbGl6YXRpb24pIHtcbiAgICAgICAgc3VwZXIoZmlsdGVyU2VydmljZSk7XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uID0gbG9jYWxpemF0aW9uO1xuICAgICAgICAvKipcbiAgICAgICAgICogQGhpZGRlblxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5vcGVyYXRvciA9IFwiZXFcIjtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuaXRlbXMgPSBbXG4gICAgICAgICAgICB7IHRleHQ6IHRoaXMubG9jYWxpemF0aW9uLmdldChcImZpbHRlcklzVHJ1ZVwiKSwgdmFsdWU6IHRydWUgfSxcbiAgICAgICAgICAgIHsgdGV4dDogdGhpcy5sb2NhbGl6YXRpb24uZ2V0KFwiZmlsdGVySXNGYWxzZVwiKSwgdmFsdWU6IGZhbHNlIH1cbiAgICAgICAgXTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZGVmYXVsdEl0ZW0gPSB7IHRleHQ6IHRoaXMubG9jYWxpemF0aW9uLmdldChcImZpbHRlckJvb2xlYW5BbGxcIiksIHZhbHVlOiBudWxsIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgaG9zdENsYXNzZXMoKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgY3VycmVudCBmaWx0ZXIgZm9yIHRoZSBhc3NvY2lhdGVkIGNvbHVtbiBmaWVsZC5cbiAgICAgKiBAcmVhZG9ubHlcbiAgICAgKiBAdHlwZSB7RmlsdGVyRGVzY3JpcHRvcn1cbiAgICAgKi9cbiAgICBnZXQgY3VycmVudEZpbHRlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyQnlGaWVsZCh0aGlzLmNvbHVtbi5maWVsZCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBjdXJyZW50IGZpbHRlciBvcGVyYXRvciBmb3IgdGhlIGFzc29jaWF0ZWQgY29sdW1uIGZpZWxkLlxuICAgICAqIEByZWFkb25seVxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgZ2V0IGN1cnJlbnRPcGVyYXRvcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY3VycmVudEZpbHRlciA/IHRoaXMuY3VycmVudEZpbHRlci5vcGVyYXRvciA6IHRoaXMub3BlcmF0b3I7XG4gICAgfVxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IHRoaXMubG9jYWxpemF0aW9uLmNoYW5nZXMuc3Vic2NyaWJlKHRoaXMubG9jYWxpemF0aW9uQ2hhbmdlLmJpbmQodGhpcykpO1xuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgaWYgKHRoaXMuc3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyLm5nT25EZXN0cm95KCk7XG4gICAgfVxuICAgIGxvY2FsaXphdGlvbkNoYW5nZSgpIHtcbiAgICAgICAgdGhpcy5pdGVtcyA9IFtcbiAgICAgICAgICAgIHsgdGV4dDogdGhpcy5sb2NhbGl6YXRpb24uZ2V0KFwiZmlsdGVySXNUcnVlXCIpLCB2YWx1ZTogdHJ1ZSB9LFxuICAgICAgICAgICAgeyB0ZXh0OiB0aGlzLmxvY2FsaXphdGlvbi5nZXQoXCJmaWx0ZXJJc0ZhbHNlXCIpLCB2YWx1ZTogZmFsc2UgfVxuICAgICAgICBdO1xuICAgICAgICB0aGlzLmRlZmF1bHRJdGVtID0geyB0ZXh0OiB0aGlzLmxvY2FsaXphdGlvbi5nZXQoXCJmaWx0ZXJCb29sZWFuQWxsXCIpLCB2YWx1ZTogbnVsbCB9O1xuICAgIH1cbn1cbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLWZpbHRlcmNlbGwtYm9vbGVhbicpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBCb29sZWFuRmlsdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJob3N0Q2xhc3Nlc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIENvbHVtbkNvbXBvbmVudClcbl0sIEJvb2xlYW5GaWx0ZXJDb21wb25lbnQucHJvdG90eXBlLCBcImNvbHVtblwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgQm9vbGVhbkZpbHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZmlsdGVyXCIsIHZvaWQgMCk7XG5cbi8qKlxuICogUmVwcmVzZW50cyBhIEJvb2xlYW4gZmlsdGVyLWNlbGwgY29tcG9uZW50LlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogIGBgYGh0bWwtbm8tcnVuXG4gKiAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIlByb2R1Y3ROYW1lXCIgdGl0bGU9XCJQcm9kdWN0IE5hbWVcIj5cbiAqICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRGaWx0ZXJDZWxsVGVtcGxhdGUgbGV0LWZpbHRlciBsZXQtY29sdW1uPVwiY29sdW1uXCI+XG4gKiAgICAgICAgICA8a2VuZG8tZ3JpZC1ib29sZWFuLWZpbHRlci1jZWxsXG4gKiAgICAgICAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICogICAgICAgICAgICAgIFtmaWx0ZXJdPVwiZmlsdGVyXCI+XG4gKiAgICAgICAgICA8L2tlbmRvLWdyaWQtYm9vbGVhbi1maWx0ZXItY2VsbD5cbiAqICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgIGBgYFxuICovXG5sZXQgQm9vbGVhbkZpbHRlckNlbGxDb21wb25lbnQgPSBjbGFzcyBCb29sZWFuRmlsdGVyQ2VsbENvbXBvbmVudCBleHRlbmRzIEJvb2xlYW5GaWx0ZXJDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGZpbHRlclNlcnZpY2UsIGxvY2FsaXphdGlvbiwgY2QpIHtcbiAgICAgICAgc3VwZXIoZmlsdGVyU2VydmljZSwgbG9jYWxpemF0aW9uKTtcbiAgICAgICAgdGhpcy5jZCA9IGNkO1xuICAgIH1cbiAgICBsb2NhbGl6YXRpb25DaGFuZ2UoKSB7XG4gICAgICAgIHN1cGVyLmxvY2FsaXphdGlvbkNoYW5nZSgpO1xuICAgICAgICB0aGlzLmNkLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGNvbHVtbkxhYmVsKCkge1xuICAgICAgICBjb25zdCBsb2NhbGl6YXRpb25Nc2cgPSB0aGlzLmxvY2FsaXphdGlvbi5nZXQoJ2ZpbHRlcklucHV0TGFiZWwnKSB8fCAnJztcbiAgICAgICAgY29uc3QgY29sdW1uTmFtZSA9IHRoaXMuY29sdW1uLnRpdGxlIHx8IHRoaXMuY29sdW1uLmZpZWxkO1xuICAgICAgICByZXR1cm4gcmVwbGFjZU1lc3NhZ2VQbGFjZWhvbGRlcihsb2NhbGl6YXRpb25Nc2csICdjb2x1bW5OYW1lJywgY29sdW1uTmFtZSk7XG4gICAgfVxufTtcbkJvb2xlYW5GaWx0ZXJDZWxsQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLWJvb2xlYW4tZmlsdGVyLWNlbGwnLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8a2VuZG8tZ3JpZC1maWx0ZXItd3JhcHBlci1jZWxsXG4gICAgICAgICAgICBbY29sdW1uXT1cImNvbHVtblwiXG4gICAgICAgICAgICBbZmlsdGVyXT1cImZpbHRlclwiXG4gICAgICAgICAgICBbc2hvd09wZXJhdG9yc109XCJmYWxzZVwiXG4gICAgICAgICAgICBbZGVmYXVsdE9wZXJhdG9yXT1cIm9wZXJhdG9yXCI+XG4gICAgICAgICAgICA8a2VuZG8tZHJvcGRvd25saXN0XG4gICAgICAgICAgICAgICAga2VuZG9GaWx0ZXJJbnB1dFxuICAgICAgICAgICAgICAgIGtlbmRvR3JpZEZvY3VzYWJsZVxuICAgICAgICAgICAgICAgIFtjb2x1bW5MYWJlbF09XCJjb2x1bW5MYWJlbFwiXG4gICAgICAgICAgICAgICAgW2RlZmF1bHRJdGVtXT1cImRlZmF1bHRJdGVtXCJcbiAgICAgICAgICAgICAgICBbZGF0YV09XCJpdGVtc1wiXG4gICAgICAgICAgICAgICAgdGV4dEZpZWxkPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgdmFsdWVGaWVsZD1cInZhbHVlXCJcbiAgICAgICAgICAgICAgICBbcG9wdXBTZXR0aW5nc109XCJ7IHdpZHRoOiAnYXV0bycgfVwiXG4gICAgICAgICAgICAgICAgW3ZhbHVlUHJpbWl0aXZlXT1cInRydWVcIlxuICAgICAgICAgICAgICAgIFt2YWx1ZV09XCJjdXJyZW50RmlsdGVyPy52YWx1ZVwiPlxuICAgICAgICAgICAgPC9rZW5kby1kcm9wZG93bmxpc3Q+XG4gICAgICAgIDwva2VuZG8tZ3JpZC1maWx0ZXItd3JhcHBlci1jZWxsPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0ZpbHRlclNlcnZpY2UsXG4gICAgICAgIExvY2FsaXphdGlvblNlcnZpY2UsXG4gICAgICAgIENoYW5nZURldGVjdG9yUmVmXSlcbl0sIEJvb2xlYW5GaWx0ZXJDZWxsQ29tcG9uZW50KTtcblxuLy8gdHNsaW50OmRpc2FibGU6bm8tYWNjZXNzLW1pc3NpbmctbWVtYmVyXG5jb25zdCBkYXRlT3BlcmF0b3JzID0gbG9jYWxpemVPcGVyYXRvcnMkMSh7XG4gICAgXCJmaWx0ZXJFcU9wZXJhdG9yXCI6IFwiZXFcIixcbiAgICBcImZpbHRlck5vdEVxT3BlcmF0b3JcIjogXCJuZXFcIixcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6b2JqZWN0LWxpdGVyYWwtc29ydC1rZXlzXG4gICAgXCJmaWx0ZXJBZnRlck9yRXF1YWxPcGVyYXRvclwiOiBcImd0ZVwiLFxuICAgIFwiZmlsdGVyQWZ0ZXJPcGVyYXRvclwiOiBcImd0XCIsXG4gICAgXCJmaWx0ZXJCZWZvcmVPckVxdWFsT3BlcmF0b3JcIjogXCJsdGVcIixcbiAgICBcImZpbHRlckJlZm9yZU9wZXJhdG9yXCI6IFwibHRcIixcbiAgICBcImZpbHRlcklzTnVsbE9wZXJhdG9yXCI6IFwiaXNudWxsXCIsXG4gICAgXCJmaWx0ZXJJc05vdE51bGxPcGVyYXRvclwiOiBcImlzbm90bnVsbFwiXG59KTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBEYXRlRmlsdGVyQ29tcG9uZW50IGV4dGVuZHMgQmFzZUZpbHRlckNlbGxDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGZpbHRlclNlcnZpY2UsIGxvY2FsaXphdGlvbikge1xuICAgICAgICBzdXBlcihmaWx0ZXJTZXJ2aWNlKTtcbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb24gPSBsb2NhbGl6YXRpb247XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgZGVmYXVsdCBmaWx0ZXIgb3BlcmF0b3IuIERlZmF1bHRzIHRvIGBjb250YWluc2AuXG4gICAgICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm9wZXJhdG9yID0gXCJndGVcIjtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERlZmluZXMgdGhlIGFjdGl2ZSB2aWV3IHRoYXQgdGhlIGNhbGVuZGFyIGluaXRpYWxseSByZW5kZXJzLlxuICAgICAgICAgKiBCeSBkZWZhdWx0LCB0aGUgYWN0aXZlIHZpZXcgaXMgYG1vbnRoYC5cbiAgICAgICAgICpcbiAgICAgICAgICogPiBZb3UgaGF2ZSB0byBzZXQgYGFjdGl2ZVZpZXdgIHdpdGhpbiB0aGUgYHRvcFZpZXdgLWBib3R0b21WaWV3YCByYW5nZS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYWN0aXZlVmlldyA9IFwibW9udGhcIjtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERlZmluZXMgdGhlIGJvdHRvbW1vc3QgY2FsZW5kYXIgdmlldywgdG8gd2hpY2ggdGhlIHVzZXIgY2FuIG5hdmlnYXRlLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5ib3R0b21WaWV3ID0gXCJtb250aFwiO1xuICAgICAgICAvKipcbiAgICAgICAgICogRGVmaW5lcyB0aGUgdG9wbW9zdCBjYWxlbmRhciB2aWV3LCB0byB3aGljaCB0aGUgdXNlciBjYW4gbmF2aWdhdGUuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnRvcFZpZXcgPSBcImNlbnR1cnlcIjtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERldGVybWluZXMgd2hldGhlciB0byBkaXNwbGF5IGEgd2VlayBudW1iZXIgY29sdW1uIGluIHRoZSBgbW9udGhgIHZpZXcgb2YgdGhlIENhbGVuZGFyLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy53ZWVrTnVtYmVyID0gZmFsc2U7XG4gICAgICAgIHRoaXMuZGVmYXVsdE9wZXJhdG9ycyA9IGRhdGVPcGVyYXRvcnModGhpcy5sb2NhbGl6YXRpb24pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgY3VycmVudCBmaWx0ZXIgZm9yIHRoZSBhc3NvY2lhdGVkIGNvbHVtbiBmaWVsZC5cbiAgICAgKiBAcmVhZG9ubHlcbiAgICAgKiBAdHlwZSB7RmlsdGVyRGVzY3JpcHRvcn1cbiAgICAgKi9cbiAgICBnZXQgY3VycmVudEZpbHRlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyQnlGaWVsZCh0aGlzLmNvbHVtbi5maWVsZCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyB0aGUgZGF0ZSBmb3JtYXQgdGhhdCBpcyB1c2VkIHdoZW4gdGhlIGNvbXBvbmVudCBpcyBub3QgZm9jdXNlZC5cbiAgICAgKiBCeSBkZWZhdWx0LCB0aGUgYGNvbHVtbi5mb3JtYXRgIHZhbHVlIGlzIHVzZWQgKGlmIHNldCkuXG4gICAgICovXG4gICAgc2V0IGZvcm1hdCh2YWx1ZSkge1xuICAgICAgICB0aGlzLl9mb3JtYXQgPSB2YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIHRoZSBkYXRlIGZvcm1hdCB0aGF0IGlzIHVzZWQgd2hlbiB0aGUgY29tcG9uZW50IGlzIG5vdCBmb2N1c2VkLlxuICAgICAqIEJ5IGRlZmF1bHQsIHRoZSBgY29sdW1uLmZvcm1hdGAgdmFsdWUgaXMgdXNlZCAoaWYgc2V0KS5cbiAgICAgKlxuICAgICAqIEByZWFkb25seVxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgZ2V0IGZvcm1hdCgpIHtcbiAgICAgICAgcmV0dXJuICFpc051bGxPckVtcHR5U3RyaW5nKHRoaXMuX2Zvcm1hdCkgPyB0aGlzLl9mb3JtYXQgOiB0aGlzLmNvbHVtbkZvcm1hdDtcbiAgICB9XG4gICAgZ2V0IGNvbHVtbkZvcm1hdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uICYmICFpc051bGxPckVtcHR5U3RyaW5nKHRoaXMuY29sdW1uLmZvcm1hdCkgP1xuICAgICAgICAgICAgZXh0cmFjdEZvcm1hdCh0aGlzLmNvbHVtbi5mb3JtYXQpIDogXCJkXCI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBjdXJyZW50IGZpbHRlciBvcGVyYXRvciBmb3IgdGhlIGFzc29jaWF0ZWQgY29sdW1uIGZpZWxkLlxuICAgICAqIEByZWFkb25seVxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgZ2V0IGN1cnJlbnRPcGVyYXRvcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY3VycmVudEZpbHRlciA/IHRoaXMuY3VycmVudEZpbHRlci5vcGVyYXRvciA6IHRoaXMub3BlcmF0b3I7XG4gICAgfVxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IHRoaXMubG9jYWxpemF0aW9uLmNoYW5nZXMuc3Vic2NyaWJlKHRoaXMubG9jYWxpemF0aW9uQ2hhbmdlLmJpbmQodGhpcykpO1xuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgaWYgKHRoaXMuc3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyLm5nT25EZXN0cm95KCk7XG4gICAgfVxuICAgIGxvY2FsaXphdGlvbkNoYW5nZSgpIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0T3BlcmF0b3JzID0gZGF0ZU9wZXJhdG9ycyh0aGlzLmxvY2FsaXphdGlvbik7XG4gICAgICAgIGlmICh0aGlzLm9wZXJhdG9yTGlzdC5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRoaXMub3BlcmF0b3JzID0gdG9KU09OKHRoaXMub3BlcmF0b3JMaXN0LnRvQXJyYXkoKSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBDb2x1bW5Db21wb25lbnQpXG5dLCBEYXRlRmlsdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjb2x1bW5cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIERhdGVGaWx0ZXJDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgRGF0ZUZpbHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwib3BlcmF0b3JcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtTdHJpbmddKVxuXSwgRGF0ZUZpbHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZm9ybWF0XCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRGF0ZSlcbl0sIERhdGVGaWx0ZXJDb21wb25lbnQucHJvdG90eXBlLCBcIm1pblwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRGF0ZSlcbl0sIERhdGVGaWx0ZXJDb21wb25lbnQucHJvdG90eXBlLCBcIm1heFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgRGF0ZUZpbHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZm9ybWF0UGxhY2Vob2xkZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIERhdGVGaWx0ZXJDb21wb25lbnQucHJvdG90eXBlLCBcInBsYWNlaG9sZGVyXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBEYXRlRmlsdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhY3RpdmVWaWV3XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBEYXRlRmlsdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJib3R0b21WaWV3XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBEYXRlRmlsdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ0b3BWaWV3XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgRGF0ZUZpbHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwid2Vla051bWJlclwiLCB2b2lkIDApO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBkYXRlLWZpbHRlciBjZWxsIGNvbXBvbmVudC5cbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqICBgYGBodG1sLW5vLXJ1blxuICogICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJPcmRlckRhdGVcIiB0aXRsZT1cIk9yZGVyIERhdGVcIj5cbiAqICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRGaWx0ZXJDZWxsVGVtcGxhdGUgbGV0LWZpbHRlciBsZXQtY29sdW1uPVwiY29sdW1uXCI+XG4gKiAgICAgICAgICA8a2VuZG8tZ3JpZC1kYXRlLWZpbHRlci1jZWxsXG4gKiAgICAgICAgICAgICAgW3Nob3dPcGVyYXRvcnNdPVwiZmFsc2VcIlxuICogICAgICAgICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAqICAgICAgICAgICAgICBbZmlsdGVyXT1cImZpbHRlclwiPlxuICogICAgICAgICAgPC9rZW5kby1ncmlkLWRhdGUtZmlsdGVyLWNlbGw+XG4gKiAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICBgYGBcbiAqL1xubGV0IERhdGVGaWx0ZXJDZWxsQ29tcG9uZW50ID0gY2xhc3MgRGF0ZUZpbHRlckNlbGxDb21wb25lbnQgZXh0ZW5kcyBEYXRlRmlsdGVyQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3RvcihmaWx0ZXJTZXJ2aWNlLCBsb2NhbGl6YXRpb24pIHtcbiAgICAgICAgc3VwZXIoZmlsdGVyU2VydmljZSwgbG9jYWxpemF0aW9uKTtcbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb24gPSBsb2NhbGl6YXRpb247XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZXRlcm1pbmVzIGlmIHRoZSBkcm9wLWRvd24gZmlsdGVyIG9wZXJhdG9ycyB3aWxsIGJlIGRpc3BsYXllZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgYHRydWVgLlxuICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc2hvd09wZXJhdG9ycyA9IHRydWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBtZXNzYWdlRm9yKGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2NhbGl6YXRpb24uZ2V0KGtleSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgY29sdW1uTGFiZWwoKSB7XG4gICAgICAgIGNvbnN0IGxvY2FsaXphdGlvbk1zZyA9IHRoaXMubG9jYWxpemF0aW9uLmdldCgnZmlsdGVySW5wdXRMYWJlbCcpIHx8ICcnO1xuICAgICAgICBjb25zdCBjb2x1bW5OYW1lID0gdGhpcy5jb2x1bW4udGl0bGUgfHwgdGhpcy5jb2x1bW4uZmllbGQ7XG4gICAgICAgIHJldHVybiByZXBsYWNlTWVzc2FnZVBsYWNlaG9sZGVyKGxvY2FsaXphdGlvbk1zZywgJ2NvbHVtbk5hbWUnLCBjb2x1bW5OYW1lKTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIERhdGVGaWx0ZXJDZWxsQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzaG93T3BlcmF0b3JzXCIsIHZvaWQgMCk7XG5EYXRlRmlsdGVyQ2VsbENvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZ3JpZC1kYXRlLWZpbHRlci1jZWxsJyxcbiAgICAgICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGtlbmRvLWdyaWQtZmlsdGVyLXdyYXBwZXItY2VsbFxuICAgICAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICAgICAgW2ZpbHRlcl09XCJmaWx0ZXJcIlxuICAgICAgICAgICAgW29wZXJhdG9yc109XCJvcGVyYXRvcnNcIlxuICAgICAgICAgICAgW2RlZmF1bHRPcGVyYXRvcl09XCJvcGVyYXRvclwiXG4gICAgICAgICAgICBbc2hvd09wZXJhdG9yc109XCJzaG93T3BlcmF0b3JzXCJcbiAgICAgICAgPlxuICAgICAgICAgICAgPGtlbmRvLWRhdGVwaWNrZXJcbiAgICAgICAgICAgICAgICBrZW5kb0ZpbHRlcklucHV0XG4gICAgICAgICAgICAgICAga2VuZG9HcmlkRm9jdXNhYmxlXG4gICAgICAgICAgICAgICAgW2NvbHVtbkxhYmVsXT1cImNvbHVtbkxhYmVsXCJcbiAgICAgICAgICAgICAgICBbdmFsdWVdPVwiY3VycmVudEZpbHRlcj8udmFsdWVcIlxuICAgICAgICAgICAgICAgIFtmb3JtYXRdPVwiZm9ybWF0XCJcbiAgICAgICAgICAgICAgICBbZm9ybWF0UGxhY2Vob2xkZXJdPVwiZm9ybWF0UGxhY2Vob2xkZXJcIlxuICAgICAgICAgICAgICAgIFtwbGFjZWhvbGRlcl09XCJwbGFjZWhvbGRlclwiXG4gICAgICAgICAgICAgICAgW2FjdGl2ZVZpZXddPVwiYWN0aXZlVmlld1wiXG4gICAgICAgICAgICAgICAgW2JvdHRvbVZpZXddPVwiYm90dG9tVmlld1wiXG4gICAgICAgICAgICAgICAgW3RvcFZpZXddPVwidG9wVmlld1wiXG4gICAgICAgICAgICAgICAgW21pbl09XCJtaW5cIlxuICAgICAgICAgICAgICAgIFttYXhdPVwibWF4XCJcbiAgICAgICAgICAgICAgICBbd2Vla051bWJlcl09XCJ3ZWVrTnVtYmVyXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8a2VuZG8tZGF0ZXBpY2tlci1tZXNzYWdlc1xuICAgICAgICAgICAgICAgICAgICBbdG9nZ2xlXT1cIm1lc3NhZ2VGb3IoJ2ZpbHRlckRhdGVUb2dnbGUnKVwiXG4gICAgICAgICAgICAgICAgICAgIFt0b2RheV09XCJtZXNzYWdlRm9yKCdmaWx0ZXJEYXRlVG9kYXknKVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDwva2VuZG8tZGF0ZXBpY2tlci1tZXNzYWdlcz5cbiAgICAgICAgICAgIDwva2VuZG8tZGF0ZXBpY2tlcj5cbiAgICAgICAgPC9rZW5kby1ncmlkLWZpbHRlci13cmFwcGVyLWNlbGw+XG4gICAgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRmlsdGVyU2VydmljZSxcbiAgICAgICAgTG9jYWxpemF0aW9uU2VydmljZV0pXG5dLCBEYXRlRmlsdGVyQ2VsbENvbXBvbmVudCk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgQ29sR3JvdXBDb21wb25lbnQgPSBjbGFzcyBDb2xHcm91cENvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmNvbHVtbnMgPSBbXTtcbiAgICAgICAgdGhpcy5ncm91cHMgPSBbXTtcbiAgICB9XG4gICAgZ2V0IGNvbHVtbnNUb1JlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIGNvbHVtbnNUb1JlbmRlcih0aGlzLmNvbHVtbnMpO1xuICAgIH1cbiAgICB0cmFja0J5KGluZGV4LCBfaXRlbSkge1xuICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KVxuXSwgQ29sR3JvdXBDb21wb25lbnQucHJvdG90eXBlLCBcImNvbHVtbnNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KVxuXSwgQ29sR3JvdXBDb21wb25lbnQucHJvdG90eXBlLCBcImdyb3Vwc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRGV0YWlsVGVtcGxhdGVEaXJlY3RpdmUpXG5dLCBDb2xHcm91cENvbXBvbmVudC5wcm90b3R5cGUsIFwiZGV0YWlsVGVtcGxhdGVcIiwgdm9pZCAwKTtcbkNvbEdyb3VwQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkQ29sR3JvdXBdJyxcbiAgICAgICAgdGVtcGxhdGU6IGBcbiAgICA8bmctdGVtcGxhdGUgW25nSWZdPVwidHJ1ZVwiPlxuICAgICAgICA8Y29sIFtjbGFzcy5rLWdyb3VwLWNvbF09XCJ0cnVlXCIgKm5nRm9yPVwibGV0IGcgb2YgZ3JvdXBzXCIgLz5cbiAgICAgICAgPGNvbCBbY2xhc3Muay1oaWVyYXJjaHktY29sXT1cInRydWVcIiAqbmdJZj1cImRldGFpbFRlbXBsYXRlPy50ZW1wbGF0ZVJlZlwiLz5cbiAgICAgICAgPGNvbCAqbmdGb3I9XCJsZXQgY29sdW1uIG9mIGNvbHVtbnNUb1JlbmRlcjsgdHJhY2tCeTogdHJhY2tCeTtcIiBbc3R5bGUud2lkdGgucHhdPVwiY29sdW1uLndpZHRoXCIvPlxuICAgIDwvbmctdGVtcGxhdGU+XG4gICAgYFxuICAgIH0pXG5dLCBDb2xHcm91cENvbXBvbmVudCk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgTG9hZGluZ0NvbXBvbmVudCA9IGNsYXNzIExvYWRpbmdDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbikge1xuICAgICAgICB0aGlzLmxvY2FsaXphdGlvbiA9IGxvY2FsaXphdGlvbjtcbiAgICAgICAgdGhpcy5ob3N0Q2xhc3MgPSB0cnVlO1xuICAgIH1cbiAgICBnZXQgbG9hZGluZ1RleHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvY2FsaXphdGlvbi5nZXQoJ2xvYWRpbmcnKTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ2NsYXNzLmstbG9hZGluZy1tYXNrJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBMb2FkaW5nQ29tcG9uZW50LnByb3RvdHlwZSwgXCJob3N0Q2xhc3NcIiwgdm9pZCAwKTtcbkxvYWRpbmdDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0dyaWRMb2FkaW5nXScsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxzcGFuIGNsYXNzPVwiay1sb2FkaW5nLXRleHRcIj57eyBsb2FkaW5nVGV4dCB9fTwvc3Bhbj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImstbG9hZGluZy1pbWFnZVwiPjwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiay1sb2FkaW5nLWNvbG9yXCI+PC9kaXY+XG4gICAgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTG9jYWxpemF0aW9uU2VydmljZV0pXG5dLCBMb2FkaW5nQ29tcG9uZW50KTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBSZXNpemFibGVDb250YWluZXJEaXJlY3RpdmUgPSBjbGFzcyBSZXNpemFibGVDb250YWluZXJEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKGVsLCByZW5kZXJlciwgcmVzaXplU2VydmljZSwgZ3JpZCkge1xuICAgICAgICB0aGlzLmVsID0gZWw7XG4gICAgICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICAgICAgdGhpcy5yZXNpemVTZXJ2aWNlID0gcmVzaXplU2VydmljZTtcbiAgICAgICAgdGhpcy5ncmlkID0gZ3JpZDtcbiAgICAgICAgdGhpcy5lbmFibGVkID0gZmFsc2U7XG4gICAgfVxuICAgIHNldCBsb2NrZWRXaWR0aCh2YWx1ZSkge1xuICAgICAgICB0aGlzLl9sb2NrZWRXaWR0aCA9IHZhbHVlO1xuICAgICAgICBpZiAodGhpcy5lbmFibGVkKSB7XG4gICAgICAgICAgICB0aGlzLmF0dGFjaFJlc2l6ZSgpO1xuICAgICAgICAgICAgdGhpcy5yZXNpemUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzZXQga2VuZG9HcmlkUmVzaXphYmxlQ29udGFpbmVyKGVuYWJsZWQpIHtcbiAgICAgICAgY29uc3QgcmVmcmVzaCA9IGVuYWJsZWQgIT09IHRoaXMuZW5hYmxlZDtcbiAgICAgICAgdGhpcy5lbmFibGVkID0gZW5hYmxlZDtcbiAgICAgICAgaWYgKHJlZnJlc2gpIHtcbiAgICAgICAgICAgIHRoaXMuYXR0YWNoUmVzaXplKCk7XG4gICAgICAgICAgICB0aGlzLnJlc2l6ZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5yZXNpemVTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMucmVzaXplU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXR0YWNoUmVzaXplKCkge1xuICAgICAgICBpZiAodGhpcy5yZXNpemVTdWJzY3JpcHRpb24gJiYgIXRoaXMuZW5hYmxlZCkge1xuICAgICAgICAgICAgdGhpcy5yZXNpemVTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIHRoaXMucmVzaXplU3Vic2NyaXB0aW9uID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMucmVzaXplU3Vic2NyaXB0aW9uICYmIHRoaXMuZW5hYmxlZCkge1xuICAgICAgICAgICAgdGhpcy5yZXNpemVTdWJzY3JpcHRpb24gPSB0aGlzLnJlc2l6ZVNlcnZpY2UuY2hhbmdlcy5zdWJzY3JpYmUodGhpcy5yZXNpemUuYmluZCh0aGlzKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVzaXplKCkge1xuICAgICAgICBpZiAodGhpcy5ncmlkICYmIHRoaXMuZ3JpZC53cmFwcGVyKSB7XG4gICAgICAgICAgICBjb25zdCBjb250YWluZXJFbGVtZW50ID0gdGhpcy5ncmlkLndyYXBwZXIubmF0aXZlRWxlbWVudDtcbiAgICAgICAgICAgIGNvbnN0IHdpZHRoID0gTWF0aC5tYXgoY29udGFpbmVyRWxlbWVudC5jbGllbnRXaWR0aCAtIHRoaXMuX2xvY2tlZFdpZHRoLCAwKTtcbiAgICAgICAgICAgIGlmICh0aGlzLmVuYWJsZWQgJiYgd2lkdGggPiAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZSh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQsIFwid2lkdGhcIiwgd2lkdGggKyBcInB4XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZSh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQsIFwid2lkdGhcIiwgXCJcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoJ2xvY2tlZFdpZHRoJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlciksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtOdW1iZXJdKVxuXSwgUmVzaXphYmxlQ29udGFpbmVyRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJsb2NrZWRXaWR0aFwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbQm9vbGVhbl0pXG5dLCBSZXNpemFibGVDb250YWluZXJEaXJlY3RpdmUucHJvdG90eXBlLCBcImtlbmRvR3JpZFJlc2l6YWJsZUNvbnRhaW5lclwiLCBudWxsKTtcblJlc2l6YWJsZUNvbnRhaW5lckRpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZFJlc2l6YWJsZUNvbnRhaW5lcl0nXG4gICAgfSksXG4gICAgX19wYXJhbSgzLCBPcHRpb25hbCgpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0VsZW1lbnRSZWYsXG4gICAgICAgIFJlbmRlcmVyMixcbiAgICAgICAgUmVzaXplU2VydmljZSxcbiAgICAgICAgR3JpZENvbXBvbmVudF0pXG5dLCBSZXNpemFibGVDb250YWluZXJEaXJlY3RpdmUpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IFRlbXBsYXRlQ29udGV4dERpcmVjdGl2ZSA9IGNsYXNzIFRlbXBsYXRlQ29udGV4dERpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3Iodmlld0NvbnRhaW5lclJlZikge1xuICAgICAgICB0aGlzLnZpZXdDb250YWluZXJSZWYgPSB2aWV3Q29udGFpbmVyUmVmO1xuICAgIH1cbiAgICBzZXQgdGVtcGxhdGVDb250ZXh0KGNvbnRleHQpIHtcbiAgICAgICAgdGhpcy5yZW1vdmVWaWV3KCk7XG4gICAgICAgIGlmIChjb250ZXh0LnRlbXBsYXRlUmVmKSB7XG4gICAgICAgICAgICB0aGlzLmluc2VydGVkVmlld1JlZiA9IHRoaXMudmlld0NvbnRhaW5lclJlZi5jcmVhdGVFbWJlZGRlZFZpZXcoY29udGV4dC50ZW1wbGF0ZVJlZiwgY29udGV4dCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlVmlldygpO1xuICAgIH1cbiAgICByZW1vdmVWaWV3KCkge1xuICAgICAgICBpZiAodGhpcy5pbnNlcnRlZFZpZXdSZWYpIHtcbiAgICAgICAgICAgIHRoaXMudmlld0NvbnRhaW5lclJlZi5yZW1vdmUodGhpcy52aWV3Q29udGFpbmVyUmVmLmluZGV4T2YodGhpcy5pbnNlcnRlZFZpZXdSZWYpKTtcbiAgICAgICAgICAgIHRoaXMuaW5zZXJ0ZWRWaWV3UmVmID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKVxuXSwgVGVtcGxhdGVDb250ZXh0RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJ0ZW1wbGF0ZUNvbnRleHRcIiwgbnVsbCk7XG5UZW1wbGF0ZUNvbnRleHREaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ1t0ZW1wbGF0ZUNvbnRleHRdJyAvLyB0c2xpbnQ6ZGlzYWJsZS1saW5lOmRpcmVjdGl2ZS1zZWxlY3RvclxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbVmlld0NvbnRhaW5lclJlZl0pXG5dLCBUZW1wbGF0ZUNvbnRleHREaXJlY3RpdmUpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IEZvY3VzR3JvdXAgPSBjbGFzcyBGb2N1c0dyb3VwIHtcbiAgICBjb25zdHJ1Y3Rvcihyb290KSB7XG4gICAgICAgIHRoaXMucm9vdCA9IHJvb3Q7XG4gICAgICAgIHRoaXMuYWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5jaGlsZHJlbiA9IFtdO1xuICAgICAgICB0aGlzLnJvb3QucmVnaXN0ZXJHcm91cCh0aGlzKTtcbiAgICB9XG4gICAgZ2V0IGZvY3VzYWJsZUNoaWxkcmVuKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jaGlsZHJlbi5maWx0ZXIoZWwgPT4gZWwuY2FuRm9jdXMoKSk7XG4gICAgfVxuICAgIGdldCBpc0FjdGl2ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWN0aXZlO1xuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5yb290LnVucmVnaXN0ZXJHcm91cCh0aGlzKTtcbiAgICB9XG4gICAgcmVnaXN0ZXJFbGVtZW50KGVsZW1lbnQpIHtcbiAgICAgICAgdGhpcy51bnJlZ2lzdGVyRWxlbWVudChlbGVtZW50KTtcbiAgICAgICAgdGhpcy5jaGlsZHJlbi5wdXNoKGVsZW1lbnQpO1xuICAgIH1cbiAgICB1bnJlZ2lzdGVyRWxlbWVudChlbGVtZW50KSB7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4gPSB0aGlzLmNoaWxkcmVuLmZpbHRlcihmID0+IGYgIT09IGVsZW1lbnQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgQm9vbGVhbiB2YWx1ZSB3aGljaCBpbmRpY2F0ZXMgaWYgdGhlIGdyb3VwIHdpbGwgcmVjZWl2ZSBmb2N1cyB3aGVuIHRoZSBjZWxsIGlzIGZvY3VzZWQuXG4gICAgICogUmVxdWlyZXMgYSBzaW5nbGUgXCJzaW1wbGVcIiBmb2N1c2FibGUgZWxlbWVudCBzdWNoIGFzIGEgYnV0dG9uIG9yIGEgY2hlY2tib3guXG4gICAgICovXG4gICAgaXNOYXZpZ2FibGUoKSB7XG4gICAgICAgIGNvbnN0IGZvY3VzYWJsZSA9IHRoaXMuZm9jdXNhYmxlQ2hpbGRyZW47XG4gICAgICAgIHJldHVybiBmb2N1c2FibGUubGVuZ3RoID09PSAxICYmIGZvY3VzYWJsZVswXS5pc05hdmlnYWJsZSgpO1xuICAgIH1cbiAgICBjYW5Gb2N1cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZm9jdXNhYmxlQ2hpbGRyZW4ubGVuZ3RoID4gMDtcbiAgICB9XG4gICAgZm9jdXMoKSB7XG4gICAgICAgIGlmICh0aGlzLmNhbkZvY3VzKCkgJiYgIXRoaXMuaGFzRm9jdXMoKSkge1xuICAgICAgICAgICAgdGhpcy5mb2N1c2FibGVDaGlsZHJlblswXS5mb2N1cygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFjdGl2YXRlKCkge1xuICAgICAgICB0aGlzLnRvZ2dsZVN0YXRlKHRydWUpO1xuICAgIH1cbiAgICBkZWFjdGl2YXRlKCkge1xuICAgICAgICB0aGlzLnRvZ2dsZVN0YXRlKGZhbHNlKTtcbiAgICB9XG4gICAgaGFzRm9jdXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNoaWxkcmVuLnJlZHVjZSgoZm9jdXNlZCwgZWxlbWVudCkgPT4gZm9jdXNlZCB8fCBlbGVtZW50Lmhhc0ZvY3VzKCksIGZhbHNlKTtcbiAgICB9XG4gICAgdG9nZ2xlU3RhdGUoYWN0aXZlKSB7XG4gICAgICAgIGlmICh0aGlzLmFjdGl2ZSAhPT0gYWN0aXZlKSB7XG4gICAgICAgICAgICB0aGlzLmFjdGl2ZSA9IGFjdGl2ZTtcbiAgICAgICAgICAgIHRoaXMuY2hpbGRyZW4uZm9yRWFjaChmID0+IGYudG9nZ2xlKGFjdGl2ZSkpO1xuICAgICAgICB9XG4gICAgfVxufTtcbkZvY3VzR3JvdXAgPSBfX2RlY29yYXRlKFtcbiAgICBJbmplY3RhYmxlKCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtGb2N1c1Jvb3RdKVxuXSwgRm9jdXNHcm91cCk7XG5cbmxldCBpZCA9IDA7XG5mdW5jdGlvbiBuZXh0SWQoKSB7XG4gICAgcmV0dXJuIGlkKys7XG59XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IExvZ2ljYWxDZWxsRGlyZWN0aXZlID0gY2xhc3MgTG9naWNhbENlbGxEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKGZvY3VzR3JvdXAsIGVsZW1lbnQsIGNvbHVtbkluZm9TZXJ2aWNlLCBpZFNlcnZpY2UsIG5hdmlnYXRpb25TZXJ2aWNlLCByZW5kZXJlciwgem9uZSwgY2VsbENvbnRleHQpIHtcbiAgICAgICAgdGhpcy5mb2N1c0dyb3VwID0gZm9jdXNHcm91cDtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgICAgdGhpcy5jb2x1bW5JbmZvU2VydmljZSA9IGNvbHVtbkluZm9TZXJ2aWNlO1xuICAgICAgICB0aGlzLmlkU2VydmljZSA9IGlkU2VydmljZTtcbiAgICAgICAgdGhpcy5uYXZpZ2F0aW9uU2VydmljZSA9IG5hdmlnYXRpb25TZXJ2aWNlO1xuICAgICAgICB0aGlzLnJlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgICAgIHRoaXMuem9uZSA9IHpvbmU7XG4gICAgICAgIHRoaXMuY2VsbENvbnRleHQgPSBjZWxsQ29udGV4dDtcbiAgICAgICAgdGhpcy5sb2dpY2FsU2xhdmVDZWxsID0gZmFsc2U7XG4gICAgICAgIHRoaXMuY29sU3BhbiA9IDE7XG4gICAgICAgIHRoaXMucm93U3BhbiA9IDE7XG4gICAgICAgIHRoaXMuZGF0YVJvd0luZGV4ID0gLTE7XG4gICAgICAgIHRoaXMuZGV0YWlsRXhwYW5kQ2VsbCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnVpZCA9IG5leHRJZCgpO1xuICAgIH1cbiAgICBnZXQgaWQoKSB7XG4gICAgICAgIGlmICghdGhpcy5sb2dpY2FsU2xhdmVDZWxsICYmIHRoaXMuY29sdW1uSW5mb1NlcnZpY2UuaXNMb2NrZWQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmlkU2VydmljZS5jZWxsSWQodGhpcy5sb2dpY2FsUm93SW5kZXgsIHRoaXMubG9naWNhbENvbEluZGV4KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgYXJpYUNvbEluZGV4KCkge1xuICAgICAgICBpZiAodGhpcy5sb2dpY2FsU2xhdmVDZWxsIHx8IHRoaXMubG9naWNhbENvbEluZGV4ID09PSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5sb2dpY2FsQ29sSW5kZXggKyAxO1xuICAgIH1cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmVuYWJsZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm5hdmlnYXRpb25DaGFuZ2UgPSB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmNoYW5nZXMuc3Vic2NyaWJlKChlKSA9PiB0aGlzLm9uTmF2aWdhdGlvbkNoYW5nZShlKSk7XG4gICAgfVxuICAgIG5nRG9DaGVjaygpIHtcbiAgICAgICAgaWYgKCF0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmVuYWJsZWQgfHwgdGhpcy5sb2dpY2FsQ29sSW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuY2VsbENvbnRleHQpIHtcbiAgICAgICAgICAgIHRoaXMuY2VsbENvbnRleHQuZm9jdXNHcm91cCA9IHRoaXMuZm9jdXNHcm91cDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJlZ2lzdGVyTm9DaGFuZ2VzKCk7XG4gICAgfVxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmVuYWJsZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoY2hhbmdlcyk7XG4gICAgICAgIGlmICgoa2V5cy5sZW5ndGggPT09IDEgJiYga2V5c1swXSA9PT0gJ2dyb3VwSXRlbScpIHx8IHRoaXMubG9naWNhbENvbEluZGV4ID09PSAtMSkge1xuICAgICAgICAgICAgLy8gSWdub3JlIGdyb3VwSXRlbSBjaGFuZ2VzIGFzIHRoZSByZWZlcmVuY2UgaXMgbm90IHN0YWJsZVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGluZGV4Q2hhbmdlID0gY2hhbmdlcy5sb2dpY2FsQ29sSW5kZXg7XG4gICAgICAgIGNvbnN0IHJvd0luZGV4Q2hhbmdlID0gY2hhbmdlcy5sb2dpY2FsUm93SW5kZXg7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gaW5kZXhDaGFuZ2UgJiYgIWluZGV4Q2hhbmdlLmlzRmlyc3RDaGFuZ2UoKSA/IGluZGV4Q2hhbmdlLnByZXZpb3VzVmFsdWUgOiB0aGlzLmxvZ2ljYWxDb2xJbmRleDtcbiAgICAgICAgY29uc3Qgcm93SW5kZXggPSByb3dJbmRleENoYW5nZSAmJiAhcm93SW5kZXhDaGFuZ2UuaXNGaXJzdENoYW5nZSgpID8gcm93SW5kZXhDaGFuZ2UucHJldmlvdXNWYWx1ZSA6IHRoaXMubG9naWNhbFJvd0luZGV4O1xuICAgICAgICB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLnVucmVnaXN0ZXJDZWxsKGluZGV4LCByb3dJbmRleCwgdGhpcyk7XG4gICAgICAgIHRoaXMucmVnaXN0ZXJDaGFuZ2VzKCk7XG4gICAgICAgIHRoaXMudXBkYXRlRWxlbWVudCgpO1xuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgaWYgKHRoaXMubmF2aWdhdGlvbkNoYW5nZSkge1xuICAgICAgICAgICAgdGhpcy5uYXZpZ2F0aW9uQ2hhbmdlLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5uYXZpZ2F0aW9uU2VydmljZS51bnJlZ2lzdGVyQ2VsbCh0aGlzLmxvZ2ljYWxDb2xJbmRleCwgdGhpcy5sb2dpY2FsUm93SW5kZXgsIHRoaXMpO1xuICAgIH1cbiAgICBvbk5hdmlnYXRpb25DaGFuZ2UoZSkge1xuICAgICAgICBjb25zdCBhY3RpdmUgPSB0aGlzLmxvZ2ljYWxDb2xJbmRleCA9PT0gZS5jb2xJbmRleCAmJiB0aGlzLmxvZ2ljYWxSb3dJbmRleCA9PT0gZS5yb3dJbmRleDtcbiAgICAgICAgY29uc3Qgd2FzQWN0aXZlID0gdGhpcy5sb2dpY2FsQ29sSW5kZXggPT09IGUucHJldkNvbEluZGV4ICYmIHRoaXMubG9naWNhbFJvd0luZGV4ID09PSBlLnByZXZSb3dJbmRleDtcbiAgICAgICAgaWYgKGFjdGl2ZSB8fCB3YXNBY3RpdmUpIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlRWxlbWVudCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHVwZGF0ZUVsZW1lbnQoKSB7XG4gICAgICAgIGNvbnN0IGVsID0gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIHRoaXMucmVuZGVyZXIuc2V0QXR0cmlidXRlKGVsLCAndGFiSW5kZXgnLCB0aGlzLmlzRm9jdXNhYmxlKCkgJiYgIXRoaXMubG9naWNhbFNsYXZlQ2VsbCA/ICcwJyA6ICctMScpO1xuICAgICAgICBpZiAodGhpcy5pc0ZvY3VzZWQoKSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuZm9jdXNHcm91cC5pc05hdmlnYWJsZSgpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5mb2N1c0dyb3VwLmZvY3VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMubG9naWNhbFNsYXZlQ2VsbCAmJiB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmF1dG9Gb2N1c0NlbGwodGhpcy5sb2dpY2FsQ29sSW5kZXgsIHRoaXMubG9naWNhbENvbEluZGV4ICsgdGhpcy5jb2xTcGFuIC0gMSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5taWNyb3Rhc2soKCkgPT4gdGhpcy5pc0ZvY3VzZWQoKSAmJiBlbC5mb2N1cygpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyhlbCwgJ2stc3RhdGUtZm9jdXNlZCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuaGVhZGVyTGFiZWxUZXh0KSB7XG4gICAgICAgICAgICAgICAgZWwuc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJycpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5yZW1vdmVDbGFzcyhlbCwgJ2stc3RhdGUtZm9jdXNlZCcpO1xuICAgICAgICAgICAgaWYgKHRoaXMuaGVhZGVyTGFiZWxUZXh0KSB7XG4gICAgICAgICAgICAgICAgZWwuc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgdGhpcy5oZWFkZXJMYWJlbFRleHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIG1pY3JvdGFzayhjYWxsYmFjaykge1xuICAgICAgICB0aGlzLnpvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4gUHJvbWlzZS5yZXNvbHZlKG51bGwpLnRoZW4oY2FsbGJhY2spKTtcbiAgICB9XG4gICAgcmVnaXN0ZXJDaGFuZ2VzKCkge1xuICAgICAgICBpZiAoIXRoaXMubG9naWNhbFNsYXZlQ2VsbCkge1xuICAgICAgICAgICAgdGhpcy5uYXZpZ2F0aW9uU2VydmljZS5yZWdpc3RlckNlbGwodGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVnaXN0ZXJOb0NoYW5nZXMoKSB7XG4gICAgICAgIGlmICghdGhpcy5sb2dpY2FsU2xhdmVDZWxsKSB7XG4gICAgICAgICAgICB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLnJlZ2lzdGVyQ2VsbE9uQ3VycmVudFJvdyh0aGlzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpc0ZvY3VzYWJsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubmF2aWdhdGlvblNlcnZpY2UuaXNDZWxsRm9jdXNhYmxlKHRoaXMpO1xuICAgIH1cbiAgICBpc0ZvY3VzZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmlzQ2VsbEZvY3VzZWQodGhpcyk7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIExvZ2ljYWxDZWxsRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJsb2dpY2FsQ29sSW5kZXhcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIExvZ2ljYWxDZWxsRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJsb2dpY2FsUm93SW5kZXhcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBMb2dpY2FsQ2VsbERpcmVjdGl2ZS5wcm90b3R5cGUsIFwibG9naWNhbFNsYXZlQ2VsbFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgTG9naWNhbENlbGxEaXJlY3RpdmUucHJvdG90eXBlLCBcImNvbEluZGV4XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG5dLCBMb2dpY2FsQ2VsbERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiY29sU3BhblwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgTG9naWNhbENlbGxEaXJlY3RpdmUucHJvdG90eXBlLCBcInJvd1NwYW5cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIExvZ2ljYWxDZWxsRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJncm91cEl0ZW1cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIExvZ2ljYWxDZWxsRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJkYXRhUm93SW5kZXhcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIExvZ2ljYWxDZWxsRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJkYXRhSXRlbVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIExvZ2ljYWxDZWxsRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJkZXRhaWxFeHBhbmRDZWxsXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBMb2dpY2FsQ2VsbERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiaGVhZGVyTGFiZWxUZXh0XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnYXR0ci5pZCcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIExvZ2ljYWxDZWxsRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJpZFwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdhdHRyLmFyaWEtY29saW5kZXgnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBMb2dpY2FsQ2VsbERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUNvbEluZGV4XCIsIG51bGwpO1xuTG9naWNhbENlbGxEaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBwcm92aWRlcnM6IFt7XG4gICAgICAgICAgICAgICAgcHJvdmlkZTogRm9jdXNHcm91cCxcbiAgICAgICAgICAgICAgICBkZXBzOiBbRm9jdXNSb290XSxcbiAgICAgICAgICAgICAgICB1c2VDbGFzczogRm9jdXNHcm91cFxuICAgICAgICAgICAgfV0sXG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZExvZ2ljYWxDZWxsXSdcbiAgICB9KSxcbiAgICBfX3BhcmFtKDcsIE9wdGlvbmFsKCkpLCBfX3BhcmFtKDcsIEluamVjdChDRUxMX0NPTlRFWFQpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0ZvY3VzR3JvdXAsXG4gICAgICAgIEVsZW1lbnRSZWYsXG4gICAgICAgIENvbHVtbkluZm9TZXJ2aWNlLFxuICAgICAgICBJZFNlcnZpY2UsXG4gICAgICAgIE5hdmlnYXRpb25TZXJ2aWNlLFxuICAgICAgICBSZW5kZXJlcjIsXG4gICAgICAgIE5nWm9uZSwgT2JqZWN0XSlcbl0sIExvZ2ljYWxDZWxsRGlyZWN0aXZlKTtcblxubGV0IGlkJDEgPSAwO1xuZnVuY3Rpb24gbmV4dElkJDEoKSB7XG4gICAgcmV0dXJuIGlkJDErKztcbn1cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgTG9naWNhbFJvd0RpcmVjdGl2ZSA9IGNsYXNzIExvZ2ljYWxSb3dEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKGlkU2VydmljZSwgbmF2aWdhdGlvbikge1xuICAgICAgICB0aGlzLmlkU2VydmljZSA9IGlkU2VydmljZTtcbiAgICAgICAgdGhpcy5uYXZpZ2F0aW9uID0gbmF2aWdhdGlvbjtcbiAgICAgICAgdGhpcy5sb2dpY2FsU2xhdmVSb3cgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5sb2dpY2FsU2xhdmVDZWxsc0NvdW50ID0gMDtcbiAgICAgICAgdGhpcy5kYXRhUm93SW5kZXggPSAtMTtcbiAgICAgICAgdGhpcy51aWQgPSBuZXh0SWQkMSgpO1xuICAgIH1cbiAgICBnZXQgaG9zdFJvbGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvZ2ljYWxTbGF2ZVJvdyA/ICdwcmVzZW50YXRpb24nIDogJ3Jvdyc7XG4gICAgfVxuICAgIGdldCBhcmlhUm93SW5kZXgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvZ2ljYWxSb3dJbmRleCArIDE7XG4gICAgfVxuICAgIGdldCBhcmlhT3ducygpIHtcbiAgICAgICAgaWYgKCF0aGlzLm5hdmlnYXRpb24uZW5hYmxlZCB8fCB0aGlzLmxvZ2ljYWxTbGF2ZVJvdyB8fCB0aGlzLmxvZ2ljYWxTbGF2ZUNlbGxzQ291bnQgPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaWRzID0gW107XG4gICAgICAgIGNvbnN0IHRvdGFsID0gdGhpcy5sb2dpY2FsQ2VsbHNDb3VudCArIHRoaXMubG9naWNhbFNsYXZlQ2VsbHNDb3VudDtcbiAgICAgICAgZm9yIChsZXQgY2VsbEluZGV4ID0gdGhpcy5sb2dpY2FsQ2VsbHNDb3VudDsgY2VsbEluZGV4IDwgdG90YWw7IGNlbGxJbmRleCsrKSB7XG4gICAgICAgICAgICBpZHMucHVzaCh0aGlzLmlkU2VydmljZS5jZWxsSWQodGhpcy5sb2dpY2FsUm93SW5kZXgsIGNlbGxJbmRleCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpZHMuam9pbignICcpO1xuICAgIH1cbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzKSB7XG4gICAgICAgIGlmICghdGhpcy5uYXZpZ2F0aW9uLmVuYWJsZWQgfHwgdGhpcy5sb2dpY2FsU2xhdmVSb3cpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpbmRleENoYW5nZSA9IGNoYW5nZXMubG9naWNhbFJvd0luZGV4O1xuICAgICAgICBjb25zdCBsb2dpY2FsU2xhdmVSb3dDaGFuZ2UgPSBjaGFuZ2VzLmxvZ2ljYWxTbGF2ZVJvdztcbiAgICAgICAgaWYgKGluZGV4Q2hhbmdlIHx8IGxvZ2ljYWxTbGF2ZVJvd0NoYW5nZSkge1xuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBpbmRleENoYW5nZSAmJiAhaW5kZXhDaGFuZ2UuaXNGaXJzdENoYW5nZSgpID8gaW5kZXhDaGFuZ2UucHJldmlvdXNWYWx1ZSA6IHRoaXMubG9naWNhbFJvd0luZGV4O1xuICAgICAgICAgICAgdGhpcy5uYXZpZ2F0aW9uLnVucmVnaXN0ZXJSb3coaW5kZXgsIHRoaXMpO1xuICAgICAgICAgICAgdGhpcy5uYXZpZ2F0aW9uLnJlZ2lzdGVyUm93KHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGFueUNoYW5nZWQoWydkYXRhUm93SW5kZXgnLCAnZGF0YUl0ZW0nXSwgY2hhbmdlcykpIHtcbiAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvbi51cGRhdGVSb3codGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMubmF2aWdhdGlvbi51bnJlZ2lzdGVyUm93KHRoaXMubG9naWNhbFJvd0luZGV4LCB0aGlzKTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgTG9naWNhbFJvd0RpcmVjdGl2ZS5wcm90b3R5cGUsIFwibG9naWNhbFJvd0luZGV4XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgTG9naWNhbFJvd0RpcmVjdGl2ZS5wcm90b3R5cGUsIFwibG9naWNhbFNsYXZlUm93XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG5dLCBMb2dpY2FsUm93RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJsb2dpY2FsQ2VsbHNDb3VudFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgTG9naWNhbFJvd0RpcmVjdGl2ZS5wcm90b3R5cGUsIFwibG9naWNhbFNsYXZlQ2VsbHNDb3VudFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgTG9naWNhbFJvd0RpcmVjdGl2ZS5wcm90b3R5cGUsIFwiZGF0YVJvd0luZGV4XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBMb2dpY2FsUm93RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJkYXRhSXRlbVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ2F0dHIucm9sZScpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIExvZ2ljYWxSb3dEaXJlY3RpdmUucHJvdG90eXBlLCBcImhvc3RSb2xlXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ2F0dHIuYXJpYS1yb3dpbmRleCcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIExvZ2ljYWxSb3dEaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFSb3dJbmRleFwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdhdHRyLmFyaWEtb3ducycpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIExvZ2ljYWxSb3dEaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFPd25zXCIsIG51bGwpO1xuTG9naWNhbFJvd0RpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZExvZ2ljYWxSb3ddJ1xuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbSWRTZXJ2aWNlLFxuICAgICAgICBOYXZpZ2F0aW9uU2VydmljZV0pXG5dLCBMb2dpY2FsUm93RGlyZWN0aXZlKTtcblxuY29uc3QgRk9STUFUX1JFR0VYID0gL1xce1xcZCs6Py87XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IEZpZWxkQWNjZXNzb3JQaXBlID0gY2xhc3MgRmllbGRBY2Nlc3NvclBpcGUge1xuICAgIGNvbnN0cnVjdG9yKGludGxTZXJ2aWNlKSB7XG4gICAgICAgIHRoaXMuaW50bFNlcnZpY2UgPSBpbnRsU2VydmljZTtcbiAgICB9XG4gICAgdHJhbnNmb3JtKGRhdGFJdGVtLCBmaWVsZE5hbWUsIGZvcm1hdCkge1xuICAgICAgICBpZiAoIWlzTnVsbE9yRW1wdHlTdHJpbmcoZmllbGROYW1lKSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBnZXR0ZXIoZmllbGROYW1lKShkYXRhSXRlbSk7XG4gICAgICAgICAgICBpZiAoIWlzTnVsbE9yRW1wdHlTdHJpbmcoZm9ybWF0KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmZvcm1hdFZhbHVlKGZvcm1hdCwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkYXRhSXRlbTtcbiAgICB9XG4gICAgZm9ybWF0VmFsdWUoZm9ybWF0LCB2YWx1ZSkge1xuICAgICAgICBjb25zdCBpbnRsID0gdGhpcy5pbnRsU2VydmljZTtcbiAgICAgICAgaWYgKGlzU3RyaW5nKGZvcm1hdCkgJiYgZm9ybWF0Lm1hdGNoKEZPUk1BVF9SRUdFWCkpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnRsLmZvcm1hdChmb3JtYXQsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW50bC50b1N0cmluZyh2YWx1ZSwgZm9ybWF0KTtcbiAgICB9XG59O1xuRmllbGRBY2Nlc3NvclBpcGUgPSBfX2RlY29yYXRlKFtcbiAgICBQaXBlKHtcbiAgICAgICAgbmFtZTogJ3ZhbHVlT2YnLFxuICAgICAgICBwdXJlOiBmYWxzZVxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbSW50bFNlcnZpY2VdKVxuXSwgRmllbGRBY2Nlc3NvclBpcGUpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgY29sdW1uc1RvUmVzaXplID0gKHsgY29sdW1ucyB9KSA9PiBNYXRoLm1heCgxLCByZXNpemFibGVDb2x1bW5zKGNvbHVtbnMpLmxlbmd0aCk7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3Qgcm93ID0gc2VsZWN0b3IgPT4gZWxlbWVudCA9PiBlbGVtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGhlYWRlclJvdyA9IGluZGV4ID0+IGVsZW1lbnQgPT4gZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCd0aGVhZD50cicpW2luZGV4XTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBjZWxsID0gKGluZGV4LCBzZWxlY3RvciA9ICd0ZCcpID0+IGVsZW1lbnQgPT4gZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKGAke3NlbGVjdG9yfTpub3QoLmstZ3JvdXAtY2VsbCk6bm90KC5rLWhpZXJhcmNoeS1jZWxsKWApW2luZGV4XTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBvZmZzZXRXaWR0aCA9IGVsZW1lbnQgPT4gZWxlbWVudC5vZmZzZXRXaWR0aDtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBwaXBlID0gKC4uLmZucykgPT4gZGF0YSA9PiBmbnMucmVkdWNlKChzdGF0ZSQkMSwgZm4pID0+IHN0YXRlJCQxID8gZm4oc3RhdGUkJDEpIDogMCwgZGF0YSk7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IFRhYmxlRGlyZWN0aXZlID0gY2xhc3MgVGFibGVEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQsIHJlbmRlcmVyLCBzZXJ2aWNlLCB6b25lLCBjZHIpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgICAgdGhpcy5yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgICAgICB0aGlzLnNlcnZpY2UgPSBzZXJ2aWNlO1xuICAgICAgICB0aGlzLnpvbmUgPSB6b25lO1xuICAgICAgICB0aGlzLmNkciA9IGNkcjtcbiAgICAgICAgdGhpcy5sb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5maXJzdFJlc2l6ZSA9IGZhbHNlO1xuICAgIH1cbiAgICBnZXQgbWluV2lkdGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZpcnN0UmVzaXplID8gMCA6IG51bGw7XG4gICAgfVxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICBjb25zdCBvYnMgPSB0aGlzLnNlcnZpY2VcbiAgICAgICAgICAgIC5jaGFuZ2VzLnBpcGUoZmlsdGVyKGUgPT4gdGhpcy5sb2NrZWQgPT09IGUubG9ja2VkKSk7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uID0gb2JzLnBpcGUoZmlsdGVyKGUgPT4gZS50eXBlID09PSAnc3RhcnQnKSwgdGFwKHRoaXMuaW5pdFN0YXRlLmJpbmQodGhpcykpLCBtYXAoY29sdW1uc1RvUmVzaXplKSwgc3dpdGNoTWFwKCh0YWtlJCQxKSA9PiBvYnMucGlwZShmaWx0ZXIoZSA9PiBlLnR5cGUgPT09ICdyZXNpemVUYWJsZScpLCBtYXAoZSA9PiBlLmRlbHRhKSwgYnVmZmVyQ291bnQodGFrZSQkMSkpKSkuc3Vic2NyaWJlKHRoaXMucmVzaXplLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmF1dG9GaXRTdWJzY3JpcHRpb24gPSB0aGlzLnNlcnZpY2VcbiAgICAgICAgICAgIC5yZWdpc3RlclRhYmxlKHtcbiAgICAgICAgICAgIGF1dG9GaXQ6IHRoaXMuYXV0b0ZpdE9ic2VydmFibGUuYmluZCh0aGlzKSxcbiAgICAgICAgICAgIGxvY2tlZDogdGhpcy5sb2NrZWRcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5zdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuYXV0b0ZpdFN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5hdXRvRml0U3Vic2NyaXB0aW9uKCk7XG4gICAgICAgICAgICB0aGlzLmF1dG9GaXRTdWJzY3JpcHRpb24gPSBudWxsO1xuICAgICAgICB9XG4gICAgfVxuICAgIGluaXRTdGF0ZSgpIHtcbiAgICAgICAgdGhpcy5maXJzdFJlc2l6ZSA9IHRydWU7XG4gICAgICAgIGlmICghdGhpcy52aXJ0dWFsQ29sdW1ucyB8fCB0aGlzLmxvY2tlZCkge1xuICAgICAgICAgICAgdGhpcy5vcmlnaW5hbFdpZHRoID0gb2Zmc2V0V2lkdGgodGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlc2l6ZShkZWx0YXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLnZpcnR1YWxDb2x1bW5zIHx8IHRoaXMubG9ja2VkKSB7XG4gICAgICAgICAgICBjb25zdCBkZWx0YSA9IGRlbHRhcy5yZWR1Y2UoKHN1bSwgaXRlbSkgPT4gc3VtICsgaXRlbSwgMCk7XG4gICAgICAgICAgICBjb25zdCB3aWR0aCA9IHRoaXMub3JpZ2luYWxXaWR0aCArIGRlbHRhO1xuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZSh0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ3dpZHRoJywgd2lkdGggKyAncHgnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNkci5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgfVxuICAgIGF1dG9GaXRPYnNlcnZhYmxlKGNvbHVtbkluZm8pIHtcbiAgICAgICAgcmV0dXJuIE9ic2VydmFibGUuY3JlYXRlKG9ic2VydmVyID0+IHtcbiAgICAgICAgICAgIHRoaXMuem9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ2stYXV0b2ZpdHRpbmcnKTtcbiAgICAgICAgICAgICAgICB0aGlzLmNkci5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgICAgICAgICAgICAgY29uc3Qgd2lkdGhzID0gY29sdW1uSW5mby5tYXAodGhpcy5tZWFzdXJlQ29sdW1uLmJpbmQodGhpcykpO1xuICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3ModGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsICdrLWF1dG9maXR0aW5nJyk7XG4gICAgICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dCh3aWR0aHMpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBtZWFzdXJlQ29sdW1uKGluZm8pIHtcbiAgICAgICAgY29uc3QgZG9tID0gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIGNvbnN0IGhlYWRlciA9IHBpcGUoaGVhZGVyUm93KGluZm8ubGV2ZWwpLCBjZWxsKGluZm8uaGVhZGVySW5kZXgsICd0aCcpLCBvZmZzZXRXaWR0aCkoZG9tKTtcbiAgICAgICAgbGV0IGRhdGEgPSAwO1xuICAgICAgICBpZiAoIWluZm8uaXNQYXJlbnRTcGFuIHx8IChpbmZvLmlzUGFyZW50U3BhbiAmJiBpbmZvLmlzTGFzdEluU3BhbikpIHtcbiAgICAgICAgICAgIGRhdGEgPSBwaXBlKHJvdygndGJvZHk+dHI6bm90KC5rLWdyb3VwaW5nLXJvdyk6bm90KC5rLWdyaWQtbm9yZWNvcmRzKScpLCBjZWxsKGluZm8uaW5kZXgpLCBvZmZzZXRXaWR0aCkoZG9tKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBmb290ZXIgPSBwaXBlKHJvdygndGZvb3Q+dHInKSwgY2VsbChpbmZvLmluZGV4KSwgb2Zmc2V0V2lkdGgpKGRvbSk7XG4gICAgICAgIHJldHVybiBNYXRoLm1heChoZWFkZXIsIGRhdGEsIGZvb3Rlcik7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBUYWJsZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwibG9ja2VkXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgVGFibGVEaXJlY3RpdmUucHJvdG90eXBlLCBcInZpcnR1YWxDb2x1bW5zXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnc3R5bGUubWluLXdpZHRoJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlciksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgVGFibGVEaXJlY3RpdmUucHJvdG90eXBlLCBcIm1pbldpZHRoXCIsIG51bGwpO1xuVGFibGVEaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ3RhYmxlJyAvLyB0c2xpbnQ6ZGlzYWJsZS1saW5lOmRpcmVjdGl2ZS1zZWxlY3RvclxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRWxlbWVudFJlZixcbiAgICAgICAgUmVuZGVyZXIyLFxuICAgICAgICBDb2x1bW5SZXNpemluZ1NlcnZpY2UsXG4gICAgICAgIE5nWm9uZSxcbiAgICAgICAgQ2hhbmdlRGV0ZWN0b3JSZWZdKVxuXSwgVGFibGVEaXJlY3RpdmUpO1xuXG5jb25zdCBleHBvcnRlZE1vZHVsZXMgPSBbXG4gICAgQ29sdW1uQ29tcG9uZW50LFxuICAgIENvbHVtbkdyb3VwQ29tcG9uZW50LFxuICAgIExvZ2ljYWxDZWxsRGlyZWN0aXZlLFxuICAgIExvZ2ljYWxSb3dEaXJlY3RpdmUsXG4gICAgRm9jdXNhYmxlRGlyZWN0aXZlLFxuICAgIEZvb3RlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIENvbEdyb3VwQ29tcG9uZW50LFxuICAgIFJlc2l6YWJsZUNvbnRhaW5lckRpcmVjdGl2ZSxcbiAgICBUZW1wbGF0ZUNvbnRleHREaXJlY3RpdmUsXG4gICAgRmllbGRBY2Nlc3NvclBpcGUsXG4gICAgRGV0YWlsVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgU3BhbkNvbHVtbkNvbXBvbmVudCxcbiAgICBUYWJsZURpcmVjdGl2ZSxcbiAgICBMb2FkaW5nQ29tcG9uZW50XG5dO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBTaGFyZWRNb2R1bGUgPSBjbGFzcyBTaGFyZWRNb2R1bGUge1xuICAgIHN0YXRpYyBleHBvcnRzKCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgQ29sdW1uQ29tcG9uZW50LFxuICAgICAgICAgICAgU3BhbkNvbHVtbkNvbXBvbmVudCxcbiAgICAgICAgICAgIENvbHVtbkdyb3VwQ29tcG9uZW50LFxuICAgICAgICAgICAgRm9vdGVyVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgICAgICBEZXRhaWxUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgICAgIEZvY3VzYWJsZURpcmVjdGl2ZVxuICAgICAgICBdO1xuICAgIH1cbn07XG5TaGFyZWRNb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICBOZ01vZHVsZSh7XG4gICAgICAgIGRlY2xhcmF0aW9uczogW2V4cG9ydGVkTW9kdWxlc10sXG4gICAgICAgIGV4cG9ydHM6IFtleHBvcnRlZE1vZHVsZXMsIERyYWdnYWJsZU1vZHVsZSwgRXZlbnRzTW9kdWxlXSxcbiAgICAgICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV1cbiAgICB9KVxuXSwgU2hhcmVkTW9kdWxlKTtcblxudmFyIENvbnRhaW5zRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMTtcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgYENvbnRhaW5zYCAoKipDb250YWlucyoqKSBmaWx0ZXIgb3BlcmF0b3IuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24gYW5kIGV4YW1wbGVzLCByZWZlciB0bzpcbiAqICogW1NldHRpbmcgdGhlIGRlZmF1bHQgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtZGVmYXVsdC1maWx0ZXItb3BlcmF0b3IpXG4gKiAqIFtTZXR0aW5nIHRoZSBvcmRlciBvZiB0aGUgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtb3JkZXItb2YtdGhlLWZpbHRlci1vcGVyYXRvcnMpXG4gKi9cbmxldCBDb250YWluc0ZpbHRlck9wZXJhdG9yQ29tcG9uZW50ID0gQ29udGFpbnNGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xID0gY2xhc3MgQ29udGFpbnNGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCBleHRlbmRzIEZpbHRlck9wZXJhdG9yQmFzZSB7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uKSB7IHN1cGVyKFwiY29udGFpbnNcIiwgbG9jYWxpemF0aW9uKTsgfVxufTtcbkNvbnRhaW5zRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBDb250YWluc0ZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzEgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBwcm92aWRlOiBGaWx0ZXJPcGVyYXRvckJhc2UsXG4gICAgICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gQ29udGFpbnNGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xKVxuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWZpbHRlci1jb250YWlucy1vcGVyYXRvcicsXG4gICAgICAgIHRlbXBsYXRlOiBgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTG9jYWxpemF0aW9uU2VydmljZV0pXG5dLCBDb250YWluc0ZpbHRlck9wZXJhdG9yQ29tcG9uZW50KTtcblxudmFyIERvZXNOb3RDb250YWluRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMTtcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgYERvZXNOb3RDb250YWluYCAoKipEb2VzIG5vdCBjb250YWluKiopIGZpbHRlciBvcGVyYXRvci5cbiAqXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBhbmQgZXhhbXBsZXMsIHJlZmVyIHRvOlxuICogKiBbU2V0dGluZyB0aGUgZGVmYXVsdCBmaWx0ZXIgb3BlcmF0b3JzXSh7JSBzbHVnIGJ1aWx0aW5maWx0ZXJ0ZW1wbGF0ZV9ncmlkICV9I3RvYy1zZXR0aW5nLXRoZS1kZWZhdWx0LWZpbHRlci1vcGVyYXRvcilcbiAqICogW1NldHRpbmcgdGhlIG9yZGVyIG9mIHRoZSBmaWx0ZXIgb3BlcmF0b3JzXSh7JSBzbHVnIGJ1aWx0aW5maWx0ZXJ0ZW1wbGF0ZV9ncmlkICV9I3RvYy1zZXR0aW5nLXRoZS1vcmRlci1vZi10aGUtZmlsdGVyLW9wZXJhdG9ycylcbiAqL1xubGV0IERvZXNOb3RDb250YWluRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBEb2VzTm90Q29udGFpbkZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzEgPSBjbGFzcyBEb2VzTm90Q29udGFpbkZpbHRlck9wZXJhdG9yQ29tcG9uZW50IGV4dGVuZHMgRmlsdGVyT3BlcmF0b3JCYXNlIHtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb24pIHsgc3VwZXIoXCJkb2Vzbm90Y29udGFpblwiLCBsb2NhbGl6YXRpb24pOyB9XG59O1xuRG9lc05vdENvbnRhaW5GaWx0ZXJPcGVyYXRvckNvbXBvbmVudCA9IERvZXNOb3RDb250YWluRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IEZpbHRlck9wZXJhdG9yQmFzZSxcbiAgICAgICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBEb2VzTm90Q29udGFpbkZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzEpXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZmlsdGVyLW5vdC1jb250YWlucy1vcGVyYXRvcicsXG4gICAgICAgIHRlbXBsYXRlOiBgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTG9jYWxpemF0aW9uU2VydmljZV0pXG5dLCBEb2VzTm90Q29udGFpbkZpbHRlck9wZXJhdG9yQ29tcG9uZW50KTtcblxudmFyIEVuZHNXaXRoRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMTtcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgYEVuZHNXaXRoYCAoKipFbmRzIHdpdGgqKikgc3RyaW5nIGZpbHRlciBvcGVyYXRvci5cbiAqXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBhbmQgZXhhbXBsZXMsIHJlZmVyIHRvOlxuICogKiBbU2V0dGluZyB0aGUgZGVmYXVsdCBmaWx0ZXIgb3BlcmF0b3JzXSh7JSBzbHVnIGJ1aWx0aW5maWx0ZXJ0ZW1wbGF0ZV9ncmlkICV9I3RvYy1zZXR0aW5nLXRoZS1kZWZhdWx0LWZpbHRlci1vcGVyYXRvcilcbiAqICogW1NldHRpbmcgdGhlIG9yZGVyIG9mIHRoZSBmaWx0ZXIgb3BlcmF0b3JzXSh7JSBzbHVnIGJ1aWx0aW5maWx0ZXJ0ZW1wbGF0ZV9ncmlkICV9I3RvYy1zZXR0aW5nLXRoZS1vcmRlci1vZi10aGUtZmlsdGVyLW9wZXJhdG9ycylcbiAqL1xubGV0IEVuZHNXaXRoRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBFbmRzV2l0aEZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzEgPSBjbGFzcyBFbmRzV2l0aEZpbHRlck9wZXJhdG9yQ29tcG9uZW50IGV4dGVuZHMgRmlsdGVyT3BlcmF0b3JCYXNlIHtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb24pIHsgc3VwZXIoXCJlbmRzd2l0aFwiLCBsb2NhbGl6YXRpb24pOyB9XG59O1xuRW5kc1dpdGhGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCA9IEVuZHNXaXRoRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IEZpbHRlck9wZXJhdG9yQmFzZSxcbiAgICAgICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBFbmRzV2l0aEZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzEpXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZmlsdGVyLWVuZHN3aXRoLW9wZXJhdG9yJyxcbiAgICAgICAgdGVtcGxhdGU6IGBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtMb2NhbGl6YXRpb25TZXJ2aWNlXSlcbl0sIEVuZHNXaXRoRmlsdGVyT3BlcmF0b3JDb21wb25lbnQpO1xuXG52YXIgRXF1YWxGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBgRXF1YWxgICgqKklzIGVxdWFsIHRvKiopIGZpbHRlciBvcGVyYXRvci5cbiAqXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBhbmQgZXhhbXBsZXMsIHJlZmVyIHRvOlxuICogKiBbU2V0dGluZyB0aGUgZGVmYXVsdCBmaWx0ZXIgb3BlcmF0b3JzXSh7JSBzbHVnIGJ1aWx0aW5maWx0ZXJ0ZW1wbGF0ZV9ncmlkICV9I3RvYy1zZXR0aW5nLXRoZS1kZWZhdWx0LWZpbHRlci1vcGVyYXRvcilcbiAqICogW1NldHRpbmcgdGhlIG9yZGVyIG9mIHRoZSBmaWx0ZXIgb3BlcmF0b3JzXSh7JSBzbHVnIGJ1aWx0aW5maWx0ZXJ0ZW1wbGF0ZV9ncmlkICV9I3RvYy1zZXR0aW5nLXRoZS1vcmRlci1vZi10aGUtZmlsdGVyLW9wZXJhdG9ycylcbiAqL1xubGV0IEVxdWFsRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBFcXVhbEZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzEgPSBjbGFzcyBFcXVhbEZpbHRlck9wZXJhdG9yQ29tcG9uZW50IGV4dGVuZHMgRmlsdGVyT3BlcmF0b3JCYXNlIHtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb24pIHsgc3VwZXIoXCJlcVwiLCBsb2NhbGl6YXRpb24pOyB9XG59O1xuRXF1YWxGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCA9IEVxdWFsRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IEZpbHRlck9wZXJhdG9yQmFzZSxcbiAgICAgICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBFcXVhbEZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzEpXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZmlsdGVyLWVxLW9wZXJhdG9yJyxcbiAgICAgICAgdGVtcGxhdGU6IGBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtMb2NhbGl6YXRpb25TZXJ2aWNlXSlcbl0sIEVxdWFsRmlsdGVyT3BlcmF0b3JDb21wb25lbnQpO1xuXG52YXIgSXNFbXB0eUZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzE7XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGBJc0VtcHR5YCAoKipJcyBlbXB0eSoqKSBmaWx0ZXIgb3BlcmF0b3IuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24gYW5kIGV4YW1wbGVzLCByZWZlciB0bzpcbiAqICogW1NldHRpbmcgdGhlIGRlZmF1bHQgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtZGVmYXVsdC1maWx0ZXItb3BlcmF0b3IpXG4gKiAqIFtTZXR0aW5nIHRoZSBvcmRlciBvZiB0aGUgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtb3JkZXItb2YtdGhlLWZpbHRlci1vcGVyYXRvcnMpXG4gKi9cbmxldCBJc0VtcHR5RmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBJc0VtcHR5RmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IGNsYXNzIElzRW1wdHlGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCBleHRlbmRzIEZpbHRlck9wZXJhdG9yQmFzZSB7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uKSB7IHN1cGVyKFwiaXNlbXB0eVwiLCBsb2NhbGl6YXRpb24pOyB9XG59O1xuSXNFbXB0eUZpbHRlck9wZXJhdG9yQ29tcG9uZW50ID0gSXNFbXB0eUZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzEgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBwcm92aWRlOiBGaWx0ZXJPcGVyYXRvckJhc2UsXG4gICAgICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gSXNFbXB0eUZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzEpXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZmlsdGVyLWlzZW1wdHktb3BlcmF0b3InLFxuICAgICAgICB0ZW1wbGF0ZTogYGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgSXNFbXB0eUZpbHRlck9wZXJhdG9yQ29tcG9uZW50KTtcblxudmFyIElzTm90RW1wdHlGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBgSXNOb3RFbXB0eWAgKCoqSXMgbm90IGVtcHR5KiopIGZpbHRlciBvcGVyYXRvci5cbiAqXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBhbmQgZXhhbXBsZXMsIHJlZmVyIHRvOlxuICogKiBbU2V0dGluZyB0aGUgZGVmYXVsdCBmaWx0ZXIgb3BlcmF0b3JzXSh7JSBzbHVnIGJ1aWx0aW5maWx0ZXJ0ZW1wbGF0ZV9ncmlkICV9I3RvYy1zZXR0aW5nLXRoZS1kZWZhdWx0LWZpbHRlci1vcGVyYXRvcilcbiAqICogW1NldHRpbmcgdGhlIG9yZGVyIG9mIHRoZSBmaWx0ZXIgb3BlcmF0b3JzXSh7JSBzbHVnIGJ1aWx0aW5maWx0ZXJ0ZW1wbGF0ZV9ncmlkICV9I3RvYy1zZXR0aW5nLXRoZS1vcmRlci1vZi10aGUtZmlsdGVyLW9wZXJhdG9ycylcbiAqL1xubGV0IElzTm90RW1wdHlGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCA9IElzTm90RW1wdHlGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xID0gY2xhc3MgSXNOb3RFbXB0eUZpbHRlck9wZXJhdG9yQ29tcG9uZW50IGV4dGVuZHMgRmlsdGVyT3BlcmF0b3JCYXNlIHtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb24pIHsgc3VwZXIoXCJpc25vdGVtcHR5XCIsIGxvY2FsaXphdGlvbik7IH1cbn07XG5Jc05vdEVtcHR5RmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBJc05vdEVtcHR5RmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IEZpbHRlck9wZXJhdG9yQmFzZSxcbiAgICAgICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBJc05vdEVtcHR5RmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1maWx0ZXItaXNub3RlbXB0eS1vcGVyYXRvcicsXG4gICAgICAgIHRlbXBsYXRlOiBgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTG9jYWxpemF0aW9uU2VydmljZV0pXG5dLCBJc05vdEVtcHR5RmlsdGVyT3BlcmF0b3JDb21wb25lbnQpO1xuXG52YXIgSXNOb3ROdWxsRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMTtcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgYElzTm90TnVsbGAgKCoqSXMgbm90IG51bGwqKikgZmlsdGVyIG9wZXJhdG9yLlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uIGFuZCBleGFtcGxlcywgcmVmZXIgdG86XG4gKiAqIFtTZXR0aW5nIHRoZSBkZWZhdWx0IGZpbHRlciBvcGVyYXRvcnNdKHslIHNsdWcgYnVpbHRpbmZpbHRlcnRlbXBsYXRlX2dyaWQgJX0jdG9jLXNldHRpbmctdGhlLWRlZmF1bHQtZmlsdGVyLW9wZXJhdG9yKVxuICogKiBbU2V0dGluZyB0aGUgb3JkZXIgb2YgdGhlIGZpbHRlciBvcGVyYXRvcnNdKHslIHNsdWcgYnVpbHRpbmZpbHRlcnRlbXBsYXRlX2dyaWQgJX0jdG9jLXNldHRpbmctdGhlLW9yZGVyLW9mLXRoZS1maWx0ZXItb3BlcmF0b3JzKVxuICovXG5sZXQgSXNOb3ROdWxsRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBJc05vdE51bGxGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xID0gY2xhc3MgSXNOb3ROdWxsRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgZXh0ZW5kcyBGaWx0ZXJPcGVyYXRvckJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbikgeyBzdXBlcihcImlzbm90bnVsbFwiLCBsb2NhbGl6YXRpb24pOyB9XG59O1xuSXNOb3ROdWxsRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBJc05vdE51bGxGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcHJvdmlkZTogRmlsdGVyT3BlcmF0b3JCYXNlLFxuICAgICAgICAgICAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IElzTm90TnVsbEZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzEpXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZmlsdGVyLWlzbm90bnVsbC1vcGVyYXRvcicsXG4gICAgICAgIHRlbXBsYXRlOiBgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTG9jYWxpemF0aW9uU2VydmljZV0pXG5dLCBJc05vdE51bGxGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCk7XG5cbnZhciBJc051bGxGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBgSXNOdWxsYCAoKipJcyBudWxsKiopIGZpbHRlciBvcGVyYXRvci5cbiAqXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBhbmQgZXhhbXBsZXMsIHJlZmVyIHRvOlxuICogKiBbU2V0dGluZyB0aGUgZGVmYXVsdCBmaWx0ZXIgb3BlcmF0b3JzXSh7JSBzbHVnIGJ1aWx0aW5maWx0ZXJ0ZW1wbGF0ZV9ncmlkICV9I3RvYy1zZXR0aW5nLXRoZS1kZWZhdWx0LWZpbHRlci1vcGVyYXRvcilcbiAqICogW1NldHRpbmcgdGhlIG9yZGVyIG9mIHRoZSBmaWx0ZXIgb3BlcmF0b3JzXSh7JSBzbHVnIGJ1aWx0aW5maWx0ZXJ0ZW1wbGF0ZV9ncmlkICV9I3RvYy1zZXR0aW5nLXRoZS1vcmRlci1vZi10aGUtZmlsdGVyLW9wZXJhdG9ycylcbiAqL1xubGV0IElzTnVsbEZpbHRlck9wZXJhdG9yQ29tcG9uZW50ID0gSXNOdWxsRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IGNsYXNzIElzTnVsbEZpbHRlck9wZXJhdG9yQ29tcG9uZW50IGV4dGVuZHMgRmlsdGVyT3BlcmF0b3JCYXNlIHtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb24pIHsgc3VwZXIoXCJpc251bGxcIiwgbG9jYWxpemF0aW9uKTsgfVxufTtcbklzTnVsbEZpbHRlck9wZXJhdG9yQ29tcG9uZW50ID0gSXNOdWxsRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IEZpbHRlck9wZXJhdG9yQmFzZSxcbiAgICAgICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBJc051bGxGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xKVxuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWZpbHRlci1pc251bGwtb3BlcmF0b3InLFxuICAgICAgICB0ZW1wbGF0ZTogYGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgSXNOdWxsRmlsdGVyT3BlcmF0b3JDb21wb25lbnQpO1xuXG52YXIgTm90RXF1YWxGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBgTm90RXF1YWxgICgqKklzIG5vdCBlcXVhbCB0byoqKSBmaWx0ZXIgb3BlcmF0b3IuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24gYW5kIGV4YW1wbGVzLCByZWZlciB0bzpcbiAqICogW1NldHRpbmcgdGhlIGRlZmF1bHQgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtZGVmYXVsdC1maWx0ZXItb3BlcmF0b3IpXG4gKiAqIFtTZXR0aW5nIHRoZSBvcmRlciBvZiB0aGUgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtb3JkZXItb2YtdGhlLWZpbHRlci1vcGVyYXRvcnMpXG4gKi9cbmxldCBOb3RFcXVhbEZpbHRlck9wZXJhdG9yQ29tcG9uZW50ID0gTm90RXF1YWxGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xID0gY2xhc3MgTm90RXF1YWxGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCBleHRlbmRzIEZpbHRlck9wZXJhdG9yQmFzZSB7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uKSB7IHN1cGVyKFwibmVxXCIsIGxvY2FsaXphdGlvbik7IH1cbn07XG5Ob3RFcXVhbEZpbHRlck9wZXJhdG9yQ29tcG9uZW50ID0gTm90RXF1YWxGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcHJvdmlkZTogRmlsdGVyT3BlcmF0b3JCYXNlLFxuICAgICAgICAgICAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IE5vdEVxdWFsRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1maWx0ZXItbmVxLW9wZXJhdG9yJyxcbiAgICAgICAgdGVtcGxhdGU6IGBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtMb2NhbGl6YXRpb25TZXJ2aWNlXSlcbl0sIE5vdEVxdWFsRmlsdGVyT3BlcmF0b3JDb21wb25lbnQpO1xuXG52YXIgU3RhcnRzV2l0aEZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzE7XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGBTdGFydHNXaXRoYCAoKipTdGFydHMgd2l0aCoqKSBmaWx0ZXIgb3BlcmF0b3IuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24gYW5kIGV4YW1wbGVzLCByZWZlciB0bzpcbiAqICogW1NldHRpbmcgdGhlIGRlZmF1bHQgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtZGVmYXVsdC1maWx0ZXItb3BlcmF0b3IpXG4gKiAqIFtTZXR0aW5nIHRoZSBvcmRlciBvZiB0aGUgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtb3JkZXItb2YtdGhlLWZpbHRlci1vcGVyYXRvcnMpXG4gKi9cbmxldCBTdGFydHNXaXRoRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBTdGFydHNXaXRoRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IGNsYXNzIFN0YXJ0c1dpdGhGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCBleHRlbmRzIEZpbHRlck9wZXJhdG9yQmFzZSB7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uKSB7IHN1cGVyKFwic3RhcnRzd2l0aFwiLCBsb2NhbGl6YXRpb24pOyB9XG59O1xuU3RhcnRzV2l0aEZpbHRlck9wZXJhdG9yQ29tcG9uZW50ID0gU3RhcnRzV2l0aEZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzEgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBwcm92aWRlOiBGaWx0ZXJPcGVyYXRvckJhc2UsXG4gICAgICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU3RhcnRzV2l0aEZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzEpXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZmlsdGVyLXN0YXJ0c3dpdGgtb3BlcmF0b3InLFxuICAgICAgICB0ZW1wbGF0ZTogYGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgU3RhcnRzV2l0aEZpbHRlck9wZXJhdG9yQ29tcG9uZW50KTtcblxudmFyIEdyZWF0ZXJGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xO1xuLypcbiAqIFJlcHJlc2VudHMgdGhlIGBHcmVhdGVyYCAoKipJcyBncmVhdGVyIHRoYW4qKikgbnVtZXJpYyBmaWx0ZXIgb3BlcmF0b3IuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24gYW5kIGV4YW1wbGVzLCByZWZlciB0bzpcbiAqICogW1NldHRpbmcgdGhlIGRlZmF1bHQgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtZGVmYXVsdC1maWx0ZXItb3BlcmF0b3IpXG4gKiAqIFtTZXR0aW5nIHRoZSBvcmRlciBvZiB0aGUgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtb3JkZXItb2YtdGhlLWZpbHRlci1vcGVyYXRvcnMpXG4gKi9cbmxldCBHcmVhdGVyRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBHcmVhdGVyRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IGNsYXNzIEdyZWF0ZXJGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCBleHRlbmRzIEZpbHRlck9wZXJhdG9yQmFzZSB7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uKSB7IHN1cGVyKFwiZ3RcIiwgbG9jYWxpemF0aW9uKTsgfVxufTtcbkdyZWF0ZXJGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCA9IEdyZWF0ZXJGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcHJvdmlkZTogRmlsdGVyT3BlcmF0b3JCYXNlLFxuICAgICAgICAgICAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IEdyZWF0ZXJGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xKVxuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWZpbHRlci1ndC1vcGVyYXRvcicsXG4gICAgICAgIHRlbXBsYXRlOiBgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTG9jYWxpemF0aW9uU2VydmljZV0pXG5dLCBHcmVhdGVyRmlsdGVyT3BlcmF0b3JDb21wb25lbnQpO1xuXG52YXIgR3JlYXRlck9yRXF1YWxUb0ZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzE7XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGBHcmVhdGVyT3JFcXVhbFRvYCAoKipJcyBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8qKikgbnVtZXJpYyBmaWx0ZXIgb3BlcmF0b3IuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24gYW5kIGV4YW1wbGVzLCByZWZlciB0bzpcbiAqICogW1NldHRpbmcgdGhlIGRlZmF1bHQgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtZGVmYXVsdC1maWx0ZXItb3BlcmF0b3IpXG4gKiAqIFtTZXR0aW5nIHRoZSBvcmRlciBvZiB0aGUgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtb3JkZXItb2YtdGhlLWZpbHRlci1vcGVyYXRvcnMpXG4gKi9cbmxldCBHcmVhdGVyT3JFcXVhbFRvRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBHcmVhdGVyT3JFcXVhbFRvRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IGNsYXNzIEdyZWF0ZXJPckVxdWFsVG9GaWx0ZXJPcGVyYXRvckNvbXBvbmVudCBleHRlbmRzIEZpbHRlck9wZXJhdG9yQmFzZSB7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uKSB7IHN1cGVyKFwiZ3RlXCIsIGxvY2FsaXphdGlvbik7IH1cbn07XG5HcmVhdGVyT3JFcXVhbFRvRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBHcmVhdGVyT3JFcXVhbFRvRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IEZpbHRlck9wZXJhdG9yQmFzZSxcbiAgICAgICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBHcmVhdGVyT3JFcXVhbFRvRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1maWx0ZXItZ3RlLW9wZXJhdG9yJyxcbiAgICAgICAgdGVtcGxhdGU6IGBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtMb2NhbGl6YXRpb25TZXJ2aWNlXSlcbl0sIEdyZWF0ZXJPckVxdWFsVG9GaWx0ZXJPcGVyYXRvckNvbXBvbmVudCk7XG5cbnZhciBMZXNzRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMTtcbi8qXG4gKiBSZXByZXNlbnRzIHRoZSBgTGVzc2AgKCoqSXMgbGVzcyB0aGFuKiopIG51bWVyaWMgZmlsdGVyIG9wZXJhdG9yLlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uIGFuZCBleGFtcGxlcywgcmVmZXIgdG86XG4gKiAqIFtTZXR0aW5nIHRoZSBkZWZhdWx0IGZpbHRlciBvcGVyYXRvcnNdKHslIHNsdWcgYnVpbHRpbmZpbHRlcnRlbXBsYXRlX2dyaWQgJX0jdG9jLXNldHRpbmctdGhlLWRlZmF1bHQtZmlsdGVyLW9wZXJhdG9yKVxuICogKiBbU2V0dGluZyB0aGUgb3JkZXIgb2YgdGhlIGZpbHRlciBvcGVyYXRvcnNdKHslIHNsdWcgYnVpbHRpbmZpbHRlcnRlbXBsYXRlX2dyaWQgJX0jdG9jLXNldHRpbmctdGhlLW9yZGVyLW9mLXRoZS1maWx0ZXItb3BlcmF0b3JzKVxuICovXG5sZXQgTGVzc0ZpbHRlck9wZXJhdG9yQ29tcG9uZW50ID0gTGVzc0ZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzEgPSBjbGFzcyBMZXNzRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgZXh0ZW5kcyBGaWx0ZXJPcGVyYXRvckJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbikgeyBzdXBlcihcImx0XCIsIGxvY2FsaXphdGlvbik7IH1cbn07XG5MZXNzRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBMZXNzRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IEZpbHRlck9wZXJhdG9yQmFzZSxcbiAgICAgICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBMZXNzRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1maWx0ZXItbHQtb3BlcmF0b3InLFxuICAgICAgICB0ZW1wbGF0ZTogYGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgTGVzc0ZpbHRlck9wZXJhdG9yQ29tcG9uZW50KTtcblxudmFyIExlc3NPckVxdWFsVG9GaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xO1xuLypcbiAqIFJlcHJlc2VudHMgdGhlIGBMZXNzT3JFcXVhbFRvYCAoKipJcyBsZXNzIHRoYW4gb3IgZXF1YWwgdG8qKikgbnVtZXJpYyBmaWx0ZXIgb3BlcmF0b3IuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24gYW5kIGV4YW1wbGVzLCByZWZlciB0bzpcbiAqICogW1NldHRpbmcgdGhlIGRlZmF1bHQgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtZGVmYXVsdC1maWx0ZXItb3BlcmF0b3IpXG4gKiAqIFtTZXR0aW5nIHRoZSBvcmRlciBvZiB0aGUgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtb3JkZXItb2YtdGhlLWZpbHRlci1vcGVyYXRvcnMpXG4gKi9cbmxldCBMZXNzT3JFcXVhbFRvRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBMZXNzT3JFcXVhbFRvRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IGNsYXNzIExlc3NPckVxdWFsVG9GaWx0ZXJPcGVyYXRvckNvbXBvbmVudCBleHRlbmRzIEZpbHRlck9wZXJhdG9yQmFzZSB7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uKSB7IHN1cGVyKFwibHRlXCIsIGxvY2FsaXphdGlvbik7IH1cbn07XG5MZXNzT3JFcXVhbFRvRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBMZXNzT3JFcXVhbFRvRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IEZpbHRlck9wZXJhdG9yQmFzZSxcbiAgICAgICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBMZXNzT3JFcXVhbFRvRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1maWx0ZXItbHRlLW9wZXJhdG9yJyxcbiAgICAgICAgdGVtcGxhdGU6IGBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtMb2NhbGl6YXRpb25TZXJ2aWNlXSlcbl0sIExlc3NPckVxdWFsVG9GaWx0ZXJPcGVyYXRvckNvbXBvbmVudCk7XG5cbnZhciBBZnRlckZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzE7XG4vKlxuICogUmVwcmVzZW50cyB0aGUgYEdyZWF0ZXJgICgqKklzIGFmdGVyKiopIGRhdGUgZmlsdGVyIG9wZXJhdG9yLlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uIGFuZCBleGFtcGxlcywgcmVmZXIgdG86XG4gKiAqIFtTZXR0aW5nIHRoZSBkZWZhdWx0IGZpbHRlciBvcGVyYXRvcnNdKHslIHNsdWcgYnVpbHRpbmZpbHRlcnRlbXBsYXRlX2dyaWQgJX0jdG9jLXNldHRpbmctdGhlLWRlZmF1bHQtZmlsdGVyLW9wZXJhdG9yKVxuICogKiBbU2V0dGluZyB0aGUgb3JkZXIgb2YgdGhlIGZpbHRlciBvcGVyYXRvcnNdKHslIHNsdWcgYnVpbHRpbmZpbHRlcnRlbXBsYXRlX2dyaWQgJX0jdG9jLXNldHRpbmctdGhlLW9yZGVyLW9mLXRoZS1maWx0ZXItb3BlcmF0b3JzKVxuICovXG5sZXQgQWZ0ZXJGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCA9IEFmdGVyRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IGNsYXNzIEFmdGVyRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgZXh0ZW5kcyBGaWx0ZXJPcGVyYXRvckJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbikgeyBzdXBlcihcImFmdGVyXCIsIGxvY2FsaXphdGlvbik7IH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdGV4dDogdGhpcy50ZXh0LFxuICAgICAgICAgICAgdmFsdWU6IFwiZ3RcIlxuICAgICAgICB9O1xuICAgIH1cbn07XG5BZnRlckZpbHRlck9wZXJhdG9yQ29tcG9uZW50ID0gQWZ0ZXJGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcHJvdmlkZTogRmlsdGVyT3BlcmF0b3JCYXNlLFxuICAgICAgICAgICAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IEFmdGVyRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1maWx0ZXItYWZ0ZXItb3BlcmF0b3InLFxuICAgICAgICB0ZW1wbGF0ZTogYGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgQWZ0ZXJGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCk7XG5cbnZhciBBZnRlckVxRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMTtcbi8qXG4gKiBSZXByZXNlbnRzIHRoZSBgR3JlYXRlck9yRXF1YWxUb2AgKCoqSXMgYWZ0ZXIgb3IgZXF1YWwgdG8qKikgZGF0ZSBmaWx0ZXIgb3BlcmF0b3IuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24gYW5kIGV4YW1wbGVzLCByZWZlciB0bzpcbiAqICogW1NldHRpbmcgdGhlIGRlZmF1bHQgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtZGVmYXVsdC1maWx0ZXItb3BlcmF0b3IpXG4gKiAqIFtTZXR0aW5nIHRoZSBvcmRlciBvZiB0aGUgZmlsdGVyIG9wZXJhdG9yc10oeyUgc2x1ZyBidWlsdGluZmlsdGVydGVtcGxhdGVfZ3JpZCAlfSN0b2Mtc2V0dGluZy10aGUtb3JkZXItb2YtdGhlLWZpbHRlci1vcGVyYXRvcnMpXG4gKi9cbmxldCBBZnRlckVxRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBBZnRlckVxRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IGNsYXNzIEFmdGVyRXFGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCBleHRlbmRzIEZpbHRlck9wZXJhdG9yQmFzZSB7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uKSB7IHN1cGVyKFwiYWZ0ZXItZXFcIiwgbG9jYWxpemF0aW9uKTsgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0ZXh0OiB0aGlzLnRleHQsXG4gICAgICAgICAgICB2YWx1ZTogXCJndGVcIlxuICAgICAgICB9O1xuICAgIH1cbn07XG5BZnRlckVxRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBBZnRlckVxRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IEZpbHRlck9wZXJhdG9yQmFzZSxcbiAgICAgICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBBZnRlckVxRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1maWx0ZXItYWZ0ZXItZXEtb3BlcmF0b3InLFxuICAgICAgICB0ZW1wbGF0ZTogYGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgQWZ0ZXJFcUZpbHRlck9wZXJhdG9yQ29tcG9uZW50KTtcblxudmFyIEJlZm9yZUVxRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMTtcbi8qXG4gKiBSZXByZXNlbnRzIHRoZSBgTGVzc09yRXF1YWxUb2AgKCoqSXMgYmVmb3JlIG9yIGVxdWFsIHRvKiopIGRhdGUgZmlsdGVyIG9wZXJhdG9yLlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uIGFuZCBleGFtcGxlcywgcmVmZXIgdG86XG4gKiAqIFtTZXR0aW5nIHRoZSBkZWZhdWx0IGZpbHRlciBvcGVyYXRvcnNdKHslIHNsdWcgYnVpbHRpbmZpbHRlcnRlbXBsYXRlX2dyaWQgJX0jdG9jLXNldHRpbmctdGhlLWRlZmF1bHQtZmlsdGVyLW9wZXJhdG9yKVxuICogKiBbU2V0dGluZyB0aGUgb3JkZXIgb2YgdGhlIGZpbHRlciBvcGVyYXRvcnNdKHslIHNsdWcgYnVpbHRpbmZpbHRlcnRlbXBsYXRlX2dyaWQgJX0jdG9jLXNldHRpbmctdGhlLW9yZGVyLW9mLXRoZS1maWx0ZXItb3BlcmF0b3JzKVxuICovXG5sZXQgQmVmb3JlRXFGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCA9IEJlZm9yZUVxRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IGNsYXNzIEJlZm9yZUVxRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgZXh0ZW5kcyBGaWx0ZXJPcGVyYXRvckJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbikgeyBzdXBlcihcImJlZm9yZS1lcVwiLCBsb2NhbGl6YXRpb24pOyB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRleHQ6IHRoaXMudGV4dCxcbiAgICAgICAgICAgIHZhbHVlOiBcImx0ZVwiXG4gICAgICAgIH07XG4gICAgfVxufTtcbkJlZm9yZUVxRmlsdGVyT3BlcmF0b3JDb21wb25lbnQgPSBCZWZvcmVFcUZpbHRlck9wZXJhdG9yQ29tcG9uZW50XzEgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBwcm92aWRlOiBGaWx0ZXJPcGVyYXRvckJhc2UsXG4gICAgICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gQmVmb3JlRXFGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xKVxuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWZpbHRlci1iZWZvcmUtZXEtb3BlcmF0b3InLFxuICAgICAgICB0ZW1wbGF0ZTogYGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgQmVmb3JlRXFGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCk7XG5cbnZhciBCZWZvcmVGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xO1xuLypcbiAqIFJlcHJlc2VudHMgdGhlIGBMZXNzIHRoZW5gICgqKklzIGJlZm9yZSoqKSBkYXRlIGZpbHRlciBvcGVyYXRvci5cbiAqXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBhbmQgZXhhbXBsZXMsIHJlZmVyIHRvOlxuICogKiBbU2V0dGluZyB0aGUgZGVmYXVsdCBmaWx0ZXIgb3BlcmF0b3JzXSh7JSBzbHVnIGJ1aWx0aW5maWx0ZXJ0ZW1wbGF0ZV9ncmlkICV9I3RvYy1zZXR0aW5nLXRoZS1kZWZhdWx0LWZpbHRlci1vcGVyYXRvcilcbiAqICogW1NldHRpbmcgdGhlIG9yZGVyIG9mIHRoZSBmaWx0ZXIgb3BlcmF0b3JzXSh7JSBzbHVnIGJ1aWx0aW5maWx0ZXJ0ZW1wbGF0ZV9ncmlkICV9I3RvYy1zZXR0aW5nLXRoZS1vcmRlci1vZi10aGUtZmlsdGVyLW9wZXJhdG9ycylcbiAqL1xubGV0IEJlZm9yZUZpbHRlck9wZXJhdG9yQ29tcG9uZW50ID0gQmVmb3JlRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IGNsYXNzIEJlZm9yZUZpbHRlck9wZXJhdG9yQ29tcG9uZW50IGV4dGVuZHMgRmlsdGVyT3BlcmF0b3JCYXNlIHtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb24pIHsgc3VwZXIoXCJiZWZvcmVcIiwgbG9jYWxpemF0aW9uKTsgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0ZXh0OiB0aGlzLnRleHQsXG4gICAgICAgICAgICB2YWx1ZTogXCJsdFwiXG4gICAgICAgIH07XG4gICAgfVxufTtcbkJlZm9yZUZpbHRlck9wZXJhdG9yQ29tcG9uZW50ID0gQmVmb3JlRmlsdGVyT3BlcmF0b3JDb21wb25lbnRfMSA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IEZpbHRlck9wZXJhdG9yQmFzZSxcbiAgICAgICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBCZWZvcmVGaWx0ZXJPcGVyYXRvckNvbXBvbmVudF8xKVxuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWZpbHRlci1iZWZvcmUtb3BlcmF0b3InLFxuICAgICAgICB0ZW1wbGF0ZTogYGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgQmVmb3JlRmlsdGVyT3BlcmF0b3JDb21wb25lbnQpO1xuXG5jb25zdCBGSUxURVJfT1BFUkFUT1JTID0gW1xuICAgIEZpbHRlckNlbGxPcGVyYXRvcnNDb21wb25lbnQsXG4gICAgQ29udGFpbnNGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCxcbiAgICBEb2VzTm90Q29udGFpbkZpbHRlck9wZXJhdG9yQ29tcG9uZW50LFxuICAgIEVuZHNXaXRoRmlsdGVyT3BlcmF0b3JDb21wb25lbnQsXG4gICAgRXF1YWxGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCxcbiAgICBJc0VtcHR5RmlsdGVyT3BlcmF0b3JDb21wb25lbnQsXG4gICAgSXNOb3RFbXB0eUZpbHRlck9wZXJhdG9yQ29tcG9uZW50LFxuICAgIElzTm90TnVsbEZpbHRlck9wZXJhdG9yQ29tcG9uZW50LFxuICAgIElzTnVsbEZpbHRlck9wZXJhdG9yQ29tcG9uZW50LFxuICAgIE5vdEVxdWFsRmlsdGVyT3BlcmF0b3JDb21wb25lbnQsXG4gICAgU3RhcnRzV2l0aEZpbHRlck9wZXJhdG9yQ29tcG9uZW50LFxuICAgIEdyZWF0ZXJGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCxcbiAgICBHcmVhdGVyT3JFcXVhbFRvRmlsdGVyT3BlcmF0b3JDb21wb25lbnQsXG4gICAgTGVzc0ZpbHRlck9wZXJhdG9yQ29tcG9uZW50LFxuICAgIExlc3NPckVxdWFsVG9GaWx0ZXJPcGVyYXRvckNvbXBvbmVudCxcbiAgICBBZnRlckZpbHRlck9wZXJhdG9yQ29tcG9uZW50LFxuICAgIEFmdGVyRXFGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCxcbiAgICBCZWZvcmVFcUZpbHRlck9wZXJhdG9yQ29tcG9uZW50LFxuICAgIEJlZm9yZUZpbHRlck9wZXJhdG9yQ29tcG9uZW50XG5dO1xuY29uc3QgaW1wb3J0ZWRNb2R1bGVzID0gW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIERyb3BEb3duTGlzdE1vZHVsZSxcbiAgICBBdXRvQ29tcGxldGVNb2R1bGUsXG4gICAgSW5wdXRzTW9kdWxlLFxuICAgIERhdGVQaWNrZXJNb2R1bGUsXG4gICAgUG9wdXBNb2R1bGUsXG4gICAgU2hhcmVkTW9kdWxlXG5dO1xuY29uc3QgQ09NUE9ORU5UUyA9IFtcbiAgICBGaWx0ZXJJbnB1dERpcmVjdGl2ZVxuXTtcbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgU2hhcmVkRmlsdGVyTW9kdWxlID0gY2xhc3MgU2hhcmVkRmlsdGVyTW9kdWxlIHtcbiAgICBzdGF0aWMgZXhwb3J0cygpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIC4uLkZJTFRFUl9PUEVSQVRPUlNcbiAgICAgICAgXTtcbiAgICB9XG59O1xuU2hhcmVkRmlsdGVyTW9kdWxlID0gX19kZWNvcmF0ZShbXG4gICAgTmdNb2R1bGUoe1xuICAgICAgICBkZWNsYXJhdGlvbnM6IFtGSUxURVJfT1BFUkFUT1JTLCBDT01QT05FTlRTXSxcbiAgICAgICAgZXhwb3J0czogW0ZJTFRFUl9PUEVSQVRPUlMsIGltcG9ydGVkTW9kdWxlcywgQ09NUE9ORU5UU10sXG4gICAgICAgIGltcG9ydHM6IFsuLi5pbXBvcnRlZE1vZHVsZXNdXG4gICAgfSlcbl0sIFNoYXJlZEZpbHRlck1vZHVsZSk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBGaWx0ZXJIb3N0RGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3Rvcihob3N0LCByZXNvbHZlcikge1xuICAgICAgICB0aGlzLmhvc3QgPSBob3N0O1xuICAgICAgICB0aGlzLnJlc29sdmVyID0gcmVzb2x2ZXI7XG4gICAgfVxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLmNvbXBvbmVudCA9IHRoaXMuaG9zdC5jcmVhdGVDb21wb25lbnQodGhpcy5yZXNvbHZlci5yZXNvbHZlQ29tcG9uZW50RmFjdG9yeSh0aGlzLmNvbXBvbmVudFR5cGUoKSkpO1xuICAgICAgICB0aGlzLmluaXRDb21wb25lbnQoe1xuICAgICAgICAgICAgY29sdW1uOiB0aGlzLmNvbHVtbixcbiAgICAgICAgICAgIGZpbHRlcjogdGhpcy5maWx0ZXJcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5jb21wb25lbnQpIHtcbiAgICAgICAgICAgIHRoaXMuY29tcG9uZW50LmRlc3Ryb3koKTtcbiAgICAgICAgICAgIHRoaXMuY29tcG9uZW50ID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzKSB7XG4gICAgICAgIGlmIChhbnlDaGFuZ2VkKFtcImNvbHVtblwiLCBcImZpbHRlclwiXSwgY2hhbmdlcykpIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdENvbXBvbmVudCh7XG4gICAgICAgICAgICAgICAgY29sdW1uOiB0aGlzLmNvbHVtbixcbiAgICAgICAgICAgICAgICBmaWx0ZXI6IHRoaXMuZmlsdGVyXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpbml0Q29tcG9uZW50KHsgY29sdW1uLCBmaWx0ZXI6IGZpbHRlciQkMSB9KSB7XG4gICAgICAgIGNvbnN0IGluc3RhbmNlID0gdGhpcy5jb21wb25lbnQuaW5zdGFuY2U7XG4gICAgICAgIGluc3RhbmNlLmNvbHVtbiA9IGNvbHVtbjtcbiAgICAgICAgaW5zdGFuY2UuZmlsdGVyID0gZmlsdGVyJCQxO1xuICAgIH1cbn1cbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIENvbHVtbkNvbXBvbmVudClcbl0sIEZpbHRlckhvc3REaXJlY3RpdmUucHJvdG90eXBlLCBcImNvbHVtblwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgRmlsdGVySG9zdERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiZmlsdGVyXCIsIHZvaWQgMCk7XG5cbi8qKlxuICogQGhpZGRlblxuICpcbiAqID4gTGlzdCB0aGUgZm9sbG93aW5nIGNvbXBvbmVudHMgaW4gdGhlIEdyaWRNb2R1bGUgYXMgYGVudHJ5Q29tcG9uZW50c2AuXG4gKi9cbmNvbnN0IGZpbHRlckNvbXBvbmVudEZhY3RvcnkgPSAodHlwZSkgPT4gKHtcbiAgICBcImJvb2xlYW5cIjogQm9vbGVhbkZpbHRlckNlbGxDb21wb25lbnQsXG4gICAgXCJkYXRlXCI6IERhdGVGaWx0ZXJDZWxsQ29tcG9uZW50LFxuICAgIFwibnVtZXJpY1wiOiBOdW1lcmljRmlsdGVyQ2VsbENvbXBvbmVudCxcbiAgICBcInRleHRcIjogU3RyaW5nRmlsdGVyQ2VsbENvbXBvbmVudFxufVt0eXBlXSk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgRmlsdGVyQ2VsbEhvc3REaXJlY3RpdmUgPSBjbGFzcyBGaWx0ZXJDZWxsSG9zdERpcmVjdGl2ZSBleHRlbmRzIEZpbHRlckhvc3REaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKGhvc3QsIHJlc29sdmVyKSB7XG4gICAgICAgIHN1cGVyKGhvc3QsIHJlc29sdmVyKTtcbiAgICB9XG4gICAgY29tcG9uZW50VHlwZSgpIHtcbiAgICAgICAgaWYgKCFpc051bGxPckVtcHR5U3RyaW5nKHRoaXMuY29sdW1uLmZpbHRlcikpIHtcbiAgICAgICAgICAgIHJldHVybiBmaWx0ZXJDb21wb25lbnRGYWN0b3J5KHRoaXMuY29sdW1uLmZpbHRlcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFN0cmluZ0ZpbHRlckNlbGxDb21wb25lbnQ7XG4gICAgfVxufTtcbkZpbHRlckNlbGxIb3N0RGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9GaWx0ZXJDZWxsSG9zdF0nXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtWaWV3Q29udGFpbmVyUmVmLFxuICAgICAgICBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXJdKVxuXSwgRmlsdGVyQ2VsbEhvc3REaXJlY3RpdmUpO1xuXG5jb25zdCBJTlRFUk5BTF9DT01QT05FTlRTID0gW1xuICAgIEZpbHRlclJvd0NvbXBvbmVudCxcbiAgICBGaWx0ZXJDZWxsQ29tcG9uZW50LFxuICAgIEZpbHRlckNlbGxUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBTdHJpbmdGaWx0ZXJDZWxsQ29tcG9uZW50LFxuICAgIE51bWVyaWNGaWx0ZXJDZWxsQ29tcG9uZW50LFxuICAgIEF1dG9Db21wbGV0ZUZpbHRlckNlbGxDb21wb25lbnQsXG4gICAgQm9vbGVhbkZpbHRlckNlbGxDb21wb25lbnQsXG4gICAgRmlsdGVyQ2VsbEhvc3REaXJlY3RpdmUsXG4gICAgRmlsdGVyQ2VsbFdyYXBwZXJDb21wb25lbnQsXG4gICAgRGF0ZUZpbHRlckNlbGxDb21wb25lbnRcbl07XG5jb25zdCBFTlRSWV9DT01QT05FTlRTID0gW1xuICAgIFN0cmluZ0ZpbHRlckNlbGxDb21wb25lbnQsXG4gICAgTnVtZXJpY0ZpbHRlckNlbGxDb21wb25lbnQsXG4gICAgQm9vbGVhbkZpbHRlckNlbGxDb21wb25lbnQsXG4gICAgRGF0ZUZpbHRlckNlbGxDb21wb25lbnRcbl07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IFJvd0ZpbHRlck1vZHVsZSA9IGNsYXNzIFJvd0ZpbHRlck1vZHVsZSB7XG4gICAgc3RhdGljIGV4cG9ydHMoKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBGaWx0ZXJSb3dDb21wb25lbnQsXG4gICAgICAgICAgICBGaWx0ZXJDZWxsQ29tcG9uZW50LFxuICAgICAgICAgICAgRmlsdGVyQ2VsbFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICAgICAgRmlsdGVyQ2VsbE9wZXJhdG9yc0NvbXBvbmVudCxcbiAgICAgICAgICAgIFN0cmluZ0ZpbHRlckNlbGxDb21wb25lbnQsXG4gICAgICAgICAgICBOdW1lcmljRmlsdGVyQ2VsbENvbXBvbmVudCxcbiAgICAgICAgICAgIEF1dG9Db21wbGV0ZUZpbHRlckNlbGxDb21wb25lbnQsXG4gICAgICAgICAgICBCb29sZWFuRmlsdGVyQ2VsbENvbXBvbmVudCxcbiAgICAgICAgICAgIERhdGVGaWx0ZXJDZWxsQ29tcG9uZW50LFxuICAgICAgICAgICAgU2hhcmVkRmlsdGVyTW9kdWxlLmV4cG9ydHMoKVxuICAgICAgICBdO1xuICAgIH1cbn07XG5Sb3dGaWx0ZXJNb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICBOZ01vZHVsZSh7XG4gICAgICAgIGRlY2xhcmF0aW9uczogW0lOVEVSTkFMX0NPTVBPTkVOVFNdLFxuICAgICAgICBlbnRyeUNvbXBvbmVudHM6IEVOVFJZX0NPTVBPTkVOVFMsXG4gICAgICAgIGV4cG9ydHM6IFtJTlRFUk5BTF9DT01QT05FTlRTLCBTaGFyZWRGaWx0ZXJNb2R1bGVdLFxuICAgICAgICBpbXBvcnRzOiBbU2hhcmVkRmlsdGVyTW9kdWxlXVxuICAgIH0pXG5dLCBSb3dGaWx0ZXJNb2R1bGUpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IFBhZ2VySW5wdXREaXJlY3RpdmUgPSBjbGFzcyBQYWdlcklucHV0RGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3Rvcihob3N0LCByZW5kZXJlcikge1xuICAgICAgICB0aGlzLmhvc3QgPSBob3N0O1xuICAgICAgICB0aGlzLnJlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgfVxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAgICAgY29uc3QgaW5wdXRFbGVtZW50ID0gdGhpcy5ob3N0Lm51bWVyaWNJbnB1dC5uYXRpdmVFbGVtZW50O1xuICAgICAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKGlucHV0RWxlbWVudCwgJ2stcGFnZXItbmF2Jyk7XG4gICAgfVxufTtcblBhZ2VySW5wdXREaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1trZW5kb0dyaWRQYWdlcklucHV0XScgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtOdW1lcmljVGV4dEJveENvbXBvbmVudCxcbiAgICAgICAgUmVuZGVyZXIyXSlcbl0sIFBhZ2VySW5wdXREaXJlY3RpdmUpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IFBhZ2VyRHJvcERvd25MaXN0RGlyZWN0aXZlID0gY2xhc3MgUGFnZXJEcm9wRG93bkxpc3REaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKGhvc3QsIHJlbmRlcmVyKSB7XG4gICAgICAgIHRoaXMuaG9zdCA9IGhvc3Q7XG4gICAgICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICAgICAgdGhpcy5rZXlkb3duSGFuZGxlciA9IChlKSA9PiB7XG4gICAgICAgICAgICBpZiAoZS5rZXlDb2RlID09PSBLZXlzLkVzY2FwZSAmJiB0aGlzLmhvc3QuaXNPcGVuKSB7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICB0aGlzLmhvc3QudG9nZ2xlKGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgICAgICBjb25zdCB3cmFwcGVyRWxlbWVudCA9IHRoaXMuaG9zdC53cmFwcGVyLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3Mod3JhcHBlckVsZW1lbnQsICdrLXBhZ2VyLW5hdicpO1xuICAgICAgICB3cmFwcGVyRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5rZXlkb3duSGFuZGxlciwgdHJ1ZSk7XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLmhvc3Qud3JhcHBlci5uYXRpdmVFbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLmtleWRvd25IYW5kbGVyKTtcbiAgICB9XG59O1xuUGFnZXJEcm9wRG93bkxpc3REaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1trZW5kb0dyaWRQYWdlckRyb3BEb3duXScgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtEcm9wRG93bkxpc3RDb21wb25lbnQsXG4gICAgICAgIFJlbmRlcmVyMl0pXG5dLCBQYWdlckRyb3BEb3duTGlzdERpcmVjdGl2ZSk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBub3JtYWxpemVTZXR0aW5ncyA9ICh7IGJ1dHRvbkNvdW50ID0gMTAsIGluZm8gPSB0cnVlLCB0eXBlID0gJ251bWVyaWMnLCBwYWdlU2l6ZXMgPSBmYWxzZSwgcHJldmlvdXNOZXh0ID0gdHJ1ZSwgcmVzcG9uc2l2ZSA9IHRydWUsIHBvc2l0aW9uID0gJ2JvdHRvbScgfSkgPT4gKHtcbiAgICBidXR0b25Db3VudCxcbiAgICBpbmZvLFxuICAgIHBhZ2VTaXplczogcGFnZVNpemVzID09PSB0cnVlID8gWzUsIDEwLCAyMF0gOiBwYWdlU2l6ZXMsXG4gICAgcHJldmlvdXNOZXh0LFxuICAgIHR5cGUsXG4gICAgcmVzcG9uc2l2ZSxcbiAgICBwb3NpdGlvblxufSk7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3Qgbm9ybWFsaXplID0gKHNldHRpbmdzKSA9PiBub3JtYWxpemVTZXR0aW5ncyhzZXR0aW5ncyA9PT0gdHJ1ZSA/IHt9IDogc2V0dGluZ3MpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IFBhZ2VyQ29tcG9uZW50ID0gY2xhc3MgUGFnZXJDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHBhZ2VyQ29udGV4dCwgbmF2aWdhdGlvblNlcnZpY2UsIGVsZW1lbnQsIHJlbmRlcmVyLCB6b25lLCBsb2NhbGl6YXRpb25TZXJ2aWNlLCBjZWxsQ29udGV4dCwgZm9jdXNSb290LCBmb2N1c0dyb3VwKSB7XG4gICAgICAgIHRoaXMucGFnZXJDb250ZXh0ID0gcGFnZXJDb250ZXh0O1xuICAgICAgICB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlID0gbmF2aWdhdGlvblNlcnZpY2U7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICAgICAgdGhpcy56b25lID0gem9uZTtcbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb25TZXJ2aWNlID0gbG9jYWxpemF0aW9uU2VydmljZTtcbiAgICAgICAgdGhpcy5jZWxsQ29udGV4dCA9IGNlbGxDb250ZXh0O1xuICAgICAgICB0aGlzLmZvY3VzUm9vdCA9IGZvY3VzUm9vdDtcbiAgICAgICAgdGhpcy5mb2N1c0dyb3VwID0gZm9jdXNHcm91cDtcbiAgICAgICAgdGhpcy50b3RhbCA9IDA7XG4gICAgICAgIHRoaXMuc2tpcCA9IDE7XG4gICAgICAgIHRoaXMucGFnZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5wYWdlcldyYXBDbGFzcyA9IHRydWU7XG4gICAgICAgIHRoaXMuZ3JpZFBhZ2VyQ2xhc3MgPSB0cnVlO1xuICAgICAgICB0aGlzLndpZGdldENsYXNzID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5zZXR0aW5ncyA9IG5vcm1hbGl6ZSh7fSk7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucyA9IG5ldyBTdWJzY3JpcHRpb24oKTtcbiAgICAgICAgdGhpcy5fdGVtcGxhdGVDb250ZXh0ID0ge307XG4gICAgICAgIHRoaXMuX2lzRm9jdXNlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnJlc2l6ZUhhbmRsZXIgPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgICAgICBpZiAodGhpcy50ZW1wbGF0ZSB8fCAhZWxlbWVudCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHdpZHRoID0gZWxlbWVudC5vZmZzZXRXaWR0aDtcbiAgICAgICAgICAgIGlmICh3aWR0aCA8IFJFU1BPTlNJVkVfQlJFQUtQT0lOVF9NRURJVU0pIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZUNsYXNzKGVsZW1lbnQsICdrLXBhZ2VyLW1kJyk7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyhlbGVtZW50LCAnay1wYWdlci1zbScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAod2lkdGggPj0gUkVTUE9OU0lWRV9CUkVBS1BPSU5UX01FRElVTSAmJiB3aWR0aCA8IFJFU1BPTlNJVkVfQlJFQUtQT0lOVF9MQVJHRSkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3MoZWxlbWVudCwgJ2stcGFnZXItbWQnKTtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZUNsYXNzKGVsZW1lbnQsICdrLXBhZ2VyLXNtJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsZWFyUmVzcG9uc2l2ZUNsYXNzZXMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgc2V0IG9wdGlvbnModmFsdWUpIHtcbiAgICAgICAgdGhpcy5zZXR0aW5ncyA9IG5vcm1hbGl6ZSh2YWx1ZSk7XG4gICAgfVxuICAgIGdldCBpc0ZvY3VzZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pc0ZvY3VzZWQ7XG4gICAgfVxuICAgIGdldCBwYWdlckFyaWFMYWJlbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubmF2aWdhdGlvblNlcnZpY2UuZW5hYmxlZCA/IHRoaXMucGFnZXJMYWJlbCA6IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBwYWdlckxhYmVsKCkge1xuICAgICAgICBjb25zdCBsb2NhbGl6YXRpb25Nc2cgPSB0aGlzLmxvY2FsaXphdGlvblNlcnZpY2UuZ2V0KCdwYWdlckxhYmVsJykgfHwgJyc7XG4gICAgICAgIHJldHVybiByZXBsYWNlTWVzc2FnZVBsYWNlaG9sZGVyKHJlcGxhY2VNZXNzYWdlUGxhY2Vob2xkZXIobG9jYWxpemF0aW9uTXNnLCAnY3VycmVudFBhZ2UnLCB0aGlzLmN1cnJlbnRQYWdlLnRvU3RyaW5nKCkpLCAndG90YWxQYWdlcycsIHRoaXMudG90YWxQYWdlcy50b1N0cmluZygpKTtcbiAgICB9XG4gICAgZ2V0IGZvY3VzVHJhcFRhYkluZGV4KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mb2N1c0dyb3VwLmlzQWN0aXZlID8gJzAnIDogJy0xJztcbiAgICB9XG4gICAgb25Gb2N1c0luKGV2ZW50KSB7XG4gICAgICAgIGlmICh0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmVuYWJsZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IHNob3VsZEZvY3VzUGFnZXIgPSBldmVudC50YXJnZXQgPT09IHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50O1xuICAgICAgICAgICAgaWYgKHNob3VsZEZvY3VzUGFnZXIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9pc0ZvY3VzZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRoaXMuZm9jdXNSb290LmRlYWN0aXZhdGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuZm9jdXNSb290LmFjdGl2YXRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25Gb2N1c091dCgpIHtcbiAgICAgICAgaWYgKHRoaXMubmF2aWdhdGlvblNlcnZpY2UuZW5hYmxlZCkge1xuICAgICAgICAgICAgdGhpcy5faXNGb2N1c2VkID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25Fc2NhcGUoKSB7XG4gICAgICAgIGlmICh0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmVuYWJsZWQpIHtcbiAgICAgICAgICAgIHRoaXMuZm9jdXNSb290LmRlYWN0aXZhdGUoKTtcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25FbnRlcihldmVudCkge1xuICAgICAgICBpZiAodGhpcy5uYXZpZ2F0aW9uU2VydmljZS5lbmFibGVkICYmIGV2ZW50LnRhcmdldCA9PT0gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQpIHtcbiAgICAgICAgICAgIHRoaXMuZm9jdXNSb290LmFjdGl2YXRlKCk7XG4gICAgICAgICAgICB0aGlzLmZvY3VzRmlyc3RFbGVtZW50KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmF2aWdhdGVUb1ByZXZpb3VzUGFnZShlKSB7XG4gICAgICAgIGlmICh0aGlzLnNob3VsZFRyaWdnZXJQYWdlQ2hhbmdlKGUudGFyZ2V0LCB0aGlzLmN1cnJlbnRQYWdlID4gMSkpIHtcbiAgICAgICAgICAgIHRoaXMucGFnZXJDb250ZXh0LnByZXZQYWdlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmF2aWdhdGVUb05leHRQYWdlKGUpIHtcbiAgICAgICAgaWYgKHRoaXMuc2hvdWxkVHJpZ2dlclBhZ2VDaGFuZ2UoZS50YXJnZXQsIHRoaXMuY3VycmVudFBhZ2UgPCB0aGlzLnRvdGFsUGFnZXMpKSB7XG4gICAgICAgICAgICB0aGlzLnBhZ2VyQ29udGV4dC5uZXh0UGFnZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG5hdmlnYXRlVG9GaXJzdFBhZ2UoZSkge1xuICAgICAgICBpZiAodGhpcy5zaG91bGRUcmlnZ2VyUGFnZUNoYW5nZShlLnRhcmdldCwgdGhpcy5jdXJyZW50UGFnZSA+IDEpKSB7XG4gICAgICAgICAgICB0aGlzLnBhZ2VyQ29udGV4dC5jaGFuZ2VQYWdlKDApO1xuICAgICAgICB9XG4gICAgfVxuICAgIG5hdmlnYXRlVG9MYXN0UGFnZShlKSB7XG4gICAgICAgIGlmICh0aGlzLnNob3VsZFRyaWdnZXJQYWdlQ2hhbmdlKGUudGFyZ2V0LCB0aGlzLmN1cnJlbnRQYWdlIDwgdGhpcy50b3RhbFBhZ2VzKSkge1xuICAgICAgICAgICAgdGhpcy5wYWdlckNvbnRleHQuY2hhbmdlUGFnZSh0aGlzLnRvdGFsUGFnZXMgLSAxKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgdG90YWxQYWdlcygpIHtcbiAgICAgICAgcmV0dXJuIE1hdGguY2VpbCgodGhpcy50b3RhbCB8fCAwKSAvIHRoaXMucGFnZVNpemUpO1xuICAgIH1cbiAgICBnZXQgY3VycmVudFBhZ2UoKSB7XG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKCh0aGlzLnNraXAgfHwgMCkgLyB0aGlzLnBhZ2VTaXplKSArIDE7XG4gICAgfVxuICAgIGdldCB0ZW1wbGF0ZUNvbnRleHQoKSB7XG4gICAgICAgIGNvbnN0IGNvbnRleHQgPSB0aGlzLl90ZW1wbGF0ZUNvbnRleHQ7XG4gICAgICAgIGNvbnRleHQudG90YWxQYWdlcyA9IHRoaXMudG90YWxQYWdlcztcbiAgICAgICAgY29udGV4dC50b3RhbCA9IHRoaXMudG90YWw7XG4gICAgICAgIGNvbnRleHQuc2tpcCA9IHRoaXMuc2tpcDtcbiAgICAgICAgY29udGV4dC5wYWdlU2l6ZSA9IHRoaXMucGFnZVNpemU7XG4gICAgICAgIGNvbnRleHQuY3VycmVudFBhZ2UgPSB0aGlzLmN1cnJlbnRQYWdlO1xuICAgICAgICByZXR1cm4gY29udGV4dDtcbiAgICB9XG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQodGhpcy5wYWdlckNvbnRleHQucGFnZUNoYW5nZS5zdWJzY3JpYmUodGhpcy5jaGFuZ2VQYWdlLmJpbmQodGhpcykpKTtcbiAgICAgICAgaWYgKHRoaXMubmF2aWdhdGlvblNlcnZpY2UuZW5hYmxlZCkge1xuICAgICAgICAgICAgdGhpcy5mb2N1c1Jvb3QuZGVhY3RpdmF0ZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG5nRG9DaGVjaygpIHtcbiAgICAgICAgdGhpcy51cGRhdGVDZWxsQ29udGV4dCgpO1xuICAgIH1cbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzKSB7XG4gICAgICAgIGlmIChhbnlDaGFuZ2VkKFsncGFnZVNpemUnLCAnc2tpcCcsICd0b3RhbCddLCBjaGFuZ2VzLCBmYWxzZSkpIHtcbiAgICAgICAgICAgIHRoaXMucGFnZXJDb250ZXh0Lm5vdGlmeUNoYW5nZXMoe1xuICAgICAgICAgICAgICAgIHBhZ2VTaXplOiB0aGlzLnBhZ2VTaXplLFxuICAgICAgICAgICAgICAgIHNraXA6IHRoaXMuc2tpcCxcbiAgICAgICAgICAgICAgICB0b3RhbDogdGhpcy50b3RhbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNoYW5nZXMudGVtcGxhdGUpIHtcbiAgICAgICAgICAgIGNoYW5nZXMudGVtcGxhdGUuY3VycmVudFZhbHVlID8gdGhpcy5jbGVhclJlc3BvbnNpdmVDbGFzc2VzKCkgOiB0aGlzLnJlc2l6ZUhhbmRsZXIoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2hhbmdlcy5vcHRpb25zKSB7XG4gICAgICAgICAgICB0aGlzLnNldHRpbmdzLnJlc3BvbnNpdmUgPyB0aGlzLnJlc2l6ZUhhbmRsZXIoKSA6IHRoaXMuY2xlYXJSZXNwb25zaXZlQ2xhc3NlcygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5zdWJzY3JpcHRpb25zKSB7XG4gICAgICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMudW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjaGFuZ2VQYWdlKGV2ZW50KSB7XG4gICAgICAgIHRoaXMucGFnZUNoYW5nZS5lbWl0KGV2ZW50KTtcbiAgICB9XG4gICAgb25Jbm5lckZvY3VzSW4oZXZlbnQsIHBvc2l0aW9uKSB7XG4gICAgICAgIHRoaXMuem9uZS5vblN0YWJsZS5waXBlKHRha2UoMSkpLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICBpZiAocG9zaXRpb24gPT09ICdzdGFydCcpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQucmVsYXRlZFRhcmdldCA9PT0gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mb2N1c0ZpcnN0RWxlbWVudCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mb2N1c0xhc3RFbGVtZW50KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5mb2N1c0ZpcnN0RWxlbWVudCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY2xlYXJSZXNwb25zaXZlQ2xhc3NlcygpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50O1xuICAgICAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZUNsYXNzKGVsZW1lbnQsICdrLXBhZ2VyLXNtJyk7XG4gICAgICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3MoZWxlbWVudCwgJ2stcGFnZXItbWQnKTtcbiAgICB9XG4gICAgc2hvdWxkVHJpZ2dlclBhZ2VDaGFuZ2UodGFyZ2V0LCBjb25kaXRpb24pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubmF2aWdhdGlvblNlcnZpY2UuZW5hYmxlZCAmJlxuICAgICAgICAgICAgdGFyZ2V0ID09PSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCAmJlxuICAgICAgICAgICAgY29uZGl0aW9uO1xuICAgIH1cbiAgICBmb2N1c0ZpcnN0RWxlbWVudCgpIHtcbiAgICAgICAgY29uc3QgZmlyc3QgPSBmaW5kRm9jdXNhYmxlQ2hpbGQodGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsIHRydWUpO1xuICAgICAgICBpZiAoZmlyc3QpIHtcbiAgICAgICAgICAgIGZpcnN0LmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9jdXNMYXN0RWxlbWVudCgpIHtcbiAgICAgICAgY29uc3QgbGFzdCA9IGZpbmRMYXN0Rm9jdXNhYmxlQ2hpbGQodGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsIHRydWUpO1xuICAgICAgICBpZiAobGFzdCkge1xuICAgICAgICAgICAgbGFzdC5mb2N1cygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHVwZGF0ZUNlbGxDb250ZXh0KCkge1xuICAgICAgICBpZiAodGhpcy5jZWxsQ29udGV4dCkge1xuICAgICAgICAgICAgdGhpcy5jZWxsQ29udGV4dC5mb2N1c0dyb3VwID0gdGhpcy5mb2N1c0dyb3VwO1xuICAgICAgICB9XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIFBhZ2VyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ0b3RhbFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgUGFnZXJDb21wb25lbnQucHJvdG90eXBlLCBcInNraXBcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIFBhZ2VyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJwYWdlU2l6ZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pXG5dLCBQYWdlckNvbXBvbmVudC5wcm90b3R5cGUsIFwib3B0aW9uc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFBhZ2VyVGVtcGxhdGVEaXJlY3RpdmUpXG5dLCBQYWdlckNvbXBvbmVudC5wcm90b3R5cGUsIFwidGVtcGxhdGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBQYWdlckNvbXBvbmVudC5wcm90b3R5cGUsIFwicGFnZUNoYW5nZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ2NsYXNzLmstcGFnZXItd3JhcCcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgUGFnZXJDb21wb25lbnQucHJvdG90eXBlLCBcInBhZ2VyV3JhcENsYXNzXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnY2xhc3Muay1ncmlkLXBhZ2VyJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBQYWdlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZ3JpZFBhZ2VyQ2xhc3NcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLXdpZGdldCcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgUGFnZXJDb21wb25lbnQucHJvdG90eXBlLCBcIndpZGdldENsYXNzXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnY2xhc3Muay1zdGF0ZS1mb2N1c2VkJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIFBhZ2VyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpc0ZvY3VzZWRcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnYXR0ci5hcmlhLWxhYmVsJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgUGFnZXJDb21wb25lbnQucHJvdG90eXBlLCBcInBhZ2VyQXJpYUxhYmVsXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdExpc3RlbmVyKCdmb2N1c2luJywgWyckZXZlbnQnXSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZ1bmN0aW9uKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cmV0dXJudHlwZVwiLCB2b2lkIDApXG5dLCBQYWdlckNvbXBvbmVudC5wcm90b3R5cGUsIFwib25Gb2N1c0luXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdExpc3RlbmVyKCdmb2N1c291dCcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBGdW5jdGlvbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnJldHVybnR5cGVcIiwgdm9pZCAwKVxuXSwgUGFnZXJDb21wb25lbnQucHJvdG90eXBlLCBcIm9uRm9jdXNPdXRcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0TGlzdGVuZXIoJ2tleWRvd24uZXNjYXBlJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZ1bmN0aW9uKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cmV0dXJudHlwZVwiLCB2b2lkIDApXG5dLCBQYWdlckNvbXBvbmVudC5wcm90b3R5cGUsIFwib25Fc2NhcGVcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0TGlzdGVuZXIoJ2tleWRvd24uZW50ZXInLCBbJyRldmVudCddKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpyZXR1cm50eXBlXCIsIHZvaWQgMClcbl0sIFBhZ2VyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJvbkVudGVyXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdExpc3RlbmVyKCdrZXlkb3duLmFycm93bGVmdCcsIFsnJGV2ZW50J10pLFxuICAgIEhvc3RMaXN0ZW5lcigna2V5ZG93bi5wYWdldXAnLCBbJyRldmVudCddKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpyZXR1cm50eXBlXCIsIHZvaWQgMClcbl0sIFBhZ2VyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJuYXZpZ2F0ZVRvUHJldmlvdXNQYWdlXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdExpc3RlbmVyKCdrZXlkb3duLmFycm93cmlnaHQnLCBbJyRldmVudCddKSxcbiAgICBIb3N0TGlzdGVuZXIoJ2tleWRvd24ucGFnZWRvd24nLCBbJyRldmVudCddKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpyZXR1cm50eXBlXCIsIHZvaWQgMClcbl0sIFBhZ2VyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJuYXZpZ2F0ZVRvTmV4dFBhZ2VcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0TGlzdGVuZXIoJ2tleWRvd24uaG9tZScsIFsnJGV2ZW50J10pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBGdW5jdGlvbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnJldHVybnR5cGVcIiwgdm9pZCAwKVxuXSwgUGFnZXJDb21wb25lbnQucHJvdG90eXBlLCBcIm5hdmlnYXRlVG9GaXJzdFBhZ2VcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0TGlzdGVuZXIoJ2tleWRvd24uZW5kJywgWyckZXZlbnQnXSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZ1bmN0aW9uKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cmV0dXJudHlwZVwiLCB2b2lkIDApXG5dLCBQYWdlckNvbXBvbmVudC5wcm90b3R5cGUsIFwibmF2aWdhdGVUb0xhc3RQYWdlXCIsIG51bGwpO1xuUGFnZXJDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLXBhZ2VyJyxcbiAgICAgICAgcHJvdmlkZXJzOiBbe1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IEZPQ1VTX1JPT1RfQUNUSVZFLFxuICAgICAgICAgICAgICAgIHVzZVZhbHVlOiB0cnVlXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgcHJvdmlkZTogRm9jdXNSb290LFxuICAgICAgICAgICAgICAgIGRlcHM6IFtGT0NVU19ST09UX0FDVElWRV0sXG4gICAgICAgICAgICAgICAgdXNlQ2xhc3M6IEZvY3VzUm9vdFxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IEZvY3VzR3JvdXAsXG4gICAgICAgICAgICAgICAgZGVwczogW0ZvY3VzUm9vdF0sXG4gICAgICAgICAgICAgICAgdXNlQ2xhc3M6IEZvY3VzR3JvdXBcbiAgICAgICAgICAgIH1dLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8ZGl2XG4gICAgICAgICAgICAqbmdJZj1cIm5hdmlnYXRpb25TZXJ2aWNlLmVuYWJsZWRcIlxuICAgICAgICAgICAgY2xhc3M9XCJrLXNyLW9ubHlcIlxuICAgICAgICAgICAgW3RhYmluZGV4XT1cImZvY3VzVHJhcFRhYkluZGV4XCJcbiAgICAgICAgICAgIFthdHRyLmFyaWEtaGlkZGVuXT1cInRydWVcIlxuICAgICAgICAgICAgKGZvY3VzaW4pPVwib25Jbm5lckZvY3VzSW4oJGV2ZW50LCAnc3RhcnQnKVwiPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPG5nLWNvbnRhaW5lclxuICAgICAgICAgICAgKm5nSWY9XCJ0ZW1wbGF0ZT8udGVtcGxhdGVSZWZcIlxuICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRdPVwidGVtcGxhdGUudGVtcGxhdGVSZWZcIlxuICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cInRlbXBsYXRlQ29udGV4dFwiPlxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiF0ZW1wbGF0ZT8udGVtcGxhdGVSZWZcIj5cbiAgICAgICAgICAgIDxrZW5kby1wYWdlci1wcmV2LWJ1dHRvbnMgKm5nSWY9XCJzZXR0aW5ncy5wcmV2aW91c05leHRcIj48L2tlbmRvLXBhZ2VyLXByZXYtYnV0dG9ucz5cbiAgICAgICAgICAgIDxrZW5kby1wYWdlci1udW1lcmljLWJ1dHRvbnNcbiAgICAgICAgICAgICAgICAqbmdJZj1cInNldHRpbmdzLnR5cGUgPT09ICdudW1lcmljJ1wiXG4gICAgICAgICAgICAgICAgW2J1dHRvbkNvdW50XT1cInNldHRpbmdzLmJ1dHRvbkNvdW50XCI+XG4gICAgICAgICAgICA8L2tlbmRvLXBhZ2VyLW51bWVyaWMtYnV0dG9ucz5cbiAgICAgICAgICAgIDxrZW5kby1wYWdlci1pbnB1dCAqbmdJZj1cInNldHRpbmdzLnR5cGUgPT09ICdpbnB1dCdcIj48L2tlbmRvLXBhZ2VyLWlucHV0PlxuICAgICAgICAgICAgPGtlbmRvLXBhZ2VyLW5leHQtYnV0dG9ucyAqbmdJZj1cInNldHRpbmdzLnByZXZpb3VzTmV4dFwiPjwva2VuZG8tcGFnZXItbmV4dC1idXR0b25zPlxuICAgICAgICAgICAgPGtlbmRvLXBhZ2VyLWluZm8gKm5nSWY9J3NldHRpbmdzLmluZm8nPjwva2VuZG8tcGFnZXItaW5mbz5cbiAgICAgICAgICAgIDxrZW5kby1wYWdlci1wYWdlLXNpemVzXG4gICAgICAgICAgICAgICAgKm5nSWY9XCJzZXR0aW5ncy5wYWdlU2l6ZXNcIlxuICAgICAgICAgICAgICAgIFtwYWdlU2l6ZXNdPVwic2V0dGluZ3MucGFnZVNpemVzXCJcbiAgICAgICAgICAgICAgICAjcGFnZVNpemVzXG4gICAgICAgICAgICA+PC9rZW5kby1wYWdlci1wYWdlLXNpemVzPlxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPGRpdlxuICAgICAgICAgICAgKm5nSWY9XCJuYXZpZ2F0aW9uU2VydmljZS5lbmFibGVkXCJcbiAgICAgICAgICAgIGNsYXNzPVwiay1zci1vbmx5XCJcbiAgICAgICAgICAgIFt0YWJpbmRleF09XCJmb2N1c1RyYXBUYWJJbmRleFwiXG4gICAgICAgICAgICBbYXR0ci5hcmlhLWhpZGRlbl09XCJ0cnVlXCJcbiAgICAgICAgICAgIChmb2N1c2luKT1cIm9uSW5uZXJGb2N1c0luKCRldmVudCwgJ2VuZCcpXCI+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8a2VuZG8tcmVzaXplLXNlbnNvciAqbmdJZj1cInNldHRpbmdzLnJlc3BvbnNpdmVcIiAocmVzaXplKT1cInJlc2l6ZUhhbmRsZXIoKVwiPjwva2VuZG8tcmVzaXplLXNlbnNvcj5cbiAgYFxuICAgIH0pLFxuICAgIF9fcGFyYW0oNiwgT3B0aW9uYWwoKSksIF9fcGFyYW0oNiwgSW5qZWN0KENFTExfQ09OVEVYVCkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbUGFnZXJDb250ZXh0U2VydmljZSxcbiAgICAgICAgTmF2aWdhdGlvblNlcnZpY2UsXG4gICAgICAgIEVsZW1lbnRSZWYsXG4gICAgICAgIFJlbmRlcmVyMixcbiAgICAgICAgTmdab25lLFxuICAgICAgICBMb2NhbGl6YXRpb25TZXJ2aWNlLCBPYmplY3QsIEZvY3VzUm9vdCxcbiAgICAgICAgRm9jdXNHcm91cF0pXG5dLCBQYWdlckNvbXBvbmVudCk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBQYWdlckVsZW1lbnRDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbiwgcGFnZXJDb250ZXh0LCBjZCkge1xuICAgICAgICB0aGlzLmxvY2FsaXphdGlvbiA9IGxvY2FsaXphdGlvbjtcbiAgICAgICAgdGhpcy5wYWdlckNvbnRleHQgPSBwYWdlckNvbnRleHQ7XG4gICAgICAgIHRoaXMuY2QgPSBjZDtcbiAgICAgICAgdGhpcy50b3RhbCA9IHRoaXMucGFnZXJDb250ZXh0LnRvdGFsO1xuICAgICAgICB0aGlzLnNraXAgPSB0aGlzLnBhZ2VyQ29udGV4dC5za2lwO1xuICAgICAgICB0aGlzLnBhZ2VTaXplID0gdGhpcy5wYWdlckNvbnRleHQucGFnZVNpemU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKlxuICAgICAqIEByZWFkb25seVxuICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICogQG1lbWJlck9mIFBhZ2VyRWxlbWVudENvbXBvbmVudFxuICAgICAqL1xuICAgIGdldCBjdXJyZW50UGFnZSgpIHtcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoKHRoaXMuc2tpcCB8fCAwKSAvIHRoaXMucGFnZVNpemUpICsgMTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqXG4gICAgICogQHJlYWRvbmx5XG4gICAgICogQHR5cGUge251bWJlcn1cbiAgICAgKiBAbWVtYmVyT2YgUGFnZXJFbGVtZW50Q29tcG9uZW50XG4gICAgICovXG4gICAgZ2V0IHRvdGFsUGFnZXMoKSB7XG4gICAgICAgIHJldHVybiBNYXRoLmNlaWwoKHRoaXMudG90YWwgfHwgMCkgLyB0aGlzLnBhZ2VTaXplKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICpcbiAgICAgKiBAbWVtYmVyT2YgUGFnZXJFbGVtZW50Q29tcG9uZW50XG4gICAgICovXG4gICAgdGV4dEZvcihrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxpemF0aW9uLmdldChrZXkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gcGFnZVxuICAgICAqXG4gICAgICogQG1lbWJlck9mIFBhZ2VyRWxlbWVudENvbXBvbmVudFxuICAgICAqL1xuICAgIGNoYW5nZVBhZ2UocGFnZSkge1xuICAgICAgICB0aGlzLnBhZ2VyQ29udGV4dC5jaGFuZ2VQYWdlKHBhZ2UpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKlxuICAgICAqIEBtZW1iZXJPZiBQYWdlckVsZW1lbnRDb21wb25lbnRcbiAgICAgKi9cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gdGhpcy5wYWdlckNvbnRleHQuY2hhbmdlcy5zdWJzY3JpYmUodGhpcy5vbkNoYW5nZXMuYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQodGhpcy5sb2NhbGl6YXRpb24uY2hhbmdlcy5zdWJzY3JpYmUoKCkgPT4gdGhpcy5jZC5tYXJrRm9yQ2hlY2soKSkpO1xuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgaWYgKHRoaXMuc3Vic2NyaXB0aW9ucykge1xuICAgICAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogRGlzcGxheXMgYnV0dG9ucyBmb3IgbmF2aWdhdGluZyB0byB0aGUgZmlyc3QgYW5kIHRvIHRoZSBwcmV2aW91cyBwYWdlIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgcGFnaW5nX2dyaWQgJX0jdG9jLXBhZ2VyLXRlbXBsYXRlcykpLlxuICovXG5sZXQgUGFnZXJQcmV2QnV0dG9uc0NvbXBvbmVudCA9IGNsYXNzIFBhZ2VyUHJldkJ1dHRvbnNDb21wb25lbnQgZXh0ZW5kcyBQYWdlckVsZW1lbnRDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbiwgcGFnZXJDb250ZXh0LCBjZCwgbmF2aWdhdGlvblNlcnZpY2UpIHtcbiAgICAgICAgc3VwZXIobG9jYWxpemF0aW9uLCBwYWdlckNvbnRleHQsIGNkKTtcbiAgICAgICAgdGhpcy5uYXZpZ2F0aW9uU2VydmljZSA9IG5hdmlnYXRpb25TZXJ2aWNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICpcbiAgICAgKiBAcmVhZG9ubHlcbiAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgKiBAbWVtYmVyT2YgUGFnZXJQcmV2QnV0dG9uc0NvbXBvbmVudFxuICAgICAqL1xuICAgIGdldCBkaXNhYmxlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY3VycmVudFBhZ2UgPT09IDEgfHwgIXRoaXMudG90YWw7XG4gICAgfVxuICAgIG9uQ2hhbmdlcyh7IHRvdGFsLCBza2lwLCBwYWdlU2l6ZSB9KSB7XG4gICAgICAgIHRoaXMudG90YWwgPSB0b3RhbDtcbiAgICAgICAgdGhpcy5za2lwID0gc2tpcDtcbiAgICAgICAgdGhpcy5wYWdlU2l6ZSA9IHBhZ2VTaXplO1xuICAgICAgICB0aGlzLmNkLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbn07XG5QYWdlclByZXZCdXR0b25zQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tcGFnZXItcHJldi1idXR0b25zJyxcbiAgICAgICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPHNwYW5cbiAgICAgICAgICAgIFtrZW5kb0dyaWRGb2N1c2FibGVdPVwiIWRpc2FibGVkXCJcbiAgICAgICAgICAgIFt0aXRsZV09XCJ0ZXh0Rm9yKCdwYWdlckZpcnN0UGFnZScpXCJcbiAgICAgICAgICAgIChjbGljayk9XCJjdXJyZW50UGFnZSAhPT0gMSA/IGNoYW5nZVBhZ2UoMCkgOiBmYWxzZVwiXG4gICAgICAgICAgICAoa2V5ZG93bi5lbnRlcik9XCJjdXJyZW50UGFnZSAhPT0gMSA/IGNoYW5nZVBhZ2UoMCkgOiBmYWxzZVwiXG4gICAgICAgICAgICBbbmdDbGFzc109XCJ7XG4gICAgICAgICAgICAgICAgJ2stbGluayc6IHRydWUsXG4gICAgICAgICAgICAgICAgJ2stcGFnZXItbmF2JzogdHJ1ZSxcbiAgICAgICAgICAgICAgICAnay1zdGF0ZS1kaXNhYmxlZCc6IGRpc2FibGVkLFxuICAgICAgICAgICAgICAgICdrLXBhZ2VyLWZpcnN0JzogdHJ1ZVxuICAgICAgICAgICAgfVwiPlxuICAgICAgICAgICAgPHNwYW4gW2F0dHIuYXJpYS1sYWJlbF09XCJ0ZXh0Rm9yKCdwYWdlckZpcnN0UGFnZScpXCJcbiAgICAgICAgICAgICAgICBbbmdDbGFzc109XCJ7XG4gICAgICAgICAgICAgICAgICAgICdrLWljb24nOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAnay1pLXNlZWstdyc6IHRydWVcbiAgICAgICAgICAgICAgICB9XCI+XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPHNwYW5cbiAgICAgICAgICAgIFtrZW5kb0dyaWRGb2N1c2FibGVdPVwiIWRpc2FibGVkXCJcbiAgICAgICAgICAgIFt0aXRsZV09XCJ0ZXh0Rm9yKCdwYWdlclByZXZpb3VzUGFnZScpXCJcbiAgICAgICAgICAgIChjbGljayk9XCJjdXJyZW50UGFnZSAhPT0gMSA/IGNoYW5nZVBhZ2UoY3VycmVudFBhZ2UtMikgOiBmYWxzZVwiXG4gICAgICAgICAgICAoa2V5ZG93bi5lbnRlcik9XCJjdXJyZW50UGFnZSAhPT0gMSA/IGNoYW5nZVBhZ2UoY3VycmVudFBhZ2UtMikgOiBmYWxzZVwiXG4gICAgICAgICAgICBbbmdDbGFzc109XCJ7XG4gICAgICAgICAgICAgICAgJ2stbGluayc6IHRydWUsXG4gICAgICAgICAgICAgICAgJ2stcGFnZXItbmF2JzogdHJ1ZSxcbiAgICAgICAgICAgICAgICAnay1zdGF0ZS1kaXNhYmxlZCc6IGRpc2FibGVkLFxuICAgICAgICAgICAgICAgICcnOiB0cnVlXG4gICAgICAgICAgICB9XCI+XG4gICAgICAgICAgICA8c3BhbiBbYXR0ci5hcmlhLWxhYmVsXT1cInRleHRGb3IoJ3BhZ2VyUHJldmlvdXNQYWdlJylcIlxuICAgICAgICAgICAgICAgIFtuZ0NsYXNzXT1cIntcbiAgICAgICAgICAgICAgICAgICAgJ2staWNvbic6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICdrLWktYXJyb3ctdyc6IHRydWVcbiAgICAgICAgICAgICAgICB9XCI+XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvc3Bhbj5cbiAgICBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBQYWdlckNvbnRleHRTZXJ2aWNlLFxuICAgICAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICAgICAgTmF2aWdhdGlvblNlcnZpY2VdKVxuXSwgUGFnZXJQcmV2QnV0dG9uc0NvbXBvbmVudCk7XG5cbi8qKlxuICogRGlzcGxheXMgYnV0dG9ucyBmb3IgbmF2aWdhdGluZyB0byB0aGUgbmV4dCBhbmQgdG8gdGhlIGxhc3QgcGFnZSAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIHBhZ2luZ19ncmlkICV9I3RvYy1wYWdlci10ZW1wbGF0ZSkpLlxuICovXG5sZXQgUGFnZXJOZXh0QnV0dG9uc0NvbXBvbmVudCA9IGNsYXNzIFBhZ2VyTmV4dEJ1dHRvbnNDb21wb25lbnQgZXh0ZW5kcyBQYWdlckVsZW1lbnRDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbiwgcGFnZXJDb250ZXh0LCBjZCwgbmF2aWdhdGlvblNlcnZpY2UpIHtcbiAgICAgICAgc3VwZXIobG9jYWxpemF0aW9uLCBwYWdlckNvbnRleHQsIGNkKTtcbiAgICAgICAgdGhpcy5uYXZpZ2F0aW9uU2VydmljZSA9IG5hdmlnYXRpb25TZXJ2aWNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICpcbiAgICAgKiBAcmVhZG9ubHlcbiAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgKiBAbWVtYmVyT2YgUGFnZXJOZXh0QnV0dG9uc0NvbXBvbmVudFxuICAgICAqL1xuICAgIGdldCBkaXNhYmxlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY3VycmVudFBhZ2UgPT09IHRoaXMudG90YWxQYWdlcyB8fCAhdGhpcy50b3RhbDtcbiAgICB9XG4gICAgb25DaGFuZ2VzKHsgdG90YWwsIHNraXAsIHBhZ2VTaXplIH0pIHtcbiAgICAgICAgdGhpcy50b3RhbCA9IHRvdGFsO1xuICAgICAgICB0aGlzLnNraXAgPSBza2lwO1xuICAgICAgICB0aGlzLnBhZ2VTaXplID0gcGFnZVNpemU7XG4gICAgICAgIHRoaXMuY2QubWFya0ZvckNoZWNrKCk7XG4gICAgfVxufTtcblBhZ2VyTmV4dEJ1dHRvbnNDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1wYWdlci1uZXh0LWJ1dHRvbnMnLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8c3BhblxuICAgICAgICAgICAgW2tlbmRvR3JpZEZvY3VzYWJsZV09XCIhZGlzYWJsZWRcIlxuICAgICAgICAgICAgdGFiaW5kZXg9XCIwXCJcbiAgICAgICAgICAgIFt0aXRsZV09XCJ0ZXh0Rm9yKCdwYWdlck5leHRQYWdlJylcIlxuICAgICAgICAgICAgKGNsaWNrKT1cImN1cnJlbnRQYWdlICE9PSB0b3RhbFBhZ2VzID8gY2hhbmdlUGFnZShjdXJyZW50UGFnZSkgOiBmYWxzZVwiXG4gICAgICAgICAgICAoa2V5ZG93bi5lbnRlcik9XCJjdXJyZW50UGFnZSAhPT0gdG90YWxQYWdlcyA/IGNoYW5nZVBhZ2UoY3VycmVudFBhZ2UpIDogZmFsc2VcIlxuICAgICAgICAgICAgW25nQ2xhc3NdPVwie1xuICAgICAgICAgICAgICAgICdrLWxpbmsnOiB0cnVlLFxuICAgICAgICAgICAgICAgICdrLXBhZ2VyLW5hdic6IHRydWUsXG4gICAgICAgICAgICAgICAgJ2stc3RhdGUtZGlzYWJsZWQnOiBkaXNhYmxlZCxcbiAgICAgICAgICAgICAgICAnJzogdHJ1ZVxuICAgICAgICAgICAgfVwiPlxuICAgICAgICAgICAgPHNwYW4gW2F0dHIuYXJpYS1sYWJlbF09XCJ0ZXh0Rm9yKCdwYWdlck5leHRQYWdlJylcIlxuICAgICAgICAgICAgICAgIFtuZ0NsYXNzXT1cIntcbiAgICAgICAgICAgICAgICAgICAgJ2staWNvbic6dHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgJ2staS1hcnJvdy1lJzogdHJ1ZVxuICAgICAgICAgICAgICAgIH1cIj5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICA8c3BhblxuICAgICAgICAgICAgW2tlbmRvR3JpZEZvY3VzYWJsZV09XCIhZGlzYWJsZWRcIlxuICAgICAgICAgICAgdGFiaW5kZXg9XCIwXCJcbiAgICAgICAgICAgIFt0aXRsZV09XCJ0ZXh0Rm9yKCdwYWdlckxhc3RQYWdlJylcIlxuICAgICAgICAgICAgKGNsaWNrKT1cImN1cnJlbnRQYWdlICE9PSB0b3RhbFBhZ2VzID8gY2hhbmdlUGFnZSh0b3RhbFBhZ2VzLTEpIDogZmFsc2VcIlxuICAgICAgICAgICAgKGtleWRvd24uZW50ZXIpPVwiY3VycmVudFBhZ2UgIT09IHRvdGFsUGFnZXMgPyBjaGFuZ2VQYWdlKHRvdGFsUGFnZXMtMSkgOiBmYWxzZVwiXG4gICAgICAgICAgICBbbmdDbGFzc109XCJ7XG4gICAgICAgICAgICAgICAgJ2stbGluayc6IHRydWUsXG4gICAgICAgICAgICAgICAgJ2stcGFnZXItbmF2JzogdHJ1ZSxcbiAgICAgICAgICAgICAgICAnay1zdGF0ZS1kaXNhYmxlZCc6IGRpc2FibGVkLFxuICAgICAgICAgICAgICAgICdrLXBhZ2VyLWxhc3QnOiB0cnVlXG4gICAgICAgICAgICB9XCI+XG4gICAgICAgICAgICA8c3BhbiBbYXR0ci5hcmlhLWxhYmVsXT1cInRleHRGb3IoJ3BhZ2VyTGFzdFBhZ2UnKVwiXG4gICAgICAgICAgICAgICAgW25nQ2xhc3NdPVwie1xuICAgICAgICAgICAgICAgICAgICAnay1pY29uJzp0cnVlLFxuICAgICAgICAgICAgICAgICAgICAnay1pLXNlZWstZSc6IHRydWVcbiAgICAgICAgICAgICAgICB9XCI+XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvc3Bhbj5cbiAgICBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBQYWdlckNvbnRleHRTZXJ2aWNlLFxuICAgICAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICAgICAgTmF2aWdhdGlvblNlcnZpY2VdKVxuXSwgUGFnZXJOZXh0QnV0dG9uc0NvbXBvbmVudCk7XG5cbi8qKlxuICogRGlzcGxheXMgbnVtZXJpYyBidXR0b25zIHRvIGVuYWJsZSBuYXZpZ2F0aW9uIGJldHdlZW4gdGhlIHBhZ2VzLlxuICovXG5sZXQgUGFnZXJOdW1lcmljQnV0dG9uc0NvbXBvbmVudCA9IGNsYXNzIFBhZ2VyTnVtZXJpY0J1dHRvbnNDb21wb25lbnQgZXh0ZW5kcyBQYWdlckVsZW1lbnRDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbiwgY2QsIHBhZ2VyQ29udGV4dCkge1xuICAgICAgICBzdXBlcihsb2NhbGl6YXRpb24sIHBhZ2VyQ29udGV4dCwgY2QpO1xuICAgICAgICB0aGlzLnBhZ2VyQ29udGV4dCA9IHBhZ2VyQ29udGV4dDtcbiAgICAgICAgdGhpcy5udW1iZXJzV3JhcENsYXNzID0gdHJ1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqXG4gICAgICogQHJlYWRvbmx5XG4gICAgICogQHR5cGUge251bWJlcltdfVxuICAgICAqIEBtZW1iZXJPZiBQYWdlck51bWVyaWNCdXR0b25zQ29tcG9uZW50XG4gICAgICovXG4gICAgZ2V0IGJ1dHRvbnMoKSB7XG4gICAgICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaWR4ID0gdGhpcy5zdGFydDsgaWR4IDw9IHRoaXMuZW5kOyBpZHgrKykge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goaWR4KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGVuZCgpIHtcbiAgICAgICAgcmV0dXJuIE1hdGgubWluKCh0aGlzLnN0YXJ0ICsgdGhpcy5idXR0b25Db3VudCkgLSAxLCB0aGlzLnRvdGFsUGFnZXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IHN0YXJ0KCkge1xuICAgICAgICBjb25zdCBwYWdlID0gdGhpcy5jdXJyZW50UGFnZTtcbiAgICAgICAgY29uc3QgYnV0dG9uQ291bnQgPSB0aGlzLmJ1dHRvbkNvdW50O1xuICAgICAgICBpZiAocGFnZSA+IGJ1dHRvbkNvdW50KSB7XG4gICAgICAgICAgICBjb25zdCByZW1pbmRlciA9IChwYWdlICUgYnV0dG9uQ291bnQpO1xuICAgICAgICAgICAgcmV0dXJuIChyZW1pbmRlciA9PT0gMCkgPyAocGFnZSAtIGJ1dHRvbkNvdW50KSArIDEgOiAocGFnZSAtIHJlbWluZGVyKSArIDE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBwYWdlTGFiZWwobnVtKSB7XG4gICAgICAgIGNvbnN0IHBhZ2VUZXh0ID0gdGhpcy50ZXh0Rm9yKCdwYWdlclBhZ2UnKTtcbiAgICAgICAgaWYgKHBhZ2VUZXh0KSB7XG4gICAgICAgICAgICByZXR1cm4gcGFnZVRleHQgKyAnICcgKyBudW07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bS50b1N0cmluZygpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgb25TZWxlY3RDaGFuZ2UoZSkge1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBlLnRhcmdldDtcbiAgICAgICAgY29uc3QgdmFsdWVBc051bWJlciA9IE51bWJlcih0YXJnZXQudmFsdWUpO1xuICAgICAgICBpZiAoIU51bWJlci5pc05hTih2YWx1ZUFzTnVtYmVyKSkge1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VQYWdlKHZhbHVlQXNOdW1iZXIgLSAxKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0YXJnZXQudmFsdWUgPT09ICdwcmV2aW91c0J1dHRvbnMnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VQYWdlKHRoaXMuc3RhcnQgLSAyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlUGFnZSh0aGlzLmVuZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25DaGFuZ2VzKHsgdG90YWwsIHNraXAsIHBhZ2VTaXplIH0pIHtcbiAgICAgICAgdGhpcy50b3RhbCA9IHRvdGFsO1xuICAgICAgICB0aGlzLnNraXAgPSBza2lwO1xuICAgICAgICB0aGlzLnBhZ2VTaXplID0gcGFnZVNpemU7XG4gICAgICAgIHRoaXMuY2QubWFya0ZvckNoZWNrKCk7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLXBhZ2VyLW51bWJlcnMtd3JhcCcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgUGFnZXJOdW1lcmljQnV0dG9uc0NvbXBvbmVudC5wcm90b3R5cGUsIFwibnVtYmVyc1dyYXBDbGFzc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgUGFnZXJOdW1lcmljQnV0dG9uc0NvbXBvbmVudC5wcm90b3R5cGUsIFwiYnV0dG9uQ291bnRcIiwgdm9pZCAwKTtcblBhZ2VyTnVtZXJpY0J1dHRvbnNDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1wYWdlci1udW1lcmljLWJ1dHRvbnMnLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgICBjbGFzcz1cImstZHJvcGRvd24gay1wYWdlci1uYXZcIlxuICAgICAgICAgICAga2VuZG9HcmlkRm9jdXNhYmxlXG4gICAgICAgICAgICB0YWJpbmRleD1cIjBcIlxuICAgICAgICAgICAgW3ZhbHVlXT1cIihjdXJyZW50UGFnZSkudG9TdHJpbmcoKVwiXG4gICAgICAgICAgICAoY2hhbmdlKT1cIm9uU2VsZWN0Q2hhbmdlKCRldmVudClcIj5cbiAgICAgICAgICAgIDxvcHRpb24gKm5nSWY9XCJzdGFydCA+IDFcIlxuICAgICAgICAgICAgICAgIGNsYXNzPVwiay1saW5rXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT1cInByZXZpb3VzQnV0dG9uc1wiXG4gICAgICAgICAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCJwYWdlTGFiZWwoc3RhcnQgLSAxKVwiPi4uLlxuICAgICAgICAgICAgPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uICpuZ0Zvcj1cImxldCBudW0gb2YgYnV0dG9uc1wiXG4gICAgICAgICAgICAgICAgW3ZhbHVlXT1cIm51bS50b1N0cmluZygpXCJcbiAgICAgICAgICAgICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cInBhZ2VMYWJlbChudW0pXCJcbiAgICAgICAgICAgICAgICBbYXR0ci5hcmlhLWN1cnJlbnRdPVwiY3VycmVudFBhZ2UgPT0gbnVtID8gJ3BhZ2UnIDogdW5kZWZpbmVkXCJcbiAgICAgICAgICAgICAgICBbbmdDbGFzc109XCJ7J2stbGluayc6IHRydWUsICdrLXN0YXRlLXNlbGVjdGVkJzpjdXJyZW50UGFnZSA9PSBudW19XCI+XG4gICAgICAgICAgICAgICAge3tudW19fVxuICAgICAgICAgICAgPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uICpuZ0lmPVwiZW5kIDwgdG90YWxQYWdlc1wiXG4gICAgICAgICAgICAgICAgdmFsdWU9XCJuZXh0QnV0dG9uc1wiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJrLWxpbmtcIlxuICAgICAgICAgICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwicGFnZUxhYmVsKGVuZCArIDEpXCI+Li4uXG4gICAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgIDx1bCBbbmdDbGFzc109XCJ7J2stcGFnZXItbnVtYmVycyc6IHRydWUsICdrLXJlc2V0JzogdHJ1ZX1cIj5cbiAgICAgICAgICAgIDxsaSAqbmdJZj1cInN0YXJ0ID4gMVwiPlxuICAgICAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgICAgICAgIGtlbmRvR3JpZEZvY3VzYWJsZVxuICAgICAgICAgICAgICAgICAgICB0YWJpbmRleD1cIjBcIlxuICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImstbGluayBrLXBhZ2VyLW5hdlwiXG4gICAgICAgICAgICAgICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwicGFnZUxhYmVsKHN0YXJ0IC0gMSlcIlxuICAgICAgICAgICAgICAgICAgICAoY2xpY2spPVwiY2hhbmdlUGFnZShzdGFydCAtIDIpXCJcbiAgICAgICAgICAgICAgICAgICAgKGtleWRvd24uZW50ZXIpPVwiY2hhbmdlUGFnZShzdGFydCAtIDIpXCI+Li4uPC9zcGFuPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSAqbmdGb3I9XCJsZXQgbnVtIG9mIGJ1dHRvbnNcIj5cbiAgICAgICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICAgICAgICBrZW5kb0dyaWRGb2N1c2FibGVcbiAgICAgICAgICAgICAgICAgICAgdGFiaW5kZXg9XCIwXCJcbiAgICAgICAgICAgICAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCJwYWdlTGFiZWwobnVtKVwiXG4gICAgICAgICAgICAgICAgICAgIFtuZ0NsYXNzXT1cInsnay1saW5rJzogdHJ1ZSwgJ2stc3RhdGUtc2VsZWN0ZWQnOmN1cnJlbnRQYWdlID09IG51bSwgJ2stcGFnZXItbmF2JzogdHJ1ZX1cIlxuICAgICAgICAgICAgICAgICAgICAoY2xpY2spPVwiY2hhbmdlUGFnZShudW0gLSAxKVwiXG4gICAgICAgICAgICAgICAgICAgIChrZXlkb3duLmVudGVyKT1cImNoYW5nZVBhZ2UobnVtIC0gMSlcIj5cbiAgICAgICAgICAgICAgICAgICAge3tudW19fVxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgKm5nSWY9XCJlbmQgPCB0b3RhbFBhZ2VzXCI+XG4gICAgICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICAgICAga2VuZG9HcmlkRm9jdXNhYmxlXG4gICAgICAgICAgICAgICAgICAgIHRhYmluZGV4PVwiMFwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiay1saW5rIGstcGFnZXItbmF2XCJcbiAgICAgICAgICAgICAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCJwYWdlTGFiZWwoZW5kICsgMSlcIlxuICAgICAgICAgICAgICAgICAgICAoY2xpY2spPVwiY2hhbmdlUGFnZShlbmQpXCJcbiAgICAgICAgICAgICAgICAgICAgKGtleWRvd24uZW50ZXIpPVwiY2hhbmdlUGFnZShlbmQpXCI+Li4uPC9zcGFuPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICAgICAgUGFnZXJDb250ZXh0U2VydmljZV0pXG5dLCBQYWdlck51bWVyaWNCdXR0b25zQ29tcG9uZW50KTtcblxuLyoqXG4gKiBEaXNwbGF5cyBhbiBpbnB1dCBlbGVtZW50IHdoaWNoIGFsbG93cyB0aGUgdHlwaW5nIGFuZCByZW5kZXJpbmcgb2YgcGFnZSBudW1iZXJzLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0cy1wcmV2aWV3XG4gKlxuICogX0BDb21wb25lbnQoe1xuICogICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgICB0ZW1wbGF0ZTogYFxuICogICAgICA8a2VuZG8tZ3JpZFxuICogICAgICAgIFtrZW5kb0dyaWRCaW5kaW5nXT1cImdyaWREYXRhXCJcbiAqICAgICAgICBbcGFnZVNpemVdPVwiMVwiXG4gKiAgICAgICAgW3BhZ2VhYmxlXT1cInRydWVcIlxuICogICAgICA+XG4gKiAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJQcm9kdWN0SURcIiB0aXRsZT1cIklEXCIgd2lkdGg9XCI0MFwiPlxuICogICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIlByb2R1Y3ROYW1lXCIgdGl0bGU9XCJOYW1lXCIgd2lkdGg9XCIyNTBcIj5cbiAqICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJVbml0UHJpY2VcIiB0aXRsZT1cIlByaWNlXCIgd2lkdGg9XCI4MFwiIGZvcm1hdD1cInswOmN9XCI+XG4gKiAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICpcbiAqICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb1BhZ2VyVGVtcGxhdGUgbGV0LXRvdGFsUGFnZXM9XCJ0b3RhbFBhZ2VzXCIgbGV0LWN1cnJlbnRQYWdlPVwiY3VycmVudFBhZ2VcIj5cbiAqICAgICAgICAgIDxrZW5kby1wYWdlci1wcmV2LWJ1dHRvbnM+PC9rZW5kby1wYWdlci1wcmV2LWJ1dHRvbnM+XG4gKiAgICAgICAgICA8a2VuZG8tcGFnZXItbnVtZXJpYy1idXR0b25zIFtidXR0b25Db3VudF09XCIxMFwiPjwva2VuZG8tcGFnZXItbnVtZXJpYy1idXR0b25zPlxuICogICAgICAgICAgPGtlbmRvLXBhZ2VyLW5leHQtYnV0dG9ucz48L2tlbmRvLXBhZ2VyLW5leHQtYnV0dG9ucz5cbiAqICAgICAgICAgIDxrZW5kby1wYWdlci1pbnB1dD48L2tlbmRvLXBhZ2VyLWlucHV0PlxuICogICAgICAgICAgPGtlbmRvLXBhZ2VyLWluZm8+PC9rZW5kby1wYWdlci1pbmZvPlxuICogICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqXG4gKiAgICA8L2tlbmRvLWdyaWQ+XG4gKiAgICAgYFxuICogfSlcbiAqXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICAgIHB1YmxpYyBncmlkRGF0YSA9IFt7XG4gKiAgICAgICAgIFwiUHJvZHVjdElEXCI6IDEsXG4gKiAgICAgICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFpXCIsXG4gKiAgICAgICAgIFwiVW5pdFByaWNlXCI6IDE4LjAwMDAsXG4gKiAgICAgICAgIFwiRGlzY29udGludWVkXCI6IGZhbHNlXG4gKiAgICAgICB9LCB7XG4gKiAgICAgICAgIFwiUHJvZHVjdElEXCI6IDIsXG4gKiAgICAgICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFuZ1wiLFxuICogICAgICAgICBcIlVuaXRQcmljZVwiOiAxOS4wMDAwLFxuICogICAgICAgICBcIkRpc2NvbnRpbnVlZFwiOiB0cnVlXG4gKiAgICAgICB9XG4gKiAgICAgXTtcbiAqIH1cbiAqXG4gKiBgYGBcbiAqL1xubGV0IFBhZ2VySW5wdXRDb21wb25lbnQgPSBjbGFzcyBQYWdlcklucHV0Q29tcG9uZW50IGV4dGVuZHMgUGFnZXJFbGVtZW50Q29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb24sIHBhZ2VyQ29udGV4dCwgem9uZSwgbmF2aWdhdGlvblNlcnZpY2UsIGNkKSB7XG4gICAgICAgIHN1cGVyKGxvY2FsaXphdGlvbiwgcGFnZXJDb250ZXh0LCBjZCk7XG4gICAgICAgIHRoaXMucGFnZXJDb250ZXh0ID0gcGFnZXJDb250ZXh0O1xuICAgICAgICB0aGlzLnpvbmUgPSB6b25lO1xuICAgICAgICB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlID0gbmF2aWdhdGlvblNlcnZpY2U7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAaGlkZGVuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICAgICAgICAgKlxuICAgICAgICAgKiBAbWVtYmVyT2YgUGFnZXJJbnB1dENvbXBvbmVudFxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5oYW5kbGVLZXlEb3duID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBsZXQgaW5jb21pbmdWYWx1ZSA9IHRoaXMubnVtZXJpY0lucHV0LnZhbHVlIHx8IHRoaXMuY3VycmVudDtcbiAgICAgICAgICAgIGlmIChldmVudC5rZXlDb2RlID09PSBLZXlzLkVudGVyKSB7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBpZiAoaW5jb21pbmdWYWx1ZSAhPT0gdGhpcy5jdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuem9uZS5ydW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VQYWdlKGluY29taW5nVmFsdWUgLSAxKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQGhpZGRlblxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAgICAgICAgICpcbiAgICAgICAgICogQG1lbWJlck9mIFBhZ2VySW5wdXRDb21wb25lbnRcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuaGFuZGxlQmx1ciA9ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGlucHV0VmFsdWUgPSB0aGlzLm51bWVyaWNJbnB1dC52YWx1ZTtcbiAgICAgICAgICAgIGlmICghaW5wdXRWYWx1ZSkge1xuICAgICAgICAgICAgICAgIHRoaXMubnVtZXJpY0lucHV0LndyaXRlVmFsdWUodGhpcy5jdXJyZW50KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5wdXRWYWx1ZSAhPT0gdGhpcy5jdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy56b25lLnJ1bigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlUGFnZShpbnB1dFZhbHVlIC0gMSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgY3VycmVudCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGFzUGFnZXMgPyB0aGlzLmN1cnJlbnRQYWdlIDogMDtcbiAgICB9XG4gICAgZ2V0IGhhc1BhZ2VzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50b3RhbFBhZ2VzICE9PSAwO1xuICAgIH1cbiAgICBvbkNoYW5nZXMoeyB0b3RhbCwgc2tpcCwgcGFnZVNpemUgfSkge1xuICAgICAgICB0aGlzLnRvdGFsID0gdG90YWw7XG4gICAgICAgIHRoaXMuc2tpcCA9IHNraXA7XG4gICAgICAgIHRoaXMucGFnZVNpemUgPSBwYWdlU2l6ZTtcbiAgICAgICAgdGhpcy5jZC5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgVmlld0NoaWxkKE51bWVyaWNUZXh0Qm94Q29tcG9uZW50LCB7IHN0YXRpYzogZmFsc2UgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWVyaWNUZXh0Qm94Q29tcG9uZW50KVxuXSwgUGFnZXJJbnB1dENvbXBvbmVudC5wcm90b3R5cGUsIFwibnVtZXJpY0lucHV0XCIsIHZvaWQgMCk7XG5QYWdlcklucHV0Q29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1wYWdlci1pbnB1dCcsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgIDxzcGFuIFtuZ0NsYXNzXT1cInsnay1wYWdlci1pbnB1dCc6IHRydWUsICdrLWxhYmVsJzogdHJ1ZX1cIj5cbiAgICAgICAge3t0ZXh0Rm9yKCdwYWdlclBhZ2UnKX19XG4gICAgICAgIDxrZW5kby1udW1lcmljdGV4dGJveFxuICAgICAgICAgICAga2VuZG9HcmlkUGFnZXJJbnB1dFxuICAgICAgICAgICAgW2tlbmRvR3JpZEZvY3VzYWJsZV09XCJoYXNQYWdlc1wiXG4gICAgICAgICAgICB0YWJpbmRleD1cIjBcIlxuICAgICAgICAgICAgW3NwaW5uZXJzXT1cImZhbHNlXCJcbiAgICAgICAgICAgIFtkZWNpbWFsc109XCIwXCJcbiAgICAgICAgICAgIGZvcm1hdD1cIm4wXCJcbiAgICAgICAgICAgIFtkaXNhYmxlZF09XCIhaGFzUGFnZXNcIlxuICAgICAgICAgICAgW3ZhbHVlXT1cImN1cnJlbnRcIlxuICAgICAgICAgICAgW21pbl09XCJoYXNQYWdlcyA/IDEgOiAwXCJcbiAgICAgICAgICAgIFttYXhdPVwidG90YWxQYWdlc1wiXG4gICAgICAgICAgICBbYXV0b0NvcnJlY3RdPVwidHJ1ZVwiXG4gICAgICAgICAgICBbdGl0bGVdPVwidGV4dEZvcigncGFnZXJQYWdlTnVtYmVySW5wdXRUaXRsZScpXCJcbiAgICAgICAgICAgIFtrZW5kb0V2ZW50c091dHNpZGVBbmd1bGFyXT1cIntcbiAgICAgICAgICAgICAgICBrZXlkb3duOiBoYW5kbGVLZXlEb3duLFxuICAgICAgICAgICAgICAgIGZvY3Vzb3V0OiBoYW5kbGVCbHVyXG4gICAgICAgICAgICB9XCJcbiAgICAgICAgPlxuICAgICAgICA8L2tlbmRvLW51bWVyaWN0ZXh0Ym94PlxuICAgICAgICB7e3RleHRGb3IoJ3BhZ2VyT2YnKX19IHt7dG90YWxQYWdlc319XG4gICAgIDwvc3Bhbj5cbiAgICBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBQYWdlckNvbnRleHRTZXJ2aWNlLFxuICAgICAgICBOZ1pvbmUsXG4gICAgICAgIE5hdmlnYXRpb25TZXJ2aWNlLFxuICAgICAgICBDaGFuZ2VEZXRlY3RvclJlZl0pXG5dLCBQYWdlcklucHV0Q29tcG9uZW50KTtcblxuLyoqXG4gKiBEaXNwbGF5cyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBwYWdlIGFuZCB0aGUgdG90YWwgbnVtYmVyIG9mIHJlY29yZHMgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBwYWdpbmdfZ3JpZCAlfSN0b2MtcGFnZXItdGVtcGxhdGVzKSkuXG4gKi9cbmxldCBQYWdlckluZm9Db21wb25lbnQgPSBjbGFzcyBQYWdlckluZm9Db21wb25lbnQgZXh0ZW5kcyBQYWdlckVsZW1lbnRDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbiwgY2QsIHBhZ2VyQ29udGV4dCkge1xuICAgICAgICBzdXBlcihsb2NhbGl6YXRpb24sIHBhZ2VyQ29udGV4dCwgY2QpO1xuICAgICAgICB0aGlzLnBhZ2VyQ29udGV4dCA9IHBhZ2VyQ29udGV4dDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqXG4gICAgICogQHJlYWRvbmx5XG4gICAgICogQHR5cGUge251bWJlcn1cbiAgICAgKiBAbWVtYmVyT2YgUGFnZXJJbmZvQ29tcG9uZW50XG4gICAgICovXG4gICAgZ2V0IG1heEl0ZW1zKCkge1xuICAgICAgICByZXR1cm4gTWF0aC5taW4odGhpcy5jdXJyZW50UGFnZSAqIHRoaXMucGFnZVNpemUsIHRoaXMudG90YWwpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICpcbiAgICAgKiBAcmVhZG9ubHlcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqIEBtZW1iZXJPZiBQYWdlckluZm9Db21wb25lbnRcbiAgICAgKi9cbiAgICBnZXQgY3VycmVudFBhZ2VUZXh0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy50b3RhbCA/XG4gICAgICAgICAgICAodGhpcy5jdXJyZW50UGFnZSAtIDEpICogdGhpcy5wYWdlU2l6ZSArIDEgOlxuICAgICAgICAgICAgMDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqXG4gICAgICogQHJlYWRvbmx5XG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICogQG1lbWJlck9mIFBhZ2VySW5mb0NvbXBvbmVudFxuICAgICAqL1xuICAgIGdldCBjbGFzc2VzKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgb25DaGFuZ2VzKHsgdG90YWwsIHNraXAsIHBhZ2VTaXplIH0pIHtcbiAgICAgICAgdGhpcy50b3RhbCA9IHRvdGFsO1xuICAgICAgICB0aGlzLnNraXAgPSBza2lwO1xuICAgICAgICB0aGlzLnBhZ2VTaXplID0gcGFnZVNpemU7XG4gICAgICAgIHRoaXMuY2QubWFya0ZvckNoZWNrKCk7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKFwiY2xhc3Muay1wYWdlci1pbmZvXCIpLFxuICAgIEhvc3RCaW5kaW5nKFwiY2xhc3Muay1sYWJlbFwiKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgUGFnZXJJbmZvQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjbGFzc2VzXCIsIG51bGwpO1xuUGFnZXJJbmZvQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tcGFnZXItaW5mbycsXG4gICAgICAgIHRlbXBsYXRlOiBge3tjdXJyZW50UGFnZVRleHR9fSAtIHt7bWF4SXRlbXN9fSB7e3RleHRGb3IoJ3BhZ2VyT2YnKX19IHt7dG90YWx9fSB7e3RleHRGb3IoJ3BhZ2VySXRlbXMnKX19YFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTG9jYWxpemF0aW9uU2VydmljZSxcbiAgICAgICAgQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgICAgIFBhZ2VyQ29udGV4dFNlcnZpY2VdKVxuXSwgUGFnZXJJbmZvQ29tcG9uZW50KTtcblxuLyoqXG4gKiBEaXNwbGF5cyBhIGRyb3AtZG93biBsaXN0IGZvciB0aGUgcGFnZSBzaXplIHNlbGVjdGlvbiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIHBhZ2luZ19ncmlkICV9I3RvYy1wYWdlci10ZW1wbGF0ZXMpKS5cbiAqL1xubGV0IFBhZ2VyUGFnZVNpemVzQ29tcG9uZW50ID0gY2xhc3MgUGFnZXJQYWdlU2l6ZXNDb21wb25lbnQgZXh0ZW5kcyBQYWdlckVsZW1lbnRDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbiwgY2QsIHBhZ2VyQ29udGV4dCwgbmF2aWdhdGlvblNlcnZpY2UpIHtcbiAgICAgICAgc3VwZXIobG9jYWxpemF0aW9uLCBwYWdlckNvbnRleHQsIGNkKTtcbiAgICAgICAgdGhpcy5wYWdlckNvbnRleHQgPSBwYWdlckNvbnRleHQ7XG4gICAgICAgIHRoaXMubmF2aWdhdGlvblNlcnZpY2UgPSBuYXZpZ2F0aW9uU2VydmljZTtcbiAgICAgICAgdGhpcy5fcGFnZVNpemVzID0gW107XG4gICAgfVxuICAgIGdldCBwYWdlU2l6ZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9wYWdlU2l6ZXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBwYWdlIHNpemVzIGNvbGxlY3Rpb24uIENhbiBiZSBhbiBBcnJheSBvZiBudW1iZXJzIGFuZC9vciBQYWdlU2l6ZUl0ZW0gb2JqZWN0cy5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHMtcHJldmlld1xuICAgICAqIF9AQ29tcG9uZW50KHtcbiAgICAgKiAgICBzZWxlY3RvcjogJ215LWFwcCcsXG4gICAgICogICAgdGVtcGxhdGU6IGBcbiAgICAgKiAgICAgICAgPGtlbmRvLWdyaWQgW2tlbmRvR3JpZEJpbmRpbmddPVwiZ3JpZERhdGFcIiBbaGVpZ2h0XT1cIjIwMFwiXG4gICAgICogICAgICAgICAgIFtwYWdlYWJsZV09XCJ0cnVlXCJcbiAgICAgKiAgICAgICAgICAgIFtwYWdlU2l6ZV09XCJwYWdlU2l6ZVwiPlxuICAgICAqICAgICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvUGFnZXJUZW1wbGF0ZSBsZXQtdG90YWxQYWdlcz1cInRvdGFsUGFnZXNcIiBsZXQtY3VycmVudFBhZ2U9XCJjdXJyZW50UGFnZVwiPlxuICAgICAqICAgICAgICAgICAgICAgIDxrZW5kby1wYWdlci1wYWdlLXNpemVzIFtwYWdlU2l6ZXNdPVwicGFnZXNpemVzXCI+PC9rZW5kby1wYWdlci1wYWdlLXNpemVzPlxuICAgICAqICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgKiAgICAgICAgPC9rZW5kby1ncmlkPlxuICAgICAqICAgIGBcbiAgICAgKiB9KVxuICAgICAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gICAgICogICAgcHVibGljIGdyaWREYXRhOiBhbnlbXSA9IHByb2R1Y3RzO1xuICAgICAqICAgIHB1YmxpYyBwYWdlU2l6ZSA9IDI7XG4gICAgICogICAgcHVibGljIHBhZ2VzaXplcyA9IFt7dGV4dDogJ09uZScsIHZhbHVlOiAxfSwge3RleHQ6ICdUd28nLCB2YWx1ZTogMn0sIHt0ZXh0OiAnQWxsJywgdmFsdWUgOiAnYWxsJ31dO1xuICAgICAqIH1cbiAgICAgKlxuICAgICAqIGNvbnN0IHByb2R1Y3RzID0gW3tcbiAgICAgKiAgICdQcm9kdWN0SUQnIDogMSxcbiAgICAgKiAgICdQcm9kdWN0TmFtZScgOiBcIkNoYWlcIixcbiAgICAgKiAgICdTdXBwbGllcklEJyA6IDEsXG4gICAgICogICAnQ2F0ZWdvcnlJRCcgOiAxLFxuICAgICAqICAgJ1F1YW50aXR5UGVyVW5pdCcgOiBcIjEwIGJveGVzIHggMjAgYmFnc1wiLFxuICAgICAqICAgJ1VuaXRQcmljZScgOiAxOC4wMDAwLFxuICAgICAqICAgJ1VuaXRzSW5TdG9jaycgOiAzOSxcbiAgICAgKiAgICdVbml0c09uT3JkZXInIDogMCxcbiAgICAgKiAgICdSZW9yZGVyTGV2ZWwnIDogMTAsXG4gICAgICogICAnRGlzY29udGludWVkJyA6IGZhbHNlXG4gICAgICpcbiAgICAgKiB9LCB7XG4gICAgICogICAnUHJvZHVjdElEJyA6IDIsXG4gICAgICogICAnUHJvZHVjdE5hbWUnIDogXCJDaGFuZ1wiLFxuICAgICAqICAgJ1N1cHBsaWVySUQnIDogMSxcbiAgICAgKiAgICdDYXRlZ29yeUlEJyA6IDEsXG4gICAgICogICAnUXVhbnRpdHlQZXJVbml0JyA6IFwiMjQgLSAxMiBveiBib3R0bGVzXCIsXG4gICAgICogICAnVW5pdFByaWNlJyA6IDE5LjAwMDAsXG4gICAgICogICAnVW5pdHNJblN0b2NrJyA6IDE3LFxuICAgICAqICAgJ1VuaXRzT25PcmRlcicgOiA0MCxcbiAgICAgKiAgICdSZW9yZGVyTGV2ZWwnIDogMjUsXG4gICAgICogICAnRGlzY29udGludWVkJyA6IGZhbHNlXG4gICAgICogfSwge1xuICAgICAqICAgJ1Byb2R1Y3RJRCcgOiAzLFxuICAgICAqICAgJ1Byb2R1Y3ROYW1lJyA6IFwiQW5pc2VlZCBTeXJ1cFwiLFxuICAgICAqICAgJ1N1cHBsaWVySUQnIDogMSxcbiAgICAgKiAgICdDYXRlZ29yeUlEJyA6IDIsXG4gICAgICogICAnUXVhbnRpdHlQZXJVbml0JyA6IFwiMTIgLSA1NTAgbWwgYm90dGxlc1wiLFxuICAgICAqICAgJ1VuaXRQcmljZScgOiAxMC4wMDAwLFxuICAgICAqICAgJ1VuaXRzSW5TdG9jaycgOiAxMyxcbiAgICAgKiAgICdVbml0c09uT3JkZXInIDogNzAsXG4gICAgICogICAnUmVvcmRlckxldmVsJyA6IDI1LFxuICAgICAqICAgJ0Rpc2NvbnRpbnVlZCcgOiBmYWxzZVxuICAgICAqIH0sIHtcbiAgICAgKiAgICdQcm9kdWN0SUQnIDogNCxcbiAgICAgKiAgICdQcm9kdWN0TmFtZScgOiBcIkNoZWYgQW50b25cXCdzIENhanVuIFNlYXNvbmluZ1wiLFxuICAgICAqICAgJ1N1cHBsaWVySUQnIDogMixcbiAgICAgKiAgJ0NhdGVnb3J5SUQnIDogMixcbiAgICAgKiAgICdRdWFudGl0eVBlclVuaXQnIDogXCI0OCAtIDYgb3ogamFyc1wiLFxuICAgICAqICAgJ1VuaXRQcmljZScgOiAyMi4wMDAwLFxuICAgICAqICAgJ1VuaXRzSW5TdG9jaycgOiA1MyxcbiAgICAgKiAgICdVbml0c09uT3JkZXInIDogMCxcbiAgICAgKiAgICdSZW9yZGVyTGV2ZWwnIDogMCxcbiAgICAgKiAgICdEaXNjb250aW51ZWQnIDogZmFsc2VcbiAgICAgKiB9LCB7XG4gICAgICogICAnUHJvZHVjdElEJyA6IDUsXG4gICAgICogICAnUHJvZHVjdE5hbWUnIDogXCJDaGVmIEFudG9uXFwncyBHdW1ibyBNaXhcIixcbiAgICAgKiAgICdTdXBwbGllcklEJyA6IDIsXG4gICAgICogICAnQ2F0ZWdvcnlJRCcgOiAyLFxuICAgICAqICAgJ1F1YW50aXR5UGVyVW5pdCcgOiBcIjM2IGJveGVzXCIsXG4gICAgICogICAnVW5pdFByaWNlJyA6IDIxLjM1MDAsXG4gICAgICogICAnVW5pdHNJblN0b2NrJyA6IDAsXG4gICAgICogICAnVW5pdHNPbk9yZGVyJyA6IDAsXG4gICAgICogICAnUmVvcmRlckxldmVsJyA6IDAsXG4gICAgICogICAnRGlzY29udGludWVkJyA6IHRydWVcbiAgICAgKiB9LCB7XG4gICAgICogICAnUHJvZHVjdElEJyA6IDYsXG4gICAgICogICAnUHJvZHVjdE5hbWUnIDogXCJHcmFuZG1hXFwncyBCb3lzZW5iZXJyeSBTcHJlYWRcIixcbiAgICAgKiAgICdTdXBwbGllcklEJyA6IDMsXG4gICAgICogICAnQ2F0ZWdvcnlJRCcgOiAyLFxuICAgICAqICAgJ1F1YW50aXR5UGVyVW5pdCcgOiBcIjEyIC0gOCBveiBqYXJzXCIsXG4gICAgICogICAnVW5pdFByaWNlJyA6IDI1LjAwMDAsXG4gICAgICogICAnVW5pdHNJblN0b2NrJyA6IDEyMCxcbiAgICAgKiAgICdVbml0c09uT3JkZXInIDogMCxcbiAgICAgKiAgICdSZW9yZGVyTGV2ZWwnIDogMjUsXG4gICAgICogICAnRGlzY29udGludWVkJyA6IGZhbHNlXG4gICAgICogfV07XG4gICAgICogYGBgXG4gICAgICovXG4gICAgc2V0IHBhZ2VTaXplcyhwYWdlU2l6ZXMpIHtcbiAgICAgICAgbGV0IG5vcm1hbGl6ZWRJdGVtcyA9IFtdO1xuICAgICAgICBwYWdlU2l6ZXMuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaXRlbSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICBub3JtYWxpemVkSXRlbXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIHRleHQ6IGl0ZW0udG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGl0ZW1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG5vcm1hbGl6ZWRJdGVtcy5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHRoaXMucGFnZVNpemUgJiYgIW5vcm1hbGl6ZWRJdGVtcy5zb21lKGl0ZW0gPT4gaXRlbS52YWx1ZSA9PT0gdGhpcy5wYWdlU2l6ZSkpIHtcbiAgICAgICAgICAgIG5vcm1hbGl6ZWRJdGVtcyA9IFt7IHRleHQ6IHRoaXMucGFnZVNpemUudG9TdHJpbmcoKSwgdmFsdWU6IHRoaXMucGFnZVNpemUgfSwgLi4ubm9ybWFsaXplZEl0ZW1zXTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9wYWdlU2l6ZXMgPSBub3JtYWxpemVkSXRlbXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKlxuICAgICAqIEByZWFkb25seVxuICAgICAqL1xuICAgIGdldCBjbGFzc2VzKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqXG4gICAgICogQHJlYWRvbmx5XG4gICAgICovXG4gICAgZ2V0IHNob3dJbml0aWFsUGFnZVNpemUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBhZ2VTaXplc1xuICAgICAgICAgICAgLmZpbHRlcihpdGVtID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaXRlbS52YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXRlbS52YWx1ZSA9PT0gTnVtYmVyKHRoaXMucGFnZVNpemUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMudG90YWwgPT09IE51bWJlcih0aGlzLnBhZ2VTaXplKTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5sZW5ndGggPT09IDA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBwYWdlU2l6ZUNoYW5nZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLnBhZ2VTaXplID0gdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyA/IHZhbHVlIDogdGhpcy50b3RhbDtcbiAgICAgICAgdGhpcy5wYWdlckNvbnRleHQuY2hhbmdlUGFnZVNpemUodGhpcy5wYWdlU2l6ZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXRWYWx1ZShwYWdlKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgcGFnZS52YWx1ZSA9PT0gJ251bWJlcicgPyBwYWdlLnZhbHVlIDogdGhpcy50b3RhbDtcbiAgICB9XG4gICAgb25DaGFuZ2VzKHsgdG90YWwsIHNraXAsIHBhZ2VTaXplIH0pIHtcbiAgICAgICAgdGhpcy50b3RhbCA9IHRvdGFsO1xuICAgICAgICB0aGlzLnNraXAgPSBza2lwO1xuICAgICAgICB0aGlzLnBhZ2VTaXplID0gdHlwZW9mIHBhZ2VTaXplID09PSAnbnVtYmVyJyA/IHBhZ2VTaXplIDogdGhpcy50b3RhbDtcbiAgICAgICAgdGhpcy5jZC5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQXJyYXkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbQXJyYXldKVxuXSwgUGFnZXJQYWdlU2l6ZXNDb21wb25lbnQucHJvdG90eXBlLCBcInBhZ2VTaXplc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLXBhZ2VyLXNpemVzJyksXG4gICAgSG9zdEJpbmRpbmcoJ2NsYXNzLmstbGFiZWwnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgUGFnZXJQYWdlU2l6ZXNDb21wb25lbnQucHJvdG90eXBlLCBcImNsYXNzZXNcIiwgbnVsbCk7XG5QYWdlclBhZ2VTaXplc0NvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLXBhZ2VyLXBhZ2Utc2l6ZXMnLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8a2VuZG8tZHJvcGRvd25saXN0XG4gICAgICAgICAgICAjZHJvcGRvd25saXN0XG4gICAgICAgICAgICBrZW5kb0dyaWRQYWdlckRyb3BEb3duXG4gICAgICAgICAgICB0YWJpbmRleD1cIjBcIlxuICAgICAgICAgICAga2VuZG9HcmlkRm9jdXNhYmxlXG4gICAgICAgICAgICBbZGF0YV09XCJwYWdlU2l6ZXNcIlxuICAgICAgICAgICAgdGV4dEZpZWxkPVwidGV4dFwiXG4gICAgICAgICAgICB2YWx1ZUZpZWxkPVwidmFsdWVcIlxuICAgICAgICAgICAgW3ZhbHVlUHJpbWl0aXZlXT1cInRydWVcIlxuICAgICAgICAgICAgW3ZhbHVlXT1cInBhZ2VTaXplXCJcbiAgICAgICAgICAgICh2YWx1ZUNoYW5nZSk9XCJwYWdlU2l6ZUNoYW5nZSgkZXZlbnQpXCI+PC9rZW5kby1kcm9wZG93bmxpc3Q+XG4gICAgICAgIDxrZW5kby1sYWJlbCBbZm9yXT1cImRyb3Bkb3dubGlzdFwiIFt0ZXh0XT1cInRleHRGb3IoJ3BhZ2VySXRlbXNQZXJQYWdlJylcIj48L2tlbmRvLWxhYmVsPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2UsXG4gICAgICAgIENoYW5nZURldGVjdG9yUmVmLFxuICAgICAgICBQYWdlckNvbnRleHRTZXJ2aWNlLFxuICAgICAgICBOYXZpZ2F0aW9uU2VydmljZV0pXG5dLCBQYWdlclBhZ2VTaXplc0NvbXBvbmVudCk7XG5cbmNvbnN0IGltcG9ydGVkTW9kdWxlcyQxID0gW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBJbnB1dHNNb2R1bGUsXG4gICAgTGFiZWxNb2R1bGUsXG4gICAgRHJvcERvd25zTW9kdWxlLFxuICAgIFJlc2l6ZVNlbnNvck1vZHVsZSxcbiAgICBTaGFyZWRNb2R1bGVcbl07XG5jb25zdCBJTlRFUk5BTF9DT01QT05FTlRTJDEgPSBbXG4gICAgUGFnZXJDb21wb25lbnQsXG4gICAgUGFnZXJQcmV2QnV0dG9uc0NvbXBvbmVudCxcbiAgICBQYWdlck5leHRCdXR0b25zQ29tcG9uZW50LFxuICAgIFBhZ2VyTnVtZXJpY0J1dHRvbnNDb21wb25lbnQsXG4gICAgUGFnZXJJbnB1dENvbXBvbmVudCxcbiAgICBQYWdlckluZm9Db21wb25lbnQsXG4gICAgUGFnZXJQYWdlU2l6ZXNDb21wb25lbnQsXG4gICAgUGFnZXJUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBQYWdlckRyb3BEb3duTGlzdERpcmVjdGl2ZSxcbiAgICBQYWdlcklucHV0RGlyZWN0aXZlXG5dO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBQYWdlck1vZHVsZSA9IGNsYXNzIFBhZ2VyTW9kdWxlIHtcbiAgICBzdGF0aWMgZXhwb3J0cygpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIFBhZ2VyQ29tcG9uZW50LFxuICAgICAgICAgICAgUGFnZXJQcmV2QnV0dG9uc0NvbXBvbmVudCxcbiAgICAgICAgICAgIFBhZ2VyTmV4dEJ1dHRvbnNDb21wb25lbnQsXG4gICAgICAgICAgICBQYWdlck51bWVyaWNCdXR0b25zQ29tcG9uZW50LFxuICAgICAgICAgICAgUGFnZXJJbnB1dENvbXBvbmVudCxcbiAgICAgICAgICAgIFBhZ2VySW5mb0NvbXBvbmVudCxcbiAgICAgICAgICAgIFBhZ2VyUGFnZVNpemVzQ29tcG9uZW50LFxuICAgICAgICAgICAgUGFnZXJUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgICAgIFBhZ2VyRHJvcERvd25MaXN0RGlyZWN0aXZlLFxuICAgICAgICAgICAgUGFnZXJJbnB1dERpcmVjdGl2ZVxuICAgICAgICBdO1xuICAgIH1cbn07XG5QYWdlck1vZHVsZSA9IF9fZGVjb3JhdGUoW1xuICAgIE5nTW9kdWxlKHtcbiAgICAgICAgZGVjbGFyYXRpb25zOiBbSU5URVJOQUxfQ09NUE9ORU5UUyQxXSxcbiAgICAgICAgZXhwb3J0czogW0lOVEVSTkFMX0NPTVBPTkVOVFMkMV0sXG4gICAgICAgIGltcG9ydHM6IFsuLi5pbXBvcnRlZE1vZHVsZXMkMV1cbiAgICB9KVxuXSwgUGFnZXJNb2R1bGUpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IEdyb3VwSGVhZGVyQ29tcG9uZW50ID0gY2xhc3MgR3JvdXBIZWFkZXJDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGdyb3Vwc1NlcnZpY2UsIGdyb3VwSW5mb1NlcnZpY2UpIHtcbiAgICAgICAgdGhpcy5ncm91cHNTZXJ2aWNlID0gZ3JvdXBzU2VydmljZTtcbiAgICAgICAgdGhpcy5ncm91cEluZm9TZXJ2aWNlID0gZ3JvdXBJbmZvU2VydmljZTtcbiAgICAgICAgdGhpcy5za2lwR3JvdXBEZWNvcmF0aW9uID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaGFzRGV0YWlscyA9IGZhbHNlO1xuICAgICAgICB0aGlzLnRvdGFsQ29sdW1uc0NvdW50ID0gMDtcbiAgICAgICAgdGhpcy5ncm91cHMgPSBbXTtcbiAgICAgICAgdGhpcy5pc0V4cGFuZGVkID0gZmFsc2U7XG4gICAgfVxuICAgIGdldCBncm91cEl0ZW1DbGFzcygpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIG5nRG9DaGVjaygpIHtcbiAgICAgICAgY29uc3QgZ3JvdXBBcmdzID0ge1xuICAgICAgICAgICAgZ3JvdXA6IHRoaXMuaXRlbS5kYXRhLFxuICAgICAgICAgICAgZ3JvdXBJbmRleDogdGhpcy5pdGVtLmluZGV4LFxuICAgICAgICAgICAgcGFyZW50R3JvdXA6IGdldEdyb3VwUm93QXJncyh0aGlzLml0ZW0ucGFyZW50R3JvdXApXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuaXNFeHBhbmRlZCA9IHRoaXMuZ3JvdXBzU2VydmljZS5pc0V4cGFuZGVkKGdyb3VwQXJncyk7XG4gICAgfVxuICAgIHByZWZpeEdyb3VwQ2VsbChpdGVtKSB7XG4gICAgICAgIHJldHVybiBuZXcgQXJyYXkoaXRlbS5sZXZlbCk7XG4gICAgfVxuICAgIHRvZ2dsZUdyb3VwKGl0ZW0pIHtcbiAgICAgICAgdGhpcy5ncm91cHNTZXJ2aWNlLnRvZ2dsZVJvdyhpdGVtKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBncm91cFNwYW4oaXRlbSkge1xuICAgICAgICBjb25zdCBncm91cENvdW50ID0gKHRoaXMuZ3JvdXBzIHx8IFtdKS5sZW5ndGg7XG4gICAgICAgIGNvbnN0IGRldGFpbE9mZnNldCA9IHRoaXMuaGFzRGV0YWlscyA/IDEgOiAwO1xuICAgICAgICBpZiAodGhpcy5oYXNHcm91cEhlYWRlckNvbHVtbikge1xuICAgICAgICAgICAgcmV0dXJuIGdyb3VwQ291bnQgKyAxICsgZGV0YWlsT2Zmc2V0IC0gaXRlbS5sZXZlbDtcbiAgICAgICAgfVxuICAgICAgICBsZXQgY29sdW1uQ291bnQgPSBjb2x1bW5zU3Bhbih0aGlzLmNvbHVtbnMpO1xuICAgICAgICBpZiAodGhpcy5za2lwR3JvdXBEZWNvcmF0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gY29sdW1uQ291bnQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGdyb3VwQ291bnQgKyBjb2x1bW5Db3VudCArIGRldGFpbE9mZnNldCAtIGl0ZW0ubGV2ZWw7XG4gICAgfVxuICAgIGxvZ2ljYWxDb2xTcGFuKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5za2lwR3JvdXBEZWNvcmF0aW9uID8gMSA6IHRoaXMudG90YWxDb2x1bW5zQ291bnQ7XG4gICAgfVxuICAgIGFyaWFSb2xlKCkge1xuICAgICAgICBpZiAodGhpcy5za2lwR3JvdXBEZWNvcmF0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gJ3ByZXNlbnRhdGlvbic7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICdncmlkY2VsbCc7XG4gICAgfVxuICAgIGZvcm1hdEZvckdyb3VwKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3JvdXBJbmZvU2VydmljZS5mb3JtYXRGb3JHcm91cChpdGVtKTtcbiAgICB9XG4gICAgZ3JvdXBUaXRsZShpdGVtKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyb3VwSW5mb1NlcnZpY2UuZ3JvdXBUaXRsZShpdGVtKTtcbiAgICB9XG4gICAgZ3JvdXBIZWFkZXJUZW1wbGF0ZShpdGVtKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyb3VwSW5mb1NlcnZpY2UuZ3JvdXBIZWFkZXJUZW1wbGF0ZShpdGVtKTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgR3JvdXBIZWFkZXJDb21wb25lbnQucHJvdG90eXBlLCBcInJvd0luZGV4XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG5dLCBHcm91cEhlYWRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwibG9naWNhbFJvd0luZGV4XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBHcm91cEhlYWRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiaXRlbVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEdyb3VwSGVhZGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJza2lwR3JvdXBEZWNvcmF0aW9uXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgR3JvdXBIZWFkZXJDb21wb25lbnQucHJvdG90eXBlLCBcImhhc0RldGFpbHNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIEdyb3VwSGVhZGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ0b3RhbENvbHVtbnNDb3VudFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEdyb3VwSGVhZGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJoYXNHcm91cEhlYWRlckNvbHVtblwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQXJyYXkpXG5dLCBHcm91cEhlYWRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZ3JvdXBIZWFkZXJDb2x1bW5zXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBHcm91cEhlYWRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQXJyYXkpXG5dLCBHcm91cEhlYWRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZ3JvdXBzXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnY2xhc3Muay1ncm91cGluZy1yb3cnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgR3JvdXBIZWFkZXJDb21wb25lbnQucHJvdG90eXBlLCBcImdyb3VwSXRlbUNsYXNzXCIsIG51bGwpO1xuR3JvdXBIZWFkZXJDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0dyaWRHcm91cEhlYWRlcl0nLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8bmctdGVtcGxhdGUgW25nSWZdPVwiIXNraXBHcm91cERlY29yYXRpb25cIj5cbiAgICAgICAgICAgIDx0ZCBjbGFzcz1cImstZ3JvdXAtY2VsbFwiXG4gICAgICAgICAgICAgICAgcm9sZT1cInByZXNlbnRhdGlvblwiXG4gICAgICAgICAgICAgICAgKm5nRm9yPVwibGV0IGcgb2YgcHJlZml4R3JvdXBDZWxsKGl0ZW0pXCI+PC90ZD5cbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgPHRkIFthdHRyLmNvbHNwYW5dPVwiZ3JvdXBTcGFuKGl0ZW0pXCIgKm5nSWY9XCIhKHNraXBHcm91cERlY29yYXRpb24gJiYgaGFzR3JvdXBIZWFkZXJDb2x1bW4pXCJcbiAgICAgICAgICAgIFthdHRyLnJvbGVdPVwiYXJpYVJvbGUoKVwiXG4gICAgICAgICAgICBhcmlhLXNlbGVjdGVkPVwiZmFsc2VcIlxuICAgICAgICAgICAgW2F0dHIuYXJpYS1leHBhbmRlZF09XCJpc0V4cGFuZGVkXCJcbiAgICAgICAgICAgIGtlbmRvR3JpZExvZ2ljYWxDZWxsXG4gICAgICAgICAgICBbbG9naWNhbFJvd0luZGV4XT1cImxvZ2ljYWxSb3dJbmRleFwiXG4gICAgICAgICAgICBbbG9naWNhbENvbEluZGV4XT1cIjBcIlxuICAgICAgICAgICAgW2xvZ2ljYWxTbGF2ZUNlbGxdPVwic2tpcEdyb3VwRGVjb3JhdGlvblwiXG4gICAgICAgICAgICBbZ3JvdXBJdGVtXT1cIml0ZW1cIlxuICAgICAgICAgICAgW2NvbFNwYW5dPVwibG9naWNhbENvbFNwYW4oKVwiPlxuICAgICAgICAgICAgPHAgY2xhc3M9XCJrLXJlc2V0XCI+XG4gICAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlIFtuZ0lmXT1cIiFza2lwR3JvdXBEZWNvcmF0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIjXCIgdGFiaW5kZXg9XCItMVwiIChjbGljayk9XCJ0b2dnbGVHcm91cChpdGVtKVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImstaWNvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICBbbmdDbGFzc109XCJ7ICdrLWktY29sbGFwc2UnOiBpc0V4cGFuZGVkLCAnay1pLWV4cGFuZCc6ICFpc0V4cGFuZGVkIH1cIiByb2xlPVwicHJlc2VudGF0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlIFtuZ0lmXT1cIiFncm91cEhlYWRlclRlbXBsYXRlKGl0ZW0pXCI+XG4gICAgICAgICAgICAgICAgICAgIHt7Z3JvdXBUaXRsZShpdGVtKX19OiB7e2l0ZW0uZGF0YSB8IHZhbHVlT2Y6XCJ2YWx1ZVwiOiBmb3JtYXRGb3JHcm91cChpdGVtKX19XG4gICAgICAgICAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgW3RlbXBsYXRlQ29udGV4dF09XCJ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVSZWY6IGdyb3VwSGVhZGVyVGVtcGxhdGUoaXRlbSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ3JvdXA6IGl0ZW0uZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZ2dyZWdhdGVzOiBpdGVtLmRhdGE/LmFnZ3JlZ2F0ZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGl0ZW0uZGF0YT8udmFsdWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQ6IGl0ZW0uZGF0YT8uZmllbGQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXg6IGl0ZW0uaW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwYW5kZWQ6IGlzRXhwYW5kZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJGltcGxpY2l0OiBpdGVtLmRhdGFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XCI+XG4gICAgICAgICAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgPC90ZD5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImhhc0dyb3VwSGVhZGVyQ29sdW1uXCI+XG4gICAgICAgICAgICA8dGQgKm5nRm9yPVwibGV0IGNvbHVtbiBvZiBncm91cEhlYWRlckNvbHVtbnM7IGxldCBpbmRleCA9IGluZGV4XCJcbiAgICAgICAgICAgICAgICByb2xlPVwiZ3JpZGNlbGxcIlxuICAgICAgICAgICAgICAgIGFyaWEtc2VsZWN0ZWQ9XCJmYWxzZVwiXG4gICAgICAgICAgICAgICAga2VuZG9HcmlkTG9naWNhbENlbGxcbiAgICAgICAgICAgICAgICBbbG9naWNhbFJvd0luZGV4XT1cImxvZ2ljYWxSb3dJbmRleFwiXG4gICAgICAgICAgICAgICAgW2xvZ2ljYWxDb2xJbmRleF09XCJpbmRleCArIDFcIlxuICAgICAgICAgICAgICAgIFtsb2dpY2FsU2xhdmVDZWxsXT1cImZhbHNlXCJcbiAgICAgICAgICAgICAgICBbZ3JvdXBJdGVtXT1cIml0ZW1cIlxuICAgICAgICAgICAgICAgIFtjb2xTcGFuXT1cIjFcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJjb2x1bW4uZ3JvdXBIZWFkZXJDb2x1bW5UZW1wbGF0ZVJlZlwiIFtuZ1RlbXBsYXRlT3V0bGV0XT1cImNvbHVtbi5ncm91cEhlYWRlckNvbHVtblRlbXBsYXRlUmVmXCJcbiAgICAgICAgICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIntcbiAgICAgICAgICAgICAgICAgICAgICAgIGdyb3VwOiBpdGVtLmRhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZ2dyZWdhdGVzOiBpdGVtLmRhdGE/LmFnZ3JlZ2F0ZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogaXRlbS5kYXRhPy52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkOiBpdGVtLmRhdGE/LmZpZWxkLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXg6IGl0ZW0uaW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAkaW1wbGljaXQ6IGl0ZW0uZGF0YVxuICAgICAgICAgICAgICAgICAgICAgICAgfVwiPlxuICAgICAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbR3JvdXBzU2VydmljZSxcbiAgICAgICAgR3JvdXBJbmZvU2VydmljZV0pXG5dLCBHcm91cEhlYWRlckNvbXBvbmVudCk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgRHJvcFRhcmdldERpcmVjdGl2ZSA9IGNsYXNzIERyb3BUYXJnZXREaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQsIHNlcnZpY2UpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgICAgdGhpcy5zZXJ2aWNlID0gc2VydmljZTtcbiAgICAgICAgdGhpcy5jb250ZXh0ID0ge307XG4gICAgICAgIHRoaXMuZW50ZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMubGVhdmUgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuZHJvcCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gbmV3IFN1YnNjcmlwdGlvbigpO1xuICAgIH1cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5zZXJ2aWNlLmFkZCh0aGlzKTtcbiAgICAgICAgY29uc3QgY2hhbmdlcyA9IHRoaXMuc2VydmljZS5jaGFuZ2VzLnBpcGUoZmlsdGVyKCh7IHRhcmdldCB9KSA9PiB0YXJnZXQgPT09IHRoaXMpKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZChjaGFuZ2VzLnBpcGUoZmlsdGVyKCh7IHR5cGUgfSkgPT4gdHlwZSA9PT0gJ2xlYXZlJykpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKGUgPT4ge1xuICAgICAgICAgICAgdGhpcy5sZWF2ZS5uZXh0KHRoaXMuZXZlbnRBcmdzKGUpKTtcbiAgICAgICAgfSkpO1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuYWRkKGNoYW5nZXMucGlwZShmaWx0ZXIoKHsgdHlwZSB9KSA9PiB0eXBlID09PSAnZW50ZXInKSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoZSA9PiB7XG4gICAgICAgICAgICB0aGlzLmVudGVyLm5leHQodGhpcy5ldmVudEFyZ3MoZSkpO1xuICAgICAgICB9KSk7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQoY2hhbmdlcy5waXBlKGZpbHRlcigoeyB0eXBlIH0pID0+IHR5cGUgPT09ICdkcm9wJykpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKGUgPT4ge1xuICAgICAgICAgICAgdGhpcy5kcm9wLm5leHQodGhpcy5ldmVudEFyZ3MoZSkpO1xuICAgICAgICB9KSk7XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5zdWJzY3JpcHRpb25zKSB7XG4gICAgICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMudW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBldmVudEFyZ3MoZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdGFyZ2V0OiB0aGlzLFxuICAgICAgICAgICAgbW91c2VFdmVudDogZS5tb3VzZUV2ZW50LFxuICAgICAgICAgICAgZHJhZ2dhYmxlOiBlLmRyYWdnYWJsZVxuICAgICAgICB9O1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBEcm9wVGFyZ2V0RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJjb250ZXh0XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgRHJvcFRhcmdldERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiZW50ZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBEcm9wVGFyZ2V0RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJsZWF2ZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIERyb3BUYXJnZXREaXJlY3RpdmUucHJvdG90eXBlLCBcImRyb3BcIiwgdm9pZCAwKTtcbkRyb3BUYXJnZXREaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0Ryb3BUYXJnZXRdJ1xuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRWxlbWVudFJlZixcbiAgICAgICAgRHJhZ0FuZERyb3BTZXJ2aWNlXSlcbl0sIERyb3BUYXJnZXREaXJlY3RpdmUpO1xuXG5jb25zdCB3aXRob3V0RmllbGQgPSAoeyBmaWVsZCB9KSA9PiBpc051bGxPckVtcHR5U3RyaW5nKGZpZWxkKTtcbmNvbnN0IGFscmVhZHlHcm91cGVkID0gKHsgZ3JvdXBzLCBmaWVsZCB9KSA9PiBncm91cHMuc29tZShncm91cCA9PiBncm91cC5maWVsZCA9PT0gZmllbGQpO1xuY29uc3Qgb3ZlclNhbWVUYXJnZXQgPSAoeyB0YXJnZXQsIGZpZWxkIH0pID0+IHRhcmdldC5maWVsZCA9PT0gZmllbGQ7XG5jb25zdCBvdmVyTGFzdFRhcmdldCA9ICh7IHRhcmdldCB9KSA9PiB0YXJnZXQubGFzdFRhcmdldDtcbmNvbnN0IGlzTGFzdEdyb3VwID0gKHsgZ3JvdXBzLCBmaWVsZCB9KSA9PiBncm91cHMubWFwKGdyb3VwID0+IGdyb3VwLmZpZWxkKS5pbmRleE9mKGZpZWxkKSA9PT0gZ3JvdXBzLmxlbmd0aCAtIDE7XG5jb25zdCBpc05vdEdyb3VwYWJsZSA9IChncm91cHNTZXJ2aWNlKSA9PiAoeyBmaWVsZCB9KSA9PiAhZ3JvdXBzU2VydmljZS5pc0dyb3VwYWJsZShmaWVsZCk7XG5jb25zdCBjb2x1bW5SdWxlcyA9IChncm91cFNlcnZpY2UpID0+IG9yKHdpdGhvdXRGaWVsZCwgYWxyZWFkeUdyb3VwZWQsIGlzTm90R3JvdXBhYmxlKGdyb3VwU2VydmljZSkpO1xuY29uc3QgaW5kaWNhdG9yUnVsZXMgPSBvcihvdmVyU2FtZVRhcmdldCwgYW5kKG92ZXJMYXN0VGFyZ2V0LCBpc0xhc3RHcm91cCkpO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBHcm91cFBhbmVsQ29tcG9uZW50ID0gY2xhc3MgR3JvdXBQYW5lbENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoaGludCwgY3VlLCBncm91cEluZm9TZXJ2aWNlLCBsb2NhbGl6YXRpb24sIGNkKSB7XG4gICAgICAgIHRoaXMuaGludCA9IGhpbnQ7XG4gICAgICAgIHRoaXMuY3VlID0gY3VlO1xuICAgICAgICB0aGlzLmdyb3VwSW5mb1NlcnZpY2UgPSBncm91cEluZm9TZXJ2aWNlO1xuICAgICAgICB0aGlzLmxvY2FsaXphdGlvbiA9IGxvY2FsaXphdGlvbjtcbiAgICAgICAgdGhpcy5jZCA9IGNkO1xuICAgICAgICB0aGlzLmNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5ncm91cHMgPSBbXTtcbiAgICAgICAgdGhpcy5kcm9wVGFyZ2V0cyA9IG5ldyBRdWVyeUxpc3QoKTtcbiAgICAgICAgdGhpcy5ncm91cFRpdGxlcyA9IFtdO1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IG5ldyBTdWJzY3JpcHRpb24oKTtcbiAgICB9XG4gICAgZ2V0IGdyb3VwSGVhZGVyQ2xhc3MoKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBzZXQgdGV4dCh2YWx1ZSkge1xuICAgICAgICB0aGlzLmVtcHR5VGV4dCA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXQgdGV4dCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZW1wdHlUZXh0ID8gdGhpcy5lbXB0eVRleHQgOiB0aGlzLmxvY2FsaXphdGlvbi5nZXQoJ2dyb3VwUGFuZWxFbXB0eScpO1xuICAgIH1cbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLmFkZChvYnNlcnZlKHRoaXMuZHJvcFRhcmdldHMpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKHRoaXMuYXR0YWNoVGFyZ2V0cy5iaW5kKHRoaXMpKSk7XG4gICAgfVxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbi5hZGQodGhpcy5sb2NhbGl6YXRpb24uY2hhbmdlcy5zdWJzY3JpYmUoKCkgPT4gdGhpcy5jZC5tYXJrRm9yQ2hlY2soKSkpO1xuICAgIH1cbiAgICBuZ0RvQ2hlY2soKSB7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRUaXRsZXMgPSB0aGlzLmdyb3Vwcy5tYXAoZ3JvdXAgPT4gdGhpcy5ncm91cEluZm9TZXJ2aWNlLmdyb3VwVGl0bGUoZ3JvdXApKTtcbiAgICAgICAgaWYgKGN1cnJlbnRUaXRsZXMubGVuZ3RoICE9PSB0aGlzLmdyb3VwVGl0bGVzLmxlbmd0aCB8fCBjdXJyZW50VGl0bGVzLnNvbWUoKGN1cnJlbnQsIGlkeCkgPT4gY3VycmVudCAhPT0gdGhpcy5ncm91cFRpdGxlc1tpZHhdKSkge1xuICAgICAgICAgICAgdGhpcy5ncm91cFRpdGxlcyA9IGN1cnJlbnRUaXRsZXM7XG4gICAgICAgICAgICB0aGlzLmNkLm1hcmtGb3JDaGVjaygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5zdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0U3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnRhcmdldFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRpcmVjdGlvbkNoYW5nZShncm91cCkge1xuICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuZ3JvdXBzLmZpbmRJbmRleCh4ID0+IHguZmllbGQgPT09IGdyb3VwLmZpZWxkKTtcbiAgICAgICAgY29uc3QgZ3JvdXBzID0gWy4uLnRoaXMuZ3JvdXBzLnNsaWNlKDAsIGluZGV4KSwgZ3JvdXAsIC4uLnRoaXMuZ3JvdXBzLnNsaWNlKGluZGV4ICsgMSldO1xuICAgICAgICB0aGlzLmNoYW5nZS5lbWl0KGdyb3Vwcyk7XG4gICAgfVxuICAgIGluc2VydChmaWVsZCwgaW5kZXgpIHtcbiAgICAgICAgY29uc3QgZ3JvdXBzID0gdGhpcy5ncm91cHMuZmlsdGVyKHggPT4geC5maWVsZCAhPT0gZmllbGQpO1xuICAgICAgICBpZiAoZ3JvdXBzLmxlbmd0aCB8fCB0aGlzLmdyb3Vwcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlLmVtaXQoWy4uLmdyb3Vwcy5zbGljZSgwLCBpbmRleCksIHsgZmllbGQ6IGZpZWxkIH0sIC4uLmdyb3Vwcy5zbGljZShpbmRleCldKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW1vdmUoZ3JvdXApIHtcbiAgICAgICAgdGhpcy5jaGFuZ2UuZW1pdCh0aGlzLmdyb3Vwcy5maWx0ZXIoeCA9PiB4LmZpZWxkICE9PSBncm91cC5maWVsZCkpO1xuICAgIH1cbiAgICBjYW5Ecm9wKGRyYWdnYWJsZSwgdGFyZ2V0KSB7XG4gICAgICAgIGNvbnN0IGlzSW5kaWNhdG9yID0gZHJhZ2dhYmxlLnR5cGUgPT09ICdncm91cEluZGljYXRvcic7XG4gICAgICAgIGNvbnN0IHJ1bGVzID0gaXNJbmRpY2F0b3JcbiAgICAgICAgICAgID8gaW5kaWNhdG9yUnVsZXNcbiAgICAgICAgICAgIDogY29sdW1uUnVsZXModGhpcy5ncm91cEluZm9TZXJ2aWNlKTtcbiAgICAgICAgcmV0dXJuICFydWxlcyh7XG4gICAgICAgICAgICBmaWVsZDogZHJhZ2dhYmxlLmZpZWxkLFxuICAgICAgICAgICAgZ3JvdXBzOiB0aGlzLmdyb3VwcyxcbiAgICAgICAgICAgIHRhcmdldFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgYXR0YWNoVGFyZ2V0cygpIHtcbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0U3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnRhcmdldFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudGFyZ2V0U3Vic2NyaXB0aW9uID0gbmV3IFN1YnNjcmlwdGlvbigpO1xuICAgICAgICBjb25zdCBlbnRlclN0cmVhbSA9IHRoaXMuZHJvcFRhcmdldHNcbiAgICAgICAgICAgIC5yZWR1Y2UoKGFjYywgdGFyZ2V0KSA9PiBtZXJnZShhY2MsIHRhcmdldC5lbnRlciksIGZyb20oW10pKTtcbiAgICAgICAgY29uc3QgbGVhdmVTdHJlYW0gPSB0aGlzLmRyb3BUYXJnZXRzXG4gICAgICAgICAgICAucmVkdWNlKChhY2MsIHRhcmdldCkgPT4gbWVyZ2UoYWNjLCB0YXJnZXQubGVhdmUpLCBmcm9tKFtdKSk7XG4gICAgICAgIGNvbnN0IGRyb3BTdHJlYW0gPSB0aGlzLmRyb3BUYXJnZXRzXG4gICAgICAgICAgICAucmVkdWNlKChhY2MsIHRhcmdldCkgPT4gbWVyZ2UoYWNjLCB0YXJnZXQuZHJvcCksIGZyb20oW10pKTtcbiAgICAgICAgdGhpcy50YXJnZXRTdWJzY3JpcHRpb24uYWRkKGVudGVyU3RyZWFtLnBpcGUodGFwKF8gPT4gdGhpcy5oaW50LnJlbW92ZUxvY2soKSksIGZpbHRlcigoeyBkcmFnZ2FibGUsIHRhcmdldCB9KSA9PiB0aGlzLmNhbkRyb3AoZHJhZ2dhYmxlLmNvbnRleHQsIHRhcmdldC5jb250ZXh0KSksIHRhcCh0aGlzLmVudGVyLmJpbmQodGhpcykpLCBzd2l0Y2hNYXBUbyhkcm9wU3RyZWFtLnBpcGUodGFrZVVudGlsKGxlYXZlU3RyZWFtLnBpcGUodGFwKHRoaXMubGVhdmUuYmluZCh0aGlzKSkpKSkpKS5zdWJzY3JpYmUodGhpcy5kcm9wLmJpbmQodGhpcykpKTtcbiAgICB9XG4gICAgZW50ZXIoeyBkcmFnZ2FibGUsIHRhcmdldCB9KSB7XG4gICAgICAgIHRoaXMuaGludC5lbmFibGUoKTtcbiAgICAgICAgbGV0IGJlZm9yZSA9IHRhcmdldC5jb250ZXh0Lmxhc3RUYXJnZXQgfHwgaXNUYXJnZXRCZWZvcmUoZHJhZ2dhYmxlLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgdGFyZ2V0LmVsZW1lbnQubmF0aXZlRWxlbWVudCk7XG4gICAgICAgIGlmICh0aGlzLmxvY2FsaXphdGlvbi5ydGwpIHtcbiAgICAgICAgICAgIGJlZm9yZSA9ICFiZWZvcmU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jdWUucG9zaXRpb24ocG9zaXRpb24odGFyZ2V0LmVsZW1lbnQubmF0aXZlRWxlbWVudCwgYmVmb3JlKSk7XG4gICAgfVxuICAgIGxlYXZlKCkge1xuICAgICAgICB0aGlzLmhpbnQuZGlzYWJsZSgpO1xuICAgICAgICB0aGlzLmN1ZS5oaWRlKCk7XG4gICAgfVxuICAgIGRyb3AoeyB0YXJnZXQsIGRyYWdnYWJsZSB9KSB7XG4gICAgICAgIGNvbnN0IGZpZWxkID0gZHJhZ2dhYmxlLmNvbnRleHQuZmllbGQ7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5kcm9wVGFyZ2V0cy50b0FycmF5KCkuaW5kZXhPZih0YXJnZXQpO1xuICAgICAgICB0aGlzLmluc2VydChmaWVsZCwgaW5kZXgpO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgR3JvdXBQYW5lbENvbXBvbmVudC5wcm90b3R5cGUsIFwiY2hhbmdlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZyhcImNsYXNzLmstZ3JvdXBpbmctaGVhZGVyXCIpLFxuICAgIEhvc3RCaW5kaW5nKFwiY2xhc3Muay1ncm91cGluZy1oZWFkZXItZmxleFwiKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgR3JvdXBQYW5lbENvbXBvbmVudC5wcm90b3R5cGUsIFwiZ3JvdXBIZWFkZXJDbGFzc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtTdHJpbmddKVxuXSwgR3JvdXBQYW5lbENvbXBvbmVudC5wcm90b3R5cGUsIFwidGV4dFwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KVxuXSwgR3JvdXBQYW5lbENvbXBvbmVudC5wcm90b3R5cGUsIFwiZ3JvdXBzXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBWaWV3Q2hpbGRyZW4oRHJvcFRhcmdldERpcmVjdGl2ZSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFF1ZXJ5TGlzdClcbl0sIEdyb3VwUGFuZWxDb21wb25lbnQucHJvdG90eXBlLCBcImRyb3BUYXJnZXRzXCIsIHZvaWQgMCk7XG5Hcm91cFBhbmVsQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZ3JpZC1ncm91cC1wYW5lbCcsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxuZy10ZW1wbGF0ZSBbbmdJZl09XCJncm91cHMubGVuZ3RoID09PSAwXCI+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgY2xhc3M9XCJrLWluZGljYXRvci1jb250YWluZXJcIlxuICAgICAgICAgICAgICAgIFtjb250ZXh0XT1cIntcbiAgICAgICAgICAgICAgICAgICAgbGFzdFRhcmdldDogdHJ1ZVxuICAgICAgICAgICAgICAgIH1cIlxuICAgICAgICAgICAgICAgIGtlbmRvRHJvcFRhcmdldD5cbiAgICAgICAgICAgICAgICB7eyB0ZXh0IH19XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgPGRpdiAqbmdGb3I9XCJsZXQgZ3JvdXAgb2YgZ3JvdXBzOyBsZXQgaW5kZXggPSBpbmRleDtcIlxuICAgICAgICAgICAgY2xhc3M9XCJrLWluZGljYXRvci1jb250YWluZXJcIlxuICAgICAgICAgICAgW2NvbnRleHRdPVwie1xuICAgICAgICAgICAgICAgIGZpZWxkOiBncm91cC5maWVsZFxuICAgICAgICAgICAgfVwiXG4gICAgICAgICAgICBrZW5kb0Ryb3BUYXJnZXQ+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAga2VuZG9EcmFnZ2FibGVDb2x1bW5cbiAgICAgICAgICAgICAgICBbZW5hYmxlRHJhZ109XCJ0cnVlXCJcbiAgICAgICAgICAgICAgICBbY29udGV4dF09XCJ7XG4gICAgICAgICAgICAgICAgICAgIGZpZWxkOiBncm91cC5maWVsZCxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2dyb3VwSW5kaWNhdG9yJyxcbiAgICAgICAgICAgICAgICAgICAgaGludDogIGdyb3VwVGl0bGVzW2luZGV4XVxuICAgICAgICAgICAgICAgIH1cIlxuICAgICAgICAgICAgICAgIGtlbmRvR3JvdXBJbmRpY2F0b3JcbiAgICAgICAgICAgICAgICBrZW5kb0RyYWdnYWJsZVxuICAgICAgICAgICAgICAgIFtncm91cF09XCJncm91cFwiXG4gICAgICAgICAgICAgICAgW2dyb3VwVGl0bGVdPVwiZ3JvdXBUaXRsZXNbaW5kZXhdXCJcbiAgICAgICAgICAgICAgICAoZGlyZWN0aW9uQ2hhbmdlKT1cImRpcmVjdGlvbkNoYW5nZSgkZXZlbnQpXCJcbiAgICAgICAgICAgICAgICAocmVtb3ZlKT1cInJlbW92ZSgkZXZlbnQpXCI+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJrLWluZGljYXRvci1jb250YWluZXJcIlxuICAgICAgICAgICAgKm5nSWY9XCJncm91cHMubGVuZ3RoICE9PSAwXCJcbiAgICAgICAgICAgIFtjb250ZXh0XT1cIntcbiAgICAgICAgICAgICAgICBsYXN0VGFyZ2V0OiB0cnVlXG4gICAgICAgICAgICB9XCJcbiAgICAgICAgICAgIGtlbmRvRHJvcFRhcmdldD4mbmJzcDs8L2Rpdj5cbiAgICBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtEcmFnSGludFNlcnZpY2UsXG4gICAgICAgIERyb3BDdWVTZXJ2aWNlLFxuICAgICAgICBHcm91cEluZm9TZXJ2aWNlLFxuICAgICAgICBMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBDaGFuZ2VEZXRlY3RvclJlZl0pXG5dLCBHcm91cFBhbmVsQ29tcG9uZW50KTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBHcm91cEluZGljYXRvckNvbXBvbmVudCA9IGNsYXNzIEdyb3VwSW5kaWNhdG9yQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZGlyZWN0aW9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLnJlbW92ZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICB9XG4gICAgZ2V0IGdyb3VwSW5kaWNhdG9yQ2xhc3MoKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBnZXQgZGlyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ncm91cC5kaXIgPyB0aGlzLmdyb3VwLmRpciA6IFwiYXNjXCI7XG4gICAgfVxuICAgIHRvZ2dsZURpcmVjdGlvbigpIHtcbiAgICAgICAgdGhpcy5kaXJlY3Rpb25DaGFuZ2UuZW1pdCh7XG4gICAgICAgICAgICBkaXI6IHRoaXMuZGlyID09PSBcImFzY1wiID8gXCJkZXNjXCIgOiBcImFzY1wiLFxuICAgICAgICAgICAgZmllbGQ6IHRoaXMuZ3JvdXAuZmllbGRcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmVtb3ZlRGVzY3JpcHRvcigpIHtcbiAgICAgICAgdGhpcy5yZW1vdmUuZW1pdCh7XG4gICAgICAgICAgICBkaXI6IHRoaXMuZ3JvdXAuZGlyLFxuICAgICAgICAgICAgZmllbGQ6IHRoaXMuZ3JvdXAuZmllbGRcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIEdyb3VwSW5kaWNhdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJkaXJlY3Rpb25DaGFuZ2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBHcm91cEluZGljYXRvckNvbXBvbmVudC5wcm90b3R5cGUsIFwicmVtb3ZlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBHcm91cEluZGljYXRvckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZ3JvdXBcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIEdyb3VwSW5kaWNhdG9yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJncm91cFRpdGxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZyhcImNsYXNzLmstZ3JvdXAtaW5kaWNhdG9yXCIpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBHcm91cEluZGljYXRvckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZ3JvdXBJbmRpY2F0b3JDbGFzc1wiLCBudWxsKTtcbkdyb3VwSW5kaWNhdG9yQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JvdXBJbmRpY2F0b3JdJyxcbiAgICAgICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGEgaHJlZj1cIiNcIiBjbGFzcz1cImstbGlua1wiIHRhYmluZGV4PVwiLTFcIiAoY2xpY2spPVwidG9nZ2xlRGlyZWN0aW9uKClcIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiay1pY29uXCJcbiAgICAgICAgICAgICAgICBbY2xhc3Muay1pLXNvcnQtYXNjLXNtXT1cImRpciA9PT0gJ2FzYydcIlxuICAgICAgICAgICAgICAgIFtjbGFzcy5rLWktc29ydC1kZXNjLXNtXT1cImRpciA9PT0gJ2Rlc2MnXCI+PC9zcGFuPlxuICAgICAgICAgICAge3tncm91cFRpdGxlfX08L2E+XG4gICAgICAgIDxhIGNsYXNzPVwiay1idXR0b24gay1idXR0b24taWNvbiBrLWJhcmVcIiB0YWJpbmRleD1cIi0xXCIgKGNsaWNrKT1cInJlbW92ZURlc2NyaXB0b3IoKVwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJrLWljb24gay1pLWdyb3VwLWRlbGV0ZVwiPjwvc3Bhbj5cbiAgICAgICAgPC9hPlxuICAgIGBcbiAgICB9KVxuXSwgR3JvdXBJbmRpY2F0b3JDb21wb25lbnQpO1xuXG4vLyBUT0RPXG4vLyB0c2xpbnQ6ZGlzYWJsZTpyeGpzLW5vLXVuc2FmZS10YWtldW50aWxcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBwcmV2ZW50T25EYmxDbGljayA9IHJlbGVhc2UgPT4gbW91c2VEb3duID0+IG9mKG1vdXNlRG93bikucGlwZShkZWxheSgxNTApLCB0YWtlVW50aWwocmVsZWFzZSkpO1xuY29uc3QgaGFzQ2xhc3MgPSBjbGFzc05hbWUgPT4gZWwgPT4gbmV3IFJlZ0V4cChgKF58ICkke2NsYXNzTmFtZX0oIHwkKWApLnRlc3QoZWwuY2xhc3NOYW1lKTtcbmNvbnN0IGlzRGVsZXRlQnV0dG9uID0gb3IoaGFzQ2xhc3MoXCJrLWktZ3JvdXAtZGVsZXRlXCIpLCBoYXNDbGFzcyhcImstYnV0dG9uLWljb25cIikpO1xuY29uc3QgaXNTb3J0SWNvbiA9IG9yKGhhc0NsYXNzKFwiay1pLXNvcnQtYXNjLXNtXCIpLCBoYXNDbGFzcyhcImstaS1zb3J0LWRlc2Mtc21cIikpO1xuY29uc3Qgc2tpcEJ1dHRvbnMgPSBhbmQobm90KGlzRGVsZXRlQnV0dG9uKSwgbm90KGlzU29ydEljb24pLCBub3QoaXNGb2N1c2FibGVXaXRoVGFiS2V5KSwgbm90KG1hdGNoZXNOb2RlTmFtZShcImxhYmVsXCIpKSk7XG5jb25zdCBlbGVtZW50VW5kZXJDdXJzb3IgPSAoeyBjbGllbnRYLCBjbGllbnRZIH0pID0+IGRvY3VtZW50LmVsZW1lbnRGcm9tUG9pbnQoY2xpZW50WCwgY2xpZW50WSk7XG5jb25zdCBoaWRlVGhlblNob3cgPSAoZWxlbWVudCwgY29udCkgPT4ge1xuICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICBjb25zdCByZXN1bHQgPSBjb250KCk7XG4gICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgRHJhZ2dhYmxlQ29sdW1uRGlyZWN0aXZlID0gY2xhc3MgRHJhZ2dhYmxlQ29sdW1uRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3RvcihkcmFnZ2FibGUsIGVsZW1lbnQsIHpvbmUsIHNlcnZpY2UsIGhpbnQsIGN1ZSwgbmF2LCByZW5kZXJlcikge1xuICAgICAgICB0aGlzLmRyYWdnYWJsZSA9IGRyYWdnYWJsZTtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgICAgdGhpcy56b25lID0gem9uZTtcbiAgICAgICAgdGhpcy5zZXJ2aWNlID0gc2VydmljZTtcbiAgICAgICAgdGhpcy5oaW50ID0gaGludDtcbiAgICAgICAgdGhpcy5jdWUgPSBjdWU7XG4gICAgICAgIHRoaXMubmF2ID0gbmF2O1xuICAgICAgICB0aGlzLnJlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgICAgIHRoaXMuY29udGV4dCA9IHt9O1xuICAgICAgICB0aGlzLmRyYWcgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucyA9IG5ldyBTdWJzY3JpcHRpb24oKTtcbiAgICB9XG4gICAgc2V0IGVuYWJsZURyYWcoZW5hYmxlZCkge1xuICAgICAgICB0aGlzLmVuYWJsZWQgPSBlbmFibGVkO1xuICAgICAgICB0aGlzLnVwZGF0ZVRvdWNoQWN0aW9uKCk7XG4gICAgfVxuICAgIGdldCBob3N0Q2xhc3MoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVuYWJsZWQ7XG4gICAgfVxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuYWRkKHRoaXMuem9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB0aGlzLmRyYWdnYWJsZS5rZW5kb1ByZXNzLnBpcGUoZmlsdGVyKF8gPT4gdGhpcy5lbmFibGVkKSwgZmlsdGVyKCh7IG9yaWdpbmFsRXZlbnQ6IHsgdGFyZ2V0IH0gfSkgPT4gdGFyZ2V0ID09PSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCB8fCBza2lwQnV0dG9ucyh0YXJnZXQpKSwgdGFwKChlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBvcmlnaW5hbEV2ZW50ID0gZS5vcmlnaW5hbEV2ZW50O1xuICAgICAgICAgICAgaWYgKCFlLmlzVG91Y2gpIHtcbiAgICAgICAgICAgICAgICBvcmlnaW5hbEV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLm5hdi5uYXZpZ2F0ZVRvKG9yaWdpbmFsRXZlbnQudGFyZ2V0KTtcbiAgICAgICAgfSksIHN3aXRjaE1hcChwcmV2ZW50T25EYmxDbGljayh0aGlzLmRyYWdnYWJsZS5rZW5kb1JlbGVhc2UpKSwgdGFwKChfKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmhpbnQuY3JlYXRlKHRoaXMuY29udGV4dC5oaW50KTtcbiAgICAgICAgICAgIHRoaXMuY3VlLmNyZWF0ZSgpO1xuICAgICAgICB9KSwgc3dpdGNoTWFwKGRvd24gPT4gdGhpcy5kcmFnZ2FibGUua2VuZG9EcmFnLnBpcGUodGFwKChlKSA9PiB7XG4gICAgICAgICAgICBpZiAoZS5pc1RvdWNoKSB7XG4gICAgICAgICAgICAgICAgZS5vcmlnaW5hbEV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pLCB0YXAodGhpcy5oaW50LmF0dGFjaCgpKSwgdGFwKHRoaXMuY3VlLmF0dGFjaCgpKSwgdGFrZVVudGlsKHRoaXMuZHJhZ2dhYmxlLmtlbmRvUmVsZWFzZSksIG1hcChtb3ZlID0+ICh7IG1vdmUsIGRvd24gfSkpKSksIHRhcCh0aGlzLnBlcmZvcm1EcmFnLmJpbmQodGhpcykpLCBzd2l0Y2hNYXBUbyh0aGlzLmRyYWdnYWJsZS5rZW5kb1JlbGVhc2UpKS5zdWJzY3JpYmUodGhpcy5kcm9wLmJpbmQodGhpcykpKSk7XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5zdWJzY3JpcHRpb25zKSB7XG4gICAgICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMudW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBkcm9wKHVwRXZlbnQpIHtcbiAgICAgICAgdGhpcy5oaW50LnJlbW92ZSgpO1xuICAgICAgICB0aGlzLmN1ZS5yZW1vdmUoKTtcbiAgICAgICAgdGhpcy5zZXJ2aWNlLm5vdGlmeURyb3AodGhpcywgdXBFdmVudCk7XG4gICAgfVxuICAgIHBlcmZvcm1EcmFnKHsgbW92ZSB9KSB7XG4gICAgICAgIHRoaXMuaGludC5tb3ZlKG1vdmUpO1xuICAgICAgICBjb25zdCBjdXJzb3JFbGVtZW50ID0gdGhpcy5lbGVtZW50VW5kZXJDdXJzb3IobW92ZSk7XG4gICAgICAgIGlmIChjdXJzb3JFbGVtZW50KSB7XG4gICAgICAgICAgICB0aGlzLnNlcnZpY2Uubm90aWZ5RHJhZyh0aGlzLCBjdXJzb3JFbGVtZW50LCBtb3ZlKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmRyYWcuZW1pdCh7XG4gICAgICAgICAgICBkcmFnZ2FibGU6IHRoaXMsXG4gICAgICAgICAgICBtb3VzZUV2ZW50OiBtb3ZlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbGVtZW50VW5kZXJDdXJzb3IobW91c2VFdmVudCkge1xuICAgICAgICB0aGlzLmhpbnQuaGlkZSgpO1xuICAgICAgICBsZXQgdGFyZ2V0ID0gZWxlbWVudFVuZGVyQ3Vyc29yKG1vdXNlRXZlbnQpO1xuICAgICAgICBpZiAodGFyZ2V0ICYmIC9rLWdyb3VwaW5nLWRyb3BjbHVlLy50ZXN0KHRhcmdldC5jbGFzc05hbWUpKSB7XG4gICAgICAgICAgICB0YXJnZXQgPSBoaWRlVGhlblNob3codGFyZ2V0LCBlbGVtZW50VW5kZXJDdXJzb3IuYmluZCh0aGlzLCBtb3VzZUV2ZW50KSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5oaW50LnNob3coKTtcbiAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9XG4gICAgdXBkYXRlVG91Y2hBY3Rpb24oKSB7XG4gICAgICAgIGlmICghdGhpcy5lbGVtZW50KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5lbmFibGVkID8gdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ2stdG91Y2gtYWN0aW9uLW5vbmUnKSA6XG4gICAgICAgICAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZUNsYXNzKHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LCAnay10b3VjaC1hY3Rpb24tbm9uZScpO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBEcmFnZ2FibGVDb2x1bW5EaXJlY3RpdmUucHJvdG90eXBlLCBcImNvbnRleHRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbQm9vbGVhbl0pXG5dLCBEcmFnZ2FibGVDb2x1bW5EaXJlY3RpdmUucHJvdG90eXBlLCBcImVuYWJsZURyYWdcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgRHJhZ2dhYmxlQ29sdW1uRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJkcmFnXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnY2xhc3Muay1ncmlkLWRyYWdnYWJsZS1oZWFkZXInKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgRHJhZ2dhYmxlQ29sdW1uRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJob3N0Q2xhc3NcIiwgbnVsbCk7XG5EcmFnZ2FibGVDb2x1bW5EaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0RyYWdnYWJsZUNvbHVtbl0nXG4gICAgfSksXG4gICAgX19wYXJhbSgwLCBIb3N0KCkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRHJhZ2dhYmxlRGlyZWN0aXZlLFxuICAgICAgICBFbGVtZW50UmVmLFxuICAgICAgICBOZ1pvbmUsXG4gICAgICAgIERyYWdBbmREcm9wU2VydmljZSxcbiAgICAgICAgRHJhZ0hpbnRTZXJ2aWNlLFxuICAgICAgICBEcm9wQ3VlU2VydmljZSxcbiAgICAgICAgTmF2aWdhdGlvblNlcnZpY2UsXG4gICAgICAgIFJlbmRlcmVyMl0pXG5dLCBEcmFnZ2FibGVDb2x1bW5EaXJlY3RpdmUpO1xuXG5jb25zdCBleHBvcnRlZCA9IFtcbiAgICBEcmFnZ2FibGVDb2x1bW5EaXJlY3RpdmUsXG4gICAgRHJvcFRhcmdldERpcmVjdGl2ZVxuXTtcbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgRHJhZ0FuZERyb3BNb2R1bGUgPSBjbGFzcyBEcmFnQW5kRHJvcE1vZHVsZSB7XG59O1xuRHJhZ0FuZERyb3BNb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICBOZ01vZHVsZSh7XG4gICAgICAgIGRlY2xhcmF0aW9uczogW2V4cG9ydGVkXSxcbiAgICAgICAgZXhwb3J0czogW2V4cG9ydGVkXVxuICAgIH0pXG5dLCBEcmFnQW5kRHJvcE1vZHVsZSk7XG5cbmNvbnN0IGV4cG9ydGVkTW9kdWxlcyQxID0gW1xuICAgIEdyb3VwSGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgR3JvdXBIZWFkZXJDb2x1bW5UZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBHcm91cEZvb3RlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIEdyb3VwSGVhZGVyQ29tcG9uZW50LFxuICAgIEdyb3VwUGFuZWxDb21wb25lbnQsXG4gICAgR3JvdXBJbmRpY2F0b3JDb21wb25lbnRcbl07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IEdyb3VwTW9kdWxlID0gY2xhc3MgR3JvdXBNb2R1bGUge1xuICAgIHN0YXRpYyBleHBvcnRzKCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgR3JvdXBIZWFkZXJUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgICAgIEdyb3VwSGVhZGVyQ29sdW1uVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgICAgICBHcm91cEZvb3RlclRlbXBsYXRlRGlyZWN0aXZlXG4gICAgICAgIF07XG4gICAgfVxufTtcbkdyb3VwTW9kdWxlID0gX19kZWNvcmF0ZShbXG4gICAgTmdNb2R1bGUoe1xuICAgICAgICBkZWNsYXJhdGlvbnM6IFtleHBvcnRlZE1vZHVsZXMkMV0sXG4gICAgICAgIGV4cG9ydHM6IFtleHBvcnRlZE1vZHVsZXMkMV0sXG4gICAgICAgIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIFNoYXJlZE1vZHVsZSwgRHJhZ0FuZERyb3BNb2R1bGVdXG4gICAgfSlcbl0sIEdyb3VwTW9kdWxlKTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IERFRkFVTFRTID0ge1xuICAgIGFsbG93VW5zb3J0OiB0cnVlLFxuICAgIG1vZGU6ICdzaW5nbGUnLFxuICAgIHNob3dJbmRleGVzOiB0cnVlLFxuICAgIGluaXRpYWxEaXJlY3Rpb246ICdhc2MnXG59O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IG5vcm1hbGl6ZSQxID0gKC4uLnNldHRpbmdzKSA9PiBPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUUywgLi4uc2V0dGluZ3MpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgaGFzRmlsdGVyID0gKHNldHRpbmdzLCBjb2x1bW4pID0+IHNldHRpbmdzLmZpbHRlciAhPT0gZmFsc2UgJiYgY29sdW1uLmZpZWxkICYmIGNvbHVtbi5maWx0ZXJhYmxlO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGhhc1NvcnQgPSAoc2V0dGluZ3MsIGNvbHVtbikgPT4gc2V0dGluZ3Muc29ydCAhPT0gZmFsc2UgJiYgY29sdW1uLmZpZWxkICYmIGNvbHVtbi5zb3J0YWJsZTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBoYXNMb2NrID0gKHNldHRpbmdzLCBjb2x1bW4pID0+IHNldHRpbmdzLmxvY2sgJiYgY29sdW1uLmxvY2thYmxlICYmICEoY29sdW1uLnBhcmVudCAmJiAhY29sdW1uLnBhcmVudC5pc1NwYW5Db2x1bW4pO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGhhc1N0aWNrID0gKHNldHRpbmdzLCBjb2x1bW4pID0+IHNldHRpbmdzLnN0aWNrICYmIGNvbHVtbi5zdGlja2FibGUgJiYgIShjb2x1bW4ucGFyZW50ICYmICFjb2x1bW4ucGFyZW50LmlzU3BhbkNvbHVtbik7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgaGFzUG9zaXRpb24gPSAoc2V0dGluZ3MsIGNvbHVtbikgPT4gc2V0dGluZ3Muc2V0Q29sdW1uUG9zaXRpb24gJiYgKGNvbHVtbi5zdGlja2FibGUgfHwgY29sdW1uLmxvY2thYmxlKSAmJiAhKGNvbHVtbi5wYXJlbnQgJiYgIWNvbHVtbi5wYXJlbnQuaXNTcGFuQ29sdW1uKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBoYXNDb2x1bW5DaG9vc2VyID0gKHNldHRpbmdzKSA9PiBzZXR0aW5ncy5jb2x1bW5DaG9vc2VyICE9PSBmYWxzZTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBoYXNJdGVtcyA9IChzZXR0aW5ncywgY29sdW1uKSA9PiBoYXNDb2x1bW5DaG9vc2VyKHNldHRpbmdzKSB8fCBoYXNMb2NrKHNldHRpbmdzLCBjb2x1bW4pIHx8IGhhc1NvcnQoc2V0dGluZ3MsIGNvbHVtbikgfHwgaGFzRmlsdGVyKHNldHRpbmdzLCBjb2x1bW4pO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IEZpbHRlck1lbnVDb21wb25lbnQgPSBjbGFzcyBGaWx0ZXJNZW51Q29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3RvcihmaWx0ZXJTZXJ2aWNlLCBwb3B1cFNlcnZpY2UsIGxvY2FsaXphdGlvbiwgbmF2aWdhdGlvblNlcnZpY2UpIHtcbiAgICAgICAgdGhpcy5maWx0ZXJTZXJ2aWNlID0gZmlsdGVyU2VydmljZTtcbiAgICAgICAgdGhpcy5wb3B1cFNlcnZpY2UgPSBwb3B1cFNlcnZpY2U7XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uID0gbG9jYWxpemF0aW9uO1xuICAgICAgICB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlID0gbmF2aWdhdGlvblNlcnZpY2U7XG4gICAgICAgIHRoaXMudGFiSW5kZXggPSAnLTEnO1xuICAgIH1cbiAgICBnZXQgaGFzRmlsdGVycygpIHtcbiAgICAgICAgcmV0dXJuIGZpbHRlcnNCeUZpZWxkKHRoaXMuZmlsdGVyLCAodGhpcy5jb2x1bW4gfHwge30pLmZpZWxkKS5sZW5ndGggPiAwO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGZpbHRlckxhYmVsKCkge1xuICAgICAgICBjb25zdCBsb2NhbGl6YXRpb25Nc2cgPSB0aGlzLmxvY2FsaXphdGlvbi5nZXQoJ2ZpbHRlck1lbnVUaXRsZScpIHx8ICcnO1xuICAgICAgICBjb25zdCBjb2x1bW5OYW1lID0gdGhpcy5jb2x1bW4udGl0bGUgfHwgdGhpcy5jb2x1bW4uZmllbGQ7XG4gICAgICAgIHJldHVybiByZXBsYWNlTWVzc2FnZVBsYWNlaG9sZGVyKGxvY2FsaXphdGlvbk1zZywgJ2NvbHVtbk5hbWUnLCBjb2x1bW5OYW1lKTtcbiAgICB9XG4gICAgdG9nZ2xlKGFuY2hvciwgdGVtcGxhdGUpIHtcbiAgICAgICAgdGhpcy5wb3B1cFJlZiA9IHRoaXMucG9wdXBTZXJ2aWNlLm9wZW4oYW5jaG9yLCB0ZW1wbGF0ZSwgdGhpcy5wb3B1cFJlZik7XG4gICAgICAgIGlmICghdGhpcy5wb3B1cFJlZikge1xuICAgICAgICAgICAgaWYgKHRoaXMubmF2aWdhdGlvblNlcnZpY2UuZW5hYmxlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvblNlcnZpY2UuZm9jdXNDZWxsKDAsIHRoaXMuY29sdW1uLmxlYWZJbmRleCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFuY2hvci5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgdGhpcy5wb3B1cFNlcnZpY2UuZGVzdHJveSgpO1xuICAgICAgICBpZiAodGhpcy5uYXZpZ2F0aW9uU2VydmljZS5lbmFibGVkKSB7XG4gICAgICAgICAgICB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmZvY3VzQ2VsbCgwLCB0aGlzLmNvbHVtbi5sZWFmSW5kZXgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5hbmNob3IubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICAgICAgICB9XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIENvbHVtbkNvbXBvbmVudClcbl0sIEZpbHRlck1lbnVDb21wb25lbnQucHJvdG90eXBlLCBcImNvbHVtblwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgRmlsdGVyTWVudUNvbXBvbmVudC5wcm90b3R5cGUsIFwiZmlsdGVyXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBWaWV3Q2hpbGQoJ2FuY2hvcicsIHsgc3RhdGljOiB0cnVlIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFbGVtZW50UmVmKVxuXSwgRmlsdGVyTWVudUNvbXBvbmVudC5wcm90b3R5cGUsIFwiYW5jaG9yXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBWaWV3Q2hpbGQoJ3RlbXBsYXRlJywgeyBzdGF0aWM6IHRydWUsIHJlYWQ6IFRlbXBsYXRlUmVmIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBUZW1wbGF0ZVJlZilcbl0sIEZpbHRlck1lbnVDb21wb25lbnQucHJvdG90eXBlLCBcInRlbXBsYXRlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBGaWx0ZXJNZW51Q29tcG9uZW50LnByb3RvdHlwZSwgXCJ0YWJJbmRleFwiLCB2b2lkIDApO1xuRmlsdGVyTWVudUNvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZ3JpZC1maWx0ZXItbWVudScsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxhICNhbmNob3JcbiAgICAgICAgICAgIFtuZ0NsYXNzXT1cInsnay1ncmlkLWZpbHRlcic6dHJ1ZSwgJ2stc3RhdGUtYWN0aXZlJzogaGFzRmlsdGVyc31cIlxuICAgICAgICAgICAgW3RhYmluZGV4XT1cInRhYkluZGV4XCJcbiAgICAgICAgICAgIChjbGljayk9XCJ0b2dnbGUoYW5jaG9yLCB0ZW1wbGF0ZSlcIlxuICAgICAgICAgICAgKGtleWRvd24uZW50ZXIpPVwiJGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpXCJcbiAgICAgICAgICAgIGhyZWY9XCIjXCJcbiAgICAgICAgICAgIFthdHRyLnRpdGxlXT1cImZpbHRlckxhYmVsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImstaWNvbiBrLWktZmlsdGVyXCI+PC9zcGFuPlxuICAgICAgICA8L2E+XG4gICAgICAgIDxuZy10ZW1wbGF0ZSAjdGVtcGxhdGU+XG4gICAgICAgICAgICA8a2VuZG8tZ3JpZC1maWx0ZXItbWVudS1jb250YWluZXJcbiAgICAgICAgICAgICAgICBbY29sdW1uXT1cImNvbHVtblwiXG4gICAgICAgICAgICAgICAgW2ZpbHRlcl09XCJmaWx0ZXJcIlxuICAgICAgICAgICAgICAgIChjbG9zZSk9XCJjbG9zZSgpXCJcbiAgICAgICAgICAgICAgICAoa2V5ZG93bi5lc2NhcGUpPVwiY2xvc2UoKVwiXG4gICAgICAgICAgICAgICAgKGtleWRvd24uZW50ZXIpPVwiJGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICA8L2tlbmRvLWdyaWQtZmlsdGVyLW1lbnUtY29udGFpbmVyPlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0ZpbHRlclNlcnZpY2UsXG4gICAgICAgIFNpbmdsZVBvcHVwU2VydmljZSxcbiAgICAgICAgTG9jYWxpemF0aW9uU2VydmljZSxcbiAgICAgICAgTmF2aWdhdGlvblNlcnZpY2VdKVxuXSwgRmlsdGVyTWVudUNvbXBvbmVudCk7XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgc2VydmljZSB0aGF0IGlzIHBhc3NlZCB0byB0aGVcbiAqIFtDb2x1bW5NZW51VGVtcGxhdGVdKHslIHNsdWcgYXBpX2dyaWRfY29sdW1ubWVudXRlbXBsYXRlZGlyZWN0aXZlICV9KSBkaXJlY3RpdmUuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgICA8a2VuZG8tZ3JpZCBbZGF0YV09XCJkYXRhXCIgW2NvbHVtbk1lbnVdPVwidHJ1ZVwiPlxuICogICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZENvbHVtbk1lbnVUZW1wbGF0ZSBsZXQtc2VydmljZT1cInNlcnZpY2VcIj5cbiAqICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImstaWNvbiBrLWktY2xvc2VcIiAoY2xpY2spPVwic2VydmljZS5jbG9zZSgpXCJcbiAqICAgICAgICAgICAgICAgICAgc3R5bGU9XCJwb3NpdGlvbjogYWJzb2x1dGU7IHJpZ2h0OiA1cHg7IHRvcDogNXB4O2N1cnNvcjogcG9pbnRlcjtcIj48L3NwYW4+XG4gKiAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1ubWVudS1zb3J0IFtzZXJ2aWNlXT1cInNlcnZpY2VcIj5cbiAqICAgICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1ubWVudS1zb3J0PlxuICogICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIkZpZWxkMVwiPjwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJGaWVsZDJcIj48L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgPC9rZW5kby1ncmlkPlxuICogICAgIGBcbiAqIH0pXG4gKlxuICogY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAqICAgcHVibGljIGRhdGE6IGFueVtdID0gW3sgRmllbGQxOiAnRm9vJywgRmllbGQyOiAnQmFyJyB9XTtcbiAqIH1cbiAqXG4gKiBgYGBcbiAqL1xubGV0IENvbHVtbk1lbnVTZXJ2aWNlID0gY2xhc3MgQ29sdW1uTWVudVNlcnZpY2Uge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihtZW51VGFiYmluZ1NlcnZpY2UpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuY2xvc2VNZW51ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLm1lbnVUYWJiaW5nU2VydmljZSA9IG1lbnVUYWJiaW5nU2VydmljZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2xvc2VzIHRoZSBjb2x1bW4gbWVudS5cbiAgICAgKi9cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgdGhpcy5jbG9zZU1lbnUuZW1pdCgpO1xuICAgIH1cbn07XG5Db2x1bW5NZW51U2VydmljZSA9IF9fZGVjb3JhdGUoW1xuICAgIEluamVjdGFibGUoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW01lbnVUYWJiaW5nU2VydmljZV0pXG5dLCBDb2x1bW5NZW51U2VydmljZSk7XG5cbmNvbnN0IFBPUFVQX0NMQVNTID0gJ2stZ3JpZC1jb2x1bW5tZW51LXBvcHVwJztcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgW2NvbHVtbiBtZW51XSh7JSBzbHVnIGNvbHVtbm1lbnVfZ3JpZCAlfSkgY29tcG9uZW50LlxuICovXG5sZXQgQ29sdW1uTWVudUNvbXBvbmVudCA9IGNsYXNzIENvbHVtbk1lbnVDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VydmljZSwgbG9jYWxpemF0aW9uLCBzZXJ2aWNlLCBuYXZpZ2F0aW9uU2VydmljZSkge1xuICAgICAgICB0aGlzLnBvcHVwU2VydmljZSA9IHBvcHVwU2VydmljZTtcbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb24gPSBsb2NhbGl6YXRpb247XG4gICAgICAgIHRoaXMuc2VydmljZSA9IHNlcnZpY2U7XG4gICAgICAgIHRoaXMubmF2aWdhdGlvblNlcnZpY2UgPSBuYXZpZ2F0aW9uU2VydmljZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc3RhbmRhbG9uZSA9IHRydWU7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgc2V0dGluZ3MgZm9yIHRoZSBDb2x1bW4gTWVudS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc2V0dGluZ3MgPSB7fTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc29ydGFibGUgPSB0cnVlO1xuICAgICAgICAvKipcbiAgICAgICAgICogQGhpZGRlblxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy50YWJJbmRleCA9ICctMSc7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAaGlkZGVuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmV4cGFuZGVkRmlsdGVyID0gZmFsc2U7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAaGlkZGVuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmV4cGFuZGVkQ29sdW1ucyA9IGZhbHNlO1xuICAgICAgICAvKipcbiAgICAgICAgICogQGhpZGRlblxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5leHBhbmRlZFBvc2l0aW9uID0gZmFsc2U7XG4gICAgICAgIHRoaXMuY2xvc2VTdWJzY3JpcHRpb24gPSBzZXJ2aWNlLmNsb3NlTWVudS5zdWJzY3JpYmUodGhpcy5jbG9zZS5iaW5kKHRoaXMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBpc0FjdGl2ZSgpIHtcbiAgICAgICAgcmV0dXJuICh0aGlzLmhhc0ZpbHRlciAmJiBmaWx0ZXJzQnlGaWVsZCh0aGlzLmZpbHRlciwgdGhpcy5jb2x1bW4uZmllbGQpLmxlbmd0aCA+IDApIHx8XG4gICAgICAgICAgICAoIXRoaXMuc29ydGFibGUgJiYgdGhpcy5oYXNTb3J0ICYmIHRoaXMuc29ydC5maW5kKGRlc2NyaXB0b3IgPT4gZGVzY3JpcHRvci5maWVsZCA9PT0gdGhpcy5jb2x1bW4uZmllbGQpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBoYXNGaWx0ZXIoKSB7XG4gICAgICAgIHJldHVybiBoYXNGaWx0ZXIodGhpcy5zZXR0aW5ncywgdGhpcy5jb2x1bW4pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGhhc1NvcnQoKSB7XG4gICAgICAgIHJldHVybiBoYXNTb3J0KHRoaXMuc2V0dGluZ3MsIHRoaXMuY29sdW1uKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBoYXNDb2x1bW5DaG9vc2VyKCkge1xuICAgICAgICByZXR1cm4gaGFzQ29sdW1uQ2hvb3Nlcih0aGlzLnNldHRpbmdzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBoYXNMb2NrKCkge1xuICAgICAgICByZXR1cm4gaGFzTG9jayh0aGlzLnNldHRpbmdzLCB0aGlzLmNvbHVtbik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgaGFzU3RpY2soKSB7XG4gICAgICAgIHJldHVybiBoYXNTdGljayh0aGlzLnNldHRpbmdzLCB0aGlzLmNvbHVtbik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgaGFzUG9zaXRpb24oKSB7XG4gICAgICAgIHJldHVybiBoYXNQb3NpdGlvbih0aGlzLnNldHRpbmdzLCB0aGlzLmNvbHVtbik7XG4gICAgfVxuICAgIG5nT25DaGFuZ2VzKCkge1xuICAgICAgICB0aGlzLnNlcnZpY2UuY29sdW1uID0gdGhpcy5jb2x1bW47XG4gICAgICAgIHRoaXMuc2VydmljZS5zb3J0ID0gdGhpcy5zb3J0O1xuICAgICAgICB0aGlzLnNlcnZpY2UuZmlsdGVyID0gdGhpcy5maWx0ZXI7XG4gICAgICAgIHRoaXMuc2VydmljZS5zb3J0YWJsZSA9IHRoaXMuc29ydGFibGU7XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgIHRoaXMuY2xvc2VTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHRvZ2dsZShlLCBhbmNob3IsIHRlbXBsYXRlKSB7XG4gICAgICAgIGlmIChlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZXhwYW5kZWRGaWx0ZXIgPSB0aGlzLmdldEV4cGFuZGVkU3RhdGUodGhpcy5zZXR0aW5ncy5maWx0ZXIpO1xuICAgICAgICB0aGlzLmV4cGFuZGVkQ29sdW1ucyA9IHRoaXMuZ2V0RXhwYW5kZWRTdGF0ZSh0aGlzLnNldHRpbmdzLmNvbHVtbkNob29zZXIpO1xuICAgICAgICB0aGlzLmV4cGFuZGVkUG9zaXRpb24gPSB0aGlzLmdldEV4cGFuZGVkU3RhdGUodGhpcy5zZXR0aW5ncy5zZXRDb2x1bW5Qb3NpdGlvbik7XG4gICAgICAgIHRoaXMucG9wdXBSZWYgPSB0aGlzLnBvcHVwU2VydmljZS5vcGVuKGFuY2hvciwgdGVtcGxhdGUsIHRoaXMucG9wdXBSZWYsIFBPUFVQX0NMQVNTKTtcbiAgICAgICAgaWYgKCF0aGlzLnBvcHVwUmVmKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5uYXZpZ2F0aW9uU2VydmljZS5lbmFibGVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5uYXZpZ2F0aW9uU2VydmljZS5mb2N1c0NlbGwoMCwgdGhpcy5jb2x1bW4ubGVhZkluZGV4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuYW5jaG9yLm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY2xvc2UoKSB7XG4gICAgICAgIHRoaXMucG9wdXBTZXJ2aWNlLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5wb3B1cFJlZiA9IG51bGw7XG4gICAgICAgIGlmICh0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmVuYWJsZWQpIHtcbiAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvblNlcnZpY2UuZm9jdXNDZWxsKDAsIHRoaXMuY29sdW1uLmxlYWZJbmRleCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmFuY2hvci5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBjb2x1bW5NZW51VGl0bGUoKSB7XG4gICAgICAgIGNvbnN0IGxvY2FsaXphdGlvbk1zZyA9IHRoaXMubG9jYWxpemF0aW9uLmdldCgnY29sdW1uTWVudScpIHx8ICcnO1xuICAgICAgICBjb25zdCBjb2x1bW5OYW1lID0gdGhpcy5jb2x1bW4udGl0bGUgfHwgdGhpcy5jb2x1bW4uZmllbGQ7XG4gICAgICAgIHJldHVybiByZXBsYWNlTWVzc2FnZVBsYWNlaG9sZGVyKGxvY2FsaXphdGlvbk1zZywgJ2NvbHVtbk5hbWUnLCBjb2x1bW5OYW1lKTtcbiAgICB9XG4gICAgZ2V0RXhwYW5kZWRTdGF0ZShtZW51SXRlbVNldHRpbmdzKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgKG1lbnVJdGVtU2V0dGluZ3MpID09PSAnb2JqZWN0JyA/IG1lbnVJdGVtU2V0dGluZ3MuZXhwYW5kZWQgOiBmYWxzZTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ2NsYXNzLmstZ3JpZC1jb2x1bW4tbWVudS1zdGFuZGFsb25lJyksXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIENvbHVtbk1lbnVDb21wb25lbnQucHJvdG90eXBlLCBcInN0YW5kYWxvbmVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIENvbHVtbk1lbnVDb21wb25lbnQucHJvdG90eXBlLCBcImNvbHVtblwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgQ29sdW1uTWVudUNvbXBvbmVudC5wcm90b3R5cGUsIFwic2V0dGluZ3NcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIENvbHVtbk1lbnVDb21wb25lbnQucHJvdG90eXBlLCBcInNvcnRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIENvbHVtbk1lbnVDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgQ29sdW1uTWVudUNvbXBvbmVudC5wcm90b3R5cGUsIFwic29ydGFibGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFRlbXBsYXRlUmVmKVxuXSwgQ29sdW1uTWVudUNvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uTWVudVRlbXBsYXRlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBDb2x1bW5NZW51Q29tcG9uZW50LnByb3RvdHlwZSwgXCJ0YWJJbmRleFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgVmlld0NoaWxkKCdhbmNob3InLCB7IHN0YXRpYzogdHJ1ZSB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRWxlbWVudFJlZilcbl0sIENvbHVtbk1lbnVDb21wb25lbnQucHJvdG90eXBlLCBcImFuY2hvclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgVmlld0NoaWxkKCd0ZW1wbGF0ZScsIHsgc3RhdGljOiB0cnVlLCByZWFkOiBUZW1wbGF0ZVJlZiB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgVGVtcGxhdGVSZWYpXG5dLCBDb2x1bW5NZW51Q29tcG9uZW50LnByb3RvdHlwZSwgXCJ0ZW1wbGF0ZVwiLCB2b2lkIDApO1xuQ29sdW1uTWVudUNvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAgQ29sdW1uTWVudVNlcnZpY2UsXG4gICAgICAgICAgICBNZW51VGFiYmluZ1NlcnZpY2VcbiAgICAgICAgXSxcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLWNvbHVtbi1tZW51JyxcbiAgICAgICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGEgI2FuY2hvclxuICAgICAgICAgICAgY2xhc3M9XCJrLWdyaWQtY29sdW1uLW1lbnUgay1ncmlkLWZpbHRlclwiXG4gICAgICAgICAgICBbbmdDbGFzc109XCJ7ICdrLXN0YXRlLWFjdGl2ZSc6IGlzQWN0aXZlIH1cIlxuICAgICAgICAgICAgKGNsaWNrKT1cInRvZ2dsZSgkZXZlbnQsIGFuY2hvciwgdGVtcGxhdGUpXCJcbiAgICAgICAgICAgIChrZXlkb3duLmVudGVyKT1cIiRldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKVwiXG4gICAgICAgICAgICBocmVmPVwiI1wiXG4gICAgICAgICAgICBbdGFiaW5kZXhdPVwidGFiSW5kZXhcIlxuICAgICAgICAgICAgW2F0dHIudGl0bGVdPVwiY29sdW1uTWVudVRpdGxlXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImstaWNvbiBrLWktbW9yZS12ZXJ0aWNhbFwiPjwvc3Bhbj5cbiAgICAgICAgPC9hPlxuICAgICAgICA8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lclxuICAgICAgICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cImNvbHVtbi5jb2x1bW5NZW51VGVtcGxhdGVSZWYgfHwgY29sdW1uTWVudVRlbXBsYXRlIHx8IGRlZmF1bHRUZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cInsgc2VydmljZTogc2VydmljZSwgY29sdW1uOiBjb2x1bW4gfVwiPlxuICAgICAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICAgIDxuZy10ZW1wbGF0ZSAjZGVmYXVsdFRlbXBsYXRlPlxuICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1ubWVudS1jb250YWluZXJcbiAgICAgICAgICAgICAgICAoa2V5ZG93bi5lc2NhcGUpPVwiY2xvc2UoKVwiXG4gICAgICAgICAgICAgICAgKGtleWRvd24uZW50ZXIpPVwiJGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpXCI+XG4gICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1ubWVudS1zb3J0ICNzb3J0SXRlbSBba2VuZG9HcmlkQ29sdW1uTWVudUl0ZW1dPVwic29ydEl0ZW1cIiAqbmdJZj1cImhhc1NvcnRcIiBbc2VydmljZV09XCJzZXJ2aWNlXCI+XG4gICAgICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtc29ydD5cbiAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW5tZW51LWxvY2sgI2xvY2tJdGVtICpuZ0lmPVwiaGFzTG9jayAmJiAhaGFzUG9zaXRpb25cIiBba2VuZG9HcmlkQ29sdW1uTWVudUl0ZW1dPVwibG9ja0l0ZW1cIiBbc2VydmljZV09XCJzZXJ2aWNlXCI+XG4gICAgICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtbG9jaz5cbiAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW5tZW51LXN0aWNrICNzdGlja0l0ZW0gKm5nSWY9XCJoYXNTdGljayAmJiAhaGFzUG9zaXRpb25cIiBba2VuZG9HcmlkQ29sdW1uTWVudUl0ZW1dPVwic3RpY2tJdGVtXCIgW3NlcnZpY2VdPVwic2VydmljZVwiPlxuICAgICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW5tZW51LXN0aWNrPlxuICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbm1lbnUtcG9zaXRpb25cbiAgICAgICAgICAgICAgICAgICAgI3Bvc2l0aW9uSXRlbVxuICAgICAgICAgICAgICAgICAgICAqbmdJZj1cImhhc1Bvc2l0aW9uXCJcbiAgICAgICAgICAgICAgICAgICAgW3Nob3dMb2NrXT1cImhhc0xvY2tcIlxuICAgICAgICAgICAgICAgICAgICBbc2hvd1N0aWNrXT1cImhhc1N0aWNrXCJcbiAgICAgICAgICAgICAgICAgICAgW2tlbmRvR3JpZENvbHVtbk1lbnVJdGVtXT1cInBvc2l0aW9uSXRlbVwiXG4gICAgICAgICAgICAgICAgICAgIFtzZXJ2aWNlXT1cInNlcnZpY2VcIlxuICAgICAgICAgICAgICAgICAgICBbZXhwYW5kZWRdPVwiZXhwYW5kZWRQb3NpdGlvblwiPlxuICAgICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW5tZW51LXBvc2l0aW9uPlxuICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbm1lbnUtY2hvb3NlclxuICAgICAgICAgICAgICAgICAgICAjY2hvb3Nlckl0ZW1cbiAgICAgICAgICAgICAgICAgICAgKm5nSWY9XCJoYXNDb2x1bW5DaG9vc2VyXCJcbiAgICAgICAgICAgICAgICAgICAgW2tlbmRvR3JpZENvbHVtbk1lbnVJdGVtXT1cImNob29zZXJJdGVtXCJcbiAgICAgICAgICAgICAgICAgICAgW3NlcnZpY2VdPVwic2VydmljZVwiXG4gICAgICAgICAgICAgICAgICAgIFtleHBhbmRlZF09XCJleHBhbmRlZENvbHVtbnNcIj5cbiAgICAgICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1ubWVudS1jaG9vc2VyPlxuICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbm1lbnUtZmlsdGVyXG4gICAgICAgICAgICAgICAgICAgICNmaWx0ZXJJdGVtXG4gICAgICAgICAgICAgICAgICAgICpuZ0lmPVwiaGFzRmlsdGVyXCJcbiAgICAgICAgICAgICAgICAgICAgW2tlbmRvR3JpZENvbHVtbk1lbnVJdGVtXT1cImZpbHRlckl0ZW1cIlxuICAgICAgICAgICAgICAgICAgICBbc2VydmljZV09XCJzZXJ2aWNlXCJcbiAgICAgICAgICAgICAgICAgICAgW2V4cGFuZGVkXT1cImV4cGFuZGVkRmlsdGVyXCI+XG4gICAgICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtZmlsdGVyPlxuICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtY29udGFpbmVyPlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1NpbmdsZVBvcHVwU2VydmljZSxcbiAgICAgICAgTG9jYWxpemF0aW9uU2VydmljZSxcbiAgICAgICAgQ29sdW1uTWVudVNlcnZpY2UsXG4gICAgICAgIE5hdmlnYXRpb25TZXJ2aWNlXSlcbl0sIENvbHVtbk1lbnVDb21wb25lbnQpO1xuXG5jb25zdCBtZXJnZU9iamVjdHMgPSAoLi4uYXJncykgPT4gT2JqZWN0LmFzc2lnbi5hcHBseShudWxsLCBbe31dLmNvbmNhdChhcmdzKSk7XG5jb25zdCBkaXJlY3Rpb25zID0gaW5pdGlhbERpcmVjdGlvbiA9PiBpbml0aWFsRGlyZWN0aW9uID09PSBcImFzY1wiID8gW1wiYXNjXCIsIFwiZGVzY1wiXSA6IFtcImRlc2NcIiwgXCJhc2NcIl07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgaXNSb290TGV2ZWwgPSAoeyBwYXJlbnQgfSkgPT4gIWlzVHJ1dGh5KHBhcmVudCk7XG5jb25zdCBvZkNvbHVtblR5cGUgPSAoeyBkcmFnZ2FibGUgfSkgPT4gWydjb2x1bW4nLCAnY29sdW1uR3JvdXAnXVxuICAgIC5pbmRleE9mKGRyYWdnYWJsZS5jb250ZXh0LnR5cGUpID49IDA7XG5jb25zdCBub3RTYW1lRWxlbWVudCA9ICh7IGRyYWdnYWJsZSwgdGFyZ2V0IH0pID0+IGRyYWdnYWJsZS5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQgIT09IHRhcmdldC5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQ7XG5jb25zdCBpblNhbWVQYXJlbnQgPSAoeCwgeSkgPT4geC5wYXJlbnQgPT09IHkucGFyZW50IHx8XG4gICAgKGlzSW5TcGFuQ29sdW1uKHkpICYmIGluU2FtZVBhcmVudCh4LCB5LnBhcmVudCkpO1xuY29uc3Qgc2FtZVBhcmVudCA9ICh7IGRyYWdnYWJsZSwgdGFyZ2V0IH0pID0+IGluU2FtZVBhcmVudChkcmFnZ2FibGUuY29udGV4dC5jb2x1bW4sIHRhcmdldC5jb250ZXh0LmNvbHVtbik7XG5jb25zdCBsYXN0Tm9uTG9ja2VkID0gKHsgZHJhZ2dhYmxlIH0pID0+ICFpc1RydXRoeShkcmFnZ2FibGUuY29udGV4dC5jb2x1bW4ubG9ja2VkKSAmJlxuICAgIGlzUm9vdExldmVsKGRyYWdnYWJsZS5jb250ZXh0LmNvbHVtbikgJiZcbiAgICBkcmFnZ2FibGUuY29udGV4dC5sYXN0Q29sdW1uO1xuY29uc3Qgbm90SW5TcGFuQ29sdW1uID0gKHsgZHJhZ2dhYmxlIH0pID0+ICFpc0luU3BhbkNvbHVtbihkcmFnZ2FibGUuY29udGV4dC5jb2x1bW4pO1xuY29uc3QgcmVvcmRlcmFibGUgPSAoeyBkcmFnZ2FibGUgfSkgPT4gZHJhZ2dhYmxlLmNvbnRleHQuY29sdW1uLnJlb3JkZXJhYmxlO1xuY29uc3QgbG9ja2FibGUgPSAoeyBkcmFnZ2FibGUsIHRhcmdldCB9KSA9PiBkcmFnZ2FibGUuY29udGV4dC5jb2x1bW4ubG9ja2FibGUgIT09IGZhbHNlIHx8XG4gICAgZHJhZ2dhYmxlLmNvbnRleHQuY29sdW1uLmlzTG9ja2VkID09PSB0YXJnZXQuY29udGV4dC5jb2x1bW4uaXNMb2NrZWQ7XG5jb25zdCBydWxlcyA9IGFuZChvZkNvbHVtblR5cGUsIHJlb3JkZXJhYmxlLCBub3RJblNwYW5Db2x1bW4sIG5vdFNhbWVFbGVtZW50LCBzYW1lUGFyZW50LCBub3QobGFzdE5vbkxvY2tlZCksIGxvY2thYmxlKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgSGVhZGVyQ29tcG9uZW50ID0gY2xhc3MgSGVhZGVyQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlcnZpY2UsIGhpbnQsIGN1ZSwgcmVvcmRlclNlcnZpY2UsIGlkU2VydmljZSwgc29ydFNlcnZpY2UsIGxvY2FsaXphdGlvbiwgY29sdW1uSW5mb1NlcnZpY2UsIGNkKSB7XG4gICAgICAgIHRoaXMucG9wdXBTZXJ2aWNlID0gcG9wdXBTZXJ2aWNlO1xuICAgICAgICB0aGlzLmhpbnQgPSBoaW50O1xuICAgICAgICB0aGlzLmN1ZSA9IGN1ZTtcbiAgICAgICAgdGhpcy5yZW9yZGVyU2VydmljZSA9IHJlb3JkZXJTZXJ2aWNlO1xuICAgICAgICB0aGlzLmlkU2VydmljZSA9IGlkU2VydmljZTtcbiAgICAgICAgdGhpcy5zb3J0U2VydmljZSA9IHNvcnRTZXJ2aWNlO1xuICAgICAgICB0aGlzLmxvY2FsaXphdGlvbiA9IGxvY2FsaXphdGlvbjtcbiAgICAgICAgdGhpcy5jb2x1bW5JbmZvU2VydmljZSA9IGNvbHVtbkluZm9TZXJ2aWNlO1xuICAgICAgICB0aGlzLmNkID0gY2Q7XG4gICAgICAgIHRoaXMuY29sdW1ucyA9IFtdO1xuICAgICAgICB0aGlzLmdyb3VwcyA9IFtdO1xuICAgICAgICB0aGlzLnNvcnQgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgdGhpcy5zb3J0YWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmdyb3VwYWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmxvY2tlZENvbHVtbnNDb3VudCA9IDA7XG4gICAgICAgIHRoaXMucmVzaXphYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMucmVvcmRlcmFibGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jb2x1bW5NZW51ID0gZmFsc2U7XG4gICAgICAgIHRoaXMudG90YWxDb2x1bW5zQ291bnQgPSAwO1xuICAgICAgICB0aGlzLnNvcnRlZEZpZWxkcyA9IHt9O1xuICAgICAgICB0aGlzLmRyb3BUYXJnZXRzID0gbmV3IFF1ZXJ5TGlzdCgpO1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IG5ldyBTdWJzY3JpcHRpb24oKTtcbiAgICB9XG4gICAgZ2V0IGhlYWRlckNsYXNzKCkge1xuICAgICAgICByZXR1cm4gIXRoaXMuc2Nyb2xsYWJsZTtcbiAgICB9XG4gICAgZ2V0IHNvcnRhYmxlTGFiZWwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvY2FsaXphdGlvbi5nZXQoJ3NvcnRhYmxlJyk7XG4gICAgfVxuICAgIC8vIE51bWJlciBvZiB1bmxvY2tlZCBjb2x1bW5zIGluIHRoZSBuZXh0IHRhYmxlLCBpZiBhbnlcbiAgICBnZXQgdW5sb2NrZWRDb2x1bW5zQ291bnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRvdGFsQ29sdW1uc0NvdW50IC0gdGhpcy5sb2NrZWRDb2x1bW5zQ291bnQgLSB0aGlzLmNvbHVtbnMubGVuZ3RoO1xuICAgIH1cbiAgICBzb3J0Q29sdW1uKGNvbHVtbikge1xuICAgICAgICB0aGlzLnNvcnRTZXJ2aWNlLnNvcnQodGhpcy50b2dnbGVTb3J0KGNvbHVtbikpO1xuICAgIH1cbiAgICBvblNvcnRDbGljayhjb2x1bW4sIGV2ZW50LCBsaW5rKSB7XG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICAgICAgaWYgKGNvbHVtbi5oZWFkZXJUZW1wbGF0ZVJlZiAmJiB0YXJnZXQgIT09IGxpbmspIHtcbiAgICAgICAgICAgIGNvbnN0IGhhc0ZvY3VzYWJsZVBhcmVudCA9IEJvb2xlYW4oY2xvc2VzdEluU2NvcGUodGFyZ2V0LCBpc0ZvY3VzYWJsZSwgbGluaykpO1xuICAgICAgICAgICAgaWYgKGhhc0ZvY3VzYWJsZVBhcmVudCkge1xuICAgICAgICAgICAgICAgIC8vIERvIG5vdCBzb3J0IHdoZW4gY2xpY2tpbmcgZm9jdXNhYmxlIHRlbXBsYXRlIGVsZW1lbnRzLlxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNvcnRDb2x1bW4oY29sdW1uKTtcbiAgICB9XG4gICAgb25IZWFkZXJLZXlkb3duKGNvbHVtbiwgYXJncykge1xuICAgICAgICBpZiAoYXJncy5rZXlDb2RlID09PSBLZXlzLkFycm93RG93biAmJiBhcmdzLmFsdEtleSAmJiB0aGlzLnNob3dGaWx0ZXJNZW51KSB7XG4gICAgICAgICAgICBhcmdzLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBhcmdzLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgY29uc3QgZmlsdGVyTWVudSA9IHRoaXMuZmlsdGVyTWVudXMuZmluZChmbSA9PiBmbS5jb2x1bW4gPT09IGNvbHVtbik7XG4gICAgICAgICAgICBmaWx0ZXJNZW51LnRvZ2dsZShmaWx0ZXJNZW51LmFuY2hvci5uYXRpdmVFbGVtZW50LCBmaWx0ZXJNZW51LnRlbXBsYXRlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYXJncy5rZXlDb2RlID09PSBLZXlzLkFycm93RG93biAmJiBhcmdzLmFsdEtleSAmJiB0aGlzLnNob3dDb2x1bW5NZW51KGNvbHVtbikpIHtcbiAgICAgICAgICAgIGFyZ3MucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIGFyZ3Muc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICBjb25zdCBjb2x1bW5NZW51ID0gdGhpcy5jb2x1bW5NZW51cy5maW5kKGNtID0+IGNtLmNvbHVtbiA9PT0gY29sdW1uKTtcbiAgICAgICAgICAgIGNvbHVtbk1lbnUudG9nZ2xlKG51bGwsIGNvbHVtbk1lbnUuYW5jaG9yLm5hdGl2ZUVsZW1lbnQsIGNvbHVtbk1lbnUudGVtcGxhdGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5zb3J0YWJsZSB8fCBhcmdzLmRlZmF1bHRQcmV2ZW50ZWQgfHwgY29sdW1uLnNvcnRhYmxlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhcmdzLmtleUNvZGUgPT09IEtleXMuRW50ZXIgJiYgaXNQcmVzZW50KGNvbHVtbi5maWVsZCkpIHtcbiAgICAgICAgICAgIHRoaXMuc29ydFNlcnZpY2Uuc29ydCh0aGlzLnRvZ2dsZVNvcnQoY29sdW1uKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2hvd1NvcnROdW1iZXJpbmcoY29sdW1uKSB7XG4gICAgICAgIGNvbnN0IHsgc2hvd0luZGV4ZXMgfSA9IG5vcm1hbGl6ZSQxKHRoaXMuc29ydGFibGUpO1xuICAgICAgICByZXR1cm4gc2hvd0luZGV4ZXNcbiAgICAgICAgICAgICYmIHRoaXMuc29ydFxuICAgICAgICAgICAgJiYgdGhpcy5zb3J0LmZpbHRlcigoeyBkaXIgfSkgPT4gaXNQcmVzZW50KGRpcikpLmxlbmd0aCA+IDFcbiAgICAgICAgICAgICYmIHRoaXMuc29ydE9yZGVyKGNvbHVtbi5maWVsZCkgPiAwO1xuICAgIH1cbiAgICBzb3J0T3JkZXIoZmllbGQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc29ydFxuICAgICAgICAgICAgLmZpbHRlcigoeyBkaXIgfSkgPT4gaXNQcmVzZW50KGRpcikpXG4gICAgICAgICAgICAuZmluZEluZGV4KHggPT4geC5maWVsZCA9PT0gZmllbGQpXG4gICAgICAgICAgICArIDE7XG4gICAgfVxuICAgIHNvcnRJY29uKGZpZWxkKSB7XG4gICAgICAgIGNvbnN0IHN0YXRlJCQxID0gdGhpcy5zb3J0RGVzY3JpcHRvcihmaWVsZCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAnay1pY29uJzogaXNQcmVzZW50KHN0YXRlJCQxLmRpciksXG4gICAgICAgICAgICAnay1pLXNvcnQtZGVzYy1zbSc6IHN0YXRlJCQxLmRpciA9PT0gXCJkZXNjXCIsXG4gICAgICAgICAgICAnay1pLXNvcnQtYXNjLXNtJzogc3RhdGUkJDEuZGlyID09PSBcImFzY1wiXG4gICAgICAgIH07XG4gICAgfVxuICAgIHNvcnRTdGF0ZShjb2x1bW4pIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzU29ydGFibGUoY29sdW1uKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHN0YXRlJCQxID0gdGhpcy5zb3J0RGVzY3JpcHRvcihjb2x1bW4uZmllbGQpO1xuICAgICAgICBpZiAoc3RhdGUkJDEuZGlyID09PSAnYXNjJykge1xuICAgICAgICAgICAgcmV0dXJuICdhc2NlbmRpbmcnO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzdGF0ZSQkMS5kaXIgPT09ICdkZXNjJykge1xuICAgICAgICAgICAgcmV0dXJuICdkZXNjZW5kaW5nJztcbiAgICAgICAgfVxuICAgIH1cbiAgICBzb3J0U3RhdHVzKGNvbHVtbikge1xuICAgICAgICBpZiAoIXRoaXMuc29ydGVkRmllbGRzW2NvbHVtbi5maWVsZF0gfHwgIXRoaXMuaXNTb3J0YWJsZShjb2x1bW4pKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IG1zZyA9ICdzb3J0ZWREZWZhdWx0JztcbiAgICAgICAgY29uc3Qgc3RhdGUkJDEgPSB0aGlzLnNvcnREZXNjcmlwdG9yKGNvbHVtbi5maWVsZCk7XG4gICAgICAgIGlmIChzdGF0ZSQkMS5kaXIgPT09ICdhc2MnKSB7XG4gICAgICAgICAgICBtc2cgPSAnc29ydGVkQXNjZW5kaW5nJztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzdGF0ZSQkMS5kaXIgPT09ICdkZXNjJykge1xuICAgICAgICAgICAgbXNnID0gJ3NvcnRlZERlc2NlbmRpbmcnO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmxvY2FsaXphdGlvbi5nZXQobXNnKTtcbiAgICB9XG4gICAgdG9nZ2xlU29ydChjb2x1bW4pIHtcbiAgICAgICAgY29uc3QgeyBhbGxvd1Vuc29ydCwgbW9kZSwgaW5pdGlhbERpcmVjdGlvbiB9ID0gbm9ybWFsaXplJDEodGhpcy5zb3J0YWJsZSwgY29sdW1uLnNvcnRhYmxlKTtcbiAgICAgICAgY29uc3QgZGVzY3JpcHRvciA9IHRoaXMudG9nZ2xlRGlyZWN0aW9uKGNvbHVtbi5maWVsZCwgYWxsb3dVbnNvcnQsIGluaXRpYWxEaXJlY3Rpb24pO1xuICAgICAgICBpZiAobW9kZSA9PT0gJ3NpbmdsZScpIHtcbiAgICAgICAgICAgIHJldHVybiBbZGVzY3JpcHRvcl07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFsuLi50aGlzLnNvcnQuZmlsdGVyKGRlc2MgPT4gZGVzYy5maWVsZCAhPT0gY29sdW1uLmZpZWxkKSwgZGVzY3JpcHRvcl07XG4gICAgfVxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24uYWRkKG9ic2VydmUodGhpcy5kcm9wVGFyZ2V0cylcbiAgICAgICAgICAgIC5zdWJzY3JpYmUodGhpcy5hdHRhY2hUYXJnZXRzLmJpbmQodGhpcykpKTtcbiAgICB9XG4gICAgbmdEb0NoZWNrKCkge1xuICAgICAgICB0aGlzLl9sZWFmQ29sdW1ucyA9IGNvbHVtbnNUb1JlbmRlcih0aGlzLmNvbHVtbnMgfHwgW10pLmZpbHRlcih4ID0+ICFpc0NvbHVtbkdyb3VwQ29tcG9uZW50KHgpKTtcbiAgICB9XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlcykge1xuICAgICAgICBjb25zdCBzb3J0Q2hhbmdlID0gY2hhbmdlcy5zb3J0O1xuICAgICAgICBpZiAoc29ydENoYW5nZSAmJiAhc29ydENoYW5nZS5pc0ZpcnN0Q2hhbmdlKCkpIHtcbiAgICAgICAgICAgIHNvcnRDaGFuZ2UuY3VycmVudFZhbHVlLmZvckVhY2goY2hhbmdlID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNvcnRlZEZpZWxkc1tjaGFuZ2UuZmllbGRdID0gdHJ1ZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbi5hZGQodGhpcy5sb2NhbGl6YXRpb24uY2hhbmdlc1xuICAgICAgICAgICAgLnN1YnNjcmliZSgoKSA9PiB0aGlzLmNkLm1hcmtGb3JDaGVjaygpKSk7XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy50YXJnZXRTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMudGFyZ2V0U3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucG9wdXBTZXJ2aWNlKSB7XG4gICAgICAgICAgICB0aGlzLnBvcHVwU2VydmljZS5kZXN0cm95KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gICAgc2VsZWN0QWxsQ2hlY2tib3hJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWRTZXJ2aWNlLnNlbGVjdEFsbENoZWNrYm94SWQoKTtcbiAgICB9XG4gICAgZ2V0IHNlbGVjdEFsbENoZWNrYm94TGFiZWwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvY2FsaXphdGlvbi5nZXQoJ3NlbGVjdEFsbENoZWNrYm94TGFiZWwnKTtcbiAgICB9XG4gICAgaXNGaXJzdE9uUm93KGNvbHVtbiwgaW5kZXgpIHtcbiAgICAgICAgY29uc3QgaXNUYWlsaW5nID0gKGMpID0+IGMgJiZcbiAgICAgICAgICAgICh0aGlzLmNvbHVtbnNGb3JMZXZlbChjLmxldmVsKS5pbmRleE9mKGMpID4gMCB8fCBpc1RhaWxpbmcoYy5wYXJlbnQpKTtcbiAgICAgICAgcmV0dXJuIGluZGV4ID09PSAwICYmICF0aGlzLmdyb3Vwcy5sZW5ndGggJiYgIXRoaXMuZGV0YWlsVGVtcGxhdGUgJiYgaXNUYWlsaW5nKGNvbHVtbi5wYXJlbnQpO1xuICAgIH1cbiAgICBsb2dpY2FsQ29sdW1uSW5kZXgoY29sdW1uKSB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gY29sdW1uLmxlYWZJbmRleDtcbiAgICAgICAgaWYgKGlzUHJlc2VudChpbmRleCkpIHtcbiAgICAgICAgICAgIHJldHVybiBpbmRleCArIChpc1ByZXNlbnQodGhpcy5kZXRhaWxUZW1wbGF0ZSkgPyAxIDogMCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgICBnZXQgc2hvd0ZpbHRlck1lbnUoKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5jb2x1bW5NZW51ICYmIGhhc0ZpbHRlck1lbnUodGhpcy5maWx0ZXJhYmxlKTtcbiAgICB9XG4gICAgZ2V0IHNob3dGaWx0ZXJSb3coKSB7XG4gICAgICAgIHJldHVybiBoYXNGaWx0ZXJSb3codGhpcy5maWx0ZXJhYmxlKTtcbiAgICB9XG4gICAgc2hvd0NvbHVtbk1lbnUoY29sdW1uKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbHVtbk1lbnUgJiYgY29sdW1uLmNvbHVtbk1lbnUgJiZcbiAgICAgICAgICAgICh0aGlzLmNvbHVtbk1lbnVUZW1wbGF0ZSB8fCBjb2x1bW4uY29sdW1uTWVudVRlbXBsYXRlcy5sZW5ndGggfHwgaGFzSXRlbXModGhpcy5jb2x1bW5NZW51LCBjb2x1bW4pKTtcbiAgICB9XG4gICAgaXNGaWx0ZXJhYmxlKGNvbHVtbikge1xuICAgICAgICByZXR1cm4gIWlzTnVsbE9yRW1wdHlTdHJpbmcoY29sdW1uLmZpZWxkKSAmJiBjb2x1bW4uZmlsdGVyYWJsZSA9PT0gdHJ1ZTtcbiAgICB9XG4gICAgY2FuRHJvcChkcmFnZ2FibGUsIHRhcmdldCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZW9yZGVyYWJsZSAmJiBydWxlcyh7IGRyYWdnYWJsZSwgdGFyZ2V0IH0pO1xuICAgIH1cbiAgICBzaG91bGRBY3RpdmF0ZShjb2x1bW4pIHtcbiAgICAgICAgY29uc3QgY2FuUmVvcmRlciA9IHRoaXMucmVvcmRlcmFibGUgJiYgY29sdW1uLnJlb3JkZXJhYmxlO1xuICAgICAgICBpZiAoIWNhblJlb3JkZXIgJiYgIWlzQ29sdW1uQ29tcG9uZW50KGNvbHVtbikpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBncm91cGFibGUgPSB0aGlzLmdyb3VwYWJsZSAmJiBpc0NvbHVtbkNvbXBvbmVudChjb2x1bW4pICYmIGNvbHVtbi5ncm91cGFibGUgIT09IGZhbHNlO1xuICAgICAgICByZXR1cm4gZ3JvdXBhYmxlIHx8IGNhblJlb3JkZXI7XG4gICAgfVxuICAgIGlzU29ydGFibGUoY29sdW1uKSB7XG4gICAgICAgIHJldHVybiAhaXNOdWxsT3JFbXB0eVN0cmluZyhjb2x1bW4uZmllbGQpXG4gICAgICAgICAgICAmJiBpc1RydXRoeSh0aGlzLnNvcnRhYmxlKSAmJiBpc1RydXRoeShjb2x1bW4uc29ydGFibGUpO1xuICAgIH1cbiAgICBpc0NoZWNrYm94Q29sdW1uKGNvbHVtbikge1xuICAgICAgICByZXR1cm4gaXNDaGVja2JveENvbHVtbihjb2x1bW4pICYmICFjb2x1bW4udGVtcGxhdGVSZWY7XG4gICAgfVxuICAgIHRyYWNrQnlJbmRleChpbmRleCwgX2l0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGluZGV4O1xuICAgIH1cbiAgICBhZGRTdGlja3lTdHlsZXMoY29sdW1uKSB7XG4gICAgICAgIGNvbnN0IHN0aWNreVN0eWxlcyA9IHRoaXMuY29sdW1uSW5mb1NlcnZpY2Uuc3RpY2t5Q29sdW1uc1N0eWxlcyhjb2x1bW4pO1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgY29sdW1uLnN0eWxlLCBzdGlja3lTdHlsZXMpO1xuICAgIH1cbiAgICB0b2dnbGVEaXJlY3Rpb24oZmllbGQsIGFsbG93VW5zb3J0LCBpbml0aWFsRGlyZWN0aW9uKSB7XG4gICAgICAgIGNvbnN0IGRlc2NyaXB0b3IgPSB0aGlzLnNvcnREZXNjcmlwdG9yKGZpZWxkKTtcbiAgICAgICAgY29uc3QgW2ZpcnN0LCBzZWNvbmRdID0gZGlyZWN0aW9ucyhpbml0aWFsRGlyZWN0aW9uKTtcbiAgICAgICAgbGV0IGRpciA9IGZpcnN0O1xuICAgICAgICBpZiAoZGVzY3JpcHRvci5kaXIgPT09IGZpcnN0KSB7XG4gICAgICAgICAgICBkaXIgPSBzZWNvbmQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZGVzY3JpcHRvci5kaXIgPT09IHNlY29uZCAmJiBhbGxvd1Vuc29ydCkge1xuICAgICAgICAgICAgZGlyID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IGRpciwgZmllbGQgfTtcbiAgICB9XG4gICAgY29sdW1uc0ZvckxldmVsKGxldmVsKSB7XG4gICAgICAgIGNvbnN0IGNvbHVtbnMgPSB0aGlzLmNvbHVtbnMgPyB0aGlzLmNvbHVtbnMuZmlsdGVyKGNvbHVtbiA9PiBjb2x1bW4ubGV2ZWwgPT09IGxldmVsKSA6IFtdO1xuICAgICAgICByZXR1cm4gc29ydENvbHVtbnMoY29sdW1uc1RvUmVuZGVyKGNvbHVtbnMpKTtcbiAgICB9XG4gICAgaXNDb2x1bW5Hcm91cENvbXBvbmVudChjb2x1bW4pIHtcbiAgICAgICAgcmV0dXJuIGlzQ29sdW1uR3JvdXBDb21wb25lbnQoY29sdW1uKTtcbiAgICB9XG4gICAgZ2V0IGNvbHVtbkxldmVscygpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBBcnJheSgodGhpcy50b3RhbENvbHVtbkxldmVscyB8fCAwKSArIDEpO1xuICAgIH1cbiAgICBzb3J0RGVzY3JpcHRvcihmaWVsZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zb3J0LmZpbmQoaXRlbSA9PiBpdGVtLmZpZWxkID09PSBmaWVsZCkgfHwgeyBmaWVsZCB9O1xuICAgIH1cbiAgICBnZXQgbGVhZkNvbHVtbnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9sZWFmQ29sdW1ucztcbiAgICB9XG4gICAgYXR0YWNoVGFyZ2V0cygpIHtcbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0U3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnRhcmdldFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudGFyZ2V0U3Vic2NyaXB0aW9uID0gbmV3IFN1YnNjcmlwdGlvbigpO1xuICAgICAgICBjb25zdCBlbnRlclN0cmVhbSA9IG1lcmdlKC4uLnRoaXMuZHJvcFRhcmdldHMubWFwKHRhcmdldCA9PiB0YXJnZXQuZW50ZXIpKTtcbiAgICAgICAgY29uc3QgbGVhdmVTdHJlYW0gPSBtZXJnZSguLi50aGlzLmRyb3BUYXJnZXRzLm1hcCh0YXJnZXQgPT4gdGFyZ2V0LmxlYXZlKSk7XG4gICAgICAgIGNvbnN0IGRyb3BTdHJlYW0gPSBtZXJnZSguLi50aGlzLmRyb3BUYXJnZXRzLm1hcCh0YXJnZXQgPT4gdGFyZ2V0LmRyb3ApKTtcbiAgICAgICAgdGhpcy50YXJnZXRTdWJzY3JpcHRpb24uYWRkKGVudGVyU3RyZWFtLnBpcGUodGFwKCh7IHRhcmdldCwgZHJhZ2dhYmxlIH0pID0+IHtcbiAgICAgICAgICAgIGlmIChkcmFnZ2FibGUuY29udGV4dC50eXBlID09PSAnZ3JvdXBJbmRpY2F0b3InKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdGFyZ2V0TG9ja2VkID0gaXNUcnV0aHkodGFyZ2V0LmNvbnRleHQuY29sdW1uLmlzTG9ja2VkKTtcbiAgICAgICAgICAgIGNvbnN0IGRyYWdnYWJsZUxvY2tlZCA9IGlzVHJ1dGh5KGRyYWdnYWJsZS5jb250ZXh0LmNvbHVtbi5pc0xvY2tlZCk7XG4gICAgICAgICAgICBpZiAodGhpcy5sb2NrZWRDb2x1bW5zQ291bnQgPiAwIHx8IHRhcmdldExvY2tlZCB8fCBkcmFnZ2FibGVMb2NrZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmhpbnQudG9nZ2xlTG9jayh0YXJnZXRMb2NrZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KSwgZmlsdGVyKCh7IGRyYWdnYWJsZSwgdGFyZ2V0IH0pID0+IHRoaXMuY2FuRHJvcChkcmFnZ2FibGUsIHRhcmdldCkpLCBzd2l0Y2hNYXAodGhpcy50cmFja01vdmUuYmluZCh0aGlzLCBsZWF2ZVN0cmVhbSwgZHJvcFN0cmVhbSkpLCBtYXAoKGUpID0+IG1lcmdlT2JqZWN0cyhlLCB7IGJlZm9yZTogdGhpcy5jYWxjdWxhdGVCZWZvcmUoZSksIGNoYW5nZUNvbnRhaW5lcjogZS5jaGFuZ2VDb250YWluZXIgfSkpLCBtYXAodGhpcy5ub3JtYWxpemVUYXJnZXQuYmluZCh0aGlzKSksIHRhcCh0aGlzLmVudGVyLmJpbmQodGhpcykpLCBzd2l0Y2hNYXAoKGFyZ3MpID0+IGRyb3BTdHJlYW0ucGlwZShtYXAoKCkgPT4gYXJncyksIHRha2VVbnRpbChsZWF2ZVN0cmVhbS5waXBlKHRhcCh0aGlzLmxlYXZlLmJpbmQodGhpcykpKSkpKSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUodGhpcy5kcm9wLmJpbmQodGhpcykpKTtcbiAgICB9XG4gICAgbm9ybWFsaXplVGFyZ2V0KGUpIHtcbiAgICAgICAgbGV0IHRhcmdldCA9IGUudGFyZ2V0O1xuICAgICAgICBjb25zdCBwYXJlbnQgPSB0YXJnZXQuY29udGV4dC5jb2x1bW4ucGFyZW50O1xuICAgICAgICBpZiAocGFyZW50ICYmIHBhcmVudC5pc1NwYW5Db2x1bW4pIHtcbiAgICAgICAgICAgIGNvbnN0IGFyciA9IHRoaXMuZHJvcFRhcmdldHMudG9BcnJheSgpO1xuICAgICAgICAgICAgY29uc3QgZmlyc3RTcGFuID0gYXJyLmZpbmQodCA9PiB0LmNvbnRleHQuY29sdW1uLnBhcmVudCA9PT0gcGFyZW50KTtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gYXJyLmluZGV4T2YoZmlyc3RTcGFuKTtcbiAgICAgICAgICAgIGNvbnN0IGFkanVzdCA9IGUuYmVmb3JlID8gMCA6IHBhcmVudC5jaGlsZENvbHVtbnMubGVuZ3RoIC0gMTtcbiAgICAgICAgICAgIHRhcmdldCA9IGFycltpbmRleCArIGFkanVzdF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1lcmdlT2JqZWN0cyhlLCB7IHRhcmdldCB9KTtcbiAgICB9XG4gICAgdHJhY2tNb3ZlKGxlYXZlU3RyZWFtLCBkcm9wU3RyZWFtLCBlKSB7XG4gICAgICAgIGNvbnN0IGNvbHVtbiA9IGUudGFyZ2V0LmNvbnRleHQuY29sdW1uO1xuICAgICAgICBjb25zdCBsZXZlbENvbHVtbnMgPSB0aGlzLmNvbHVtbnNGb3JMZXZlbChjb2x1bW4ubGV2ZWwpO1xuICAgICAgICBjb25zdCBpbmRleCA9IGxldmVsQ29sdW1ucy5pbmRleE9mKGNvbHVtbik7XG4gICAgICAgIGNvbnN0IGlzRmlyc3QgPSAoY29sdW1uLmxvY2tlZCA/IGluZGV4ID09PSBsZXZlbENvbHVtbnMubGVuZ3RoIC0gMSA6IGluZGV4ID09PSAwKTtcbiAgICAgICAgY29uc3QgY2hhbmdlZCA9IGUuZHJhZ2dhYmxlLmNvbnRleHQuY29sdW1uLmlzTG9ja2VkICE9PSBjb2x1bW4uaXNMb2NrZWQ7XG4gICAgICAgIGlmIChjaGFuZ2VkICYmIGlzRmlyc3QpIHtcbiAgICAgICAgICAgIHJldHVybiBlLmRyYWdnYWJsZS5kcmFnXG4gICAgICAgICAgICAgICAgLnBpcGUodGFrZVVudGlsKGxlYXZlU3RyZWFtKSwgdGFrZVVudGlsKGRyb3BTdHJlYW0pLCBtYXAoKHsgbW91c2VFdmVudCB9KSA9PiBtZXJnZU9iamVjdHMoeyBjaGFuZ2VDb250YWluZXI6IHRydWUgfSwgZSwgeyBtb3VzZUV2ZW50IH0pKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG9mKG1lcmdlT2JqZWN0cyh7IGNoYW5nZUNvbnRhaW5lcjogY2hhbmdlZCB9LCBlKSk7XG4gICAgfVxuICAgIGNhbGN1bGF0ZUJlZm9yZSh7IGRyYWdnYWJsZSwgdGFyZ2V0LCBtb3VzZUV2ZW50LCBjaGFuZ2VDb250YWluZXIgPSBmYWxzZSB9KSB7XG4gICAgICAgIGNvbnN0IHRhcmdldEVsZW1lbnQgPSB0YXJnZXQuZWxlbWVudC5uYXRpdmVFbGVtZW50O1xuICAgICAgICBsZXQgYmVmb3JlID0gZmFsc2U7XG4gICAgICAgIGlmIChjaGFuZ2VDb250YWluZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgbGVmdCB9ID0gb2Zmc2V0KHRhcmdldEVsZW1lbnQpO1xuICAgICAgICAgICAgY29uc3QgaGFsZldpZHRoID0gdGFyZ2V0RWxlbWVudC5vZmZzZXRXaWR0aCAvIDI7XG4gICAgICAgICAgICBjb25zdCBtaWRkbGUgPSBsZWZ0ICsgaGFsZldpZHRoO1xuICAgICAgICAgICAgYmVmb3JlID0gbWlkZGxlID4gbW91c2VFdmVudC5wYWdlWDtcbiAgICAgICAgICAgIGlmICh0aGlzLmxvY2FsaXphdGlvbi5ydGwpIHtcbiAgICAgICAgICAgICAgICBiZWZvcmUgPSAhYmVmb3JlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYmVmb3JlID0gaXNUYXJnZXRCZWZvcmUoZHJhZ2dhYmxlLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgdGFyZ2V0RWxlbWVudCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJlZm9yZTtcbiAgICB9XG4gICAgZW50ZXIoeyB0YXJnZXQsIGJlZm9yZSB9KSB7XG4gICAgICAgIHRoaXMuaGludC5lbmFibGUoKTtcbiAgICAgICAgaWYgKHRoaXMubG9jYWxpemF0aW9uLnJ0bCkge1xuICAgICAgICAgICAgYmVmb3JlID0gIWJlZm9yZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmN1ZS5wb3NpdGlvbihwb3NpdGlvbih0YXJnZXQuZWxlbWVudC5uYXRpdmVFbGVtZW50LCBiZWZvcmUpKTtcbiAgICB9XG4gICAgbGVhdmUoKSB7XG4gICAgICAgIHRoaXMuaGludC5kaXNhYmxlKCk7XG4gICAgICAgIHRoaXMuY3VlLmhpZGUoKTtcbiAgICB9XG4gICAgZHJvcCh7IGRyYWdnYWJsZSwgdGFyZ2V0LCBiZWZvcmUsIGNoYW5nZUNvbnRhaW5lciB9KSB7XG4gICAgICAgIHRoaXMucmVvcmRlclNlcnZpY2UucmVvcmRlcih7XG4gICAgICAgICAgICBiZWZvcmUsXG4gICAgICAgICAgICBjaGFuZ2VDb250YWluZXIsXG4gICAgICAgICAgICBzb3VyY2U6IGRyYWdnYWJsZS5jb250ZXh0LmNvbHVtbixcbiAgICAgICAgICAgIHRhcmdldDogdGFyZ2V0LmNvbnRleHQuY29sdW1uXG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG5dLCBIZWFkZXJDb21wb25lbnQucHJvdG90eXBlLCBcInRvdGFsQ29sdW1uTGV2ZWxzXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBBcnJheSlcbl0sIEhlYWRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQXJyYXkpXG5dLCBIZWFkZXJDb21wb25lbnQucHJvdG90eXBlLCBcImdyb3Vwc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRGV0YWlsVGVtcGxhdGVEaXJlY3RpdmUpXG5dLCBIZWFkZXJDb21wb25lbnQucHJvdG90eXBlLCBcImRldGFpbFRlbXBsYXRlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgSGVhZGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzY3JvbGxhYmxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBIZWFkZXJDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlcmFibGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KVxuXSwgSGVhZGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzb3J0XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBIZWFkZXJDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgSGVhZGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzb3J0YWJsZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEhlYWRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZ3JvdXBhYmxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG5dLCBIZWFkZXJDb21wb25lbnQucHJvdG90eXBlLCBcImxvY2tlZENvbHVtbnNDb3VudFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEhlYWRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwicmVzaXphYmxlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgSGVhZGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJyZW9yZGVyYWJsZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEhlYWRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uTWVudVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgVGVtcGxhdGVSZWYpXG5dLCBIZWFkZXJDb21wb25lbnQucHJvdG90eXBlLCBcImNvbHVtbk1lbnVUZW1wbGF0ZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgSGVhZGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ0b3RhbENvbHVtbnNDb3VudFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgSGVhZGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ0YWJJbmRleFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ2NsYXNzLmstZ3JpZC1oZWFkZXInKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgSGVhZGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJoZWFkZXJDbGFzc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIFZpZXdDaGlsZHJlbihEcm9wVGFyZ2V0RGlyZWN0aXZlKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgUXVlcnlMaXN0KVxuXSwgSGVhZGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJkcm9wVGFyZ2V0c1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgVmlld0NoaWxkcmVuKEZpbHRlck1lbnVDb21wb25lbnQpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBRdWVyeUxpc3QpXG5dLCBIZWFkZXJDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlck1lbnVzXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBWaWV3Q2hpbGRyZW4oQ29sdW1uTWVudUNvbXBvbmVudCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFF1ZXJ5TGlzdClcbl0sIEhlYWRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uTWVudXNcIiwgdm9pZCAwKTtcbkhlYWRlckNvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZEhlYWRlcl0nLFxuICAgICAgICBzdHlsZXM6IFtgXG4gICAgICAgIC5rLWNvbHVtbi1yZXNpemVyIHtcbiAgICAgICAgICAgIGN1cnNvcjogY29sLXJlc2l6ZTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAwJTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIHdpZHRoOiAuNWVtO1xuICAgICAgICB9XG4gICAgYF0sXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgPG5nLXRlbXBsYXRlIFtuZ0lmXT1cInRydWVcIj5cbiAgICAgICAgPHRyICpuZ0Zvcj1cImxldCBpIG9mIGNvbHVtbkxldmVsczsgbGV0IGxldmVsSW5kZXggPSBpbmRleFwiXG4gICAgICAgICAgICBrZW5kb0dyaWRMb2dpY2FsUm93XG4gICAgICAgICAgICAgICAgW2xvZ2ljYWxSb3dJbmRleF09XCJsZXZlbEluZGV4XCJcbiAgICAgICAgICAgICAgICBbbG9naWNhbFNsYXZlUm93XT1cImxvY2tlZENvbHVtbnNDb3VudCA+IDBcIlxuICAgICAgICAgICAgICAgIFtsb2dpY2FsQ2VsbHNDb3VudF09XCJjb2x1bW5zLmxlbmd0aFwiXG4gICAgICAgICAgICAgICAgW2xvZ2ljYWxTbGF2ZUNlbGxzQ291bnRdPVwidW5sb2NrZWRDb2x1bW5zQ291bnRcIj5cbiAgICAgICAgICAgIDx0aFxuICAgICAgICAgICAgICAgIGNsYXNzPVwiay1ncm91cC1jZWxsIGstaGVhZGVyXCJcbiAgICAgICAgICAgICAgICByb2xlPVwicHJlc2VudGF0aW9uXCJcbiAgICAgICAgICAgICAgICAqbmdGb3I9XCJsZXQgZyBvZiBncm91cHNcIj5cbiAgICAgICAgICAgIDwvdGg+XG4gICAgICAgICAgICA8dGggY2xhc3M9XCJrLWhpZXJhcmNoeS1jZWxsIGstaGVhZGVyXCJcbiAgICAgICAgICAgICAgICByb2xlPVwicHJlc2VudGF0aW9uXCJcbiAgICAgICAgICAgICAgICAqbmdJZj1cImRldGFpbFRlbXBsYXRlPy50ZW1wbGF0ZVJlZlwiXG4gICAgICAgICAgICAgICAga2VuZG9HcmlkTG9naWNhbENlbGxcbiAgICAgICAgICAgICAgICAgICAgW2xvZ2ljYWxSb3dJbmRleF09XCJsZXZlbEluZGV4XCJcbiAgICAgICAgICAgICAgICAgICAgW2xvZ2ljYWxDb2xJbmRleF09XCIwXCJcbiAgICAgICAgICAgICAgICAgICAgYXJpYS1zZWxlY3RlZD1cImZhbHNlXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgIDwvdGg+XG4gICAgICAgICAgICA8bmctdGVtcGxhdGUgbmdGb3IgbGV0LWNvbHVtbiBbbmdGb3JPZl09XCJjb2x1bW5zRm9yTGV2ZWwobGV2ZWxJbmRleClcIiBbbmdGb3JUcmFja0J5XT1cInRyYWNrQnlJbmRleFwiIGxldC1jb2x1bW5JbmRleD1cImluZGV4XCIgbGV0LWxhc3Q9XCJsYXN0XCI+XG4gICAgICAgICAgICAgICAgPHRoICpuZ0lmPVwiIWlzQ29sdW1uR3JvdXBDb21wb25lbnQoY29sdW1uKVwiXG4gICAgICAgICAgICAgICAgICAgIGtlbmRvR3JpZExvZ2ljYWxDZWxsXG4gICAgICAgICAgICAgICAgICAgIFtsb2dpY2FsUm93SW5kZXhdPVwibGV2ZWxJbmRleFwiXG4gICAgICAgICAgICAgICAgICAgIFtsb2dpY2FsQ29sSW5kZXhdPVwibG9naWNhbENvbHVtbkluZGV4KGNvbHVtbilcIlxuICAgICAgICAgICAgICAgICAgICBbaGVhZGVyTGFiZWxUZXh0XT1cImNvbHVtbi50aXRsZSB8fCBjb2x1bW4uZmllbGRcIlxuICAgICAgICAgICAgICAgICAgICBbY29sU3Bhbl09XCJjb2x1bW4uY29sc3BhblwiXG4gICAgICAgICAgICAgICAgICAgIFtyb3dTcGFuXT1cImNvbHVtbi5yb3dzcGFuKHRvdGFsQ29sdW1uTGV2ZWxzKVwiXG4gICAgICAgICAgICAgICAgICAgIHJvbGU9XCJjb2x1bW5oZWFkZXJcIlxuICAgICAgICAgICAgICAgICAgICBhcmlhLXNlbGVjdGVkPVwiZmFsc2VcIlxuICAgICAgICAgICAgICAgICAgICBbYXR0ci5hcmlhLXNvcnRdPVwic29ydFN0YXRlKGNvbHVtbilcIlxuICAgICAgICAgICAgICAgICAgICAoa2V5ZG93bik9XCJvbkhlYWRlcktleWRvd24oY29sdW1uLCAkZXZlbnQpXCJcbiAgICAgICAgICAgICAgICAgICAga2VuZG9Ecm9wVGFyZ2V0XG4gICAgICAgICAgICAgICAgICAgIGtlbmRvRHJhZ2dhYmxlXG4gICAgICAgICAgICAgICAgICAgIGtlbmRvRHJhZ2dhYmxlQ29sdW1uXG4gICAgICAgICAgICAgICAgICAgIFtlbmFibGVEcmFnXT1cInNob3VsZEFjdGl2YXRlKGNvbHVtbilcIlxuICAgICAgICAgICAgICAgICAgICBbY29udGV4dF09XCJ7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaWVsZDogY29sdW1uLmZpZWxkLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2NvbHVtbicsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW46IGNvbHVtbixcbiAgICAgICAgICAgICAgICAgICAgICAgIGhpbnQ6IGNvbHVtbi50aXRsZSB8fCBjb2x1bW4uZmllbGQsXG4gICAgICAgICAgICAgICAgICAgICAgICBsYXN0Q29sdW1uOiBsYXN0ICYmIGNvbHVtbkluZGV4ID09PSAwXG4gICAgICAgICAgICAgICAgICAgIH1cIlxuICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImstaGVhZGVyXCJcbiAgICAgICAgICAgICAgICAgICAgW2NsYXNzLmstZmlsdGVyYWJsZV09XCIoc2hvd0ZpbHRlck1lbnUgJiYgaXNGaWx0ZXJhYmxlKGNvbHVtbikpIHx8IHNob3dDb2x1bW5NZW51KGNvbHVtbilcIlxuICAgICAgICAgICAgICAgICAgICBbY2xhc3Muay1maXJzdF09XCJpc0ZpcnN0T25Sb3coY29sdW1uLCBjb2x1bW5JbmRleClcIlxuICAgICAgICAgICAgICAgICAgICBbY2xhc3Muay1ncmlkLWhlYWRlci1zdGlja3ldPVwiY29sdW1uLnN0aWNreVwiXG4gICAgICAgICAgICAgICAgICAgIFtuZ0NsYXNzXT1cImNvbHVtbi5oZWFkZXJDbGFzc1wiXG4gICAgICAgICAgICAgICAgICAgIFtuZ1N0eWxlXT1cImNvbHVtbi5zdGlja3kgPyBhZGRTdGlja3lTdHlsZXMoY29sdW1uKSA6IGNvbHVtbi5oZWFkZXJTdHlsZVwiXG4gICAgICAgICAgICAgICAgICAgIFthdHRyLnJvd3NwYW5dPVwiY29sdW1uLnJvd3NwYW4odG90YWxDb2x1bW5MZXZlbHMpXCJcbiAgICAgICAgICAgICAgICAgICAgW2F0dHIuY29sc3Bhbl09XCJjb2x1bW4uY29sc3BhblwiPlxuXG4gICAgICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSBbbmdJZl09XCIhaXNTb3J0YWJsZShjb2x1bW4pXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1maWx0ZXItbWVudVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICpuZ0lmPVwic2hvd0ZpbHRlck1lbnUgJiYgaXNGaWx0ZXJhYmxlKGNvbHVtbilcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZmlsdGVyXT1cImZpbHRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW3RhYkluZGV4XT1cInRhYkluZGV4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2tlbmRvLWdyaWQtZmlsdGVyLW1lbnU+XG4gICAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4tbWVudSAqbmdJZj1cInNob3dDb2x1bW5NZW51KGNvbHVtbilcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtzdGFuZGFsb25lXT1cImZhbHNlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbc2V0dGluZ3NdPVwiY29sdW1uTWVudVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtjb2x1bW5NZW51VGVtcGxhdGVdPVwiY29sdW1uTWVudVRlbXBsYXRlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbc29ydF09XCJzb3J0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZmlsdGVyXT1cImZpbHRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW3NvcnRhYmxlXT1cInNvcnRhYmxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbdGFiSW5kZXhdPVwidGFiSW5kZXhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4tbWVudT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFt0ZW1wbGF0ZUNvbnRleHRdPVwie1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVJlZjogY29sdW1uLmhlYWRlclRlbXBsYXRlUmVmLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW5JbmRleDogY29sdW1uLmxlYWZJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sdW1uOiBjb2x1bW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpbXBsaWNpdDogY29sdW1uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSBbbmdJZl09XCIhY29sdW1uLmhlYWRlclRlbXBsYXRlUmVmXCI+e3tjb2x1bW4uZGlzcGxheVRpdGxlfX08L25nLXRlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuXG4gICAgICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSBbbmdJZl09XCJpc1NvcnRhYmxlKGNvbHVtbilcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiay1jZWxsLWlubmVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gI2xpbmsgY2xhc3M9XCJrLWxpbmtcIiAoY2xpY2spPVwib25Tb3J0Q2xpY2soY29sdW1uLCAkZXZlbnQsIGxpbmspXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW3RlbXBsYXRlQ29udGV4dF09XCJ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVSZWY6IGNvbHVtbi5oZWFkZXJUZW1wbGF0ZVJlZixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW5JbmRleDogY29sdW1uLmxlYWZJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW46IGNvbHVtbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaW1wbGljaXQ6IGNvbHVtblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGUgW25nSWZdPVwiIWNvbHVtbi5oZWFkZXJUZW1wbGF0ZVJlZlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJrLWNvbHVtbi10aXRsZVwiPnt7Y29sdW1uLmRpc3BsYXlUaXRsZX19PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBbYXR0ci5hcmlhLWxhYmVsXT1cInNvcnRhYmxlTGFiZWxcIiBbbmdDbGFzc109XCJzb3J0SWNvbihjb2x1bW4uZmllbGQpXCI+PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiAqbmdJZj1cInNob3dTb3J0TnVtYmVyaW5nKGNvbHVtbilcIiBjbGFzcz1cImstc29ydC1vcmRlclwiPnt7c29ydE9yZGVyKGNvbHVtbi5maWVsZCl9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gcm9sZT1cInN0YXR1c1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiay1zb3J0LXN0YXR1c1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPVwicG9zaXRpb246IGFic29sdXRlOyBsZWZ0OiAtMTAwMDBweDtcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbaW5uZXJIdG1sXT1cInNvcnRTdGF0dXMoY29sdW1uKVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1maWx0ZXItbWVudVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqbmdJZj1cInNob3dGaWx0ZXJNZW51ICYmIGlzRmlsdGVyYWJsZShjb2x1bW4pXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZmlsdGVyXT1cImZpbHRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFt0YWJJbmRleF09XCJ0YWJJbmRleFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1maWx0ZXItbWVudT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4tbWVudSAqbmdJZj1cInNob3dDb2x1bW5NZW51KGNvbHVtbilcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbc3RhbmRhbG9uZV09XCJmYWxzZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtzZXR0aW5nc109XCJjb2x1bW5NZW51XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbY29sdW1uTWVudVRlbXBsYXRlXT1cImNvbHVtbk1lbnVUZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtzb3J0XT1cInNvcnRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZmlsdGVyXT1cImZpbHRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtzb3J0YWJsZV09XCJzb3J0YWJsZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFt0YWJJbmRleF09XCJ0YWJJbmRleFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4tbWVudT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cblxuICAgICAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGUgW25nSWZdPVwiaXNDaGVja2JveENvbHVtbihjb2x1bW4pICYmICFjb2x1bW4uaGVhZGVyVGVtcGxhdGVSZWYgJiYgY29sdW1uLnNob3dTZWxlY3RBbGxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiay1jaGVja2JveFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2F0dHIuaWRdPVwic2VsZWN0QWxsQ2hlY2tib3hJZCgpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cInNlbGVjdEFsbENoZWNrYm94TGFiZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtlbmRvR3JpZFNlbGVjdEFsbENoZWNrYm94XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2VuZG9HcmlkRm9jdXNhYmxlPlxuICAgICAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBrZW5kb0dyaWRDb2x1bW5IYW5kbGVcbiAgICAgICAgICAgICAgICAgICAgICAgIGtlbmRvRHJhZ2dhYmxlXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImstY29sdW1uLXJlc2l6ZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgKm5nSWY9XCJyZXNpemFibGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgW2NvbHVtbnNdPVwiY29sdW1uc1wiPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC90aD5cbiAgICAgICAgICAgICAgICA8dGggKm5nSWY9XCJpc0NvbHVtbkdyb3VwQ29tcG9uZW50KGNvbHVtbilcIlxuICAgICAgICAgICAgICAgICAgICBrZW5kb0dyaWRMb2dpY2FsQ2VsbFxuICAgICAgICAgICAgICAgICAgICBbbG9naWNhbFJvd0luZGV4XT1cImxldmVsSW5kZXhcIlxuICAgICAgICAgICAgICAgICAgICBbbG9naWNhbENvbEluZGV4XT1cImxvZ2ljYWxDb2x1bW5JbmRleChjb2x1bW4pXCJcbiAgICAgICAgICAgICAgICAgICAgW3Jvd1NwYW5dPVwiY29sdW1uLnJvd3NwYW4odG90YWxDb2x1bW5MZXZlbHMpXCJcbiAgICAgICAgICAgICAgICAgICAgW2NvbFNwYW5dPVwiY29sdW1uLmNvbHNwYW5cIlxuICAgICAgICAgICAgICAgICAgICBbaGVhZGVyTGFiZWxUZXh0XT1cImNvbHVtbi50aXRsZSB8fCBjb2x1bW4uZmllbGRcIlxuICAgICAgICAgICAgICAgICAgICBrZW5kb0Ryb3BUYXJnZXRcbiAgICAgICAgICAgICAgICAgICAga2VuZG9EcmFnZ2FibGVcbiAgICAgICAgICAgICAgICAgICAga2VuZG9EcmFnZ2FibGVDb2x1bW5cbiAgICAgICAgICAgICAgICAgICAgW2VuYWJsZURyYWddPVwic2hvdWxkQWN0aXZhdGUoY29sdW1uKVwiXG4gICAgICAgICAgICAgICAgICAgIFtjb250ZXh0XT1cIntcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdjb2x1bW5Hcm91cCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW46IGNvbHVtbixcbiAgICAgICAgICAgICAgICAgICAgICAgIGhpbnQ6IGNvbHVtbi50aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RDb2x1bW46IGxhc3QgJiYgY29sdW1uSW5kZXggPT09IDBcbiAgICAgICAgICAgICAgICAgICAgfVwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiay1oZWFkZXJcIlxuICAgICAgICAgICAgICAgICAgICBbY2xhc3Muay1maXJzdF09XCJpc0ZpcnN0T25Sb3coY29sdW1uLCBjb2x1bW5JbmRleClcIlxuICAgICAgICAgICAgICAgICAgICBbY2xhc3Muay1maWx0ZXJhYmxlXT1cInNob3dDb2x1bW5NZW51KGNvbHVtbilcIlxuICAgICAgICAgICAgICAgICAgICBbY2xhc3Muay1ncmlkLWNvbnRlbnQtc3RpY2t5XT1cImNvbHVtbi5zdGlja3lcIlxuICAgICAgICAgICAgICAgICAgICBbbmdDbGFzc109XCJjb2x1bW4uaGVhZGVyQ2xhc3NcIlxuICAgICAgICAgICAgICAgICAgICBbbmdTdHlsZV09XCJjb2x1bW4uaGVhZGVyU3R5bGVcIlxuICAgICAgICAgICAgICAgICAgICBbYXR0ci5yb3dzcGFuXT1cImNvbHVtbi5yb3dzcGFuKHRvdGFsQ29sdW1uTGV2ZWxzKVwiXG4gICAgICAgICAgICAgICAgICAgIFthdHRyLmNvbHNwYW5dPVwiY29sdW1uLmNvbHNwYW5cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbi1tZW51ICpuZ0lmPVwic2hvd0NvbHVtbk1lbnUoY29sdW1uKVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW3N0YW5kYWxvbmVdPVwiZmFsc2VcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtzZXR0aW5nc109XCJjb2x1bW5NZW51XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbY29sdW1uXT1cImNvbHVtblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2NvbHVtbk1lbnVUZW1wbGF0ZV09XCJjb2x1bW5NZW51VGVtcGxhdGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4tbWVudT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFt0ZW1wbGF0ZUNvbnRleHRdPVwie1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVJlZjogY29sdW1uLmhlYWRlclRlbXBsYXRlUmVmLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW5JbmRleDogbG9ja2VkQ29sdW1uc0NvdW50ICsgY29sdW1uSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbHVtbjogY29sdW1uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaW1wbGljaXQ6IGNvbHVtblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGUgW25nSWZdPVwiIWNvbHVtbi5oZWFkZXJUZW1wbGF0ZVJlZlwiPnt7Y29sdW1uLmRpc3BsYXlUaXRsZX19PC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGtlbmRvR3JpZENvbHVtbkhhbmRsZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtlbmRvRHJhZ2dhYmxlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJrLWNvbHVtbi1yZXNpemVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAqbmdJZj1cInJlc2l6YWJsZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtjb2x1bW5zXT1cImNvbHVtbnNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L3RoPlxuICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgPC90cj5cbiAgICAgICAgPHRyICpuZ0lmPVwic2hvd0ZpbHRlclJvd1wiXG4gICAgICAgICAgICBrZW5kb0dyaWRGaWx0ZXJSb3dcbiAgICAgICAgICAgICAgICBbY29sdW1uc109XCJsZWFmQ29sdW1uc1wiXG4gICAgICAgICAgICAgICAgW2ZpbHRlcl09XCJmaWx0ZXJcIlxuICAgICAgICAgICAgICAgIFtncm91cHNdPVwiZ3JvdXBzXCJcbiAgICAgICAgICAgICAgICBbZGV0YWlsVGVtcGxhdGVdPVwiZGV0YWlsVGVtcGxhdGVcIlxuICAgICAgICAgICAgICAgIFtsb2NrZWRDb2x1bW5zQ291bnRdPVwibG9ja2VkQ29sdW1uc0NvdW50XCJcbiAgICAgICAgICAgIGtlbmRvR3JpZExvZ2ljYWxSb3dcbiAgICAgICAgICAgICAgICBbbG9naWNhbFJvd0luZGV4XT1cInRvdGFsQ29sdW1uTGV2ZWxzICsgMVwiXG4gICAgICAgICAgICAgICAgW2xvZ2ljYWxTbGF2ZVJvd109XCJsb2NrZWRDb2x1bW5zQ291bnQgPiAwXCJcbiAgICAgICAgICAgICAgICBbbG9naWNhbENlbGxzQ291bnRdPVwiY29sdW1ucy5sZW5ndGhcIlxuICAgICAgICAgICAgICAgIFtsb2dpY2FsU2xhdmVDZWxsc0NvdW50XT1cInVubG9ja2VkQ29sdW1uc0NvdW50XCJcbiAgICAgICAgPjwvdHI+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgICBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtTaW5nbGVQb3B1cFNlcnZpY2UsXG4gICAgICAgIERyYWdIaW50U2VydmljZSxcbiAgICAgICAgRHJvcEN1ZVNlcnZpY2UsXG4gICAgICAgIENvbHVtblJlb3JkZXJTZXJ2aWNlLFxuICAgICAgICBJZFNlcnZpY2UsXG4gICAgICAgIFNvcnRTZXJ2aWNlLFxuICAgICAgICBMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBDb2x1bW5JbmZvU2VydmljZSxcbiAgICAgICAgQ2hhbmdlRGV0ZWN0b3JSZWZdKVxuXSwgSGVhZGVyQ29tcG9uZW50KTtcblxuLy8gVE9ET1xuLy8gdHNsaW50OmRpc2FibGU6cnhqcy1uby11bnNhZmUtdGFrZXVudGlsXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgZnJvbVBlcmNlbnRhZ2UgPSAodmFsdWUsIHBlcmNlbnQpID0+IHtcbiAgICBjb25zdCBzaWduID0gcGVyY2VudCA8IDAgPyAtMSA6IDE7XG4gICAgcmV0dXJuIE1hdGguY2VpbCgoTWF0aC5hYnMocGVyY2VudCkgLyAxMDApICogdmFsdWUpICogc2lnbjtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgdG9QZXJjZW50YWdlID0gKHZhbHVlLCB3aG9sZSkgPT4gKHZhbHVlIC8gd2hvbGUpICogMTAwO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGhlYWRlcldpZHRoID0gKGhhbmRsZSkgPT4gaGFuZGxlLm5hdGl2ZUVsZW1lbnQucGFyZW50RWxlbWVudC5vZmZzZXRXaWR0aDtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBhbGxMZWFmQ29sdW1ucyA9IGNvbHVtbnMgPT4gZXhwYW5kQ29sdW1ucyhjb2x1bW5zKVxuICAgIC5maWx0ZXIoYyA9PiAhYy5pc0NvbHVtbkdyb3VwKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBzdG9wUHJvcGFnYXRpb24gPSAoeyBvcmlnaW5hbEV2ZW50OiBldmVudCB9KSA9PiB7XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgY3JlYXRlTW92ZVN0cmVhbSA9IChzZXJ2aWNlLCBkcmFnZ2FibGUpID0+IG1vdXNlRG93biA9PiBkcmFnZ2FibGUua2VuZG9EcmFnLnBpcGUodGFrZVVudGlsKGRyYWdnYWJsZS5rZW5kb1JlbGVhc2UucGlwZSh0YXAoKCkgPT4gc2VydmljZS5lbmQoKSkpKSwgbWFwKCh7IHBhZ2VYIH0pID0+ICh7XG4gICAgb3JpZ2luYWxYOiBtb3VzZURvd24ucGFnZVgsXG4gICAgcGFnZVhcbn0pKSk7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgcHJldmVudE9uRGJsQ2xpY2skMSA9IHJlbGVhc2UgPT4gbW91c2VEb3duID0+IG9mKG1vdXNlRG93bikucGlwZShkZWxheSgxNTApLCB0YWtlVW50aWwocmVsZWFzZSkpO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGlzSW5TcGFuQ29sdW1uJDEgPSBjb2x1bW4gPT4gISEoY29sdW1uLnBhcmVudCAmJiBjb2x1bW4ucGFyZW50LmlzU3BhbkNvbHVtbik7XG4vKipcbiAqIEBoaWRkZW5cbiAqXG4gKiBDYWxjdWxhdGVzIHRoZSBjb2x1bW4gaW5kZXguIElmIHRoZSBjb2x1bW4gaXMgc3RhdGVkIGluIGBTcGFuQ29sdW1uYCxcbiAqIHRoZSBpbmRleCBmb3IgYWxsIGNoaWxkIGNvbHVtbnMgZXF1YWxzIHRoZSBpbmRleCBvZiB0aGUgZmlyc3QgY2hpbGQuXG4gKi9cbmNvbnN0IGluZGV4T2YgPSAodGFyZ2V0LCBsaXN0KSA9PiB7XG4gICAgbGV0IGluZGV4ID0gMDtcbiAgICBsZXQgaWdub3JlID0gMDtcbiAgICBsZXQgc2tpcCA9IDA7XG4gICAgd2hpbGUgKGluZGV4IDwgbGlzdC5sZW5ndGgpIHtcbiAgICAgICAgY29uc3QgY3VycmVudCA9IGxpc3RbaW5kZXhdO1xuICAgICAgICBjb25zdCBpc1BhcmVudFNwYW5Db2x1bW4gPSBpc0luU3BhbkNvbHVtbiQxKGN1cnJlbnQpO1xuICAgICAgICBpZiAoY3VycmVudCA9PT0gdGFyZ2V0KSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBpZiAoKGlnbm9yZS0tIDw9IDApICYmIGlzUGFyZW50U3BhbkNvbHVtbikge1xuICAgICAgICAgICAgaWdub3JlID0gY3VycmVudC5wYXJlbnQuY2hpbGRDb2x1bW5zLmxlbmd0aCAtIDE7XG4gICAgICAgICAgICBza2lwICs9IGlnbm9yZTtcbiAgICAgICAgfVxuICAgICAgICBpbmRleCsrO1xuICAgIH1cbiAgICByZXR1cm4gaW5kZXggLSBza2lwO1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgQ29sdW1uSGFuZGxlRGlyZWN0aXZlID0gY2xhc3MgQ29sdW1uSGFuZGxlRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3RvcihkcmFnZ2FibGUsIGVsZW1lbnQsIHNlcnZpY2UsIHpvbmUsIGNkciwgbG9jYWxpemF0aW9uKSB7XG4gICAgICAgIHRoaXMuZHJhZ2dhYmxlID0gZHJhZ2dhYmxlO1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgICB0aGlzLnNlcnZpY2UgPSBzZXJ2aWNlO1xuICAgICAgICB0aGlzLnpvbmUgPSB6b25lO1xuICAgICAgICB0aGlzLmNkciA9IGNkcjtcbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb24gPSBsb2NhbGl6YXRpb247XG4gICAgICAgIHRoaXMuY29sdW1ucyA9IFtdO1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMgPSBuZXcgU3Vic2NyaXB0aW9uKCk7XG4gICAgICAgIHRoaXMucnRsID0gZmFsc2U7XG4gICAgfVxuICAgIGdldCB2aXNpYmxlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW4ucmVzaXphYmxlID8gJ2Jsb2NrJyA6ICdub25lJztcbiAgICB9XG4gICAgZ2V0IGxlZnRTdHlsZSgpIHtcbiAgICAgICAgcmV0dXJuIGlzVHJ1dGh5KHRoaXMucnRsKSA/IDAgOiBudWxsO1xuICAgIH1cbiAgICBnZXQgcmlnaHRTdHlsZSgpIHtcbiAgICAgICAgcmV0dXJuIGlzVHJ1dGh5KHRoaXMucnRsKSA/IG51bGwgOiAwO1xuICAgIH1cbiAgICBhdXRvRml0KCkge1xuICAgICAgICBjb25zdCBhbGxMZWFmcyA9IGFsbExlYWZDb2x1bW5zKHRoaXMuY29sdW1ucyk7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRMZWFmcyA9IGxlYWZDb2x1bW5zKFt0aGlzLmNvbHVtbl0pLmZpbHRlcihjb2x1bW4gPT4gaXNUcnV0aHkoY29sdW1uLnJlc2l6YWJsZSkpO1xuICAgICAgICBjb25zdCBjb2x1bW5JbmZvID0gY3VycmVudExlYWZzLm1hcChjb2x1bW4gPT4ge1xuICAgICAgICAgICAgY29uc3QgaXNQYXJlbnRTcGFuID0gaXNJblNwYW5Db2x1bW4kMShjb2x1bW4pO1xuICAgICAgICAgICAgY29uc3QgaXNMYXN0SW5TcGFuID0gaXNQYXJlbnRTcGFuID8gY29sdW1uLnBhcmVudC5jaGlsZENvbHVtbnMubGFzdCA9PT0gY29sdW1uIDogZmFsc2U7XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IGluZGV4T2YoY29sdW1uLCBhbGxMZWFmcyk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGNvbHVtbixcbiAgICAgICAgICAgICAgICBoZWFkZXJJbmRleDogdGhpcy5jb2x1bW5zRm9yTGV2ZWwoY29sdW1uLmxldmVsKS5pbmRleE9mKGNvbHVtbiksXG4gICAgICAgICAgICAgICAgaW5kZXgsXG4gICAgICAgICAgICAgICAgaXNMYXN0SW5TcGFuLFxuICAgICAgICAgICAgICAgIGlzUGFyZW50U3BhbixcbiAgICAgICAgICAgICAgICBsZXZlbDogY29sdW1uLmxldmVsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICAgICAgY3VycmVudExlYWZzLmZvckVhY2goY29sdW1uID0+IGNvbHVtbi53aWR0aCA9IDApO1xuICAgICAgICB0aGlzLnNlcnZpY2UubWVhc3VyZUNvbHVtbnMoY29sdW1uSW5mbyk7XG4gICAgfVxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICBjb25zdCBzZXJ2aWNlID0gdGhpcy5zZXJ2aWNlLmNoYW5nZXMucGlwZShmaWx0ZXIoKCkgPT4gdGhpcy5jb2x1bW4ucmVzaXphYmxlKSwgZmlsdGVyKGUgPT4gaXNQcmVzZW50KGUuY29sdW1ucy5maW5kKGNvbHVtbiA9PiBjb2x1bW4gPT09IHRoaXMuY29sdW1uKSkpKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZChzZXJ2aWNlLnBpcGUoZmlsdGVyKGUgPT4gZS50eXBlID09PSAnc3RhcnQnKSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUodGhpcy5pbml0U3RhdGUuYmluZCh0aGlzKSkpO1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuYWRkKHNlcnZpY2UucGlwZShmaWx0ZXIoZSA9PiBlLnR5cGUgPT09ICdyZXNpemVDb2x1bW4nKSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUodGhpcy5yZXNpemUuYmluZCh0aGlzKSkpO1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuYWRkKHRoaXMuc2VydmljZS5jaGFuZ2VzLnBpcGUoZmlsdGVyKGUgPT4gZS50eXBlID09PSAnc3RhcnQnKSwgZmlsdGVyKHRoaXMuc2hvdWxkVXBkYXRlLmJpbmQodGhpcykpLCB0YWtlKDEpIC8vb24gZmlyc3QgcmVzaXplIG9ubHlcbiAgICAgICAgKS5zdWJzY3JpYmUodGhpcy5pbml0Q29sdW1uV2lkdGguYmluZCh0aGlzKSkpO1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuYWRkKHRoaXMuem9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB0aGlzLmRyYWdnYWJsZS5rZW5kb1ByZXNzLnBpcGUodGFwKHN0b3BQcm9wYWdhdGlvbiksIHRhcCgoKSA9PiB0aGlzLnNlcnZpY2Uuc3RhcnQodGhpcy5jb2x1bW4pKSwgc3dpdGNoTWFwKHByZXZlbnRPbkRibENsaWNrJDEodGhpcy5kcmFnZ2FibGUua2VuZG9SZWxlYXNlKSksIHN3aXRjaE1hcChjcmVhdGVNb3ZlU3RyZWFtKHRoaXMuc2VydmljZSwgdGhpcy5kcmFnZ2FibGUpKSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoKHsgcGFnZVgsIG9yaWdpbmFsWCB9KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkZWx0YSA9IHBhZ2VYIC0gb3JpZ2luYWxYO1xuICAgICAgICAgICAgY29uc3QgcGVyY2VudCA9IHRvUGVyY2VudGFnZShkZWx0YSwgdGhpcy5jb2x1bW4ucmVzaXplU3RhcnRXaWR0aCB8fCB0aGlzLmNvbHVtbi53aWR0aCk7XG4gICAgICAgICAgICB0aGlzLnNlcnZpY2UucmVzaXplQ29sdW1ucyhwZXJjZW50KTtcbiAgICAgICAgfSkpKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZChzZXJ2aWNlLnBpcGUoZmlsdGVyKGUgPT4gZS50eXBlID09PSAnYXV0b0ZpdENvbXBsZXRlJykpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKHRoaXMuc2l6ZVRvRml0LmJpbmQodGhpcykpKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZChzZXJ2aWNlLnBpcGUoZmlsdGVyKGUgPT4gZS50eXBlID09PSAndHJpZ2dlckF1dG9GaXQnKSlcbiAgICAgICAgICAgIC5zdWJzY3JpYmUodGhpcy5hdXRvRml0LmJpbmQodGhpcykpKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZCh0aGlzLmxvY2FsaXphdGlvbi5jaGFuZ2VzLnN1YnNjcmliZSgoeyBydGwgfSkgPT4gdGhpcy5ydGwgPSBydGwpKTtcbiAgICB9XG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIGlmICh0aGlzLnN1YnNjcmlwdGlvbnMpIHtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHNob3VsZFVwZGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuICFhbGxMZWFmQ29sdW1ucyh0aGlzLmNvbHVtbnMpXG4gICAgICAgICAgICAubWFwKGNvbHVtbiA9PiBjb2x1bW4ud2lkdGgpXG4gICAgICAgICAgICAuc29tZShpc0JsYW5rKTtcbiAgICB9XG4gICAgaW5pdENvbHVtbldpZHRoKCkge1xuICAgICAgICB0aGlzLmNvbHVtbi53aWR0aCA9IGhlYWRlcldpZHRoKHRoaXMuZWxlbWVudCk7XG4gICAgfVxuICAgIGluaXRTdGF0ZSgpIHtcbiAgICAgICAgdGhpcy5jb2x1bW4ucmVzaXplU3RhcnRXaWR0aCA9IGhlYWRlcldpZHRoKHRoaXMuZWxlbWVudCk7XG4gICAgICAgIHRoaXMuc2VydmljZS5yZXNpemVkQ29sdW1uKHtcbiAgICAgICAgICAgIGNvbHVtbjogdGhpcy5jb2x1bW4sXG4gICAgICAgICAgICBvbGRXaWR0aDogdGhpcy5jb2x1bW4ucmVzaXplU3RhcnRXaWR0aFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVzaXplKHsgZGVsdGFQZXJjZW50IH0pIHtcbiAgICAgICAgbGV0IGRlbHRhID0gZnJvbVBlcmNlbnRhZ2UodGhpcy5jb2x1bW4ucmVzaXplU3RhcnRXaWR0aCwgZGVsdGFQZXJjZW50KTtcbiAgICAgICAgaWYgKGlzVHJ1dGh5KHRoaXMucnRsKSkge1xuICAgICAgICAgICAgZGVsdGEgKj0gLTE7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbmV3V2lkdGggPSBNYXRoLm1heCh0aGlzLmNvbHVtbi5yZXNpemVTdGFydFdpZHRoICsgZGVsdGEsIHRoaXMuY29sdW1uLm1pblJlc2l6YWJsZVdpZHRoKTtcbiAgICAgICAgY29uc3QgdGFibGVEZWx0YSA9IG5ld1dpZHRoID4gdGhpcy5jb2x1bW4ubWluUmVzaXphYmxlV2lkdGggP1xuICAgICAgICAgICAgZGVsdGEgOiB0aGlzLmNvbHVtbi5taW5SZXNpemFibGVXaWR0aCAtIHRoaXMuY29sdW1uLnJlc2l6ZVN0YXJ0V2lkdGg7XG4gICAgICAgIHRoaXMudXBkYXRlV2lkdGgodGhpcy5jb2x1bW4sIG5ld1dpZHRoKTtcbiAgICAgICAgdGhpcy5zZXJ2aWNlLnJlc2l6ZVRhYmxlKHRoaXMuY29sdW1uLCB0YWJsZURlbHRhKTtcbiAgICB9XG4gICAgc2l6ZVRvRml0KHsgY29sdW1ucywgd2lkdGhzIH0pIHtcbiAgICAgICAgY29uc3QgaW5kZXggPSBjb2x1bW5zLmluZGV4T2YodGhpcy5jb2x1bW4pO1xuICAgICAgICBjb25zdCB3aWR0aCA9IE1hdGgubWF4KC4uLndpZHRocy5tYXAodyA9PiB3W2luZGV4XSkpICsgMTsgLy9hZGQgMXB4IGZvciBJRVxuICAgICAgICBjb25zdCB0YWJsZURlbHRhID0gd2lkdGggLSB0aGlzLmNvbHVtbi5yZXNpemVTdGFydFdpZHRoO1xuICAgICAgICB0aGlzLnVwZGF0ZVdpZHRoKHRoaXMuY29sdW1uLCB3aWR0aCk7XG4gICAgICAgIHRoaXMuc2VydmljZS5yZXNpemVUYWJsZSh0aGlzLmNvbHVtbiwgdGFibGVEZWx0YSk7XG4gICAgfVxuICAgIHVwZGF0ZVdpZHRoKGNvbHVtbiwgd2lkdGgpIHtcbiAgICAgICAgY29sdW1uLndpZHRoID0gd2lkdGg7XG4gICAgICAgIHRoaXMuY2RyLm1hcmtGb3JDaGVjaygpOyAvL2ZvcmNlIENEIGN5Y2xlXG4gICAgfVxuICAgIGNvbHVtbnNGb3JMZXZlbChsZXZlbCkge1xuICAgICAgICByZXR1cm4gY29sdW1uc1RvUmVuZGVyKHRoaXMuY29sdW1ucyA/IHRoaXMuY29sdW1ucy5maWx0ZXIoY29sdW1uID0+IGNvbHVtbi5sZXZlbCA9PT0gbGV2ZWwpIDogW10pO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBBcnJheSlcbl0sIENvbHVtbkhhbmRsZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwiY29sdW1uc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQ29sdW1uQmFzZSQxKVxuXSwgQ29sdW1uSGFuZGxlRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJjb2x1bW5cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdzdHlsZS5kaXNwbGF5JyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgQ29sdW1uSGFuZGxlRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJ2aXNpYmxlXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ3N0eWxlLmxlZnQnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBDb2x1bW5IYW5kbGVEaXJlY3RpdmUucHJvdG90eXBlLCBcImxlZnRTdHlsZVwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdzdHlsZS5yaWdodCcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIENvbHVtbkhhbmRsZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwicmlnaHRTdHlsZVwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RMaXN0ZW5lcignZGJsY2xpY2snKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpyZXR1cm50eXBlXCIsIHZvaWQgMClcbl0sIENvbHVtbkhhbmRsZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXV0b0ZpdFwiLCBudWxsKTtcbkNvbHVtbkhhbmRsZURpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZENvbHVtbkhhbmRsZV0nXG4gICAgfSksXG4gICAgX19wYXJhbSgwLCBIb3N0KCkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRHJhZ2dhYmxlRGlyZWN0aXZlLFxuICAgICAgICBFbGVtZW50UmVmLFxuICAgICAgICBDb2x1bW5SZXNpemluZ1NlcnZpY2UsXG4gICAgICAgIE5nWm9uZSxcbiAgICAgICAgQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgICAgIExvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgQ29sdW1uSGFuZGxlRGlyZWN0aXZlKTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBzZWxlY3QtYWxsIGNoZWNrYm94IGZlYXR1cmUgb2YgdGhlIEdyaWQgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBzZWxlY3Rpb25fZ3JpZCAlfSN0b2Mtc2VsZWN0LWFsbC1mZWF0dXJlKSkuXG4gKi9cbmxldCBTZWxlY3RBbGxDaGVja2JveERpcmVjdGl2ZSA9IGNsYXNzIFNlbGVjdEFsbENoZWNrYm94RGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3RvcihzZWxlY3Rpb25TZXJ2aWNlLCBlbCwgcmVuZGVyZXIsIG5nWm9uZSkge1xuICAgICAgICB0aGlzLnNlbGVjdGlvblNlcnZpY2UgPSBzZWxlY3Rpb25TZXJ2aWNlO1xuICAgICAgICB0aGlzLmVsID0gZWw7XG4gICAgICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICAgICAgdGhpcy5uZ1pvbmUgPSBuZ1pvbmU7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSB1c2VyIGNsaWNrcyB0aGUgYGtlbmRvR3JpZFNlbGVjdEFsbENoZWNrYm94YCBzZWxlY3QtYWxsIGNoZWNrYm94XG4gICAgICAgICAqIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgc2VsZWN0aW9uX2dyaWQgJX0jdG9jLXNlbGVjdC1hbGwtZmVhdHVyZSkpLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zZWxlY3RBbGxDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMudHlwZSA9IFwiY2hlY2tib3hcIjtcbiAgICAgICAgdGhpcy5zdGF0ZVNldCA9IGZhbHNlO1xuICAgICAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmRlc3Ryb3lDbGljayA9IHRoaXMucmVuZGVyZXIubGlzdGVuKHRoaXMuZWwubmF0aXZlRWxlbWVudCwgXCJjbGlja1wiLCB0aGlzLm9uQ2xpY2suYmluZCh0aGlzKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBuZ0FmdGVyQ29udGVudENoZWNrZWQoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoKTtcbiAgICB9XG4gICAgbmdPbkNoYW5nZXMoKSB7XG4gICAgICAgIHRoaXMuc3RhdGVTZXQgPSB0cnVlO1xuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgaWYgKHRoaXMuZGVzdHJveUNsaWNrKSB7XG4gICAgICAgICAgICB0aGlzLmRlc3Ryb3lDbGljaygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvbkNsaWNrKCkge1xuICAgICAgICAvLyB5aWVsZHMgY29uc2lzdGVudCBjcm9zcy1icm93c2VyIGJlaGF2aW9yIHdoZW4gY2xpY2tpbmcgYW4gXCJpbmRldGVybWluYXRlXCIgY2hlY2tib3hcbiAgICAgICAgY29uc3QgdW5kZWZpbmVkQ2hlY2tlZFN0YXRlSW5JRSA9IGRldGVjdElFKCkgJiYgdGhpcy5zZWxlY3Rpb25TZXJ2aWNlLnNlbGVjdEFsbFN0YXRlID09PSB1bmRlZmluZWQ7XG4gICAgICAgIGNvbnN0IGlzQ2hlY2tlZCA9IHVuZGVmaW5lZENoZWNrZWRTdGF0ZUluSUUgPyB0cnVlIDogdGhpcy5lbC5uYXRpdmVFbGVtZW50LmNoZWNrZWQ7XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLnNlbGVjdGlvblNlcnZpY2Uub3B0aW9ucztcbiAgICAgICAgdGhpcy5zZWxlY3RBbGxDaGFuZ2UuZW1pdChpc0NoZWNrZWQgPyBcImNoZWNrZWRcIiA6IFwidW5jaGVja2VkXCIpO1xuICAgICAgICBpZiAob3B0aW9ucy5lbmFibGVkICYmIG9wdGlvbnMubW9kZSA9PT0gXCJtdWx0aXBsZVwiKSB7XG4gICAgICAgICAgICB0aGlzLm5nWm9uZS5ydW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uU2VydmljZS51cGRhdGVBbGwoaXNDaGVja2VkKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBzZXRTdGF0ZSgpIHtcbiAgICAgICAgY29uc3Qgc3RhdGUkJDEgPSB0aGlzLnN0YXRlU2V0ID8gdGhpcy5zdGF0ZVRvQm9vbCgpIDogdGhpcy5zZWxlY3Rpb25TZXJ2aWNlLnNlbGVjdEFsbFN0YXRlO1xuICAgICAgICBjb25zdCBlbGVtID0gdGhpcy5lbC5uYXRpdmVFbGVtZW50O1xuICAgICAgICB0aGlzLnJlbmRlcmVyLnNldFByb3BlcnR5KGVsZW0sIFwiaW5kZXRlcm1pbmF0ZVwiLCAhaXNQcmVzZW50KHN0YXRlJCQxKSk7XG4gICAgICAgIHRoaXMucmVuZGVyZXIuc2V0UHJvcGVydHkoZWxlbSwgXCJjaGVja2VkXCIsIGlzUHJlc2VudChzdGF0ZSQkMSkgPyBzdGF0ZSQkMSA6IGZhbHNlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHN0YXRlVG9Cb29sKCkge1xuICAgICAgICBzd2l0Y2ggKHRoaXMuc3RhdGUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJjaGVja2VkXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICBjYXNlIFwidW5jaGVja2VkXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIFNlbGVjdEFsbENoZWNrYm94RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJzdGF0ZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIFNlbGVjdEFsbENoZWNrYm94RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJzZWxlY3RBbGxDaGFuZ2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdhdHRyLnR5cGUnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgU2VsZWN0QWxsQ2hlY2tib3hEaXJlY3RpdmUucHJvdG90eXBlLCBcInR5cGVcIiwgdm9pZCAwKTtcblNlbGVjdEFsbENoZWNrYm94RGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkU2VsZWN0QWxsQ2hlY2tib3hdJ1xuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbU2VsZWN0aW9uU2VydmljZSxcbiAgICAgICAgRWxlbWVudFJlZixcbiAgICAgICAgUmVuZGVyZXIyLFxuICAgICAgICBOZ1pvbmVdKVxuXSwgU2VsZWN0QWxsQ2hlY2tib3hEaXJlY3RpdmUpO1xuXG5jb25zdCBpc05vVmFsdWVPcGVyYXRvciA9IG9wZXJhdG9yID0+IChvcGVyYXRvciA9PT0gXCJpc251bGxcIlxuICAgIHx8IG9wZXJhdG9yID09PSBcImlzbm90bnVsbFwiXG4gICAgfHwgb3BlcmF0b3IgPT09IFwiaXNlbXB0eVwiXG4gICAgfHwgb3BlcmF0b3IgPT09IFwiaXNub3RlbXB0eVwiKTtcbmNvbnN0IHZhbGlkRmlsdGVycyA9ICh7IHZhbHVlLCBvcGVyYXRvciB9KSA9PiAhaXNOdWxsT3JFbXB0eVN0cmluZyh2YWx1ZSkgfHwgaXNOb1ZhbHVlT3BlcmF0b3Iob3BlcmF0b3IpO1xuY29uc3QgdHJpbUZpbHRlcnMgPSBmaWx0ZXIkJDEgPT4ge1xuICAgIGZpbHRlciQkMS5maWx0ZXJzID0gZmlsdGVyJCQxLmZpbHRlcnMuZmlsdGVyKHZhbGlkRmlsdGVycyk7XG4gICAgcmV0dXJuIGZpbHRlciQkMTtcbn07XG5jb25zdCBmaW5kUGFyZW50ID0gKGZpbHRlcnMsIGZpZWxkLCBwYXJlbnQpID0+IHtcbiAgICByZXR1cm4gZmlsdGVycy5yZWR1Y2UoKGFjYywgZmlsdGVyJCQxKSA9PiB7XG4gICAgICAgIGlmIChhY2MpIHtcbiAgICAgICAgICAgIHJldHVybiBhY2M7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZpbHRlciQkMS5maWx0ZXJzKSB7XG4gICAgICAgICAgICByZXR1cm4gZmluZFBhcmVudChmaWx0ZXIkJDEuZmlsdGVycywgZmllbGQsIGZpbHRlciQkMSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZmlsdGVyJCQxLmZpZWxkID09PSBmaWVsZCkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHVuZGVmaW5lZCk7IC8vIHRzbGludDpkaXNhYmxlLWxpbmU6YWxpZ25cbn07XG5jb25zdCBwYXJlbnRMb2dpY09mRGVmYXVsdCA9IChmaWx0ZXIkJDEsIGZpZWxkLCBkZWYgPSBcImFuZFwiKSA9PiB7XG4gICAgY29uc3QgcGFyZW50ID0gZmluZFBhcmVudCgoKGZpbHRlciQkMSB8fCB7fSkuZmlsdGVycyB8fCBbXSksIGZpZWxkKTtcbiAgICByZXR1cm4gaXNQcmVzZW50KHBhcmVudCkgPyBwYXJlbnQubG9naWMgOiBkZWY7XG59O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBGaWx0ZXJNZW51Q29udGFpbmVyQ29tcG9uZW50ID0gY2xhc3MgRmlsdGVyTWVudUNvbnRhaW5lckNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocGFyZW50U2VydmljZSwgY2hpbGRTZXJ2aWNlLCBsb2NhbGl6YXRpb24sIGNkLCBtZW51VGFiYmluZ1NlcnZpY2UpIHtcbiAgICAgICAgdGhpcy5wYXJlbnRTZXJ2aWNlID0gcGFyZW50U2VydmljZTtcbiAgICAgICAgdGhpcy5jaGlsZFNlcnZpY2UgPSBjaGlsZFNlcnZpY2U7XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uID0gbG9jYWxpemF0aW9uO1xuICAgICAgICB0aGlzLmNkID0gY2Q7XG4gICAgICAgIHRoaXMuY2xvc2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAaGlkZGVuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmFjdGlvbnNDbGFzcyA9ICdrLWFjdGlvbi1idXR0b25zIGstYnV0dG9uLWdyb3VwJztcbiAgICAgICAgdGhpcy5fdGVtcGxhdGVDb250ZXh0ID0ge307XG4gICAgICAgIHRoaXMubWVudVRhYmJpbmdTZXJ2aWNlID0gbWVudVRhYmJpbmdTZXJ2aWNlO1xuICAgIH1cbiAgICBnZXQgZmlsdGVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZmlsdGVyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgY3VycmVudCByb290IGZpbHRlci5cbiAgICAgKiBAdHlwZSB7Q29tcG9zaXRlRmlsdGVyRGVzY3JpcHRvcn1cbiAgICAgKi9cbiAgICBzZXQgZmlsdGVyKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX2ZpbHRlciA9IGNsb25lRmlsdGVycyh2YWx1ZSk7XG4gICAgfVxuICAgIGdldCBjaGlsZEZpbHRlcigpIHtcbiAgICAgICAgaWYgKCFpc1ByZXNlbnQodGhpcy5fY2hpbGRGaWx0ZXIpKSB7XG4gICAgICAgICAgICB0aGlzLl9jaGlsZEZpbHRlciA9IHtcbiAgICAgICAgICAgICAgICBmaWx0ZXJzOiBmaWx0ZXJzQnlGaWVsZCh0aGlzLmZpbHRlciwgKHRoaXMuY29sdW1uIHx8IHt9KS5maWVsZCksXG4gICAgICAgICAgICAgICAgbG9naWM6IHBhcmVudExvZ2ljT2ZEZWZhdWx0KHRoaXMuZmlsdGVyLCAodGhpcy5jb2x1bW4gfHwge30pLmZpZWxkKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2hpbGRGaWx0ZXI7XG4gICAgfVxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IHRoaXMuY2hpbGRTZXJ2aWNlLmNoYW5nZXMuc3Vic2NyaWJlKGZpbHRlciQkMSA9PiB0aGlzLl9jaGlsZEZpbHRlciA9IGZpbHRlciQkMSk7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLmFkZCh0aGlzLmxvY2FsaXphdGlvbi5jaGFuZ2VzLnN1YnNjcmliZSgoKSA9PiB0aGlzLmNkLm1hcmtGb3JDaGVjaygpKSk7XG4gICAgfVxuICAgIG5nQWZ0ZXJWaWV3Q2hlY2tlZCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLm1lbnVUYWJiaW5nU2VydmljZS5pc0NvbHVtbk1lbnUgfHwgKHRoaXMuaXNMYXN0ICYmIHRoaXMuaXNFeHBhbmRlZCkpIHtcbiAgICAgICAgICAgIHRoaXMubWVudVRhYmJpbmdTZXJ2aWNlLmxhc3RGb2N1c2FibGUgPSB0aGlzLmRpc2FibGVkID9cbiAgICAgICAgICAgICAgICB0aGlzLnJlc2V0QnV0dG9uLm5hdGl2ZUVsZW1lbnQgOiB0aGlzLmZpbHRlckJ1dHRvbi5uYXRpdmVFbGVtZW50O1xuICAgICAgICB9XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5zdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5tZW51VGFiYmluZ1NlcnZpY2UubGFzdEZvY3VzYWJsZSA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZ2V0IGRpc2FibGVkKCkge1xuICAgICAgICByZXR1cm4gIXRoaXMuY2hpbGRGaWx0ZXIuZmlsdGVycy5zb21lKHZhbGlkRmlsdGVycyk7XG4gICAgfVxuICAgIGdldCB0ZW1wbGF0ZUNvbnRleHQoKSB7XG4gICAgICAgIHRoaXMuX3RlbXBsYXRlQ29udGV4dC5jb2x1bW4gPSB0aGlzLmNvbHVtbjtcbiAgICAgICAgdGhpcy5fdGVtcGxhdGVDb250ZXh0LmZpbHRlciA9IHRoaXMuY2hpbGRGaWx0ZXI7XG4gICAgICAgIHRoaXMuX3RlbXBsYXRlQ29udGV4dC5maWx0ZXJTZXJ2aWNlID0gdGhpcy5jaGlsZFNlcnZpY2U7XG4gICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1zdHJpbmctbGl0ZXJhbFxuICAgICAgICB0aGlzLl90ZW1wbGF0ZUNvbnRleHRbXCIkaW1wbGljaXRcIl0gPSB0aGlzLmNoaWxkRmlsdGVyO1xuICAgICAgICByZXR1cm4gdGhpcy5fdGVtcGxhdGVDb250ZXh0O1xuICAgIH1cbiAgICBnZXQgaGFzVGVtcGxhdGUoKSB7XG4gICAgICAgIHJldHVybiBpc1ByZXNlbnQodGhpcy5jb2x1bW4pICYmIGlzUHJlc2VudCh0aGlzLmNvbHVtbi5maWx0ZXJNZW51VGVtcGxhdGVSZWYpO1xuICAgIH1cbiAgICBzdWJtaXQoKSB7XG4gICAgICAgIGNvbnN0IGZpbHRlciQkMSA9IHRyaW1GaWx0ZXJzKHRoaXMuY2hpbGRGaWx0ZXIpO1xuICAgICAgICBpZiAoZmlsdGVyJCQxLmZpbHRlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjb25zdCByb290ID0gdGhpcy5maWx0ZXIgfHwge1xuICAgICAgICAgICAgICAgIGZpbHRlcnM6IFtdLFxuICAgICAgICAgICAgICAgIGxvZ2ljOiBcImFuZFwiXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmVtb3ZlRmlsdGVyKHJvb3QsIHRoaXMuY29sdW1uLmZpZWxkKTtcbiAgICAgICAgICAgIHJvb3QuZmlsdGVycy5wdXNoKGZpbHRlciQkMSk7XG4gICAgICAgICAgICB0aGlzLnBhcmVudFNlcnZpY2UuZmlsdGVyKHJvb3QpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2xvc2UuZW1pdCgpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJlc2V0KCkge1xuICAgICAgICBjb25zdCByb290ID0gdGhpcy5maWx0ZXIgfHwge1xuICAgICAgICAgICAgZmlsdGVyczogW10sXG4gICAgICAgICAgICBsb2dpYzogXCJhbmRcIlxuICAgICAgICB9O1xuICAgICAgICByZW1vdmVGaWx0ZXIocm9vdCwgdGhpcy5jb2x1bW4uZmllbGQpO1xuICAgICAgICB0aGlzLnBhcmVudFNlcnZpY2UuZmlsdGVyKHJvb3QpO1xuICAgICAgICB0aGlzLmNsb3NlLmVtaXQoKTtcbiAgICB9XG4gICAgb25UYWIoZSwgYnV0dG9uVHlwZSkge1xuICAgICAgICBpZiAodGhpcy5tZW51VGFiYmluZ1NlcnZpY2UuZmlyc3RGb2N1c2FibGUgJiYgKCF0aGlzLm1lbnVUYWJiaW5nU2VydmljZS5pc0NvbHVtbk1lbnUgfHwgdGhpcy5pc0xhc3QpKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBpZiAoYnV0dG9uVHlwZSA9PT0gJ3Jlc2V0Jykge1xuICAgICAgICAgICAgICAgIHRoaXMuZGlzYWJsZWQgPyB0aGlzLm1lbnVUYWJiaW5nU2VydmljZS5maXJzdEZvY3VzYWJsZS5mb2N1cygpIDogdGhpcy5maWx0ZXJCdXR0b24ubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5tZW51VGFiYmluZ1NlcnZpY2UuZmlyc3RGb2N1c2FibGUuZm9jdXMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgY2xlYXJUZXh0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2NhbGl6YXRpb24uZ2V0KFwiZmlsdGVyQ2xlYXJCdXR0b25cIik7XG4gICAgfVxuICAgIGdldCBmaWx0ZXJUZXh0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2NhbGl6YXRpb24uZ2V0KFwiZmlsdGVyRmlsdGVyQnV0dG9uXCIpO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgRmlsdGVyTWVudUNvbnRhaW5lckNvbXBvbmVudC5wcm90b3R5cGUsIFwiY2xvc2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIENvbHVtbkNvbXBvbmVudClcbl0sIEZpbHRlck1lbnVDb250YWluZXJDb21wb25lbnQucHJvdG90eXBlLCBcImNvbHVtblwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEZpbHRlck1lbnVDb250YWluZXJDb21wb25lbnQucHJvdG90eXBlLCBcImlzTGFzdFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEZpbHRlck1lbnVDb250YWluZXJDb21wb25lbnQucHJvdG90eXBlLCBcImlzRXhwYW5kZWRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE1lbnVUYWJiaW5nU2VydmljZSlcbl0sIEZpbHRlck1lbnVDb250YWluZXJDb21wb25lbnQucHJvdG90eXBlLCBcIm1lbnVUYWJiaW5nU2VydmljZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pXG5dLCBGaWx0ZXJNZW51Q29udGFpbmVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBGaWx0ZXJNZW51Q29udGFpbmVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhY3Rpb25zQ2xhc3NcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIFZpZXdDaGlsZCgncmVzZXRCdXR0b24nLCB7IHN0YXRpYzogZmFsc2UgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEVsZW1lbnRSZWYpXG5dLCBGaWx0ZXJNZW51Q29udGFpbmVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJyZXNldEJ1dHRvblwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgVmlld0NoaWxkKCdmaWx0ZXJCdXR0b24nLCB7IHN0YXRpYzogZmFsc2UgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEVsZW1lbnRSZWYpXG5dLCBGaWx0ZXJNZW51Q29udGFpbmVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJCdXR0b25cIiwgdm9pZCAwKTtcbkZpbHRlck1lbnVDb250YWluZXJDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgIEZpbHRlclNlcnZpY2UsXG4gICAgICAgICAgICBNZW51VGFiYmluZ1NlcnZpY2VcbiAgICAgICAgXSxcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLWZpbHRlci1tZW51LWNvbnRhaW5lcicsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxmb3JtIChzdWJtaXQpPVwic3VibWl0KClcIiAocmVzZXQpPVwicmVzZXQoKVwiXG4gICAgICAgICAgICBjbGFzcz1cImstZmlsdGVyLW1lbnUgay1ncm91cCBrLXJlc2V0IGstc3RhdGUtYm9yZGVyLXVwXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiay1maWx0ZXItbWVudS1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICA8bmctY29udGFpbmVyIFtuZ1N3aXRjaF09XCJoYXNUZW1wbGF0ZVwiPlxuICAgICAgICAgICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ1N3aXRjaENhc2U9XCJmYWxzZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPG5nLWNvbnRhaW5lclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtlbmRvRmlsdGVyTWVudUhvc3RcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZmlsdGVyU2VydmljZV09XCJjaGlsZFNlcnZpY2VcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZmlsdGVyXT1cImNoaWxkRmlsdGVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbbWVudVRhYmJpbmdTZXJ2aWNlXT1cIm1lbnVUYWJiaW5nU2VydmljZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICAgICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ1N3aXRjaENhc2U9XCJ0cnVlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAqbmdJZj1cImNvbHVtbi5maWx0ZXJNZW51VGVtcGxhdGVSZWZcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cImNvbHVtbi5maWx0ZXJNZW51VGVtcGxhdGVSZWZcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJ0ZW1wbGF0ZUNvbnRleHRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxkaXYgW25nQ2xhc3NdPVwiYWN0aW9uc0NsYXNzXCI+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICNyZXNldEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInJlc2V0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiay1idXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgKGtleWRvd24udGFiKT1cIm9uVGFiKCRldmVudCwgJ3Jlc2V0JylcIj57e2NsZWFyVGV4dH19PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gI2ZpbHRlckJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImstYnV0dG9uIGstcHJpbWFyeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBbZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgKGtleWRvd24udGFiKT1cIm9uVGFiKCRldmVudCwgJ2ZpbHRlcicpXCI+e3tmaWx0ZXJUZXh0fX08L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Zvcm0+XG4gICAgYFxuICAgIH0pLFxuICAgIF9fcGFyYW0oMCwgU2tpcFNlbGYoKSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtGaWx0ZXJTZXJ2aWNlLFxuICAgICAgICBGaWx0ZXJTZXJ2aWNlLFxuICAgICAgICBMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICAgICAgTWVudVRhYmJpbmdTZXJ2aWNlXSlcbl0sIEZpbHRlck1lbnVDb250YWluZXJDb21wb25lbnQpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IEZpbHRlck1lbnVJbnB1dFdyYXBwZXJDb21wb25lbnQgPSBjbGFzcyBGaWx0ZXJNZW51SW5wdXRXcmFwcGVyQ29tcG9uZW50IGV4dGVuZHMgRmlsdGVySW5wdXRXcmFwcGVyQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb25TZXJ2aWNlKSB7XG4gICAgICAgIHN1cGVyKG51bGwpO1xuICAgICAgICB0aGlzLmxvY2FsaXphdGlvblNlcnZpY2UgPSBsb2NhbGl6YXRpb25TZXJ2aWNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGhvc3RDbGFzc2VzKCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNGaXJzdERyb3BEb3duICYmIHRoaXMuZmlsdGVyU2VydmljZSAmJiB0aGlzLmZpbHRlclNlcnZpY2UubWVudVRhYmJpbmdTZXJ2aWNlKSB7XG4gICAgICAgICAgICB0aGlzLmZpbHRlclNlcnZpY2UubWVudVRhYmJpbmdTZXJ2aWNlLmZpcnN0Rm9jdXNhYmxlID0gdGhpcy5maXJzdE9wZXJhdG9yRHJvcERvd247XG4gICAgICAgICAgICB0aGlzLmZpcnN0T3BlcmF0b3JEcm9wRG93bi5mb2N1cygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG9wZXJhdG9yQ2hhbmdlKGRhdGFJdGVtKSB7XG4gICAgICAgIHRoaXMuY3VycmVudE9wZXJhdG9yID0gZGF0YUl0ZW07XG4gICAgfVxuICAgIGZpbHRlckNoYW5nZShmaWx0ZXIkJDEpIHtcbiAgICAgICAgdGhpcy5hcHBseUZpbHRlcihmaWx0ZXIkJDEpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgY3VycmVudCBmaWx0ZXIgZm9yIHRoZSBhc3NvY2lhdGVkIGNvbHVtbiBmaWVsZC5cbiAgICAgKiBAcmVhZG9ubHlcbiAgICAgKiBAdHlwZSB7RmlsdGVyRGVzY3JpcHRvcn1cbiAgICAgKi9cbiAgICBnZXQgY3VycmVudEZpbHRlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRGaWx0ZXI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBjdXJyZW50IGZpbHRlciBmb3IgdGhlIGFzc29jaWF0ZWQgY29sdW1uIGZpZWxkLlxuICAgICAqIEByZWFkb25seVxuICAgICAqIEB0eXBlIHtGaWx0ZXJEZXNjcmlwdG9yfVxuICAgICAqL1xuICAgIHNldCBjdXJyZW50RmlsdGVyKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX2N1cnJlbnRGaWx0ZXIgPSB2YWx1ZTtcbiAgICB9XG4gICAgdXBkYXRlRmlsdGVyKGZpbHRlciQkMSkge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuY3VycmVudEZpbHRlciwgZmlsdGVyJCQxKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyO1xuICAgIH1cbiAgICBvbkNoYW5nZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLmZpbHRlckNoYW5nZSh0aGlzLnVwZGF0ZUZpbHRlcih7XG4gICAgICAgICAgICBmaWVsZDogdGhpcy5jb2x1bW4uZmllbGQsXG4gICAgICAgICAgICBvcGVyYXRvcjogdGhpcy5jdXJyZW50T3BlcmF0b3IsXG4gICAgICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICAgICAgfSkpO1xuICAgIH1cbiAgICBvblNoaWZ0VGFiKGUpIHtcbiAgICAgICAgZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbiAgICAgICAgaWYgKCghdGhpcy5tZW51VGFiYmluZ1NlcnZpY2UgfHwgIXRoaXMubWVudVRhYmJpbmdTZXJ2aWNlLmlzQ29sdW1uTWVudSkgJiYgdGhpcy5pc0ZpcnN0RHJvcERvd24gJiYgdGhpcy5maWx0ZXJTZXJ2aWNlLm1lbnVUYWJiaW5nU2VydmljZS5sYXN0Rm9jdXNhYmxlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB0aGlzLmZpbHRlclNlcnZpY2UubWVudVRhYmJpbmdTZXJ2aWNlLmxhc3RGb2N1c2FibGUuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgZmlsdGVyTWVudURyb3BEb3duTGFiZWwoKSB7XG4gICAgICAgIGNvbnN0IGxvY2FsaXphdGlvbk1zZyA9IHRoaXMubG9jYWxpemF0aW9uU2VydmljZS5nZXQoJ2ZpbHRlck1lbnVPcGVyYXRvcnNEcm9wRG93bkxhYmVsJykgfHwgJyc7XG4gICAgICAgIGNvbnN0IGNvbHVtbk5hbWUgPSB0aGlzLmNvbHVtbiA/IHRoaXMuY29sdW1uLnRpdGxlIHx8IHRoaXMuY29sdW1uLmZpZWxkIDogJyc7XG4gICAgICAgIHJldHVybiByZXBsYWNlTWVzc2FnZVBsYWNlaG9sZGVyKGxvY2FsaXphdGlvbk1zZywgJ2NvbHVtbk5hbWUnLCBjb2x1bW5OYW1lKTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRmlsdGVyU2VydmljZSlcbl0sIEZpbHRlck1lbnVJbnB1dFdyYXBwZXJDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlclNlcnZpY2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBGaWx0ZXJNZW51SW5wdXRXcmFwcGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpc0ZpcnN0RHJvcERvd25cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE1lbnVUYWJiaW5nU2VydmljZSlcbl0sIEZpbHRlck1lbnVJbnB1dFdyYXBwZXJDb21wb25lbnQucHJvdG90eXBlLCBcIm1lbnVUYWJiaW5nU2VydmljZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgVmlld0NoaWxkKERyb3BEb3duTGlzdENvbXBvbmVudCwgeyBzdGF0aWM6IGZhbHNlIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBEcm9wRG93bkxpc3RDb21wb25lbnQpXG5dLCBGaWx0ZXJNZW51SW5wdXRXcmFwcGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmaXJzdE9wZXJhdG9yRHJvcERvd25cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKVxuXSwgRmlsdGVyTWVudUlucHV0V3JhcHBlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiY3VycmVudEZpbHRlclwiLCBudWxsKTtcbkZpbHRlck1lbnVJbnB1dFdyYXBwZXJDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWdyaWQtZmlsdGVyLW1lbnUtaW5wdXQtd3JhcHBlcicsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxrZW5kby1kcm9wZG93bmxpc3RcbiAgICAgICAgICAgIGtlbmRvRmlsdGVyTWVudURyb3BEb3duXG4gICAgICAgICAgICBbZmlsdGVyTWVudURyb3BEb3duTGFiZWxdPVwiZmlsdGVyTWVudURyb3BEb3duTGFiZWxcIlxuICAgICAgICAgICAgW2RhdGFdPVwib3BlcmF0b3JzXCJcbiAgICAgICAgICAgICh2YWx1ZUNoYW5nZSk9XCJvcGVyYXRvckNoYW5nZSgkZXZlbnQpXCJcbiAgICAgICAgICAgIFt2YWx1ZV09XCJjdXJyZW50T3BlcmF0b3JcIlxuICAgICAgICAgICAgW3ZhbHVlUHJpbWl0aXZlXT1cInRydWVcIlxuICAgICAgICAgICAgdGV4dEZpZWxkPVwidGV4dFwiXG4gICAgICAgICAgICB2YWx1ZUZpZWxkPVwidmFsdWVcIlxuICAgICAgICAgICAgKGtleWRvd24uc2hpZnQudGFiKT1cIm9uU2hpZnRUYWIoJGV2ZW50KVwiPlxuICAgICAgICA8L2tlbmRvLWRyb3Bkb3dubGlzdD5cbiAgICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgRmlsdGVyTWVudUlucHV0V3JhcHBlckNvbXBvbmVudCk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgU3RyaW5nRmlsdGVyTWVudUlucHV0Q29tcG9uZW50ID0gY2xhc3MgU3RyaW5nRmlsdGVyTWVudUlucHV0Q29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb25TZXJ2aWNlKSB7XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uU2VydmljZSA9IGxvY2FsaXphdGlvblNlcnZpY2U7XG4gICAgICAgIHRoaXMub3BlcmF0b3JzID0gW107XG4gICAgfVxuICAgIGdldCBjb2x1bW5MYWJlbCgpIHtcbiAgICAgICAgY29uc3QgbG9jYWxpemF0aW9uTXNnID0gdGhpcy5sb2NhbGl6YXRpb25TZXJ2aWNlLmdldCgnZmlsdGVySW5wdXRMYWJlbCcpIHx8ICcnO1xuICAgICAgICBjb25zdCBjb2x1bW5OYW1lID0gdGhpcy5jb2x1bW4gPyB0aGlzLmNvbHVtbi50aXRsZSB8fCB0aGlzLmNvbHVtbi5maWVsZCA6ICcnO1xuICAgICAgICByZXR1cm4gcmVwbGFjZU1lc3NhZ2VQbGFjZWhvbGRlcihsb2NhbGl6YXRpb25Nc2csICdjb2x1bW5OYW1lJywgY29sdW1uTmFtZSk7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KVxuXSwgU3RyaW5nRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJvcGVyYXRvcnNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIENvbHVtbkNvbXBvbmVudClcbl0sIFN0cmluZ0ZpbHRlck1lbnVJbnB1dENvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBTdHJpbmdGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgU3RyaW5nRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJvcGVyYXRvclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgU3RyaW5nRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJjdXJyZW50RmlsdGVyXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBGaWx0ZXJTZXJ2aWNlKVxuXSwgU3RyaW5nRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJTZXJ2aWNlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgU3RyaW5nRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJpc0ZpcnN0RHJvcERvd25cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE1lbnVUYWJiaW5nU2VydmljZSlcbl0sIFN0cmluZ0ZpbHRlck1lbnVJbnB1dENvbXBvbmVudC5wcm90b3R5cGUsIFwibWVudVRhYmJpbmdTZXJ2aWNlXCIsIHZvaWQgMCk7XG5TdHJpbmdGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWdyaWQtc3RyaW5nLWZpbHRlci1tZW51LWlucHV0JyxcbiAgICAgICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGtlbmRvLWdyaWQtZmlsdGVyLW1lbnUtaW5wdXQtd3JhcHBlclxuICAgICAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICAgICAgW2ZpbHRlcl09XCJmaWx0ZXJcIlxuICAgICAgICAgICAgW29wZXJhdG9yc109XCJvcGVyYXRvcnNcIlxuICAgICAgICAgICAgW2RlZmF1bHRPcGVyYXRvcl09XCJvcGVyYXRvclwiXG4gICAgICAgICAgICBbY3VycmVudEZpbHRlcl09XCJjdXJyZW50RmlsdGVyXCJcbiAgICAgICAgICAgIFtmaWx0ZXJTZXJ2aWNlXT1cImZpbHRlclNlcnZpY2VcIlxuICAgICAgICAgICAgW2lzRmlyc3REcm9wRG93bl09XCJpc0ZpcnN0RHJvcERvd25cIlxuICAgICAgICAgICAgW21lbnVUYWJiaW5nU2VydmljZV09XCJtZW51VGFiYmluZ1NlcnZpY2VcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgY2xhc3M9XCJrLXRleHRib3hcIlxuICAgICAgICAgICAgICAgIGtlbmRvRmlsdGVySW5wdXRcbiAgICAgICAgICAgICAgICBbY29sdW1uTGFiZWxdPVwiY29sdW1uTGFiZWxcIlxuICAgICAgICAgICAgICAgIFtmaWx0ZXJEZWxheV09XCIwXCJcbiAgICAgICAgICAgICAgICBbbmdNb2RlbF09XCJjdXJyZW50RmlsdGVyPy52YWx1ZVwiIC8+XG4gICAgICAgIDwva2VuZG8tZ3JpZC1maWx0ZXItbWVudS1pbnB1dC13cmFwcGVyPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgU3RyaW5nRmlsdGVyTWVudUlucHV0Q29tcG9uZW50KTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgc3RyaW5nLWZpbHRlciBtZW51IGNvbXBvbmVudC5cbiAqIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgYnVpbHRpbmZpbHRlcnRlbXBsYXRlX2dyaWQgJX0jdG9jLWNvbmZpZ3VyYXRpb24tY29tcG9uZW50cy1mb3ItZmlsdGVyLXRlbXBsYXRlcykpLlxuICovXG5sZXQgU3RyaW5nRmlsdGVyTWVudUNvbXBvbmVudCA9IGNsYXNzIFN0cmluZ0ZpbHRlck1lbnVDb21wb25lbnQgZXh0ZW5kcyBTdHJpbmdGaWx0ZXJDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbikge1xuICAgICAgICBzdXBlcihudWxsLCBsb2NhbGl6YXRpb24pO1xuICAgICAgICB0aGlzLmxvZ2ljT3BlcmF0b3JzID0gbG9naWNPcGVyYXRvcnModGhpcy5sb2NhbGl6YXRpb24pO1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIGN1cnJlbnQgbWVudSBmaWx0ZXIuXG4gICAgICAgICAqIEB0eXBlIHtDb21wb3NpdGVGaWx0ZXJEZXNjcmlwdG9yfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5maWx0ZXIgPSB7IGZpbHRlcnM6IFtdLCBsb2dpYzogXCJhbmRcIiB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogRGV0ZXJtaW5lcyBpZiB0aGUgaW5wdXRzIG9mIHNlY29uZCBjcml0ZXJpYSB3aWxsIGRpc3BsYXllZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZXh0cmEgPSB0cnVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGhvc3RDbGFzc2VzKCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGdldCBmaXJzdEZpbHRlcigpIHtcbiAgICAgICAgcmV0dXJuIHNldEZpbHRlcigwLCB0aGlzLmZpbHRlciwgKHRoaXMuY29sdW1uIHx8IHt9KS5maWVsZCwgdGhpcy5vcGVyYXRvcik7XG4gICAgfVxuICAgIGdldCBzZWNvbmRGaWx0ZXIoKSB7XG4gICAgICAgIHJldHVybiBzZXRGaWx0ZXIoMSwgdGhpcy5maWx0ZXIsICh0aGlzLmNvbHVtbiB8fCB7fSkuZmllbGQsIHRoaXMub3BlcmF0b3IpO1xuICAgIH1cbiAgICBsb2dpY0NoYW5nZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLmZpbHRlci5sb2dpYyA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXQgZmlsdGVyTWVudURyb3BEb3duTGFiZWwoKSB7XG4gICAgICAgIGNvbnN0IGxvY2FsaXphdGlvbk1zZyA9IHRoaXMubG9jYWxpemF0aW9uLmdldCgnZmlsdGVyTWVudUxvZ2ljRHJvcERvd25MYWJlbCcpIHx8ICcnO1xuICAgICAgICBjb25zdCBjb2x1bW5OYW1lID0gdGhpcy5jb2x1bW4gPyB0aGlzLmNvbHVtbi50aXRsZSB8fCB0aGlzLmNvbHVtbi5maWVsZCA6ICcnO1xuICAgICAgICByZXR1cm4gcmVwbGFjZU1lc3NhZ2VQbGFjZWhvbGRlcihsb2NhbGl6YXRpb25Nc2csICdjb2x1bW5OYW1lJywgY29sdW1uTmFtZSk7XG4gICAgfVxuICAgIGxvY2FsaXphdGlvbkNoYW5nZSgpIHtcbiAgICAgICAgdGhpcy5sb2dpY09wZXJhdG9ycyA9IGxvZ2ljT3BlcmF0b3JzKHRoaXMubG9jYWxpemF0aW9uKTtcbiAgICAgICAgc3VwZXIubG9jYWxpemF0aW9uQ2hhbmdlKCk7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLWZpbHRlcmNlbGwnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgU3RyaW5nRmlsdGVyTWVudUNvbXBvbmVudC5wcm90b3R5cGUsIFwiaG9zdENsYXNzZXNcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBDb2x1bW5Db21wb25lbnQpXG5dLCBTdHJpbmdGaWx0ZXJNZW51Q29tcG9uZW50LnByb3RvdHlwZSwgXCJjb2x1bW5cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIFN0cmluZ0ZpbHRlck1lbnVDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIFN0cmluZ0ZpbHRlck1lbnVDb21wb25lbnQucHJvdG90eXBlLCBcImV4dHJhXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBGaWx0ZXJTZXJ2aWNlKVxuXSwgU3RyaW5nRmlsdGVyTWVudUNvbXBvbmVudC5wcm90b3R5cGUsIFwiZmlsdGVyU2VydmljZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTWVudVRhYmJpbmdTZXJ2aWNlKVxuXSwgU3RyaW5nRmlsdGVyTWVudUNvbXBvbmVudC5wcm90b3R5cGUsIFwibWVudVRhYmJpbmdTZXJ2aWNlXCIsIHZvaWQgMCk7XG5TdHJpbmdGaWx0ZXJNZW51Q29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLXN0cmluZy1maWx0ZXItbWVudScsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxrZW5kby1ncmlkLXN0cmluZy1maWx0ZXItbWVudS1pbnB1dFxuICAgICAgICAgICAgW2N1cnJlbnRGaWx0ZXJdPVwiZmlyc3RGaWx0ZXJcIlxuICAgICAgICAgICAgW29wZXJhdG9yc109XCJvcGVyYXRvcnNcIlxuICAgICAgICAgICAgW2ZpbHRlclNlcnZpY2VdPVwiZmlsdGVyU2VydmljZVwiXG4gICAgICAgICAgICBbY29sdW1uXT1cImNvbHVtblwiXG4gICAgICAgICAgICBbZmlsdGVyXT1cImZpbHRlclwiXG4gICAgICAgICAgICBbaXNGaXJzdERyb3BEb3duXT1cInRydWVcIlxuICAgICAgICAgICAgW21lbnVUYWJiaW5nU2VydmljZV09XCJtZW51VGFiYmluZ1NlcnZpY2VcIj5cbiAgICAgICAgPC9rZW5kby1ncmlkLXN0cmluZy1maWx0ZXItbWVudS1pbnB1dD5cbiAgICAgICAgPGtlbmRvLWRyb3Bkb3dubGlzdFxuICAgICAgICAgICAgKm5nSWY9XCJleHRyYVwiXG4gICAgICAgICAgICBrZW5kb0ZpbHRlck1lbnVEcm9wRG93blxuICAgICAgICAgICAgW2ZpbHRlck1lbnVEcm9wRG93bkxhYmVsXT1cImZpbHRlck1lbnVEcm9wRG93bkxhYmVsXCJcbiAgICAgICAgICAgIGNsYXNzPVwiay1maWx0ZXItYW5kXCJcbiAgICAgICAgICAgIFtkYXRhXT1cImxvZ2ljT3BlcmF0b3JzXCJcbiAgICAgICAgICAgIFt2YWx1ZVByaW1pdGl2ZV09XCJ0cnVlXCIgKHZhbHVlQ2hhbmdlKT1cImxvZ2ljQ2hhbmdlKCRldmVudClcIlxuICAgICAgICAgICAgW3ZhbHVlXT1cImZpbHRlcj8ubG9naWNcIlxuICAgICAgICAgICAgdGV4dEZpZWxkPVwidGV4dFwiXG4gICAgICAgICAgICB2YWx1ZUZpZWxkPVwidmFsdWVcIj5cbiAgICAgICAgPC9rZW5kby1kcm9wZG93bmxpc3Q+XG4gICAgICAgIDxrZW5kby1ncmlkLXN0cmluZy1maWx0ZXItbWVudS1pbnB1dFxuICAgICAgICAgICAgKm5nSWY9XCJleHRyYVwiXG4gICAgICAgICAgICBbb3BlcmF0b3JzXT1cIm9wZXJhdG9yc1wiXG4gICAgICAgICAgICBbY3VycmVudEZpbHRlcl09XCJzZWNvbmRGaWx0ZXJcIlxuICAgICAgICAgICAgW2ZpbHRlclNlcnZpY2VdPVwiZmlsdGVyU2VydmljZVwiXG4gICAgICAgICAgICBbY29sdW1uXT1cImNvbHVtblwiXG4gICAgICAgICAgICBbZmlsdGVyXT1cImZpbHRlclwiXG4gICAgICAgICAgICBbbWVudVRhYmJpbmdTZXJ2aWNlXT1cIm1lbnVUYWJiaW5nU2VydmljZVwiPlxuICAgICAgICA8L2tlbmRvLWdyaWQtc3RyaW5nLWZpbHRlci1tZW51LWlucHV0PlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgU3RyaW5nRmlsdGVyTWVudUNvbXBvbmVudCk7XG5cbi8qKlxuICogUmVwcmVzZW50cyBhIG51bWVyaWMtZmlsdGVyIG1lbnUgY29tcG9uZW50LlxuICpcbiAqIEBleGFtcGxlXG4gKiAgYGBgaHRtbC1uby1ydW5cbiAqICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiVW5pdFByaWNlXCIgdGl0bGU9XCJVbml0IFByaWNlXCI+XG4gKiAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkRmlsdGVyTWVudVRlbXBsYXRlIGxldC1maWx0ZXIgbGV0LWNvbHVtbj1cImNvbHVtblwiIGxldC1maWx0ZXJTZXJ2aWNlPVwiZmlsdGVyU2VydmljZVwiPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtbnVtZXJpYy1maWx0ZXItbWVudVxuICogICAgICAgICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAqICAgICAgICAgICAgICBbZmlsdGVyXT1cImZpbHRlclwiXG4gKiAgICAgICAgICAgICAgW2ZpbHRlclNlcnZpY2VdPVwiZmlsdGVyU2VydmljZVwiXG4gKiAgICAgICAgICAgICAgPlxuICogICAgICAgICAgPC9rZW5kby1ncmlkLW51bWVyaWMtZmlsdGVyLW1lbnU+XG4gKiAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICBgYGBcbiAqL1xubGV0IE51bWVyaWNGaWx0ZXJNZW51Q29tcG9uZW50ID0gY2xhc3MgTnVtZXJpY0ZpbHRlck1lbnVDb21wb25lbnQgZXh0ZW5kcyBOdW1lcmljRmlsdGVyQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb24pIHtcbiAgICAgICAgc3VwZXIobnVsbCwgbG9jYWxpemF0aW9uKTtcbiAgICAgICAgdGhpcy5sb2dpY09wZXJhdG9ycyA9IGxvZ2ljT3BlcmF0b3JzKHRoaXMubG9jYWxpemF0aW9uKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBjdXJyZW50IG1lbnUgZmlsdGVyLlxuICAgICAgICAgKiBAdHlwZSB7Q29tcG9zaXRlRmlsdGVyRGVzY3JpcHRvcn1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZmlsdGVyID0geyBmaWx0ZXJzOiBbXSwgbG9naWM6IFwiYW5kXCIgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERldGVybWluZXMgaWYgdGhlIGlucHV0cyBvZiBzZWNvbmQgY3JpdGVyaWEgd2lsbCBkaXNwbGF5ZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmV4dHJhID0gdHJ1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBob3N0Q2xhc3NlcygpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBnZXQgZmlyc3RGaWx0ZXIoKSB7XG4gICAgICAgIHJldHVybiBzZXRGaWx0ZXIoMCwgdGhpcy5maWx0ZXIsICh0aGlzLmNvbHVtbiB8fCB7fSkuZmllbGQsIHRoaXMub3BlcmF0b3IpO1xuICAgIH1cbiAgICBnZXQgc2Vjb25kRmlsdGVyKCkge1xuICAgICAgICByZXR1cm4gc2V0RmlsdGVyKDEsIHRoaXMuZmlsdGVyLCAodGhpcy5jb2x1bW4gfHwge30pLmZpZWxkLCB0aGlzLm9wZXJhdG9yKTtcbiAgICB9XG4gICAgbG9naWNDaGFuZ2UodmFsdWUpIHtcbiAgICAgICAgdGhpcy5maWx0ZXIubG9naWMgPSB2YWx1ZTtcbiAgICB9XG4gICAgZ2V0IGZpbHRlck1lbnVEcm9wRG93bkxhYmVsKCkge1xuICAgICAgICBjb25zdCBsb2NhbGl6YXRpb25Nc2cgPSB0aGlzLmxvY2FsaXphdGlvbi5nZXQoJ2ZpbHRlck1lbnVMb2dpY0Ryb3BEb3duTGFiZWwnKSB8fCAnJztcbiAgICAgICAgY29uc3QgY29sdW1uTmFtZSA9IHRoaXMuY29sdW1uID8gdGhpcy5jb2x1bW4udGl0bGUgfHwgdGhpcy5jb2x1bW4uZmllbGQgOiAnJztcbiAgICAgICAgcmV0dXJuIHJlcGxhY2VNZXNzYWdlUGxhY2Vob2xkZXIobG9jYWxpemF0aW9uTXNnLCAnY29sdW1uTmFtZScsIGNvbHVtbk5hbWUpO1xuICAgIH1cbiAgICBsb2NhbGl6YXRpb25DaGFuZ2UoKSB7XG4gICAgICAgIHRoaXMubG9naWNPcGVyYXRvcnMgPSBsb2dpY09wZXJhdG9ycyh0aGlzLmxvY2FsaXphdGlvbik7XG4gICAgICAgIHN1cGVyLmxvY2FsaXphdGlvbkNoYW5nZSgpO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnY2xhc3Muay1maWx0ZXJjZWxsJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIE51bWVyaWNGaWx0ZXJNZW51Q29tcG9uZW50LnByb3RvdHlwZSwgXCJob3N0Q2xhc3Nlc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIENvbHVtbkNvbXBvbmVudClcbl0sIE51bWVyaWNGaWx0ZXJNZW51Q29tcG9uZW50LnByb3RvdHlwZSwgXCJjb2x1bW5cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIE51bWVyaWNGaWx0ZXJNZW51Q29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBOdW1lcmljRmlsdGVyTWVudUNvbXBvbmVudC5wcm90b3R5cGUsIFwiZXh0cmFcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZpbHRlclNlcnZpY2UpXG5dLCBOdW1lcmljRmlsdGVyTWVudUNvbXBvbmVudC5wcm90b3R5cGUsIFwiZmlsdGVyU2VydmljZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTWVudVRhYmJpbmdTZXJ2aWNlKVxuXSwgTnVtZXJpY0ZpbHRlck1lbnVDb21wb25lbnQucHJvdG90eXBlLCBcIm1lbnVUYWJiaW5nU2VydmljZVwiLCB2b2lkIDApO1xuTnVtZXJpY0ZpbHRlck1lbnVDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWdyaWQtbnVtZXJpYy1maWx0ZXItbWVudScsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxrZW5kby1ncmlkLW51bWVyaWMtZmlsdGVyLW1lbnUtaW5wdXRcbiAgICAgICAgICAgIFtjdXJyZW50RmlsdGVyXT1cImZpcnN0RmlsdGVyXCJcbiAgICAgICAgICAgIFtvcGVyYXRvcnNdPVwib3BlcmF0b3JzXCJcbiAgICAgICAgICAgIFtmaWx0ZXJTZXJ2aWNlXT1cImZpbHRlclNlcnZpY2VcIlxuICAgICAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICAgICAgW2ZpbHRlcl09XCJmaWx0ZXJcIlxuICAgICAgICAgICAgW2Zvcm1hdF09XCJmb3JtYXRcIlxuICAgICAgICAgICAgW2RlY2ltYWxzXT1cImRlY2ltYWxzXCJcbiAgICAgICAgICAgIFtzcGlubmVyc109XCJzcGlubmVyc1wiXG4gICAgICAgICAgICBbbWluXT1cIm1pblwiXG4gICAgICAgICAgICBbbWF4XT1cIm1heFwiXG4gICAgICAgICAgICBbc3RlcF09XCJzdGVwXCJcbiAgICAgICAgICAgIFttZW51VGFiYmluZ1NlcnZpY2VdPVwibWVudVRhYmJpbmdTZXJ2aWNlXCJcbiAgICAgICAgICAgIFtpc0ZpcnN0RHJvcERvd25dPVwidHJ1ZVwiXG4gICAgICAgICAgICA+XG4gICAgICAgIDwva2VuZG8tZ3JpZC1udW1lcmljLWZpbHRlci1tZW51LWlucHV0PlxuICAgICAgICA8a2VuZG8tZHJvcGRvd25saXN0XG4gICAgICAgICAgICAqbmdJZj1cImV4dHJhXCJcbiAgICAgICAgICAgIGtlbmRvRmlsdGVyTWVudURyb3BEb3duXG4gICAgICAgICAgICBbZmlsdGVyTWVudURyb3BEb3duTGFiZWxdPVwiZmlsdGVyTWVudURyb3BEb3duTGFiZWxcIlxuICAgICAgICAgICAgY2xhc3M9XCJrLWZpbHRlci1hbmRcIlxuICAgICAgICAgICAgW2RhdGFdPVwibG9naWNPcGVyYXRvcnNcIlxuICAgICAgICAgICAgW3ZhbHVlUHJpbWl0aXZlXT1cInRydWVcIlxuICAgICAgICAgICAgKHZhbHVlQ2hhbmdlKT1cImxvZ2ljQ2hhbmdlKCRldmVudClcIlxuICAgICAgICAgICAgW3ZhbHVlXT1cImZpbHRlcj8ubG9naWNcIlxuICAgICAgICAgICAgdGV4dEZpZWxkPVwidGV4dFwiXG4gICAgICAgICAgICB2YWx1ZUZpZWxkPVwidmFsdWVcIj5cbiAgICAgICAgPC9rZW5kby1kcm9wZG93bmxpc3Q+XG4gICAgICAgIDxrZW5kby1ncmlkLW51bWVyaWMtZmlsdGVyLW1lbnUtaW5wdXRcbiAgICAgICAgICAgICpuZ0lmPVwiZXh0cmFcIlxuICAgICAgICAgICAgW29wZXJhdG9yc109XCJvcGVyYXRvcnNcIlxuICAgICAgICAgICAgW2N1cnJlbnRGaWx0ZXJdPVwic2Vjb25kRmlsdGVyXCJcbiAgICAgICAgICAgIFtmaWx0ZXJTZXJ2aWNlXT1cImZpbHRlclNlcnZpY2VcIlxuICAgICAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICAgICAgW2ZpbHRlcl09XCJmaWx0ZXJcIlxuICAgICAgICAgICAgW2Zvcm1hdF09XCJmb3JtYXRcIlxuICAgICAgICAgICAgW2RlY2ltYWxzXT1cImRlY2ltYWxzXCJcbiAgICAgICAgICAgIFtzcGlubmVyc109XCJzcGlubmVyc1wiXG4gICAgICAgICAgICBbbWluXT1cIm1pblwiXG4gICAgICAgICAgICBbbWF4XT1cIm1heFwiXG4gICAgICAgICAgICBbc3RlcF09XCJzdGVwXCJcbiAgICAgICAgICAgIFttZW51VGFiYmluZ1NlcnZpY2VdPVwibWVudVRhYmJpbmdTZXJ2aWNlXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgPC9rZW5kby1ncmlkLW51bWVyaWMtZmlsdGVyLW1lbnUtaW5wdXQ+XG4gICAgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTG9jYWxpemF0aW9uU2VydmljZV0pXG5dLCBOdW1lcmljRmlsdGVyTWVudUNvbXBvbmVudCk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgTnVtZXJpY0ZpbHRlck1lbnVJbnB1dENvbXBvbmVudCA9IGNsYXNzIE51bWVyaWNGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbikge1xuICAgICAgICB0aGlzLmxvY2FsaXphdGlvbiA9IGxvY2FsaXphdGlvbjtcbiAgICAgICAgdGhpcy5vcGVyYXRvcnMgPSBbXTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNwZWNpZmllcyB0aGUgdmFsdWUgd2hpY2ggaXMgdXNlZCB0byBpbmNyZW1lbnQgb3IgZGVjcmVtZW50IHRoZSBjb21wb25lbnQgdmFsdWUuXG4gICAgICAgICAqIEB0eXBlIHtudW1lcmljfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zdGVwID0gMTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNwZWNpZmllcyB3aGV0aGVyIHRoZSAqKlVwKiogYW5kICoqRG93bioqIHNwaW4gYnV0dG9ucyB3aWxsIGJlIHJlbmRlcmVkLlxuICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc3Bpbm5lcnMgPSB0cnVlO1xuICAgIH1cbiAgICBtZXNzYWdlRm9yKGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2NhbGl6YXRpb24uZ2V0KGtleSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgY29sdW1uTGFiZWwoKSB7XG4gICAgICAgIGNvbnN0IGxvY2FsaXphdGlvbk1zZyA9IHRoaXMubG9jYWxpemF0aW9uLmdldCgnZmlsdGVySW5wdXRMYWJlbCcpIHx8ICcnO1xuICAgICAgICBjb25zdCBjb2x1bW5OYW1lID0gdGhpcy5jb2x1bW4gPyB0aGlzLmNvbHVtbi50aXRsZSB8fCB0aGlzLmNvbHVtbi5maWVsZCA6ICcnO1xuICAgICAgICByZXR1cm4gcmVwbGFjZU1lc3NhZ2VQbGFjZWhvbGRlcihsb2NhbGl6YXRpb25Nc2csICdjb2x1bW5OYW1lJywgY29sdW1uTmFtZSk7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KVxuXSwgTnVtZXJpY0ZpbHRlck1lbnVJbnB1dENvbXBvbmVudC5wcm90b3R5cGUsIFwib3BlcmF0b3JzXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBDb2x1bW5Db21wb25lbnQpXG5dLCBOdW1lcmljRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJjb2x1bW5cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIE51bWVyaWNGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgTnVtZXJpY0ZpbHRlck1lbnVJbnB1dENvbXBvbmVudC5wcm90b3R5cGUsIFwib3BlcmF0b3JcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIE51bWVyaWNGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQucHJvdG90eXBlLCBcImN1cnJlbnRGaWx0ZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZpbHRlclNlcnZpY2UpXG5dLCBOdW1lcmljRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJTZXJ2aWNlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgTnVtZXJpY0ZpbHRlck1lbnVJbnB1dENvbXBvbmVudC5wcm90b3R5cGUsIFwiaXNGaXJzdERyb3BEb3duXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBNZW51VGFiYmluZ1NlcnZpY2UpXG5dLCBOdW1lcmljRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJtZW51VGFiYmluZ1NlcnZpY2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIE51bWVyaWNGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQucHJvdG90eXBlLCBcInN0ZXBcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIE51bWVyaWNGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQucHJvdG90eXBlLCBcIm1pblwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgTnVtZXJpY0ZpbHRlck1lbnVJbnB1dENvbXBvbmVudC5wcm90b3R5cGUsIFwibWF4XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgTnVtZXJpY0ZpbHRlck1lbnVJbnB1dENvbXBvbmVudC5wcm90b3R5cGUsIFwic3Bpbm5lcnNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIE51bWVyaWNGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQucHJvdG90eXBlLCBcImRlY2ltYWxzXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBOdW1lcmljRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJmb3JtYXRcIiwgdm9pZCAwKTtcbk51bWVyaWNGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWdyaWQtbnVtZXJpYy1maWx0ZXItbWVudS1pbnB1dCcsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxrZW5kby1ncmlkLWZpbHRlci1tZW51LWlucHV0LXdyYXBwZXJcbiAgICAgICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAgICAgICAgICAgIFtmaWx0ZXJdPVwiZmlsdGVyXCJcbiAgICAgICAgICAgIFtvcGVyYXRvcnNdPVwib3BlcmF0b3JzXCJcbiAgICAgICAgICAgIFtkZWZhdWx0T3BlcmF0b3JdPVwib3BlcmF0b3JcIlxuICAgICAgICAgICAgW2N1cnJlbnRGaWx0ZXJdPVwiY3VycmVudEZpbHRlclwiXG4gICAgICAgICAgICBbZmlsdGVyU2VydmljZV09XCJmaWx0ZXJTZXJ2aWNlXCJcbiAgICAgICAgICAgIFtpc0ZpcnN0RHJvcERvd25dPVwiaXNGaXJzdERyb3BEb3duXCJcbiAgICAgICAgICAgIFttZW51VGFiYmluZ1NlcnZpY2VdPVwibWVudVRhYmJpbmdTZXJ2aWNlXCJcbiAgICAgICAgPlxuICAgICAgICAgICAgPGtlbmRvLW51bWVyaWN0ZXh0Ym94XG4gICAgICAgICAgICAgICAga2VuZG9GaWx0ZXJJbnB1dFxuICAgICAgICAgICAgICAgIFtjb2x1bW5MYWJlbF09XCJjb2x1bW5MYWJlbFwiXG4gICAgICAgICAgICAgICAgW2ZpbHRlckRlbGF5XT1cIjBcIlxuICAgICAgICAgICAgICAgIFthdXRvQ29ycmVjdF09XCJ0cnVlXCJcbiAgICAgICAgICAgICAgICBbdmFsdWVdPVwiY3VycmVudEZpbHRlcj8udmFsdWVcIlxuICAgICAgICAgICAgICAgIFtmb3JtYXRdPVwiZm9ybWF0XCJcbiAgICAgICAgICAgICAgICBbZGVjaW1hbHNdPVwiZGVjaW1hbHNcIlxuICAgICAgICAgICAgICAgIFtzcGlubmVyc109XCJzcGlubmVyc1wiXG4gICAgICAgICAgICAgICAgW21pbl09XCJtaW5cIlxuICAgICAgICAgICAgICAgIFttYXhdPVwibWF4XCJcbiAgICAgICAgICAgICAgICBbc3RlcF09XCJzdGVwXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8a2VuZG8tbnVtZXJpY3RleHRib3gtbWVzc2FnZXNcbiAgICAgICAgICAgICAgICAgICAgW2luY3JlbWVudF09XCJtZXNzYWdlRm9yKCdmaWx0ZXJOdW1lcmljSW5jcmVtZW50JylcIlxuICAgICAgICAgICAgICAgICAgICBbZGVjcmVtZW50XT1cIm1lc3NhZ2VGb3IoJ2ZpbHRlck51bWVyaWNEZWNyZW1lbnQnKVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDwva2VuZG8tbnVtZXJpY3RleHRib3gtbWVzc2FnZXM+XG4gICAgICAgICAgICA8L2tlbmRvLW51bWVyaWN0ZXh0Ym94PlxuICAgICAgICA8L2tlbmRvLWdyaWQtZmlsdGVyLW1lbnUtaW5wdXQtd3JhcHBlcj5cbiAgICBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtMb2NhbGl6YXRpb25TZXJ2aWNlXSlcbl0sIE51bWVyaWNGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQpO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBkYXRlLWZpbHRlciBtZW51IGNvbXBvbmVudC5cbiAqXG4gKiBAZXhhbXBsZVxuICogIGBgYGh0bWwtbm8tcnVuXG4gKiAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIk9yZGVyRGF0ZVwiIHRpdGxlPVwiT3JkZXIgRGF0ZVwiPlxuICogICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZEZpbHRlck1lbnVUZW1wbGF0ZSBsZXQtZmlsdGVyIGxldC1jb2x1bW49XCJjb2x1bW5cIiBsZXQtZmlsdGVyU2VydmljZT1cImZpbHRlclNlcnZpY2VcIj5cbiAqICAgICAgICAgICAgPGtlbmRvLWdyaWQtZGF0ZS1maWx0ZXItbWVudVxuICogICAgICAgICAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICogICAgICAgICAgICAgICAgW2ZpbHRlcl09XCJmaWx0ZXJcIlxuICogICAgICAgICAgICAgICAgW2ZpbHRlclNlcnZpY2VdPVwiZmlsdGVyU2VydmljZVwiXG4gKiAgICAgICAgICAgICAgICA+XG4gKiAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1kYXRlLWZpbHRlci1tZW51PlxuICogICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgYGBgXG4gKi9cbmxldCBEYXRlRmlsdGVyTWVudUNvbXBvbmVudCA9IGNsYXNzIERhdGVGaWx0ZXJNZW51Q29tcG9uZW50IGV4dGVuZHMgRGF0ZUZpbHRlckNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uKSB7XG4gICAgICAgIHN1cGVyKG51bGwsIGxvY2FsaXphdGlvbik7XG4gICAgICAgIHRoaXMubG9naWNPcGVyYXRvcnMgPSBsb2dpY09wZXJhdG9ycyh0aGlzLmxvY2FsaXphdGlvbik7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgY3VycmVudCBtZW51IGZpbHRlci5cbiAgICAgICAgICogQHR5cGUge0NvbXBvc2l0ZUZpbHRlckRlc2NyaXB0b3J9XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmZpbHRlciA9IHsgZmlsdGVyczogW10sIGxvZ2ljOiBcImFuZFwiIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZXRlcm1pbmVzIGlmIHRoZSBpbnB1dHMgb2Ygc2Vjb25kIGNyaXRlcmlhIHdpbGwgYmUgZGlzcGxheWVkLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5leHRyYSA9IHRydWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgaG9zdENsYXNzZXMoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZ2V0IGZpcnN0RmlsdGVyKCkge1xuICAgICAgICByZXR1cm4gc2V0RmlsdGVyKDAsIHRoaXMuZmlsdGVyLCAodGhpcy5jb2x1bW4gfHwge30pLmZpZWxkLCB0aGlzLm9wZXJhdG9yKTtcbiAgICB9XG4gICAgZ2V0IHNlY29uZEZpbHRlcigpIHtcbiAgICAgICAgcmV0dXJuIHNldEZpbHRlcigxLCB0aGlzLmZpbHRlciwgKHRoaXMuY29sdW1uIHx8IHt9KS5maWVsZCwgdGhpcy5vcGVyYXRvcik7XG4gICAgfVxuICAgIGxvZ2ljQ2hhbmdlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuZmlsdGVyLmxvZ2ljID0gdmFsdWU7XG4gICAgfVxuICAgIGdldCBmaWx0ZXJNZW51RHJvcERvd25MYWJlbCgpIHtcbiAgICAgICAgY29uc3QgbG9jYWxpemF0aW9uTXNnID0gdGhpcy5sb2NhbGl6YXRpb24uZ2V0KCdmaWx0ZXJNZW51TG9naWNEcm9wRG93bkxhYmVsJykgfHwgJyc7XG4gICAgICAgIGNvbnN0IGNvbHVtbk5hbWUgPSB0aGlzLmNvbHVtbiA/IHRoaXMuY29sdW1uLnRpdGxlIHx8IHRoaXMuY29sdW1uLmZpZWxkIDogJyc7XG4gICAgICAgIHJldHVybiByZXBsYWNlTWVzc2FnZVBsYWNlaG9sZGVyKGxvY2FsaXphdGlvbk1zZywgJ2NvbHVtbk5hbWUnLCBjb2x1bW5OYW1lKTtcbiAgICB9XG4gICAgbG9jYWxpemF0aW9uQ2hhbmdlKCkge1xuICAgICAgICB0aGlzLmxvZ2ljT3BlcmF0b3JzID0gbG9naWNPcGVyYXRvcnModGhpcy5sb2NhbGl6YXRpb24pO1xuICAgICAgICBzdXBlci5sb2NhbGl6YXRpb25DaGFuZ2UoKTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ2NsYXNzLmstZmlsdGVyY2VsbCcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBEYXRlRmlsdGVyTWVudUNvbXBvbmVudC5wcm90b3R5cGUsIFwiaG9zdENsYXNzZXNcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBDb2x1bW5Db21wb25lbnQpXG5dLCBEYXRlRmlsdGVyTWVudUNvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBEYXRlRmlsdGVyTWVudUNvbXBvbmVudC5wcm90b3R5cGUsIFwiZmlsdGVyXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgRGF0ZUZpbHRlck1lbnVDb21wb25lbnQucHJvdG90eXBlLCBcImV4dHJhXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBGaWx0ZXJTZXJ2aWNlKVxuXSwgRGF0ZUZpbHRlck1lbnVDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlclNlcnZpY2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE1lbnVUYWJiaW5nU2VydmljZSlcbl0sIERhdGVGaWx0ZXJNZW51Q29tcG9uZW50LnByb3RvdHlwZSwgXCJtZW51VGFiYmluZ1NlcnZpY2VcIiwgdm9pZCAwKTtcbkRhdGVGaWx0ZXJNZW51Q29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLWRhdGUtZmlsdGVyLW1lbnUnLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8a2VuZG8tZ3JpZC1kYXRlLWZpbHRlci1tZW51LWlucHV0XG4gICAgICAgICAgICBbY3VycmVudEZpbHRlcl09XCJmaXJzdEZpbHRlclwiXG4gICAgICAgICAgICBbb3BlcmF0b3JzXT1cIm9wZXJhdG9yc1wiXG4gICAgICAgICAgICBbZmlsdGVyU2VydmljZV09XCJmaWx0ZXJTZXJ2aWNlXCJcbiAgICAgICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAgICAgICAgICAgIFtmaWx0ZXJdPVwiZmlsdGVyXCJcbiAgICAgICAgICAgIFthY3RpdmVWaWV3XT1cImFjdGl2ZVZpZXdcIlxuICAgICAgICAgICAgW2JvdHRvbVZpZXddPVwiYm90dG9tVmlld1wiXG4gICAgICAgICAgICBbdG9wVmlld109XCJ0b3BWaWV3XCJcbiAgICAgICAgICAgIFtmb3JtYXRdPVwiZm9ybWF0XCJcbiAgICAgICAgICAgIFtmb3JtYXRQbGFjZWhvbGRlcl09XCJmb3JtYXRQbGFjZWhvbGRlclwiXG4gICAgICAgICAgICBbcGxhY2Vob2xkZXJdPVwicGxhY2Vob2xkZXJcIlxuICAgICAgICAgICAgW21pbl09XCJtaW5cIlxuICAgICAgICAgICAgW21heF09XCJtYXhcIlxuICAgICAgICAgICAgW3dlZWtOdW1iZXJdPVwid2Vla051bWJlclwiXG4gICAgICAgICAgICBbaXNGaXJzdERyb3BEb3duXT1cInRydWVcIlxuICAgICAgICAgICAgW21lbnVUYWJiaW5nU2VydmljZV09XCJtZW51VGFiYmluZ1NlcnZpY2VcIlxuICAgICAgICAgICAgPlxuICAgICAgICA8L2tlbmRvLWdyaWQtZGF0ZS1maWx0ZXItbWVudS1pbnB1dD5cbiAgICAgICAgPGtlbmRvLWRyb3Bkb3dubGlzdFxuICAgICAgICAgICAgKm5nSWY9XCJleHRyYVwiXG4gICAgICAgICAgICBrZW5kb0ZpbHRlck1lbnVEcm9wRG93blxuICAgICAgICAgICAgW2ZpbHRlck1lbnVEcm9wRG93bkxhYmVsXT1cImZpbHRlck1lbnVEcm9wRG93bkxhYmVsXCJcbiAgICAgICAgICAgIGNsYXNzPVwiay1maWx0ZXItYW5kXCJcbiAgICAgICAgICAgIFtkYXRhXT1cImxvZ2ljT3BlcmF0b3JzXCJcbiAgICAgICAgICAgIFt2YWx1ZVByaW1pdGl2ZV09XCJ0cnVlXCJcbiAgICAgICAgICAgICh2YWx1ZUNoYW5nZSk9XCJsb2dpY0NoYW5nZSgkZXZlbnQpXCJcbiAgICAgICAgICAgIFt2YWx1ZV09XCJmaWx0ZXI/LmxvZ2ljXCJcbiAgICAgICAgICAgIHRleHRGaWVsZD1cInRleHRcIlxuICAgICAgICAgICAgdmFsdWVGaWVsZD1cInZhbHVlXCI+XG4gICAgICAgIDwva2VuZG8tZHJvcGRvd25saXN0PlxuICAgICAgICA8a2VuZG8tZ3JpZC1kYXRlLWZpbHRlci1tZW51LWlucHV0XG4gICAgICAgICAgICAqbmdJZj1cImV4dHJhXCJcbiAgICAgICAgICAgIFtvcGVyYXRvcnNdPVwib3BlcmF0b3JzXCJcbiAgICAgICAgICAgIFtjdXJyZW50RmlsdGVyXT1cInNlY29uZEZpbHRlclwiXG4gICAgICAgICAgICBbZmlsdGVyU2VydmljZV09XCJmaWx0ZXJTZXJ2aWNlXCJcbiAgICAgICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAgICAgICAgICAgIFtmaWx0ZXJdPVwiZmlsdGVyXCJcbiAgICAgICAgICAgIFthY3RpdmVWaWV3XT1cImFjdGl2ZVZpZXdcIlxuICAgICAgICAgICAgW2JvdHRvbVZpZXddPVwiYm90dG9tVmlld1wiXG4gICAgICAgICAgICBbdG9wVmlld109XCJ0b3BWaWV3XCJcbiAgICAgICAgICAgIFtmb3JtYXRdPVwiZm9ybWF0XCJcbiAgICAgICAgICAgIFtmb3JtYXRQbGFjZWhvbGRlcl09XCJmb3JtYXRQbGFjZWhvbGRlclwiXG4gICAgICAgICAgICBbcGxhY2Vob2xkZXJdPVwicGxhY2Vob2xkZXJcIlxuICAgICAgICAgICAgW21pbl09XCJtaW5cIlxuICAgICAgICAgICAgW21heF09XCJtYXhcIlxuICAgICAgICAgICAgW3dlZWtOdW1iZXJdPVwid2Vla051bWJlclwiXG4gICAgICAgICAgICBbbWVudVRhYmJpbmdTZXJ2aWNlXT1cIm1lbnVUYWJiaW5nU2VydmljZVwiXG4gICAgICAgICAgICA+XG4gICAgICAgIDwva2VuZG8tZ3JpZC1kYXRlLWZpbHRlci1tZW51LWlucHV0PlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2VdKVxuXSwgRGF0ZUZpbHRlck1lbnVDb21wb25lbnQpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IEJvb2xlYW5GaWx0ZXJSYWRpb0J1dHRvbkRpcmVjdGl2ZSA9IGNsYXNzIEJvb2xlYW5GaWx0ZXJSYWRpb0J1dHRvbkRpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IoaG9zdEVsZW1lbnQsIHJlbmRlcmVyKSB7XG4gICAgICAgIHRoaXMuaG9zdEVsZW1lbnQgPSBob3N0RWxlbWVudDtcbiAgICAgICAgdGhpcy5yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIH1cbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgICAgIHRoaXMucmFkaW9CdXR0b25FbCA9IHRoaXMuaG9zdEVsZW1lbnQubmF0aXZlRWxlbWVudDtcbiAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRBdHRyaWJ1dGUodGhpcy5ob3N0RWxlbWVudC5uYXRpdmVFbGVtZW50LCAnYXJpYS1sYWJlbCcsIHRoaXMuY29sdW1uTGFiZWwpO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBCb29sZWFuRmlsdGVyUmFkaW9CdXR0b25EaXJlY3RpdmUucHJvdG90eXBlLCBcImNvbHVtbkxhYmVsXCIsIHZvaWQgMCk7XG5Cb29sZWFuRmlsdGVyUmFkaW9CdXR0b25EaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1trZW5kb0ZpbHRlck1lbnVSYWRpb0J1dHRvbl0nIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRWxlbWVudFJlZixcbiAgICAgICAgUmVuZGVyZXIyXSlcbl0sIEJvb2xlYW5GaWx0ZXJSYWRpb0J1dHRvbkRpcmVjdGl2ZSk7XG5cbi8qKlxuICogUmVwcmVzZW50cyBhIEJvb2xlYW4tZmlsdGVyIG1lbnUgY29tcG9uZW50LlxuICpcbiAqIEBleGFtcGxlXG4gKiAgYGBgaHRtbC1uby1ydW5cbiAqICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiRGlzY29udGludWVkXCIgdGl0bGU9XCJEaXNjb250aW51ZWRcIj5cbiAqICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRGaWx0ZXJNZW51VGVtcGxhdGUgbGV0LWZpbHRlciBsZXQtY29sdW1uPVwiY29sdW1uXCIgbGV0LWZpbHRlclNlcnZpY2U9XCJmaWx0ZXJTZXJ2aWNlXCI+XG4gKiAgICAgICAgICAgIDxrZW5kby1ncmlkLWJvb2xlYW4tZmlsdGVyLW1lbnVcbiAqICAgICAgICAgICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAqICAgICAgICAgICAgICAgIFtmaWx0ZXJdPVwiZmlsdGVyXCJcbiAqICAgICAgICAgICAgICAgIFtmaWx0ZXJTZXJ2aWNlXT1cImZpbHRlclNlcnZpY2VcIlxuICogICAgICAgICAgICAgICAgPlxuICogICAgICAgICAgICA8L2tlbmRvLWdyaWQtYm9vbGVhbi1maWx0ZXItbWVudT5cbiAqICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgIGBgYFxuICovXG5sZXQgQm9vbGVhbkZpbHRlck1lbnVDb21wb25lbnQgPSBjbGFzcyBCb29sZWFuRmlsdGVyTWVudUNvbXBvbmVudCBleHRlbmRzIEJvb2xlYW5GaWx0ZXJDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbikge1xuICAgICAgICBzdXBlcihudWxsLCBsb2NhbGl6YXRpb24pO1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIGN1cnJlbnQgbWVudSBmaWx0ZXIuXG4gICAgICAgICAqIEB0eXBlIHtDb21wb3NpdGVGaWx0ZXJEZXNjcmlwdG9yfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5maWx0ZXIgPSB7IGZpbHRlcnM6IFtdLCBsb2dpYzogXCJhbmRcIiB9O1xuICAgICAgICB0aGlzLmlkUHJlZml4ID0gZ3VpZCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IGhvc3RDbGFzc2VzKCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAgICAgdGhpcy5maWx0ZXJTZXJ2aWNlLm1lbnVUYWJiaW5nU2VydmljZS5maXJzdEZvY3VzYWJsZSA9IHRoaXMucmFkaW9CdXR0b25zLmZpcnN0LnJhZGlvQnV0dG9uRWw7XG4gICAgICAgIHRoaXMucmFkaW9CdXR0b25zLmZpcnN0LnJhZGlvQnV0dG9uRWwuZm9jdXMoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJhZGlvSWQodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGAke3RoaXMuaWRQcmVmaXh9XyR7dmFsdWV9YDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uQ2hhbmdlKHZhbHVlLCBpbnB1dCkge1xuICAgICAgICB0aGlzLmFwcGx5RmlsdGVyKHRoaXMudXBkYXRlRmlsdGVyKHtcbiAgICAgICAgICAgIGZpZWxkOiB0aGlzLmNvbHVtbi5maWVsZCxcbiAgICAgICAgICAgIG9wZXJhdG9yOiBcImVxXCIsXG4gICAgICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICAgICAgfSkpO1xuICAgICAgICB0aGlzLmZpbHRlclNlcnZpY2UubWVudVRhYmJpbmdTZXJ2aWNlLmZpcnN0Rm9jdXNhYmxlID0gaW5wdXQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBpc1NlbGVjdGVkKHJhZGlvVmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyc0J5RmllbGQodGhpcy5jb2x1bW4uZmllbGQpLnNvbWUoKHsgdmFsdWUgfSkgPT4gdmFsdWUgPT09IHJhZGlvVmFsdWUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgb25TaGlmdFRhYihlKSB7XG4gICAgICAgIGlmICgoIXRoaXMubWVudVRhYmJpbmdTZXJ2aWNlIHx8ICF0aGlzLm1lbnVUYWJiaW5nU2VydmljZS5pc0NvbHVtbk1lbnUpICYmIHRoaXMuZmlsdGVyU2VydmljZS5tZW51VGFiYmluZ1NlcnZpY2UubGFzdEZvY3VzYWJsZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgdGhpcy5maWx0ZXJTZXJ2aWNlLm1lbnVUYWJiaW5nU2VydmljZS5sYXN0Rm9jdXNhYmxlLmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBjb2x1bW5MYWJlbCgpIHtcbiAgICAgICAgY29uc3QgbG9jYWxpemF0aW9uTXNnID0gdGhpcy5sb2NhbGl6YXRpb24uZ2V0KCdmaWx0ZXJJbnB1dExhYmVsJykgfHwgJyc7XG4gICAgICAgIGNvbnN0IGNvbHVtbk5hbWUgPSB0aGlzLmNvbHVtbi50aXRsZSB8fCB0aGlzLmNvbHVtbi5maWVsZDtcbiAgICAgICAgcmV0dXJuIHJlcGxhY2VNZXNzYWdlUGxhY2Vob2xkZXIobG9jYWxpemF0aW9uTXNnLCAnY29sdW1uTmFtZScsIGNvbHVtbk5hbWUpO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnY2xhc3Muay1maWx0ZXJjZWxsJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIEJvb2xlYW5GaWx0ZXJNZW51Q29tcG9uZW50LnByb3RvdHlwZSwgXCJob3N0Q2xhc3Nlc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIEJvb2xlYW5GaWx0ZXJNZW51Q29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZpbHRlclNlcnZpY2UpXG5dLCBCb29sZWFuRmlsdGVyTWVudUNvbXBvbmVudC5wcm90b3R5cGUsIFwiZmlsdGVyU2VydmljZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTWVudVRhYmJpbmdTZXJ2aWNlKVxuXSwgQm9vbGVhbkZpbHRlck1lbnVDb21wb25lbnQucHJvdG90eXBlLCBcIm1lbnVUYWJiaW5nU2VydmljZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgVmlld0NoaWxkcmVuKEJvb2xlYW5GaWx0ZXJSYWRpb0J1dHRvbkRpcmVjdGl2ZSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFF1ZXJ5TGlzdClcbl0sIEJvb2xlYW5GaWx0ZXJNZW51Q29tcG9uZW50LnByb3RvdHlwZSwgXCJyYWRpb0J1dHRvbnNcIiwgdm9pZCAwKTtcbkJvb2xlYW5GaWx0ZXJNZW51Q29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLWJvb2xlYW4tZmlsdGVyLW1lbnUnLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8dWwgY2xhc3M9XCJrLXJhZGlvLWxpc3Qgay1yZXNldFwiPlxuICAgICAgICAgICAgPGxpICpuZ0Zvcj1cImxldCBpdGVtIG9mIGl0ZW1zXCI+XG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiXG4gICAgICAgICAgICAgICAgICAgIGtlbmRvRmlsdGVyTWVudVJhZGlvQnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIFtjb2x1bW5MYWJlbF09XCJjb2x1bW5MYWJlbFwiXG4gICAgICAgICAgICAgICAgICAgICNpbnB1dFxuICAgICAgICAgICAgICAgICAgICBbbmFtZV09XCJpZFByZWZpeFwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiay1yYWRpb1wiXG4gICAgICAgICAgICAgICAgICAgIFtjaGVja2VkXT1cImlzU2VsZWN0ZWQoaXRlbS52YWx1ZSlcIlxuICAgICAgICAgICAgICAgICAgICBbYXR0ci5pZF09XCJyYWRpb0lkKGl0ZW0udmFsdWUpXCJcbiAgICAgICAgICAgICAgICAgICAgKGNoYW5nZSk9XCJvbkNoYW5nZShpdGVtLnZhbHVlLCBpbnB1dClcIlxuICAgICAgICAgICAgICAgICAgICAoa2V5ZG93bi5zaGlmdC50YWIpPVwib25TaGlmdFRhYigkZXZlbnQpXCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImstcmFkaW8tbGFiZWxcIiBbYXR0ci5mb3JdPVwicmFkaW9JZChpdGVtLnZhbHVlKVwiPnt7aXRlbS50ZXh0fX08L2xhYmVsPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtMb2NhbGl6YXRpb25TZXJ2aWNlXSlcbl0sIEJvb2xlYW5GaWx0ZXJNZW51Q29tcG9uZW50KTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKlxuICogPiBMaXN0IHRoZSBmb2xsb3dpbmcgY29tcG9uZW50cyBhcyBgZW50cnlDb21wb25lbnRzYCBpbiB0aGUgR3JpZE1vZHVsZS5cbiAqL1xuY29uc3QgZmlsdGVyTWVudUNvbXBvbmVudEZhY3RvcnkgPSAodHlwZSkgPT4gKHtcbiAgICBcImJvb2xlYW5cIjogQm9vbGVhbkZpbHRlck1lbnVDb21wb25lbnQsXG4gICAgXCJkYXRlXCI6IERhdGVGaWx0ZXJNZW51Q29tcG9uZW50LFxuICAgIFwibnVtZXJpY1wiOiBOdW1lcmljRmlsdGVyTWVudUNvbXBvbmVudCxcbiAgICBcInRleHRcIjogU3RyaW5nRmlsdGVyTWVudUNvbXBvbmVudFxufVt0eXBlXSk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgRmlsdGVyTWVudUhvc3REaXJlY3RpdmUgPSBjbGFzcyBGaWx0ZXJNZW51SG9zdERpcmVjdGl2ZSBleHRlbmRzIEZpbHRlckhvc3REaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKGhvc3QsIHJlc29sdmVyKSB7XG4gICAgICAgIHN1cGVyKGhvc3QsIHJlc29sdmVyKTtcbiAgICB9XG4gICAgY29tcG9uZW50VHlwZSgpIHtcbiAgICAgICAgaWYgKGlzUHJlc2VudCh0aGlzLmNvbHVtbikgJiYgIWlzTnVsbE9yRW1wdHlTdHJpbmcodGhpcy5jb2x1bW4uZmlsdGVyKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZpbHRlck1lbnVDb21wb25lbnRGYWN0b3J5KHRoaXMuY29sdW1uLmZpbHRlcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFN0cmluZ0ZpbHRlck1lbnVDb21wb25lbnQ7XG4gICAgfVxuICAgIGluaXRDb21wb25lbnQoY3R4KSB7XG4gICAgICAgIHN1cGVyLmluaXRDb21wb25lbnQoY3R4KTtcbiAgICAgICAgdGhpcy5jb21wb25lbnQuaW5zdGFuY2UuZmlsdGVyU2VydmljZSA9IHRoaXMuZmlsdGVyU2VydmljZTtcbiAgICAgICAgdGhpcy5jb21wb25lbnQuaW5zdGFuY2UubWVudVRhYmJpbmdTZXJ2aWNlID0gdGhpcy5tZW51VGFiYmluZ1NlcnZpY2U7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZpbHRlclNlcnZpY2UpXG5dLCBGaWx0ZXJNZW51SG9zdERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiZmlsdGVyU2VydmljZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTWVudVRhYmJpbmdTZXJ2aWNlKVxuXSwgRmlsdGVyTWVudUhvc3REaXJlY3RpdmUucHJvdG90eXBlLCBcIm1lbnVUYWJiaW5nU2VydmljZVwiLCB2b2lkIDApO1xuRmlsdGVyTWVudUhvc3REaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0ZpbHRlck1lbnVIb3N0XSdcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW1ZpZXdDb250YWluZXJSZWYsXG4gICAgICAgIENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcl0pXG5dLCBGaWx0ZXJNZW51SG9zdERpcmVjdGl2ZSk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgRGF0ZUZpbHRlck1lbnVJbnB1dENvbXBvbmVudCA9IGNsYXNzIERhdGVGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VydmljZSwgbG9jYWxpemF0aW9uU2VydmljZSkge1xuICAgICAgICB0aGlzLnBvcHVwU2VydmljZSA9IHBvcHVwU2VydmljZTtcbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb25TZXJ2aWNlID0gbG9jYWxpemF0aW9uU2VydmljZTtcbiAgICAgICAgdGhpcy5vcGVyYXRvcnMgPSBbXTtcbiAgICB9XG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIGlmICh0aGlzLnN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvcGVuKHBpY2tlcikge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IHRoaXMucG9wdXBTZXJ2aWNlLm9uQ2xvc2VcbiAgICAgICAgICAgIC5waXBlKGZpbHRlcigoKSA9PiBwaWNrZXIuaXNBY3RpdmUpKVxuICAgICAgICAgICAgLnN1YnNjcmliZShlID0+IGUucHJldmVudERlZmF1bHQoKSk7XG4gICAgfVxuICAgIG1lc3NhZ2VGb3Ioa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvY2FsaXphdGlvblNlcnZpY2UuZ2V0KGtleSk7XG4gICAgfVxuICAgIGdldCBjb2x1bW5MYWJlbCgpIHtcbiAgICAgICAgY29uc3QgbG9jYWxpemF0aW9uTXNnID0gdGhpcy5sb2NhbGl6YXRpb25TZXJ2aWNlLmdldCgnZmlsdGVySW5wdXRMYWJlbCcpIHx8ICcnO1xuICAgICAgICBjb25zdCBjb2x1bW5OYW1lID0gdGhpcy5jb2x1bW4gPyB0aGlzLmNvbHVtbi50aXRsZSB8fCB0aGlzLmNvbHVtbi5maWVsZCA6ICcnO1xuICAgICAgICByZXR1cm4gcmVwbGFjZU1lc3NhZ2VQbGFjZWhvbGRlcihsb2NhbGl6YXRpb25Nc2csICdjb2x1bW5OYW1lJywgY29sdW1uTmFtZSk7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KVxuXSwgRGF0ZUZpbHRlck1lbnVJbnB1dENvbXBvbmVudC5wcm90b3R5cGUsIFwib3BlcmF0b3JzXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBDb2x1bW5Db21wb25lbnQpXG5dLCBEYXRlRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJjb2x1bW5cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIERhdGVGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgRGF0ZUZpbHRlck1lbnVJbnB1dENvbXBvbmVudC5wcm90b3R5cGUsIFwib3BlcmF0b3JcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIERhdGVGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQucHJvdG90eXBlLCBcImN1cnJlbnRGaWx0ZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZpbHRlclNlcnZpY2UpXG5dLCBEYXRlRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJmaWx0ZXJTZXJ2aWNlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBNZW51VGFiYmluZ1NlcnZpY2UpXG5dLCBEYXRlRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJtZW51VGFiYmluZ1NlcnZpY2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIERhdGVGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQucHJvdG90eXBlLCBcImZvcm1hdFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgRGF0ZUZpbHRlck1lbnVJbnB1dENvbXBvbmVudC5wcm90b3R5cGUsIFwiZm9ybWF0UGxhY2Vob2xkZXJcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIERhdGVGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQucHJvdG90eXBlLCBcInBsYWNlaG9sZGVyXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBEYXRlKVxuXSwgRGF0ZUZpbHRlck1lbnVJbnB1dENvbXBvbmVudC5wcm90b3R5cGUsIFwibWluXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBEYXRlKVxuXSwgRGF0ZUZpbHRlck1lbnVJbnB1dENvbXBvbmVudC5wcm90b3R5cGUsIFwibWF4XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBEYXRlRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJhY3RpdmVWaWV3XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBEYXRlRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJib3R0b21WaWV3XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBEYXRlRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJ0b3BWaWV3XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgRGF0ZUZpbHRlck1lbnVJbnB1dENvbXBvbmVudC5wcm90b3R5cGUsIFwid2Vla051bWJlclwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIERhdGVGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQucHJvdG90eXBlLCBcImlzRmlyc3REcm9wRG93blwiLCB2b2lkIDApO1xuRGF0ZUZpbHRlck1lbnVJbnB1dENvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZ3JpZC1kYXRlLWZpbHRlci1tZW51LWlucHV0JyxcbiAgICAgICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGtlbmRvLWdyaWQtZmlsdGVyLW1lbnUtaW5wdXQtd3JhcHBlclxuICAgICAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICAgICAgW2ZpbHRlcl09XCJmaWx0ZXJcIlxuICAgICAgICAgICAgW29wZXJhdG9yc109XCJvcGVyYXRvcnNcIlxuICAgICAgICAgICAgW2RlZmF1bHRPcGVyYXRvcl09XCJvcGVyYXRvclwiXG4gICAgICAgICAgICBbY3VycmVudEZpbHRlcl09XCJjdXJyZW50RmlsdGVyXCJcbiAgICAgICAgICAgIFtmaWx0ZXJTZXJ2aWNlXT1cImZpbHRlclNlcnZpY2VcIlxuICAgICAgICAgICAgW2lzRmlyc3REcm9wRG93bl09XCJpc0ZpcnN0RHJvcERvd25cIlxuICAgICAgICAgICAgW21lbnVUYWJiaW5nU2VydmljZV09XCJtZW51VGFiYmluZ1NlcnZpY2VcIlxuICAgICAgICA+XG4gICAgICAgICAgICA8a2VuZG8tZGF0ZXBpY2tlclxuICAgICAgICAgICAgICAgICNwaWNrZXJcbiAgICAgICAgICAgICAgICBrZW5kb0ZpbHRlcklucHV0XG4gICAgICAgICAgICAgICAgW2NvbHVtbkxhYmVsXT1cImNvbHVtbkxhYmVsXCJcbiAgICAgICAgICAgICAgICBbZmlsdGVyRGVsYXldPVwiMFwiXG4gICAgICAgICAgICAgICAgKG9wZW4pPVwib3BlbihwaWNrZXIpXCJcbiAgICAgICAgICAgICAgICBbdmFsdWVdPVwiY3VycmVudEZpbHRlcj8udmFsdWVcIlxuICAgICAgICAgICAgICAgIFtwbGFjZWhvbGRlcl09XCJwbGFjZWhvbGRlclwiXG4gICAgICAgICAgICAgICAgW2Zvcm1hdFBsYWNlaG9sZGVyXT1cImZvcm1hdFBsYWNlaG9sZGVyXCJcbiAgICAgICAgICAgICAgICBbZm9ybWF0XT1cImZvcm1hdFwiXG4gICAgICAgICAgICAgICAgW21pbl09XCJtaW5cIlxuICAgICAgICAgICAgICAgIFttYXhdPVwibWF4XCJcbiAgICAgICAgICAgICAgICBbYWN0aXZlVmlld109XCJhY3RpdmVWaWV3XCJcbiAgICAgICAgICAgICAgICBbYm90dG9tVmlld109XCJib3R0b21WaWV3XCJcbiAgICAgICAgICAgICAgICBbdG9wVmlld109XCJ0b3BWaWV3XCJcbiAgICAgICAgICAgICAgICBbd2Vla051bWJlcl09XCJ3ZWVrTnVtYmVyXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8a2VuZG8tZGF0ZXBpY2tlci1tZXNzYWdlc1xuICAgICAgICAgICAgICAgICAgICBbdG9nZ2xlXT1cIm1lc3NhZ2VGb3IoJ2ZpbHRlckRhdGVUb2dnbGUnKVwiXG4gICAgICAgICAgICAgICAgICAgIFt0b2RheV09XCJtZXNzYWdlRm9yKCdmaWx0ZXJEYXRlVG9kYXknKVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDwva2VuZG8tZGF0ZXBpY2tlci1tZXNzYWdlcz5cbiAgICAgICAgICAgIDwva2VuZG8tZGF0ZXBpY2tlcj5cbiAgICAgICAgPC9rZW5kby1ncmlkLWZpbHRlci1tZW51LWlucHV0LXdyYXBwZXI+XG4gICAgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbU2luZ2xlUG9wdXBTZXJ2aWNlLFxuICAgICAgICBMb2NhbGl6YXRpb25TZXJ2aWNlXSlcbl0sIERhdGVGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IEZpbHRlck1lbnVEcm9wRG93bkxpc3REaXJlY3RpdmUgPSBjbGFzcyBGaWx0ZXJNZW51RHJvcERvd25MaXN0RGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3Rvcihob3N0KSB7XG4gICAgICAgIHRoaXMuaG9zdCA9IGhvc3Q7XG4gICAgICAgIHRoaXMua2V5ZG93bkhhbmRsZXIgPSAoZSkgPT4ge1xuICAgICAgICAgICAgaWYgKGUua2V5Q29kZSA9PT0gS2V5cy5Fc2NhcGUgJiYgdGhpcy5ob3N0LmlzT3Blbikge1xuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5ob3N0LnRvZ2dsZShmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAgICAgY29uc3Qgd3JhcHBlckVsZW1lbnQgPSB0aGlzLmhvc3Qud3JhcHBlci5uYXRpdmVFbGVtZW50O1xuICAgICAgICB3cmFwcGVyRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCB0aGlzLmZpbHRlck1lbnVEcm9wRG93bkxhYmVsKTtcbiAgICAgICAgd3JhcHBlckVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMua2V5ZG93bkhhbmRsZXIsIHRydWUpO1xuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5ob3N0LndyYXBwZXIubmF0aXZlRWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5rZXlkb3duSGFuZGxlcik7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIEZpbHRlck1lbnVEcm9wRG93bkxpc3REaXJlY3RpdmUucHJvdG90eXBlLCBcImZpbHRlck1lbnVEcm9wRG93bkxhYmVsXCIsIHZvaWQgMCk7XG5GaWx0ZXJNZW51RHJvcERvd25MaXN0RGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdba2VuZG9GaWx0ZXJNZW51RHJvcERvd25dJyB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0Ryb3BEb3duTGlzdENvbXBvbmVudF0pXG5dLCBGaWx0ZXJNZW51RHJvcERvd25MaXN0RGlyZWN0aXZlKTtcblxuY29uc3QgSU5URVJOQUxfQ09NUE9ORU5UUyQyID0gW1xuICAgIEZpbHRlck1lbnVDb21wb25lbnQsXG4gICAgRmlsdGVyTWVudUNvbnRhaW5lckNvbXBvbmVudCxcbiAgICBGaWx0ZXJNZW51SW5wdXRXcmFwcGVyQ29tcG9uZW50LFxuICAgIFN0cmluZ0ZpbHRlck1lbnVJbnB1dENvbXBvbmVudCxcbiAgICBTdHJpbmdGaWx0ZXJNZW51Q29tcG9uZW50LFxuICAgIEZpbHRlck1lbnVUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBOdW1lcmljRmlsdGVyTWVudUNvbXBvbmVudCxcbiAgICBOdW1lcmljRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LFxuICAgIERhdGVGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQsXG4gICAgRGF0ZUZpbHRlck1lbnVDb21wb25lbnQsXG4gICAgRmlsdGVyTWVudUhvc3REaXJlY3RpdmUsXG4gICAgQm9vbGVhbkZpbHRlck1lbnVDb21wb25lbnQsXG4gICAgRmlsdGVyTWVudURyb3BEb3duTGlzdERpcmVjdGl2ZSxcbiAgICBCb29sZWFuRmlsdGVyUmFkaW9CdXR0b25EaXJlY3RpdmVcbl07XG5jb25zdCBFTlRSWV9DT01QT05FTlRTJDEgPSBbXG4gICAgU3RyaW5nRmlsdGVyTWVudUNvbXBvbmVudCxcbiAgICBOdW1lcmljRmlsdGVyTWVudUNvbXBvbmVudCxcbiAgICBEYXRlRmlsdGVyTWVudUNvbXBvbmVudCxcbiAgICBCb29sZWFuRmlsdGVyTWVudUNvbXBvbmVudFxuXTtcbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgRmlsdGVyTWVudU1vZHVsZSA9IGNsYXNzIEZpbHRlck1lbnVNb2R1bGUge1xuICAgIHN0YXRpYyBleHBvcnRzKCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgU3RyaW5nRmlsdGVyTWVudUNvbXBvbmVudCxcbiAgICAgICAgICAgIEZpbHRlck1lbnVUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICAgICAgICAgIE51bWVyaWNGaWx0ZXJNZW51Q29tcG9uZW50LFxuICAgICAgICAgICAgRGF0ZUZpbHRlck1lbnVDb21wb25lbnQsXG4gICAgICAgICAgICBCb29sZWFuRmlsdGVyTWVudUNvbXBvbmVudCxcbiAgICAgICAgICAgIEZpbHRlck1lbnVEcm9wRG93bkxpc3REaXJlY3RpdmUsXG4gICAgICAgICAgICBCb29sZWFuRmlsdGVyUmFkaW9CdXR0b25EaXJlY3RpdmUsXG4gICAgICAgICAgICBTaGFyZWRGaWx0ZXJNb2R1bGUuZXhwb3J0cygpXG4gICAgICAgIF07XG4gICAgfVxufTtcbkZpbHRlck1lbnVNb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICBOZ01vZHVsZSh7XG4gICAgICAgIGRlY2xhcmF0aW9uczogW0lOVEVSTkFMX0NPTVBPTkVOVFMkMl0sXG4gICAgICAgIGVudHJ5Q29tcG9uZW50czogRU5UUllfQ09NUE9ORU5UUyQxLFxuICAgICAgICBleHBvcnRzOiBbSU5URVJOQUxfQ09NUE9ORU5UUyQyLCBTaGFyZWRGaWx0ZXJNb2R1bGVdLFxuICAgICAgICBpbXBvcnRzOiBbU2hhcmVkRmlsdGVyTW9kdWxlXVxuICAgIH0pXG5dLCBGaWx0ZXJNZW51TW9kdWxlKTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBDb2x1bW5MaXN0Q29tcG9uZW50ID0gY2xhc3MgQ29sdW1uTGlzdENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudCwgbmdab25lLCByZW5kZXJlcikge1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgICB0aGlzLm5nWm9uZSA9IG5nWm9uZTtcbiAgICAgICAgdGhpcy5yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgICAgICB0aGlzLnJlc2V0ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLmFwcGx5ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLmNvbHVtbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5hdXRvU3luYyA9IHRydWU7XG4gICAgICAgIHRoaXMuYWxsb3dIaWRlQWxsID0gZmFsc2U7XG4gICAgICAgIHRoaXMuYWN0aW9uc0NsYXNzID0gJ2stYWN0aW9uLWJ1dHRvbnMnO1xuICAgICAgICB0aGlzLnVubG9ja2VkQ291bnQgPSAwO1xuICAgIH1cbiAgICBnZXQgY2xhc3NOYW1lKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgc2V0IGNvbHVtbnModmFsdWUpIHtcbiAgICAgICAgdGhpcy5fY29sdW1ucyA9IHZhbHVlLmZpbHRlcihjb2x1bW4gPT4gY29sdW1uLmluY2x1ZGVJbkNob29zZXIgIT09IGZhbHNlKTtcbiAgICAgICAgdGhpcy5hbGxDb2x1bW5zID0gdmFsdWU7XG4gICAgICAgIHRoaXMudXBkYXRlQ29sdW1uU3RhdGUoKTtcbiAgICB9XG4gICAgZ2V0IGNvbHVtbnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb2x1bW5zO1xuICAgIH1cbiAgICBpc0Rpc2FibGVkKGNvbHVtbikge1xuICAgICAgICByZXR1cm4gISh0aGlzLmFsbG93SGlkZUFsbCB8fCB0aGlzLmhhc0ZpbHRlcmVkIHx8IGNvbHVtbi5oaWRkZW4gfHwgdGhpcy5jb2x1bW5zLmZpbmQoY3VycmVudCA9PiBjdXJyZW50ICE9PSBjb2x1bW4gJiYgIWN1cnJlbnQuaGlkZGVuKSkgfHxcbiAgICAgICAgICAgICh0aGlzLmhhc1Zpc2libGVMb2NrZWQgJiYgIXRoaXMuaGFzVW5sb2NrZWRGaWx0ZXJlZCAmJiB0aGlzLnVubG9ja2VkQ291bnQgPT09IDEgJiYgIWNvbHVtbi5sb2NrZWQgJiYgIWNvbHVtbi5oaWRkZW4pO1xuICAgIH1cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmVsZW1lbnQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmRvbVN1YnNjcmlwdGlvbnMgPSB0aGlzLnJlbmRlcmVyLmxpc3Rlbih0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoaGFzQ2xhc3NlcyhlLnRhcmdldCwgJ2stY2hlY2tib3gnKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5hdXRvU3luYykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSBwYXJzZUludChlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtaW5kZXgnKSwgMTApO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29sdW1uID0gdGhpcy5jb2x1bW5zW2luZGV4XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhpZGRlbiA9ICFlLnRhcmdldC5jaGVja2VkO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKEJvb2xlYW4oY29sdW1uLmhpZGRlbikgIT09IGhpZGRlbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmdab25lLnJ1bigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbHVtbi5oaWRkZW4gPSBoaWRkZW47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29sdW1uQ2hhbmdlLmVtaXQoW2NvbHVtbl0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVEaXNhYmxlZCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzKSB7XG4gICAgICAgIGlmICghdGhpcy5zZXJ2aWNlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNoYW5nZXMuaXNMYXN0ICYmIHRoaXMuaXNMYXN0KSB7XG4gICAgICAgICAgICB0aGlzLnNlcnZpY2UubWVudVRhYmJpbmdTZXJ2aWNlLmxhc3RGb2N1c2FibGUgPSB0aGlzLmFwcGx5QnV0dG9uLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNoYW5nZXMuaXNFeHBhbmRlZCAmJiB0aGlzLmlzRXhwYW5kZWQgJiYgdGhpcy5pc0xhc3QgJiYgdGhpcy5hcHBseUJ1dHRvbikge1xuICAgICAgICAgICAgdGhpcy5zZXJ2aWNlLm1lbnVUYWJiaW5nU2VydmljZS5sYXN0Rm9jdXNhYmxlID0gdGhpcy5hcHBseUJ1dHRvbi5uYXRpdmVFbGVtZW50O1xuICAgICAgICB9XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5kb21TdWJzY3JpcHRpb25zKSB7XG4gICAgICAgICAgICB0aGlzLmRvbVN1YnNjcmlwdGlvbnMoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYW5jZWxDaGFuZ2VzKCkge1xuICAgICAgICB0aGlzLmZvckVhY2hDaGVja0JveCgoZWxlbWVudCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIGVsZW1lbnQuY2hlY2tlZCA9ICF0aGlzLmNvbHVtbnNbaW5kZXhdLmhpZGRlbjtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudXBkYXRlRGlzYWJsZWQoKTtcbiAgICAgICAgdGhpcy5yZXNldC5lbWl0KCk7XG4gICAgfVxuICAgIGFwcGx5Q2hhbmdlcygpIHtcbiAgICAgICAgY29uc3QgY2hhbmdlZCA9IFtdO1xuICAgICAgICB0aGlzLmZvckVhY2hDaGVja0JveCgoZWxlbWVudCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNvbHVtbiA9IHRoaXMuY29sdW1uc1tpbmRleF07XG4gICAgICAgICAgICBjb25zdCBoaWRkZW4gPSAhZWxlbWVudC5jaGVja2VkO1xuICAgICAgICAgICAgaWYgKEJvb2xlYW4oY29sdW1uLmhpZGRlbikgIT09IGhpZGRlbikge1xuICAgICAgICAgICAgICAgIGNvbHVtbi5oaWRkZW4gPSBoaWRkZW47XG4gICAgICAgICAgICAgICAgY2hhbmdlZC5wdXNoKGNvbHVtbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnVwZGF0ZURpc2FibGVkKCk7XG4gICAgICAgIHRoaXMuYXBwbHkuZW1pdChjaGFuZ2VkKTtcbiAgICB9XG4gICAgb25UYWIoZSkge1xuICAgICAgICBpZiAodGhpcy5pc0xhc3QpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnNlcnZpY2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNlcnZpY2UubWVudVRhYmJpbmdTZXJ2aWNlLmZpcnN0Rm9jdXNhYmxlLmZvY3VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yRWFjaENoZWNrQm94KGNhbGxiYWNrKSB7XG4gICAgICAgIGNvbnN0IGNoZWNrYm94ZXMgPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdrLWNoZWNrYm94Jyk7XG4gICAgICAgIGNvbnN0IGxlbmd0aCA9IGNoZWNrYm94ZXMubGVuZ3RoO1xuICAgICAgICBmb3IgKGxldCBpZHggPSAwOyBpZHggPCBsZW5ndGg7IGlkeCsrKSB7XG4gICAgICAgICAgICBjYWxsYmFjayhjaGVja2JveGVzW2lkeF0sIGlkeCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdXBkYXRlRGlzYWJsZWQoKSB7XG4gICAgICAgIGlmICh0aGlzLmFsbG93SGlkZUFsbCAmJiAhdGhpcy5oYXNMb2NrZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjaGVja2VkSXRlbXMgPSBbXTtcbiAgICAgICAgdGhpcy5mb3JFYWNoQ2hlY2tCb3goKGNoZWNrYm94LCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgaWYgKGNoZWNrYm94LmNoZWNrZWQpIHtcbiAgICAgICAgICAgICAgICBjaGVja2VkSXRlbXMucHVzaCh7IGNoZWNrYm94LCBpbmRleCB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNoZWNrYm94LmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIXRoaXMuYWxsb3dIaWRlQWxsICYmIGNoZWNrZWRJdGVtcy5sZW5ndGggPT09IDEgJiYgIXRoaXMuaGFzRmlsdGVyZWQpIHtcbiAgICAgICAgICAgIGNoZWNrZWRJdGVtc1swXS5jaGVja2JveC5kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5oYXNMb2NrZWQgJiYgIXRoaXMuaGFzVW5sb2NrZWRGaWx0ZXJlZCkge1xuICAgICAgICAgICAgY29uc3QgY29sdW1ucyA9IHRoaXMuY29sdW1ucztcbiAgICAgICAgICAgIGNvbnN0IGNoZWNrZWRVbmxvY2tlZCA9IGNoZWNrZWRJdGVtcy5maWx0ZXIoaXRlbSA9PiAhY29sdW1uc1tpdGVtLmluZGV4XS5sb2NrZWQpO1xuICAgICAgICAgICAgaWYgKGNoZWNrZWRVbmxvY2tlZC5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICBjaGVja2VkVW5sb2NrZWRbMF0uY2hlY2tib3guZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHVwZGF0ZUNvbHVtblN0YXRlKCkge1xuICAgICAgICB0aGlzLmhhc0xvY2tlZCA9IHRoaXMuYWxsQ29sdW1ucy5maWx0ZXIoY29sdW1uID0+IGNvbHVtbi5sb2NrZWQgJiYgKCFjb2x1bW4uaGlkZGVuIHx8IGNvbHVtbi5pbmNsdWRlSW5DaG9vc2VyICE9PSBmYWxzZSkpLmxlbmd0aCA+IDA7XG4gICAgICAgIHRoaXMuaGFzVmlzaWJsZUxvY2tlZCA9IHRoaXMuYWxsQ29sdW1ucy5maWx0ZXIoY29sdW1uID0+IGNvbHVtbi5sb2NrZWQgJiYgIWNvbHVtbi5oaWRkZW4pLmxlbmd0aCA+IDA7XG4gICAgICAgIHRoaXMudW5sb2NrZWRDb3VudCA9IHRoaXMuY29sdW1ucy5maWx0ZXIoY29sdW1uID0+ICFjb2x1bW4ubG9ja2VkICYmICFjb2x1bW4uaGlkZGVuKS5sZW5ndGg7XG4gICAgICAgIGNvbnN0IGZpbHRlcmVkQ29sdW1ucyA9IHRoaXMuYWxsQ29sdW1ucy5maWx0ZXIoY29sdW1uID0+IGNvbHVtbi5pbmNsdWRlSW5DaG9vc2VyID09PSBmYWxzZSAmJiAhY29sdW1uLmhpZGRlbik7XG4gICAgICAgIGlmIChmaWx0ZXJlZENvbHVtbnMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLmhhc0ZpbHRlcmVkID0gZmlsdGVyZWRDb2x1bW5zLmxlbmd0aCA+IDA7XG4gICAgICAgICAgICB0aGlzLmhhc1VubG9ja2VkRmlsdGVyZWQgPSBmaWx0ZXJlZENvbHVtbnMuZmlsdGVyKGNvbHVtbiA9PiAhY29sdW1uLmxvY2tlZCkubGVuZ3RoID4gMDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaGFzRmlsdGVyZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuaGFzVW5sb2NrZWRGaWx0ZXJlZCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKFwiY2xhc3Muay1jb2x1bW4tbGlzdC13cmFwcGVyXCIpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBDb2x1bW5MaXN0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJjbGFzc05hbWVcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgQ29sdW1uTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwicmVzZXRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBDb2x1bW5MaXN0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJhcHBseVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIENvbHVtbkxpc3RDb21wb25lbnQucHJvdG90eXBlLCBcImNvbHVtbkNoYW5nZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQXJyYXkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbQXJyYXldKVxuXSwgQ29sdW1uTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uc1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBDb2x1bW5MaXN0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJhdXRvU3luY1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIENvbHVtbkxpc3RDb21wb25lbnQucHJvdG90eXBlLCBcImFsbG93SGlkZUFsbFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgQ29sdW1uTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwiYXBwbHlUZXh0XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBDb2x1bW5MaXN0Q29tcG9uZW50LnByb3RvdHlwZSwgXCJyZXNldFRleHRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIENvbHVtbkxpc3RDb21wb25lbnQucHJvdG90eXBlLCBcImFjdGlvbnNDbGFzc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIENvbHVtbkxpc3RDb21wb25lbnQucHJvdG90eXBlLCBcImlzTGFzdFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIENvbHVtbkxpc3RDb21wb25lbnQucHJvdG90eXBlLCBcImlzRXhwYW5kZWRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIENvbHVtbk1lbnVTZXJ2aWNlKVxuXSwgQ29sdW1uTGlzdENvbXBvbmVudC5wcm90b3R5cGUsIFwic2VydmljZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgVmlld0NoaWxkKCdhcHBseUJ1dHRvbicsIHsgc3RhdGljOiBmYWxzZSB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRWxlbWVudFJlZilcbl0sIENvbHVtbkxpc3RDb21wb25lbnQucHJvdG90eXBlLCBcImFwcGx5QnV0dG9uXCIsIHZvaWQgMCk7XG5Db2x1bW5MaXN0Q29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLWNvbHVtbmxpc3QnLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8ZGl2IGNsYXNzPVwiay1jb2x1bW4tbGlzdFwiPlxuICAgICAgICAgICAgPGxhYmVsICpuZ0Zvcj1cImxldCBjb2x1bW4gb2YgY29sdW1uczsgbGV0IGluZGV4ID0gaW5kZXg7XCIgY2xhc3M9J2stY29sdW1uLWxpc3QtaXRlbSc+XG4gICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwiay1jaGVja2JveFwiIHR5cGU9XCJjaGVja2JveFwiIFthdHRyLmRhdGEtaW5kZXhdPVwiaW5kZXhcIiBbY2hlY2tlZF09XCIhY29sdW1uLmhpZGRlblwiIFtkaXNhYmxlZF09XCJpc0Rpc2FibGVkKGNvbHVtbilcIiAvPjxzcGFuIGNsYXNzPVwiay1jaGVja2JveC1sYWJlbFwiPnt7IGNvbHVtbi5kaXNwbGF5VGl0bGUgfX08L3NwYW4+XG4gICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBbbmdDbGFzc109XCJhY3Rpb25zQ2xhc3NcIiAqbmdJZj1cIiFhdXRvU3luY1wiPlxuICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJrLWJ1dHRvblwiIChjbGljayk9XCJjYW5jZWxDaGFuZ2VzKClcIj57eyByZXNldFRleHQgfX08L2J1dHRvbj5cbiAgICAgICAgICAgIDxidXR0b24gI2FwcGx5QnV0dG9uIHR5cGU9XCJidXR0b25cIiAoa2V5ZG93bi50YWIpPVwib25UYWIoJGV2ZW50KVwiIGNsYXNzPVwiay1idXR0b24gay1wcmltYXJ5XCIgKGNsaWNrKT1cImFwcGx5Q2hhbmdlcygpXCI+e3sgYXBwbHlUZXh0IH19PC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0VsZW1lbnRSZWYsXG4gICAgICAgIE5nWm9uZSxcbiAgICAgICAgUmVuZGVyZXIyXSlcbl0sIENvbHVtbkxpc3RDb21wb25lbnQpO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGNvbXBvbmVudCBmb3Igc2VsZWN0aW5nIGNvbHVtbnMgaW4gdGhlIEdyaWQuIFRvIGVuYWJsZSB0aGUgdXNlciB0byBzaG93IG9yIGhpZGUgY29sdW1ucyxcbiAqIGFkZCB0aGUgY29tcG9uZW50IGluc2lkZSBhIFtUb29sYmFyVGVtcGxhdGVdKHslIHNsdWcgYXBpX2dyaWRfdG9vbGJhcnRlbXBsYXRlZGlyZWN0aXZlICV9KSBkaXJlY3RpdmUuXG4gKlxuICogQGV4YW1wbGVcbiAqIHslIG1ldGEgaGVpZ2h0OjMwMCAlfVxuICogYGBgdHMtcHJldmlld1xuICpcbiAqIF9AQ29tcG9uZW50KHtcbiAqICAgICBzZWxlY3RvcjogJ215LWFwcCcsXG4gKiAgICAgdGVtcGxhdGU6IGBcbiAqICAgICAgIDxrZW5kby1ncmlkIFtkYXRhXT1cImRhdGFcIj5cbiAqICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRUb29sYmFyVGVtcGxhdGU+XG4gKiAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4tY2hvb3Nlcj48L2tlbmRvLWdyaWQtY29sdW1uLWNob29zZXI+XG4gKiAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiRmllbGQxXCI+PC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIkZpZWxkMlwiIFtoaWRkZW5dPVwidHJ1ZVwiPjwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICA8L2tlbmRvLWdyaWQ+XG4gKiAgICAgYFxuICogfSlcbiAqXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICBwdWJsaWMgZGF0YTogYW55W10gPSBbeyBGaWVsZDE6ICdGb28nLCBGaWVsZDI6ICdCYXInIH1dO1xuICogfVxuICpcbiAqIGBgYFxuICogeyUgZW5kbWV0YSAlfVxuICovXG5sZXQgQ29sdW1uQ2hvb3NlckNvbXBvbmVudCA9IGNsYXNzIENvbHVtbkNob29zZXJDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbiwgY29sdW1uSW5mb1NlcnZpY2UsIHBvcHVwU2VydmljZSwgbmdab25lLCByZW5kZXJlciwgY2hhbmdlRGV0ZWN0b3IpIHtcbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb24gPSBsb2NhbGl6YXRpb247XG4gICAgICAgIHRoaXMuY29sdW1uSW5mb1NlcnZpY2UgPSBjb2x1bW5JbmZvU2VydmljZTtcbiAgICAgICAgdGhpcy5wb3B1cFNlcnZpY2UgPSBwb3B1cFNlcnZpY2U7XG4gICAgICAgIHRoaXMubmdab25lID0gbmdab25lO1xuICAgICAgICB0aGlzLnJlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IgPSBjaGFuZ2VEZXRlY3RvcjtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNwZWNpZmllcyBpZiB0aGUgY2hhbmdlcyBpbiB0aGUgdmlzaWJpbGl0eSBvZiB0aGUgY29sdW1uIHdpbGwgYmUgaW1tZWRpYXRlbHkgYXBwbGllZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYXV0b1N5bmMgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNwZWNpZmllcyBpZiBhbGwgY29sdW1ucyBjYW4gYmUgaGlkZGVuLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5hbGxvd0hpZGVBbGwgPSB0cnVlO1xuICAgIH1cbiAgICBnZXQgY29sdW1ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uSW5mb1NlcnZpY2UubGVhZk5hbWVkQ29sdW1ucztcbiAgICB9XG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHRvZ2dsZShhbmNob3IsIHRlbXBsYXRlKSB7XG4gICAgICAgIGlmICghdGhpcy5wb3B1cFJlZikge1xuICAgICAgICAgICAgY29uc3QgZGlyZWN0aW9uID0gdGhpcy5sb2NhbGl6YXRpb24ucnRsID8gJ3JpZ2h0JyA6ICdsZWZ0JztcbiAgICAgICAgICAgIHRoaXMucG9wdXBSZWYgPSB0aGlzLnBvcHVwU2VydmljZS5vcGVuKHtcbiAgICAgICAgICAgICAgICBhbmNob3I6IGFuY2hvcixcbiAgICAgICAgICAgICAgICBjb250ZW50OiB0ZW1wbGF0ZSxcbiAgICAgICAgICAgICAgICBwb3NpdGlvbk1vZGU6ICdhYnNvbHV0ZScsXG4gICAgICAgICAgICAgICAgYW5jaG9yQWxpZ246IHsgdmVydGljYWw6ICdib3R0b20nLCBob3Jpem9udGFsOiBkaXJlY3Rpb24gfSxcbiAgICAgICAgICAgICAgICBwb3B1cEFsaWduOiB7IHZlcnRpY2FsOiAndG9wJywgaG9yaXpvbnRhbDogZGlyZWN0aW9uIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRBdHRyaWJ1dGUodGhpcy5wb3B1cFJlZi5wb3B1cEVsZW1lbnQsICdkaXInLCB0aGlzLmxvY2FsaXphdGlvbi5ydGwgPyAncnRsJyA6ICdsdHInKTtcbiAgICAgICAgICAgIHRoaXMubmdab25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHRoaXMuY2xvc2VDbGljayA9IHRoaXMucmVuZGVyZXIubGlzdGVuKFwiZG9jdW1lbnRcIiwgXCJjbGlja1wiLCAoeyB0YXJnZXQgfSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghY2xvc2VzdCh0YXJnZXQsIG5vZGUgPT4gbm9kZSA9PT0gdGhpcy5wb3B1cFJlZi5wb3B1cEVsZW1lbnQgfHwgbm9kZSA9PT0gYW5jaG9yKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvbkFwcGx5KGNoYW5nZWQpIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICBpZiAoY2hhbmdlZC5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IubWFya0ZvckNoZWNrKCk7XG4gICAgICAgICAgICB0aGlzLmNvbHVtbkluZm9TZXJ2aWNlLmNoYW5nZVZpc2liaWxpdHkoY2hhbmdlZCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uQ2hhbmdlKGNoYW5nZWQpIHtcbiAgICAgICAgdGhpcy5jaGFuZ2VEZXRlY3Rvci5tYXJrRm9yQ2hlY2soKTtcbiAgICAgICAgdGhpcy5jb2x1bW5JbmZvU2VydmljZS5jaGFuZ2VWaXNpYmlsaXR5KGNoYW5nZWQpO1xuICAgIH1cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgaWYgKHRoaXMucG9wdXBSZWYpIHtcbiAgICAgICAgICAgIHRoaXMucG9wdXBSZWYuY2xvc2UoKTtcbiAgICAgICAgICAgIHRoaXMucG9wdXBSZWYgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZGV0YWNoQ2xvc2UoKTtcbiAgICB9XG4gICAgZGV0YWNoQ2xvc2UoKSB7XG4gICAgICAgIGlmICh0aGlzLmNsb3NlQ2xpY2spIHtcbiAgICAgICAgICAgIHRoaXMuY2xvc2VDbGljaygpO1xuICAgICAgICAgICAgdGhpcy5jbG9zZUNsaWNrID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgQ29sdW1uQ2hvb3NlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiYXV0b1N5bmNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBDb2x1bW5DaG9vc2VyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhbGxvd0hpZGVBbGxcIiwgdm9pZCAwKTtcbkNvbHVtbkNob29zZXJDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWdyaWQtY29sdW1uLWNob29zZXInLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8YnV0dG9uICNhbmNob3JcbiAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgKGNsaWNrKT1cInRvZ2dsZShhbmNob3IsIHRlbXBsYXRlKVwiXG4gICAgICAgICAgICBjbGFzcz1cImstYnV0dG9uIGstYmFyZSBrLWJ1dHRvbi1pY29uXCJcbiAgICAgICAgICAgIFthdHRyLnRpdGxlXT1cImxvY2FsaXphdGlvbi5nZXQoJ2NvbHVtbnMnKVwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJrLWljb24gay1pLWNvbHVtbnNcIj48L3NwYW4+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9J2stY29sdW1uLWNob29zZXItdGl0bGUnPnt7IGxvY2FsaXphdGlvbi5nZXQoJ2NvbHVtbnMnKSB9fTwvc3Bhbj5cbiAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbmxpc3RcbiAgICAgICAgICAgICAgICBbY29sdW1uc109XCJjb2x1bW5zXCJcbiAgICAgICAgICAgICAgICBbYXBwbHlUZXh0XT1cImxvY2FsaXphdGlvbi5nZXQoJ2NvbHVtbnNBcHBseScpXCJcbiAgICAgICAgICAgICAgICBbcmVzZXRUZXh0XT1cImxvY2FsaXphdGlvbi5nZXQoJ2NvbHVtbnNSZXNldCcpXCJcbiAgICAgICAgICAgICAgICBbYXV0b1N5bmNdPVwiYXV0b1N5bmNcIlxuICAgICAgICAgICAgICAgIFthbGxvd0hpZGVBbGxdPVwiYWxsb3dIaWRlQWxsXCJcbiAgICAgICAgICAgICAgICAoYXBwbHkpPVwib25BcHBseSgkZXZlbnQpXCJcbiAgICAgICAgICAgICAgICAoY29sdW1uQ2hhbmdlKT1cIm9uQ2hhbmdlKCRldmVudClcIj5cbiAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW5saXN0PlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2UsXG4gICAgICAgIENvbHVtbkluZm9TZXJ2aWNlLFxuICAgICAgICBQb3B1cFNlcnZpY2UsXG4gICAgICAgIE5nWm9uZSxcbiAgICAgICAgUmVuZGVyZXIyLFxuICAgICAgICBDaGFuZ2VEZXRlY3RvclJlZl0pXG5dLCBDb2x1bW5DaG9vc2VyQ29tcG9uZW50KTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNsYXNzIENvbHVtbk1lbnVJdGVtQmFzZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuaG9zdENsYXNzID0gdHJ1ZTtcbiAgICB9XG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIGlmIChpc0Rldk1vZGUoKSAmJiAhdGhpcy5zZXJ2aWNlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBzZXJ2aWNlIGlucHV0IG9mIHRoZSBwcmVkZWZpbmVkIGNvbHVtbiBtZW51IGNvbXBvbmVudHMgaXMgbWFuZGF0b3J5LicpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgdGhpcy5zZXJ2aWNlLmNsb3NlKCk7XG4gICAgfVxufVxuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQ29sdW1uTWVudVNlcnZpY2UpXG5dLCBDb2x1bW5NZW51SXRlbUJhc2UucHJvdG90eXBlLCBcInNlcnZpY2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLWNvbHVtbm1lbnUtaXRlbS13cmFwcGVyJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBDb2x1bW5NZW51SXRlbUJhc2UucHJvdG90eXBlLCBcImhvc3RDbGFzc1wiLCB2b2lkIDApO1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgY29tcG9uZW50IGZvciBzZWxlY3RpbmcgY29sdW1ucyBpbiB0aGUgR3JpZCB0aGF0IGNhbiBiZSBwbGFjZWRcbiAqIGluc2lkZSBhIFtDb2x1bW5NZW51VGVtcGxhdGVdKHslIHNsdWcgYXBpX2dyaWRfY29sdW1ubWVudXRlbXBsYXRlZGlyZWN0aXZlICV9KSBkaXJlY3RpdmUuXG4gKlxuICogPiBZb3UgaGF2ZSB0byBzZXQgdGhlIFtDb2x1bW5NZW51U2VydmljZV0oeyUgc2x1ZyBhcGlfZ3JpZF9jb2x1bW5tZW51c2VydmljZSAlfSkgdGhhdCBpcyBwYXNzZWQgYnlcbiAqID4gdGhlIHRlbXBsYXRlIHRvIHRoZSBzZXJ2aWNlIGlucHV0IG9mIHRoZSBga2VuZG8tZ3JpZC1jb2x1bW5tZW51LWNob29zZXJgIGNvbXBvbmVudC5cbiAqXG4gKiBAZXhhbXBsZVxuICogeyUgbWV0YSBoZWlnaHQ6MzAwICV9XG4gKiBgYGB0cy1wcmV2aWV3XG4gKlxuICogX0BDb21wb25lbnQoe1xuICogICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgICB0ZW1wbGF0ZTogYFxuICogICAgICAgPGtlbmRvLWdyaWQgW2RhdGFdPVwiZGF0YVwiIFtjb2x1bW5NZW51XT1cInRydWVcIj5cbiAqICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRDb2x1bW5NZW51VGVtcGxhdGUgbGV0LXNlcnZpY2U9XCJzZXJ2aWNlXCI+XG4gKiAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1ubWVudS1jaG9vc2VyIFtzZXJ2aWNlXT1cInNlcnZpY2VcIj5cbiAqICAgICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1ubWVudS1jaG9vc2VyPlxuICogICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIkZpZWxkMVwiPjwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJGaWVsZDJcIiBbaGlkZGVuXT1cInRydWVcIj48L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgPC9rZW5kby1ncmlkPlxuICogICAgIGBcbiAqIH0pXG4gKlxuICogY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAqICAgcHVibGljIGRhdGE6IGFueVtdID0gW3sgRmllbGQxOiAnRm9vJywgRmllbGQyOiAnQmFyJyB9XTtcbiAqIH1cbiAqXG4gKiBgYGBcbiAqIHslIGVuZG1ldGEgJX1cbiAqL1xubGV0IENvbHVtbk1lbnVDaG9vc2VyQ29tcG9uZW50ID0gY2xhc3MgQ29sdW1uTWVudUNob29zZXJDb21wb25lbnQgZXh0ZW5kcyBDb2x1bW5NZW51SXRlbUJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbiwgY29sdW1uSW5mb1NlcnZpY2UsIGNoYW5nZURldGVjdG9yLCBob3N0RWxlbWVudCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmxvY2FsaXphdGlvbiA9IGxvY2FsaXphdGlvbjtcbiAgICAgICAgdGhpcy5jb2x1bW5JbmZvU2VydmljZSA9IGNvbHVtbkluZm9TZXJ2aWNlO1xuICAgICAgICB0aGlzLmNoYW5nZURldGVjdG9yID0gY2hhbmdlRGV0ZWN0b3I7XG4gICAgICAgIHRoaXMuaG9zdEVsZW1lbnQgPSBob3N0RWxlbWVudDtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVzIHdoZW4gdGhlIGNvbnRlbnQgaXMgZXhwYW5kZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmV4cGFuZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVzIHdoZW4gdGhlIGNvbnRlbnQgaXMgY29sbGFwc2VkLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jb2xsYXBzZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNwZWNpZmllcyBpZiB0aGUgY29udGVudCBpcyBleHBhbmRlZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZXhwYW5kZWQgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuaXNMYXN0ID0gZmFsc2U7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAaGlkZGVuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmFjdGlvbnNDbGFzcyA9ICdrLWNvbHVtbm1lbnUtYWN0aW9ucyc7XG4gICAgfVxuICAgIGdldCBjb2x1bW5zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW5JbmZvU2VydmljZS5sZWFmTmFtZWRDb2x1bW5zO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgb25BcHBseShjaGFuZ2VkKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgaWYgKGNoYW5nZWQubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLmNoYW5nZURldGVjdG9yLm1hcmtGb3JDaGVjaygpO1xuICAgICAgICAgICAgdGhpcy5jb2x1bW5JbmZvU2VydmljZS5jaGFuZ2VWaXNpYmlsaXR5KGNoYW5nZWQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvbkNvbGxhcHNlKCkge1xuICAgICAgICB0aGlzLmV4cGFuZGVkID0gZmFsc2U7XG4gICAgICAgIGlmICh0aGlzLmlzTGFzdCkge1xuICAgICAgICAgICAgdGhpcy5zZXJ2aWNlLm1lbnVUYWJiaW5nU2VydmljZS5sYXN0Rm9jdXNhYmxlID0gdGhpcy5ob3N0RWxlbWVudC5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5rLWNvbHVtbm1lbnUtaXRlbScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29sbGFwc2UuZW1pdCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgb25FeHBhbmQoKSB7XG4gICAgICAgIHRoaXMuZXhwYW5kZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLmV4cGFuZC5lbWl0KCk7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBDb2x1bW5NZW51Q2hvb3NlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZXhwYW5kXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgQ29sdW1uTWVudUNob29zZXJDb21wb25lbnQucHJvdG90eXBlLCBcImNvbGxhcHNlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgQ29sdW1uTWVudUNob29zZXJDb21wb25lbnQucHJvdG90eXBlLCBcImV4cGFuZGVkXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgQ29sdW1uTWVudUNob29zZXJDb21wb25lbnQucHJvdG90eXBlLCBcImlzTGFzdFwiLCB2b2lkIDApO1xuQ29sdW1uTWVudUNob29zZXJDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWdyaWQtY29sdW1ubWVudS1jaG9vc2VyJyxcbiAgICAgICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1ubWVudS1pdGVtXG4gICAgICAgICAgICBbdGV4dF09XCJsb2NhbGl6YXRpb24uZ2V0KCdjb2x1bW5zJylcIlxuICAgICAgICAgICAgaWNvbj1cImNvbHVtbnNcIlxuICAgICAgICAgICAgW2V4cGFuZGVkXT1cImV4cGFuZGVkXCJcbiAgICAgICAgICAgIChjb2xsYXBzZSk9XCJvbkNvbGxhcHNlKClcIlxuICAgICAgICAgICAgKGV4cGFuZCk9XCJvbkV4cGFuZCgpXCI+XG4gICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkQ29sdW1uTWVudUl0ZW1Db250ZW50VGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1ubGlzdFxuICAgICAgICAgICAgICAgICAgICBbYXBwbHlUZXh0XT1cImxvY2FsaXphdGlvbi5nZXQoJ2NvbHVtbnNBcHBseScpXCJcbiAgICAgICAgICAgICAgICAgICAgW3Jlc2V0VGV4dF09XCJsb2NhbGl6YXRpb24uZ2V0KCdjb2x1bW5zUmVzZXQnKVwiXG4gICAgICAgICAgICAgICAgICAgIFtjb2x1bW5zXT1cImNvbHVtbnNcIlxuICAgICAgICAgICAgICAgICAgICBbYXV0b1N5bmNdPVwiZmFsc2VcIlxuICAgICAgICAgICAgICAgICAgICBbYWxsb3dIaWRlQWxsXT1cImZhbHNlXCJcbiAgICAgICAgICAgICAgICAgICAgW2FjdGlvbnNDbGFzc109XCJhY3Rpb25zQ2xhc3NcIlxuICAgICAgICAgICAgICAgICAgICBbaXNMYXN0XT1cImlzTGFzdFwiXG4gICAgICAgICAgICAgICAgICAgIFtpc0V4cGFuZGVkXT1cImV4cGFuZGVkXCJcbiAgICAgICAgICAgICAgICAgICAgW3NlcnZpY2VdPVwic2VydmljZVwiXG4gICAgICAgICAgICAgICAgICAgIChhcHBseSk9XCJvbkFwcGx5KCRldmVudClcIj5cbiAgICAgICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1ubGlzdD5cbiAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW5tZW51LWl0ZW0+XG4gICAgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTG9jYWxpemF0aW9uU2VydmljZSxcbiAgICAgICAgQ29sdW1uSW5mb1NlcnZpY2UsXG4gICAgICAgIENoYW5nZURldGVjdG9yUmVmLFxuICAgICAgICBFbGVtZW50UmVmXSlcbl0sIENvbHVtbk1lbnVDaG9vc2VyQ29tcG9uZW50KTtcblxuLyogdHNsaW50OmRpc2FibGU6bWF4LWxpbmUtbGVuZ3RoICovXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGNvbXBvbmVudCBmb3IgZWRpdGluZyBjb2x1bW4gZmlsdGVycyBpbiB0aGUgR3JpZCB0aGF0IGNhbiBiZSBwbGFjZWRcbiAqIGluc2lkZSBhIFtDb2x1bW5NZW51VGVtcGxhdGVdKHslIHNsdWcgYXBpX2dyaWRfY29sdW1ubWVudXRlbXBsYXRlZGlyZWN0aXZlICV9KSBkaXJlY3RpdmUuXG4gKlxuICogPiBZb3UgaGF2ZSB0byBzZXQgdGhlIFtDb2x1bW5NZW51U2VydmljZV0oeyUgc2x1ZyBhcGlfZ3JpZF9jb2x1bW5tZW51c2VydmljZSAlfSkgdGhhdCBpcyBwYXNzZWQgYnlcbiAqID4gdGhlIHRlbXBsYXRlIHRvIHRoZSBzZXJ2aWNlIGlucHV0IG9mIHRoZSBga2VuZG8tZ3JpZC1jb2x1bW5tZW51LWZpbHRlcmAgY29tcG9uZW50LlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0cy1wcmV2aWV3XG4gKlxuICogX0BDb21wb25lbnQoe1xuICogICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgICB0ZW1wbGF0ZTogYFxuICogICAgICAgPGtlbmRvLWdyaWQgW2tlbmRvR3JpZEJpbmRpbmddPVwiZGF0YVwiIFtjb2x1bW5NZW51XT1cInRydWVcIj5cbiAqICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRDb2x1bW5NZW51VGVtcGxhdGUgbGV0LXNlcnZpY2U9XCJzZXJ2aWNlXCI+XG4gKiAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1ubWVudS1maWx0ZXIgW3NlcnZpY2VdPVwic2VydmljZVwiPlxuICogICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW5tZW51LWZpbHRlcj5cbiAqICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJGaWVsZDFcIj48L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiRmllbGQyXCI+PC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgIDwva2VuZG8tZ3JpZD5cbiAqICAgICBgXG4gKiB9KVxuICpcbiAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKiAgIHB1YmxpYyBkYXRhOiBhbnlbXSA9IFt7IEZpZWxkMTogJ0ZvbycsIEZpZWxkMjogJ0JhcicgfV07XG4gKiB9XG4gKlxuICogYGBgXG4gKi9cbmxldCBDb2x1bW5NZW51RmlsdGVyQ29tcG9uZW50ID0gY2xhc3MgQ29sdW1uTWVudUZpbHRlckNvbXBvbmVudCBleHRlbmRzIENvbHVtbk1lbnVJdGVtQmFzZSB7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uLCBob3N0RWxlbWVudCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmxvY2FsaXphdGlvbiA9IGxvY2FsaXphdGlvbjtcbiAgICAgICAgdGhpcy5ob3N0RWxlbWVudCA9IGhvc3RFbGVtZW50O1xuICAgICAgICAvKipcbiAgICAgICAgICogRmlyZXMgd2hlbiB0aGUgY29udGVudCBpcyBleHBhbmRlZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZXhwYW5kID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICAvKipcbiAgICAgICAgICogRmlyZXMgd2hlbiB0aGUgY29udGVudCBpcyBjb2xsYXBzZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNvbGxhcHNlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICAvKipcbiAgICAgICAgICogU3BlY2lmaWVzIGlmIHRoZSBjb250ZW50IGlzIGV4cGFuZGVkLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5leHBhbmRlZCA9IGZhbHNlO1xuICAgICAgICAvKipcbiAgICAgICAgICogQGhpZGRlblxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5pc0xhc3QgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYWN0aW9uc0NsYXNzID0gJ2stY29sdW1ubWVudS1hY3Rpb25zJztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uQ29sbGFwc2UoKSB7XG4gICAgICAgIHRoaXMuZXhwYW5kZWQgPSBmYWxzZTtcbiAgICAgICAgaWYgKHRoaXMuaXNMYXN0KSB7XG4gICAgICAgICAgICB0aGlzLnNlcnZpY2UubWVudVRhYmJpbmdTZXJ2aWNlLmxhc3RGb2N1c2FibGUgPSB0aGlzLmhvc3RFbGVtZW50Lm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcignLmstY29sdW1ubWVudS1pdGVtJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jb2xsYXBzZS5lbWl0KCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvbkV4cGFuZCgpIHtcbiAgICAgICAgdGhpcy5leHBhbmRlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuZXhwYW5kLmVtaXQoKTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIENvbHVtbk1lbnVGaWx0ZXJDb21wb25lbnQucHJvdG90eXBlLCBcImV4cGFuZFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIENvbHVtbk1lbnVGaWx0ZXJDb21wb25lbnQucHJvdG90eXBlLCBcImNvbGxhcHNlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgQ29sdW1uTWVudUZpbHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZXhwYW5kZWRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBDb2x1bW5NZW51RmlsdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpc0xhc3RcIiwgdm9pZCAwKTtcbkNvbHVtbk1lbnVGaWx0ZXJDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWdyaWQtY29sdW1ubWVudS1maWx0ZXInLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW5tZW51LWl0ZW1cbiAgICAgICAgICAgIFt0ZXh0XT1cImxvY2FsaXphdGlvbi5nZXQoJ2ZpbHRlcicpXCJcbiAgICAgICAgICAgIGljb249XCJmaWx0ZXJcIlxuICAgICAgICAgICAgW2V4cGFuZGVkXT1cImV4cGFuZGVkXCJcbiAgICAgICAgICAgIChjb2xsYXBzZSk9XCJvbkNvbGxhcHNlKClcIlxuICAgICAgICAgICAgKGV4cGFuZCk9XCJvbkV4cGFuZCgpXCI+XG4gICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkQ29sdW1uTWVudUl0ZW1Db250ZW50VGVtcGxhdGU+XG4gICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtZmlsdGVyLW1lbnUtY29udGFpbmVyXG4gICAgICAgICAgICAgICAgICAgIFtjb2x1bW5dPVwic2VydmljZS5jb2x1bW5cIlxuICAgICAgICAgICAgICAgICAgICBbbWVudVRhYmJpbmdTZXJ2aWNlXT1cInNlcnZpY2UubWVudVRhYmJpbmdTZXJ2aWNlXCJcbiAgICAgICAgICAgICAgICAgICAgW2ZpbHRlcl09XCJzZXJ2aWNlLmZpbHRlclwiXG4gICAgICAgICAgICAgICAgICAgIFthY3Rpb25zQ2xhc3NdPVwiYWN0aW9uc0NsYXNzXCJcbiAgICAgICAgICAgICAgICAgICAgW2lzTGFzdF09XCJpc0xhc3RcIlxuICAgICAgICAgICAgICAgICAgICBbaXNFeHBhbmRlZF09XCJleHBhbmRlZFwiXG4gICAgICAgICAgICAgICAgICAgIChrZXlkb3duLnNoaWZ0LnRhYik9XCIkZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKClcIlxuICAgICAgICAgICAgICAgICAgICAoY2xvc2UpPVwiY2xvc2UoKVwiPlxuICAgICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1maWx0ZXItbWVudS1jb250YWluZXI+XG4gICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1ubWVudS1pdGVtPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2UsXG4gICAgICAgIEVsZW1lbnRSZWZdKVxuXSwgQ29sdW1uTWVudUZpbHRlckNvbXBvbmVudCk7XG5cbi8qIHRzbGludDpkaXNhYmxlOm1heC1saW5lLWxlbmd0aCAqL1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBjb250ZW50IHRlbXBsYXRlIG9mIHRoZVxuICogW2tlbmRvLWdyaWQtY29sdW1ubWVudS1pdGVtXSh7JSBzbHVnIGFwaV9ncmlkX2NvbHVtbm1lbnVpdGVtY29tcG9uZW50ICV9KSBjb21wb25lbnQuXG4gKiBQcm92aWRlcyBhbiBvcHRpb24gZm9yIHNwZWNpZnlpbmcgdGhlIGNvbnRlbnQgb2YgYSBjb2x1bW4gaXRlbS5cbiAqIFRvIGRlZmluZSB0aGUgY29udGVudCB0ZW1wbGF0ZSwgbmVzdCBhbiBgPG5nLXRlbXBsYXRlPmAgdGFnIHdpdGggdGhlXG4gKiBga2VuZG9HcmlkQ29sdW1uTWVudUl0ZW1Db250ZW50VGVtcGxhdGVgIGRpcmVjdGl2ZSBpbnNpZGUgYSBgPGtlbmRvLWdyaWQtY29sdW1ubWVudS1pdGVtPmAuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgICA8a2VuZG8tZ3JpZCBbZGF0YV09XCJkYXRhXCIgW2NvbHVtbk1lbnVdPVwidHJ1ZVwiPlxuICogICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZENvbHVtbk1lbnVUZW1wbGF0ZT5cbiAqICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW5tZW51LWl0ZW0gdGV4dD1cIkl0ZW0gVGV4dFwiIFtleHBhbmRlZF09XCJ0cnVlXCI+XG4gKiAgICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRDb2x1bW5NZW51SXRlbUNvbnRlbnRUZW1wbGF0ZT5cbiAqICAgICAgICAgICAgICAgICAgICAgIEl0ZW0gQ29udGVudFxuICogICAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW5tZW51LWl0ZW0+XG4gKiAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiRmllbGQxXCI+PC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIkZpZWxkMlwiPjwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICA8L2tlbmRvLWdyaWQ+XG4gKiAgICAgYFxuICogfSlcbiAqXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICBwdWJsaWMgZGF0YTogYW55W10gPSBbeyBGaWVsZDE6ICdGb28nLCBGaWVsZDI6ICdCYXInIH1dO1xuICogfVxuICpcbiAqIGBgYFxuICovXG5sZXQgQ29sdW1uTWVudUl0ZW1Db250ZW50VGVtcGxhdGVEaXJlY3RpdmUgPSBjbGFzcyBDb2x1bW5NZW51SXRlbUNvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IodGVtcGxhdGVSZWYpIHtcbiAgICAgICAgdGhpcy50ZW1wbGF0ZVJlZiA9IHRlbXBsYXRlUmVmO1xuICAgIH1cbn07XG5Db2x1bW5NZW51SXRlbUNvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZENvbHVtbk1lbnVJdGVtQ29udGVudFRlbXBsYXRlXSdcbiAgICB9KSxcbiAgICBfX3BhcmFtKDAsIE9wdGlvbmFsKCkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbVGVtcGxhdGVSZWZdKVxuXSwgQ29sdW1uTWVudUl0ZW1Db250ZW50VGVtcGxhdGVEaXJlY3RpdmUpO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYW4gaXRlbSB0aGF0IGNhbiBiZSBwbGFjZWQgaW5zaWRlIGFcbiAqIFtDb2x1bW5NZW51VGVtcGxhdGVdKHslIHNsdWcgYXBpX2dyaWRfY29sdW1ubWVudXRlbXBsYXRlZGlyZWN0aXZlICV9KSBkaXJlY3RpdmUuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgICA8a2VuZG8tZ3JpZCBbZGF0YV09XCJkYXRhXCIgW2NvbHVtbk1lbnVdPVwidHJ1ZVwiIFtyZXNpemFibGVdPVwidHJ1ZVwiICNncmlkPlxuICogICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZENvbHVtbk1lbnVUZW1wbGF0ZSBsZXQtc2VydmljZT1cInNlcnZpY2VcIiBsZXQtY29sdW1uPVwiY29sdW1uXCI+XG4gKiAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1ubWVudS1pdGVtIGljb249XCJhcnJvd3MtcmVzaXppbmdcIiB0ZXh0PVwiRml0IGNvbHVtblwiXG4gKiAgICAgICAgICAgICAgICAgIChpdGVtQ2xpY2spPVwiZ3JpZC5hdXRvRml0Q29sdW1uKGNvbHVtbik7IHNlcnZpY2UuY2xvc2UoKVwiPlxuICogICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW5tZW51LWl0ZW0+XG4gKiAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiRmllbGQxXCI+PC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIkZpZWxkMlwiPjwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICA8L2tlbmRvLWdyaWQ+XG4gKiAgICAgYFxuICogfSlcbiAqXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICBwdWJsaWMgZGF0YTogYW55W10gPSBbeyBGaWVsZDE6ICdGb28nLCBGaWVsZDI6ICdCYXInIH1dO1xuICogfVxuICpcbiAqIGBgYFxuICovXG5sZXQgQ29sdW1uTWVudUl0ZW1Db21wb25lbnQgPSBjbGFzcyBDb2x1bW5NZW51SXRlbUNvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50cyBhbiBpdGVtIHRoYXQgY2FuIGJlIHBsYWNlZCBpbnNpZGUgYVxuICAgICAqIFtDb2x1bW5NZW51VGVtcGxhdGVdKHslIHNsdWcgYXBpX2dyaWRfY29sdW1ubWVudXRlbXBsYXRlZGlyZWN0aXZlICV9KSBkaXJlY3RpdmUuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzLXByZXZpZXdcbiAgICAgKlxuICAgICAqIF9AQ29tcG9uZW50KHtcbiAgICAgKiAgICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICAgICAqICAgICB0ZW1wbGF0ZTogYFxuICAgICAqICAgICAgIDxrZW5kby1ncmlkIFtkYXRhXT1cImRhdGFcIiBbY29sdW1uTWVudV09XCJ0cnVlXCIgW3Jlc2l6YWJsZV09XCJ0cnVlXCIgI2dyaWQ+XG4gICAgICogICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZENvbHVtbk1lbnVUZW1wbGF0ZSBsZXQtc2VydmljZT1cInNlcnZpY2VcIiBsZXQtY29sdW1uPVwiY29sdW1uXCI+XG4gICAgICogICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbm1lbnUtaXRlbSBpY29uPVwiYXJyb3dzLXJlc2l6aW5nXCIgdGV4dD1cIkZpdCBjb2x1bW5cIlxuICAgICAqICAgICAgICAgICAgICAgICAgKGl0ZW1DbGljayk9XCJncmlkLmF1dG9GaXRDb2x1bW4oY29sdW1uKTsgc2VydmljZS5jbG9zZSgpXCI+XG4gICAgICogICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW5tZW51LWl0ZW0+XG4gICAgICogICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgKiAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJGaWVsZDFcIj48L2tlbmRvLWdyaWQtY29sdW1uPlxuICAgICAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIkZpZWxkMlwiPjwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gICAgICogICAgICAgPC9rZW5kby1ncmlkPlxuICAgICAqICAgICBgXG4gICAgICogfSlcbiAgICAgKlxuICAgICAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gICAgICogICBwdWJsaWMgZGF0YTogYW55W10gPSBbeyBGaWVsZDE6ICdGb28nLCBGaWVsZDI6ICdCYXInIH1dO1xuICAgICAqIH1cbiAgICAgKlxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAvKipcbiAgICAgICAgICogRmlyZXMgd2hlbiB0aGUgaXRlbSBpcyBjbGlja2VkLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5pdGVtQ2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSBjb250ZW50IGlzIGV4cGFuZGVkLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5leHBhbmQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaXJlcyB3aGVuIHRoZSBjb250ZW50IGlzIGNvbGxhcHNlZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuY29sbGFwc2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuY29udGVudFN0YXRlID0gJ2NvbGxhcHNlZCc7XG4gICAgfVxuICAgIGdldCBpY29uQ2xhc3MoKSB7XG4gICAgICAgIHJldHVybiBgay1pLSR7dGhpcy5pY29ufWA7XG4gICAgfVxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXMpIHtcbiAgICAgICAgaWYgKGNoYW5nZXMuZXhwYW5kZWQpIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlQ29udGVudFN0YXRlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uQ2xpY2soZSkge1xuICAgICAgICB0aGlzLml0ZW1DbGljay5lbWl0KGUpO1xuICAgICAgICBpZiAodGhpcy5jb250ZW50VGVtcGxhdGUpIHtcbiAgICAgICAgICAgIHRoaXMuZXhwYW5kZWQgPSAhdGhpcy5leHBhbmRlZDtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlQ29udGVudFN0YXRlKCk7XG4gICAgICAgICAgICBpZiAodGhpcy5leHBhbmRlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZXhwYW5kLmVtaXQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuY29sbGFwc2UuZW1pdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHVwZGF0ZUNvbnRlbnRTdGF0ZSgpIHtcbiAgICAgICAgdGhpcy5jb250ZW50U3RhdGUgPSB0aGlzLmV4cGFuZGVkID8gJ2V4cGFuZGVkJyA6ICdjb2xsYXBzZWQnO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBPdXRwdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRXZlbnRFbWl0dGVyKVxuXSwgQ29sdW1uTWVudUl0ZW1Db21wb25lbnQucHJvdG90eXBlLCBcIml0ZW1DbGlja1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIENvbHVtbk1lbnVJdGVtQ29tcG9uZW50LnByb3RvdHlwZSwgXCJleHBhbmRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBDb2x1bW5NZW51SXRlbUNvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sbGFwc2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIENvbHVtbk1lbnVJdGVtQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpY29uXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG5dLCBDb2x1bW5NZW51SXRlbUNvbXBvbmVudC5wcm90b3R5cGUsIFwidGV4dFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIENvbHVtbk1lbnVJdGVtQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzZWxlY3RlZFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIENvbHVtbk1lbnVJdGVtQ29tcG9uZW50LnByb3RvdHlwZSwgXCJkaXNhYmxlZFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIENvbHVtbk1lbnVJdGVtQ29tcG9uZW50LnByb3RvdHlwZSwgXCJleHBhbmRlZFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgQ29udGVudENoaWxkKENvbHVtbk1lbnVJdGVtQ29udGVudFRlbXBsYXRlRGlyZWN0aXZlLCB7IHN0YXRpYzogZmFsc2UgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIENvbHVtbk1lbnVJdGVtQ29udGVudFRlbXBsYXRlRGlyZWN0aXZlKVxuXSwgQ29sdW1uTWVudUl0ZW1Db21wb25lbnQucHJvdG90eXBlLCBcImNvbnRlbnRUZW1wbGF0ZVwiLCB2b2lkIDApO1xuQ29sdW1uTWVudUl0ZW1Db21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBhbmltYXRpb25zOiBbXG4gICAgICAgICAgICB0cmlnZ2VyKCdzdGF0ZScsIFtcbiAgICAgICAgICAgICAgICBzdGF0ZSgnY29sbGFwc2VkJywgc3R5bGUoeyBkaXNwbGF5OiAnbm9uZScgfSkpLFxuICAgICAgICAgICAgICAgIHN0YXRlKCdleHBhbmRlZCcsIHN0eWxlKHsgZGlzcGxheTogJ2Jsb2NrJyB9KSksXG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbignY29sbGFwc2VkID0+IGV4cGFuZGVkJywgW1xuICAgICAgICAgICAgICAgICAgICBzdHlsZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICcwcHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJ1xuICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgYW5pbWF0ZSgnMTAwbXMgZWFzZS1pbicsIHN0eWxlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogJyonXG4gICAgICAgICAgICAgICAgICAgIH0pKVxuICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb24oJ2V4cGFuZGVkID0+IGNvbGxhcHNlZCcsIFtcbiAgICAgICAgICAgICAgICAgICAgc3R5bGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAnKidcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGUoJzEwMG1zIGVhc2UtaW4nLCBzdHlsZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICcwcHgnXG4gICAgICAgICAgICAgICAgICAgIH0pKVxuICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICBdKVxuICAgICAgICBdLFxuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWdyaWQtY29sdW1ubWVudS1pdGVtJyxcbiAgICAgICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3M9XCJrLWNvbHVtbm1lbnUtaXRlbVwiXG4gICAgICAgICAgICAoY2xpY2spPVwib25DbGljaygkZXZlbnQpXCJcbiAgICAgICAgICAgIChrZXlkb3duLmVudGVyKT1cIm9uQ2xpY2soJGV2ZW50KVwiXG4gICAgICAgICAgICBbY2xhc3Muay1zdGF0ZS1zZWxlY3RlZF09XCJzZWxlY3RlZFwiXG4gICAgICAgICAgICBbY2xhc3Muay1zdGF0ZS1kaXNhYmxlZF09XCJkaXNhYmxlZFwiXG4gICAgICAgICAgICByb2xlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgIFthdHRyLmFyaWEtZXhwYW5kZWRdPVwiZXhwYW5kZWRcIj5cbiAgICAgICAgICAgPHNwYW4gKm5nSWY9XCJpY29uXCIgY2xhc3M9XCJrLWljb25cIiBbbmdDbGFzc109XCJpY29uQ2xhc3NcIj5cbiAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICB7eyB0ZXh0IH19XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2ICpuZ0lmPVwiY29udGVudFRlbXBsYXRlXCIgW0BzdGF0ZV09XCJjb250ZW50U3RhdGVcIiBzdHlsZT1cIm92ZXJmbG93OmhpZGRlbjtcIiBjbGFzcz1cImstY29sdW1ubWVudS1pdGVtLWNvbnRlbnRcIj5cbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgW25nVGVtcGxhdGVPdXRsZXRdPVwiY29udGVudFRlbXBsYXRlLnRlbXBsYXRlUmVmXCI+XG4gICAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPGRpdj5cbiAgICBgXG4gICAgfSlcbl0sIENvbHVtbk1lbnVJdGVtQ29tcG9uZW50KTtcblxuLyogdHNsaW50OmRpc2FibGU6bWF4LWxpbmUtbGVuZ3RoICovXG4vKipcbiAqIFJlcHJlc2VudHMgYSBjb2x1bW4tbWVudSBpdGVtIGZvciBzb3J0aW5nIEdyaWQgY29sdW1ucyB0aGF0IGNhbiBiZSBwbGFjZWQgaW5zaWRlIGFcbiAqIFtDb2x1bW5NZW51VGVtcGxhdGVdKHslIHNsdWcgYXBpX2dyaWRfY29sdW1ubWVudXRlbXBsYXRlZGlyZWN0aXZlICV9KSBkaXJlY3RpdmUuXG4gKiBBbGxvd3MgdGhlIHVzZXIgdG8gc29ydCB0aGUgY29sdW1uLlxuICpcbiAqID4gWW91IGhhdmUgdG8gc2V0IHRoZSBbQ29sdW1uTWVudVNlcnZpY2VdKHslIHNsdWcgYXBpX2dyaWRfY29sdW1ubWVudXNlcnZpY2UgJX0pIHRoYXQgaXMgcGFzc2VkIGJ5XG4gKiA+IHRoZSB0ZW1wbGF0ZSB0byB0aGUgc2VydmljZSBpbnB1dCBvZiB0aGUgYGtlbmRvLWdyaWQtY29sdW1ubWVudS1zb3J0YCBjb21wb25lbnQuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgICA8a2VuZG8tZ3JpZCBba2VuZG9HcmlkQmluZGluZ109XCJkYXRhXCIgW3NvcnRhYmxlXT1cInRydWVcIiBbY29sdW1uTWVudV09XCJ0cnVlXCI+XG4gKiAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkQ29sdW1uTWVudVRlbXBsYXRlIGxldC1zZXJ2aWNlPVwic2VydmljZVwiPlxuICogICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbm1lbnUtc29ydCBbc2VydmljZV09XCJzZXJ2aWNlXCI+XG4gKiAgICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtc29ydD5cbiAqICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJGaWVsZDFcIiBbd2lkdGhdPVwiMTAwXCI+PC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIkZpZWxkMlwiIFt3aWR0aF09XCIxMDBcIj48L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgPC9rZW5kby1ncmlkPlxuICogICAgIGBcbiAqIH0pXG4gKlxuICogY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAqICAgcHVibGljIGRhdGE6IGFueVtdID0gW3sgRmllbGQxOiAnRm9vJywgRmllbGQyOiAnQmFyJyB9LCB7IEZpZWxkMTogJ0ZvbzEnLCBGaWVsZDI6ICdCYXIxJyB9XTtcbiAqIH1cbiAqXG4gKiBgYGBcbiAqL1xubGV0IENvbHVtbk1lbnVTb3J0Q29tcG9uZW50ID0gY2xhc3MgQ29sdW1uTWVudVNvcnRDb21wb25lbnQgZXh0ZW5kcyBDb2x1bW5NZW51SXRlbUJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbiwgc29ydFNlcnZpY2UsIHJlbmRlcmVyKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uID0gbG9jYWxpemF0aW9uO1xuICAgICAgICB0aGlzLnNvcnRTZXJ2aWNlID0gc29ydFNlcnZpY2U7XG4gICAgICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB9XG4gICAgZ2V0IHNvcnRlZEFzYygpIHtcbiAgICAgICAgY29uc3QgZGVzY3JpcHRvciA9IHRoaXMuZGVzY3JpcHRvcjtcbiAgICAgICAgcmV0dXJuIGRlc2NyaXB0b3IgJiYgKCFkZXNjcmlwdG9yLmRpciB8fCBkZXNjcmlwdG9yLmRpciA9PT0gJ2FzYycpO1xuICAgIH1cbiAgICBnZXQgc29ydGVkRGVzYygpIHtcbiAgICAgICAgY29uc3QgZGVzY3JpcHRvciA9IHRoaXMuZGVzY3JpcHRvcjtcbiAgICAgICAgcmV0dXJuIGRlc2NyaXB0b3IgJiYgZGVzY3JpcHRvci5kaXIgPT09ICdkZXNjJztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHRvZ2dsZVNvcnQoZGlyKSB7XG4gICAgICAgIGNvbnN0IGZpZWxkID0gdGhpcy5zZXJ2aWNlLmNvbHVtbi5maWVsZDtcbiAgICAgICAgY29uc3QgeyBtb2RlLCBhbGxvd1Vuc29ydCB9ID0gbm9ybWFsaXplJDEodGhpcy5zZXJ2aWNlLnNvcnRhYmxlKTtcbiAgICAgICAgY29uc3QgZGVzY3JpcHRvciA9IHRoaXMuZGVzY3JpcHRvcjtcbiAgICAgICAgY29uc3Qgc29ydCA9IG1vZGUgPT09ICdtdWx0aXBsZScgPyB0aGlzLnNlcnZpY2Uuc29ydC5maWx0ZXIocyA9PiBzLmZpZWxkICE9PSBmaWVsZCkgOiBbXTtcbiAgICAgICAgaWYgKGRlc2NyaXB0b3IgJiYgZGVzY3JpcHRvci5kaXIgPT09IGRpcikge1xuICAgICAgICAgICAgaWYgKCFhbGxvd1Vuc29ydCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNvcnQucHVzaCh7IGZpZWxkLCBkaXIgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zb3J0U2VydmljZS5zb3J0KHNvcnQpO1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICAgIGdldCBkZXNjcmlwdG9yKCkge1xuICAgICAgICByZXR1cm4gW10uY29uY2F0KHRoaXMuc2VydmljZS5zb3J0IHx8IFtdKS5maW5kKHMgPT4gcy5maWVsZCA9PT0gdGhpcy5zZXJ2aWNlLmNvbHVtbi5maWVsZCk7XG4gICAgfVxufTtcbkNvbHVtbk1lbnVTb3J0Q29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLWNvbHVtbm1lbnUtc29ydCcsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbm1lbnUtaXRlbVxuICAgICAgICAgICAgW3RleHRdPVwibG9jYWxpemF0aW9uLmdldCgnc29ydEFzY2VuZGluZycpXCJcbiAgICAgICAgICAgIGljb249XCJzb3J0LWFzYy1zbVwiXG4gICAgICAgICAgICAoaXRlbUNsaWNrKT1cInRvZ2dsZVNvcnQoJ2FzYycpXCJcbiAgICAgICAgICAgIFtzZWxlY3RlZF09XCJzb3J0ZWRBc2NcIj5cbiAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtaXRlbT5cbiAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1ubWVudS1pdGVtXG4gICAgICAgICAgICBbdGV4dF09XCJsb2NhbGl6YXRpb24uZ2V0KCdzb3J0RGVzY2VuZGluZycpXCJcbiAgICAgICAgICAgIGljb249XCJzb3J0LWRlc2Mtc21cIlxuICAgICAgICAgICAgKGl0ZW1DbGljayk9XCJ0b2dnbGVTb3J0KCdkZXNjJylcIlxuICAgICAgICAgICAgW3NlbGVjdGVkXT1cInNvcnRlZERlc2NcIj5cbiAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtaXRlbT5cbiAgICBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBTb3J0U2VydmljZSxcbiAgICAgICAgUmVuZGVyZXIyXSlcbl0sIENvbHVtbk1lbnVTb3J0Q29tcG9uZW50KTtcblxuLyogdHNsaW50OmRpc2FibGU6bWF4LWxpbmUtbGVuZ3RoICovXG4vKipcbiAqIFJlcHJlc2VudHMgYSBjb2x1bW4tbWVudSBpdGVtIHRoYXQgY2FuIGJlIHBsYWNlZCBpbnNpZGUgYVxuICogW0NvbHVtbk1lbnVUZW1wbGF0ZV0oeyUgc2x1ZyBhcGlfZ3JpZF9jb2x1bW5tZW51dGVtcGxhdGVkaXJlY3RpdmUgJX0pIGRpcmVjdGl2ZS5cbiAqIEFsbG93cyB0aGUgdXNlciB0byBsb2NrIG9yIHVubG9jayB0aGUgY29sdW1ucy5cbiAqXG4gKiA+IFlvdSBoYXZlIHRvIHNldCB0aGUgW0NvbHVtbk1lbnVTZXJ2aWNlXSh7JSBzbHVnIGFwaV9ncmlkX2NvbHVtbm1lbnVzZXJ2aWNlICV9KSB0aGF0IGlzIHBhc3NlZCBieVxuICogPiB0aGUgdGVtcGxhdGUgdG8gdGhlIHNlcnZpY2UgaW5wdXQgb2YgdGhlIGBrZW5kby1ncmlkLWNvbHVtbm1lbnUtbG9ja2AgY29tcG9uZW50LlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0cy1wcmV2aWV3XG4gKlxuICogX0BDb21wb25lbnQoe1xuICogICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgICB0ZW1wbGF0ZTogYFxuICogICAgICAgPGtlbmRvLWdyaWQgW2RhdGFdPVwiZGF0YVwiIFtjb2x1bW5NZW51XT1cInRydWVcIj5cbiAqICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRDb2x1bW5NZW51VGVtcGxhdGUgbGV0LXNlcnZpY2U9XCJzZXJ2aWNlXCI+XG4gKiAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1ubWVudS1sb2NrIFtzZXJ2aWNlXT1cInNlcnZpY2VcIj5cbiAqICAgICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1ubWVudS1sb2NrPlxuICogICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIkZpZWxkMVwiIFt3aWR0aF09XCIxMDBcIj48L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiRmllbGQyXCIgW3dpZHRoXT1cIjEwMFwiPjwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICA8L2tlbmRvLWdyaWQ+XG4gKiAgICAgYFxuICogfSlcbiAqXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICBwdWJsaWMgZGF0YTogYW55W10gPSBbeyBGaWVsZDE6ICdGb28nLCBGaWVsZDI6ICdCYXInIH1dO1xuICogfVxuICpcbiAqIGBgYFxuICovXG5sZXQgQ29sdW1uTWVudUxvY2tDb21wb25lbnQgPSBjbGFzcyBDb2x1bW5NZW51TG9ja0NvbXBvbmVudCBleHRlbmRzIENvbHVtbk1lbnVJdGVtQmFzZSB7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uLCBjb2x1bW5JbmZvU2VydmljZSwgY2hhbmdlRGV0ZWN0b3IpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb24gPSBsb2NhbGl6YXRpb247XG4gICAgICAgIHRoaXMuY29sdW1uSW5mb1NlcnZpY2UgPSBjb2x1bW5JbmZvU2VydmljZTtcbiAgICAgICAgdGhpcy5jaGFuZ2VEZXRlY3RvciA9IGNoYW5nZURldGVjdG9yO1xuICAgIH1cbiAgICBnZXQgdGV4dCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxpemF0aW9uLmdldCh0aGlzLmxvY2tlZCA/ICd1bmxvY2snIDogJ2xvY2snKTtcbiAgICB9XG4gICAgZ2V0IGljb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvY2tlZCA/ICd1bmxvY2snIDogJ2xvY2snO1xuICAgIH1cbiAgICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5sb2NrZWQgJiYgdGhpcy5jb2x1bW5JbmZvU2VydmljZS51bmxvY2tlZFJvb3RDb3VudCA8IDI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICB0b2dnbGVDb2x1bW4oKSB7XG4gICAgICAgIHRoaXMudG9nZ2xlSGllcmFyY2h5KCF0aGlzLmxvY2tlZCk7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgdGhpcy5jaGFuZ2VEZXRlY3Rvci5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG4gICAgdG9nZ2xlSGllcmFyY2h5KGxvY2tlZCkge1xuICAgICAgICBsZXQgcm9vdCA9IHRoaXMuc2VydmljZS5jb2x1bW47XG4gICAgICAgIHdoaWxlIChyb290LnBhcmVudCkge1xuICAgICAgICAgICAgcm9vdCA9IHJvb3QucGFyZW50O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvbHVtbnMgPSBbcm9vdF07XG4gICAgICAgIGNvbnN0IGFsbENoYW5nZWQgPSBbXTtcbiAgICAgICAgd2hpbGUgKGNvbHVtbnMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjb25zdCBjb2x1bW4gPSBjb2x1bW5zLnNoaWZ0KCk7XG4gICAgICAgICAgICBjb2x1bW4ubG9ja2VkID0gbG9ja2VkO1xuICAgICAgICAgICAgYWxsQ2hhbmdlZC5wdXNoKGNvbHVtbik7XG4gICAgICAgICAgICBpZiAoY29sdW1uLmhhc0NoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgY29sdW1ucy5wdXNoKC4uLmNvbHVtbi5jaGlsZHJlbkFycmF5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbHVtbkluZm9TZXJ2aWNlLmNoYW5nZUxvY2tlZChhbGxDaGFuZ2VkKTtcbiAgICB9XG4gICAgZ2V0IGxvY2tlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VydmljZS5jb2x1bW4ubG9ja2VkO1xuICAgIH1cbn07XG5Db2x1bW5NZW51TG9ja0NvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZ3JpZC1jb2x1bW5tZW51LWxvY2snLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbm1lbnUtaXRlbVxuICAgICAgICAgICAgW3RleHRdPVwidGV4dFwiXG4gICAgICAgICAgICBbaWNvbl09XCJpY29uXCJcbiAgICAgICAgICAgIChpdGVtQ2xpY2spPVwidG9nZ2xlQ29sdW1uKClcIlxuICAgICAgICAgICAgW2Rpc2FibGVkXT1cImRpc2FibGVkXCI+XG4gICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtaXRlbT5cbiAgICBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBDb2x1bW5JbmZvU2VydmljZSxcbiAgICAgICAgQ2hhbmdlRGV0ZWN0b3JSZWZdKVxuXSwgQ29sdW1uTWVudUxvY2tDb21wb25lbnQpO1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgY29tcG9uZW50IGZvciBlZGl0aW5nIGNvbHVtbiBmaWx0ZXJzIGluIHRoZSBHcmlkIHRoYXQgY2FuIGJlIHBsYWNlZFxuICogaW5zaWRlIGEgW0NvbHVtbk1lbnVUZW1wbGF0ZV0oeyUgc2x1ZyBhcGlfZ3JpZF9jb2x1bW5tZW51dGVtcGxhdGVkaXJlY3RpdmUgJX0pIGRpcmVjdGl2ZS5cbiAqXG4gKiA+IFlvdSBoYXZlIHRvIHNldCB0aGUgW0NvbHVtbk1lbnVTZXJ2aWNlXSh7JSBzbHVnIGFwaV9ncmlkX2NvbHVtbm1lbnVzZXJ2aWNlICV9KSB0aGF0IGlzIHBhc3NlZCBieVxuICogPiB0aGUgdGVtcGxhdGUgdG8gdGhlIHNlcnZpY2UgaW5wdXQgb2YgdGhlIGBrZW5kby1ncmlkLWNvbHVtbm1lbnUtZmlsdGVyYCBjb21wb25lbnQuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgICA8a2VuZG8tZ3JpZCBba2VuZG9HcmlkQmluZGluZ109XCJkYXRhXCIgW2NvbHVtbk1lbnVdPVwidHJ1ZVwiPlxuICogICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZENvbHVtbk1lbnVUZW1wbGF0ZSBsZXQtc2VydmljZT1cInNlcnZpY2VcIj5cbiAqICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW5tZW51LWZpbHRlciBbc2VydmljZV09XCJzZXJ2aWNlXCI+XG4gKiAgICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtZmlsdGVyPlxuICogICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIkZpZWxkMVwiPjwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJGaWVsZDJcIj48L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgPC9rZW5kby1ncmlkPlxuICogICAgIGBcbiAqIH0pXG4gKlxuICogY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAqICAgcHVibGljIGRhdGE6IGFueVtdID0gW3sgRmllbGQxOiAnRm9vJywgRmllbGQyOiAnQmFyJyB9XTtcbiAqIH1cbiAqXG4gKiBgYGBcbiAqL1xubGV0IENvbHVtbk1lbnVQb3NpdGlvbkNvbXBvbmVudCA9IGNsYXNzIENvbHVtbk1lbnVQb3NpdGlvbkNvbXBvbmVudCBleHRlbmRzIENvbHVtbk1lbnVJdGVtQmFzZSB7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uLCBob3N0RWxlbWVudCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmxvY2FsaXphdGlvbiA9IGxvY2FsaXphdGlvbjtcbiAgICAgICAgdGhpcy5ob3N0RWxlbWVudCA9IGhvc3RFbGVtZW50O1xuICAgICAgICAvKipcbiAgICAgICAgICogRmlyZXMgd2hlbiB0aGUgY29udGVudCBpcyBleHBhbmRlZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZXhwYW5kID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICAvKipcbiAgICAgICAgICogRmlyZXMgd2hlbiB0aGUgY29udGVudCBpcyBjb2xsYXBzZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNvbGxhcHNlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICAvKipcbiAgICAgICAgICogU3BlY2lmaWVzIGlmIHRoZSBjb250ZW50IGlzIGV4cGFuZGVkLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5leHBhbmRlZCA9IGZhbHNlO1xuICAgICAgICAvKipcbiAgICAgICAgICogQGhpZGRlblxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5hY3Rpb25zQ2xhc3MgPSAnay1jb2x1bW5tZW51LWFjdGlvbnMnO1xuICAgICAgICB0aGlzLl9pc0xhc3QgPSBmYWxzZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHNldCBpc0xhc3QodmFsdWUpIHtcbiAgICAgICAgdGhpcy5zZXJ2aWNlLm1lbnVUYWJiaW5nU2VydmljZS5sYXN0Rm9jdXNhYmxlID0gdGhpcy5nZXRMYXN0Rm9jdXNhYmxlSXRlbSgpO1xuICAgICAgICB0aGlzLl9pc0xhc3QgPSB2YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBpc0xhc3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pc0xhc3Q7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvblRhYihlLCBpc0xhc3RJdGVtKSB7XG4gICAgICAgIGlmICh0aGlzLmlzTGFzdCAmJiBpc0xhc3RJdGVtKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgaWYgKHRoaXMuc2VydmljZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2VydmljZS5tZW51VGFiYmluZ1NlcnZpY2UuZmlyc3RGb2N1c2FibGUuZm9jdXMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgb25Db2xsYXBzZSgpIHtcbiAgICAgICAgdGhpcy5leHBhbmRlZCA9IGZhbHNlO1xuICAgICAgICBpZiAodGhpcy5pc0xhc3QpIHtcbiAgICAgICAgICAgIHRoaXMuc2VydmljZS5tZW51VGFiYmluZ1NlcnZpY2UubGFzdEZvY3VzYWJsZSA9IHRoaXMuZ2V0TGFzdEZvY3VzYWJsZUl0ZW0oKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbGxhcHNlLmVtaXQoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uRXhwYW5kKCkge1xuICAgICAgICB0aGlzLmV4cGFuZGVkID0gdHJ1ZTtcbiAgICAgICAgaWYgKHRoaXMuaXNMYXN0KSB7XG4gICAgICAgICAgICB0aGlzLnNlcnZpY2UubWVudVRhYmJpbmdTZXJ2aWNlLmxhc3RGb2N1c2FibGUgPSB0aGlzLmdldExhc3RGb2N1c2FibGVJdGVtKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5leHBhbmQuZW1pdCgpO1xuICAgIH1cbiAgICBnZXRMYXN0Rm9jdXNhYmxlSXRlbSgpIHtcbiAgICAgICAgY29uc3QgbWVudUl0ZW1zID0gdGhpcy5ob3N0RWxlbWVudC5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5rLWNvbHVtbm1lbnUtaXRlbScpO1xuICAgICAgICBjb25zdCBsYXN0Rm9jdXNhYmxlSW5kZXggPSB0aGlzLmV4cGFuZGVkID8gbWVudUl0ZW1zLmxlbmd0aCAtIDEgOiAwO1xuICAgICAgICByZXR1cm4gbWVudUl0ZW1zW2xhc3RGb2N1c2FibGVJbmRleF07XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBFdmVudEVtaXR0ZXIpXG5dLCBDb2x1bW5NZW51UG9zaXRpb25Db21wb25lbnQucHJvdG90eXBlLCBcImV4cGFuZFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEV2ZW50RW1pdHRlcilcbl0sIENvbHVtbk1lbnVQb3NpdGlvbkNvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sbGFwc2VcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBDb2x1bW5NZW51UG9zaXRpb25Db21wb25lbnQucHJvdG90eXBlLCBcImV4cGFuZGVkXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgQ29sdW1uTWVudVBvc2l0aW9uQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzaG93TG9ja1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIENvbHVtbk1lbnVQb3NpdGlvbkNvbXBvbmVudC5wcm90b3R5cGUsIFwic2hvd1N0aWNrXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0Jvb2xlYW5dKVxuXSwgQ29sdW1uTWVudVBvc2l0aW9uQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpc0xhc3RcIiwgbnVsbCk7XG5Db2x1bW5NZW51UG9zaXRpb25Db21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWdyaWQtY29sdW1ubWVudS1wb3NpdGlvbicsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbm1lbnUtaXRlbVxuICAgICAgICAgICAgW3RleHRdPVwibG9jYWxpemF0aW9uLmdldCgnc2V0Q29sdW1uUG9zaXRpb24nKVwiXG4gICAgICAgICAgICBpY29uPVwic2V0LWNvbHVtbi1wb3NpdGlvblwiXG4gICAgICAgICAgICBbZXhwYW5kZWRdPVwiZXhwYW5kZWRcIlxuICAgICAgICAgICAgKGtleWRvd24udGFiKT1cIm9uVGFiKCRldmVudCwgIWV4cGFuZGVkKVwiXG4gICAgICAgICAgICAoY29sbGFwc2UpPVwib25Db2xsYXBzZSgpXCJcbiAgICAgICAgICAgIChleHBhbmQpPVwib25FeHBhbmQoKVwiPlxuICAgICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZENvbHVtbk1lbnVJdGVtQ29udGVudFRlbXBsYXRlPlxuICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbm1lbnUtbG9ja1xuICAgICAgICAgICAgICAgICAgICAqbmdJZj1cInNob3dMb2NrXCJcbiAgICAgICAgICAgICAgICAgICAgKGtleWRvd24udGFiKT1cIm9uVGFiKCRldmVudCwgIXNob3dTdGljaylcIlxuICAgICAgICAgICAgICAgICAgICBbc2VydmljZV09XCJzZXJ2aWNlXCI+XG4gICAgICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtbG9jaz5cbiAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW5tZW51LXN0aWNrXG4gICAgICAgICAgICAgICAgICAgICpuZ0lmPVwic2hvd1N0aWNrXCJcbiAgICAgICAgICAgICAgICAgICAgKGtleWRvd24udGFiKT1cIm9uVGFiKCRldmVudCwgdHJ1ZSlcIlxuICAgICAgICAgICAgICAgICAgICBbc2VydmljZV09XCJzZXJ2aWNlXCI+XG4gICAgICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtc3RpY2s+XG4gICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1ubWVudS1pdGVtPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2UsXG4gICAgICAgIEVsZW1lbnRSZWZdKVxuXSwgQ29sdW1uTWVudVBvc2l0aW9uQ29tcG9uZW50KTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBDb2x1bW5NZW51SXRlbURpcmVjdGl2ZSA9IGNsYXNzIENvbHVtbk1lbnVJdGVtRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3Rvcihob3N0RWxlbWVudCwgcmVuZGVyZXIsIG5nWm9uZSkge1xuICAgICAgICB0aGlzLmhvc3RFbGVtZW50ID0gaG9zdEVsZW1lbnQ7XG4gICAgICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICAgICAgdGhpcy5uZ1pvbmUgPSBuZ1pvbmU7XG4gICAgICAgIHRoaXMuX2lzRmlyc3QgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5faXNMYXN0ID0gZmFsc2U7XG4gICAgICAgIHRoaXMuc3VicyA9IG5ldyBTdWJzY3JpcHRpb24oKTtcbiAgICAgICAgdGhpcy5vblRhYiA9IChlKSA9PiB7XG4gICAgICAgICAgICBpZiAoZS5rZXlDb2RlICE9PSBLZXlzLlRhYikge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmlzRmlyc3QgJiYgZS5zaGlmdEtleSAmJiBlLnRhcmdldCA9PT0gdGhpcy5jb2x1bW5NZW51SXRlbXNbMF0pIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5tZW51SXRlbUNvbXBvbmVudC5zZXJ2aWNlLm1lbnVUYWJiaW5nU2VydmljZS5sYXN0Rm9jdXNhYmxlLmZvY3VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5pc0xhc3QgJiYgIWUuc2hpZnRLZXkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBsYXN0Q29sdW1uTWVudUl0ZW0gPSB0aGlzLmdldExhc3RDb2x1bW5NZW51SXRlbSgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGlzRXhwYW5kZWQgPSB0aGlzLm1lbnVJdGVtQ29tcG9uZW50LmV4cGFuZGVkO1xuICAgICAgICAgICAgICAgIGlmIChsYXN0Q29sdW1uTWVudUl0ZW0gPT09IGUudGFyZ2V0ICYmICFpc0V4cGFuZGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZW51SXRlbUNvbXBvbmVudC5zZXJ2aWNlLm1lbnVUYWJiaW5nU2VydmljZS5maXJzdEZvY3VzYWJsZS5mb2N1cygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgc2V0IGlzRmlyc3QodmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICBjb25zdCBmb2N1c2FibGVFbGVtZW50ID0gdGhpcy5jb2x1bW5NZW51SXRlbXNbMF07XG4gICAgICAgICAgICB0aGlzLm1lbnVJdGVtQ29tcG9uZW50LnNlcnZpY2UubWVudVRhYmJpbmdTZXJ2aWNlLmZpcnN0Rm9jdXNhYmxlID0gZm9jdXNhYmxlRWxlbWVudDtcbiAgICAgICAgICAgIHRoaXMubmdab25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaXJzdEl0ZW1LZXlkb3duU3ViID0gdGhpcy5yZW5kZXJlci5saXN0ZW4oZm9jdXNhYmxlRWxlbWVudCwgJ2tleWRvd24nLCB0aGlzLm9uVGFiKTtcbiAgICAgICAgICAgICAgICB0aGlzLnN1YnMuYWRkKGZpcnN0SXRlbUtleWRvd25TdWIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5faXNGaXJzdCA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXQgaXNGaXJzdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzRmlyc3Q7XG4gICAgfVxuICAgIHNldCBpc0xhc3QodmFsdWUpIHtcbiAgICAgICAgaWYgKCF0aGlzLmNvbHVtbk1lbnVJdGVtcykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgY29uc3QgbGFzdEZvY3VzYWJsZUVsZW1lbnQgPSB0aGlzLmdldExhc3RDb2x1bW5NZW51SXRlbSgpO1xuICAgICAgICAgICAgdGhpcy5tZW51SXRlbUNvbXBvbmVudC5zZXJ2aWNlLm1lbnVUYWJiaW5nU2VydmljZS5sYXN0Rm9jdXNhYmxlID0gbGFzdEZvY3VzYWJsZUVsZW1lbnQ7XG4gICAgICAgICAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgbGFzdEl0ZW1LZXlkb3duU3ViID0gdGhpcy5yZW5kZXJlci5saXN0ZW4obGFzdEZvY3VzYWJsZUVsZW1lbnQsICdrZXlkb3duJywgdGhpcy5vblRhYik7XG4gICAgICAgICAgICAgICAgdGhpcy5zdWJzLmFkZChsYXN0SXRlbUtleWRvd25TdWIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAodGhpcy5pc0V4cGFuZGFibGVJdGVtKCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1lbnVJdGVtQ29tcG9uZW50LmlzTGFzdCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5faXNMYXN0ID0gdmFsdWU7XG4gICAgfVxuICAgIGdldCBpc0xhc3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pc0xhc3Q7XG4gICAgfVxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAgICAgdGhpcy5jb2x1bW5NZW51SXRlbXMgPSB0aGlzLmhvc3RFbGVtZW50Lm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmstY29sdW1ubWVudS1pdGVtJyk7XG4gICAgICAgIFtdLnNsaWNlLmFwcGx5KHRoaXMuY29sdW1uTWVudUl0ZW1zKS5mb3JFYWNoKGVsID0+IHRoaXMucmVuZGVyZXIuc2V0QXR0cmlidXRlKGVsLCAndGFiaW5kZXgnLCAnMCcpKTtcbiAgICAgICAgaWYgKHRoaXMubWVudUl0ZW1Db21wb25lbnQgaW5zdGFuY2VvZiBDb2x1bW5NZW51RmlsdGVyQ29tcG9uZW50KSB7XG4gICAgICAgICAgICB0aGlzLm1lbnVJdGVtQ29tcG9uZW50LnNlcnZpY2UubWVudVRhYmJpbmdTZXJ2aWNlLmlzQ29sdW1uTWVudSA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIGlmICh0aGlzLnN1YnMpIHtcbiAgICAgICAgICAgIHRoaXMuc3Vicy51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldExhc3RDb2x1bW5NZW51SXRlbSgpIHtcbiAgICAgICAgcmV0dXJuICh0aGlzLmNvbHVtbk1lbnVJdGVtcy5sZW5ndGggPT09IDEgPyB0aGlzLmNvbHVtbk1lbnVJdGVtc1swXSA6IHRoaXMuY29sdW1uTWVudUl0ZW1zWzFdKTtcbiAgICB9XG4gICAgaXNFeHBhbmRhYmxlSXRlbSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWVudUl0ZW1Db21wb25lbnQgaW5zdGFuY2VvZiBDb2x1bW5NZW51RmlsdGVyQ29tcG9uZW50IHx8XG4gICAgICAgICAgICB0aGlzLm1lbnVJdGVtQ29tcG9uZW50IGluc3RhbmNlb2YgQ29sdW1uTWVudUNob29zZXJDb21wb25lbnQgfHxcbiAgICAgICAgICAgIHRoaXMubWVudUl0ZW1Db21wb25lbnQgaW5zdGFuY2VvZiBDb2x1bW5NZW51UG9zaXRpb25Db21wb25lbnQ7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCdrZW5kb0dyaWRDb2x1bW5NZW51SXRlbScpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBDb2x1bW5NZW51SXRlbURpcmVjdGl2ZS5wcm90b3R5cGUsIFwibWVudUl0ZW1Db21wb25lbnRcIiwgdm9pZCAwKTtcbkNvbHVtbk1lbnVJdGVtRGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdba2VuZG9HcmlkQ29sdW1uTWVudUl0ZW1dJyB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0VsZW1lbnRSZWYsXG4gICAgICAgIFJlbmRlcmVyMixcbiAgICAgICAgTmdab25lXSlcbl0sIENvbHVtbk1lbnVJdGVtRGlyZWN0aXZlKTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBDb2x1bW5NZW51Q29udGFpbmVyQ29tcG9uZW50ID0gY2xhc3MgQ29sdW1uTWVudUNvbnRhaW5lckNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3Ioc2VydmljZSwgbmdab25lKSB7XG4gICAgICAgIHRoaXMuc2VydmljZSA9IHNlcnZpY2U7XG4gICAgICAgIHRoaXMubmdab25lID0gbmdab25lO1xuICAgIH1cbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgICAgIGlmICghdGhpcy5jb2x1bW5NZW51SXRlbXMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jb2x1bW5NZW51SXRlbXMuZmlyc3QuaXNGaXJzdCA9IHRydWU7XG4gICAgICAgIHRoaXMuY29sdW1uTWVudUl0ZW1zLmxhc3QuaXNMYXN0ID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5uZ1pvbmUub25TdGFibGUucGlwZSh0YWtlKDEpKS5zdWJzY3JpYmUoKCkgPT4gdGhpcy5zZXJ2aWNlLm1lbnVUYWJiaW5nU2VydmljZS5maXJzdEZvY3VzYWJsZS5mb2N1cygpKTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgQ29udGVudENoaWxkcmVuKENvbHVtbk1lbnVJdGVtRGlyZWN0aXZlLCB7IGRlc2NlbmRhbnRzOiB0cnVlIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBRdWVyeUxpc3QpXG5dLCBDb2x1bW5NZW51Q29udGFpbmVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjb2x1bW5NZW51SXRlbXNcIiwgdm9pZCAwKTtcbkNvbHVtbk1lbnVDb250YWluZXJDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWdyaWQtY29sdW1ubWVudS1jb250YWluZXInLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgYFxuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbQ29sdW1uTWVudVNlcnZpY2UsXG4gICAgICAgIE5nWm9uZV0pXG5dLCBDb2x1bW5NZW51Q29udGFpbmVyQ29tcG9uZW50KTtcblxuLyogdHNsaW50OmRpc2FibGU6bWF4LWxpbmUtbGVuZ3RoICovXG4vKipcbiAqIFJlcHJlc2VudHMgYSBjb2x1bW4tbWVudSBpdGVtIHRoYXQgY2FuIGJlIHBsYWNlZCBpbnNpZGUgYVxuICogW0NvbHVtbk1lbnVUZW1wbGF0ZV0oeyUgc2x1ZyBhcGlfZ3JpZF9jb2x1bW5tZW51dGVtcGxhdGVkaXJlY3RpdmUgJX0pIGRpcmVjdGl2ZS5cbiAqIEFsbG93cyB0aGUgdXNlciB0byBzdGljayBvciB1bnN0aWNrIHRoZSBjb2x1bW5zLlxuICpcbiAqID4gWW91IGhhdmUgdG8gc2V0IHRoZSBbQ29sdW1uTWVudVNlcnZpY2VdKHslIHNsdWcgYXBpX2dyaWRfY29sdW1ubWVudXNlcnZpY2UgJX0pIHRoYXQgaXMgcGFzc2VkIGJ5XG4gKiA+IHRoZSB0ZW1wbGF0ZSB0byB0aGUgc2VydmljZSBpbnB1dCBvZiB0aGUgYGtlbmRvLWdyaWQtY29sdW1ubWVudS1zdGlja2AgY29tcG9uZW50LlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0cy1wcmV2aWV3XG4gKlxuICogX0BDb21wb25lbnQoe1xuICogICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgICB0ZW1wbGF0ZTogYFxuICogICAgICAgPGtlbmRvLWdyaWQgW2RhdGFdPVwiZGF0YVwiIFtjb2x1bW5NZW51XT1cInRydWVcIj5cbiAqICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRDb2x1bW5NZW51VGVtcGxhdGUgbGV0LXNlcnZpY2U9XCJzZXJ2aWNlXCI+XG4gKiAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1ubWVudS1zdGljayBbc2VydmljZV09XCJzZXJ2aWNlXCI+XG4gKiAgICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbm1lbnUtc3RpY2s+XG4gKiAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiRmllbGQxXCIgW3dpZHRoXT1cIjEwMFwiPjwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJGaWVsZDJcIiBbd2lkdGhdPVwiMTAwXCI+PC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgIDwva2VuZG8tZ3JpZD5cbiAqICAgICBgXG4gKiB9KVxuICpcbiAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKiAgIHB1YmxpYyBkYXRhOiBhbnlbXSA9IFt7IEZpZWxkMTogJ0ZvbycsIEZpZWxkMjogJ0JhcicgfV07XG4gKiB9XG4gKlxuICogYGBgXG4gKi9cbmxldCBDb2x1bW5NZW51U3RpY2tDb21wb25lbnQgPSBjbGFzcyBDb2x1bW5NZW51U3RpY2tDb21wb25lbnQgZXh0ZW5kcyBDb2x1bW5NZW51SXRlbUJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbiwgY29sdW1uSW5mb1NlcnZpY2UsIGNoYW5nZURldGVjdG9yKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uID0gbG9jYWxpemF0aW9uO1xuICAgICAgICB0aGlzLmNvbHVtbkluZm9TZXJ2aWNlID0gY29sdW1uSW5mb1NlcnZpY2U7XG4gICAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IgPSBjaGFuZ2VEZXRlY3RvcjtcbiAgICB9XG4gICAgZ2V0IHRleHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvY2FsaXphdGlvbi5nZXQodGhpcy5zdGlja3kgPyAndW5zdGljaycgOiAnc3RpY2snKTtcbiAgICB9XG4gICAgZ2V0IGljb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0aWNreSA/ICd1bnN0aWNrJyA6ICdzdGljayc7XG4gICAgfVxuICAgIGdldCBkaXNhYmxlZCgpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLnN0aWNreSAmJiB0aGlzLmNvbHVtbkluZm9TZXJ2aWNlLnVubG9ja2VkUm9vdENvdW50IDwgMjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHRvZ2dsZUNvbHVtbigpIHtcbiAgICAgICAgdGhpcy50b2dnbGVIaWVyYXJjaHkoIXRoaXMuc3RpY2t5KTtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICB0aGlzLmNoYW5nZURldGVjdG9yLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbiAgICB0b2dnbGVIaWVyYXJjaHkoc3RpY2t5KSB7XG4gICAgICAgIGxldCByb290ID0gdGhpcy5zZXJ2aWNlLmNvbHVtbjtcbiAgICAgICAgd2hpbGUgKHJvb3QucGFyZW50KSB7XG4gICAgICAgICAgICByb290ID0gcm9vdC5wYXJlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29sdW1ucyA9IFtyb290XTtcbiAgICAgICAgY29uc3QgYWxsQ2hhbmdlZCA9IFtdO1xuICAgICAgICB3aGlsZSAoY29sdW1ucy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbHVtbiA9IGNvbHVtbnMuc2hpZnQoKTtcbiAgICAgICAgICAgIGNvbHVtbi5zdGlja3kgPSBzdGlja3k7XG4gICAgICAgICAgICBhbGxDaGFuZ2VkLnB1c2goY29sdW1uKTtcbiAgICAgICAgICAgIGlmIChjb2x1bW4uaGFzQ2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICBjb2x1bW5zLnB1c2goLi4uY29sdW1uLmNoaWxkcmVuQXJyYXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29sdW1uSW5mb1NlcnZpY2UuY2hhbmdlU3R1Y2soYWxsQ2hhbmdlZCk7XG4gICAgfVxuICAgIGdldCBzdGlja3koKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2UuY29sdW1uLnN0aWNreTtcbiAgICB9XG59O1xuQ29sdW1uTWVudVN0aWNrQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLWNvbHVtbm1lbnUtc3RpY2snLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbm1lbnUtaXRlbSBbdGV4dF09XCJ0ZXh0XCIgW2ljb25dPVwiaWNvblwiIChpdGVtQ2xpY2spPVwidG9nZ2xlQ29sdW1uKClcIiBbZGlzYWJsZWRdPVwiZGlzYWJsZWRcIj5cbiAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1ubWVudS1pdGVtPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0xvY2FsaXphdGlvblNlcnZpY2UsXG4gICAgICAgIENvbHVtbkluZm9TZXJ2aWNlLFxuICAgICAgICBDaGFuZ2VEZXRlY3RvclJlZl0pXG5dLCBDb2x1bW5NZW51U3RpY2tDb21wb25lbnQpO1xuXG5jb25zdCBDT01QT05FTlRTJDEgPSBbXG4gICAgQ29sdW1uTGlzdENvbXBvbmVudCxcbiAgICBDb2x1bW5DaG9vc2VyQ29tcG9uZW50LFxuICAgIENvbHVtbk1lbnVDaG9vc2VyQ29tcG9uZW50LFxuICAgIENvbHVtbk1lbnVGaWx0ZXJDb21wb25lbnQsXG4gICAgQ29sdW1uTWVudUl0ZW1Db21wb25lbnQsXG4gICAgQ29sdW1uTWVudUl0ZW1Db250ZW50VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgQ29sdW1uTWVudVNvcnRDb21wb25lbnQsXG4gICAgQ29sdW1uTWVudUNvbXBvbmVudCxcbiAgICBDb2x1bW5NZW51TG9ja0NvbXBvbmVudCxcbiAgICBDb2x1bW5NZW51VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgQ29sdW1uTWVudUNvbnRhaW5lckNvbXBvbmVudCxcbiAgICBDb2x1bW5NZW51SXRlbURpcmVjdGl2ZSxcbiAgICBDb2x1bW5NZW51U3RpY2tDb21wb25lbnQsXG4gICAgQ29sdW1uTWVudVBvc2l0aW9uQ29tcG9uZW50XG5dO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBDb2x1bW5NZW51TW9kdWxlID0gY2xhc3MgQ29sdW1uTWVudU1vZHVsZSB7XG4gICAgc3RhdGljIGV4cG9ydHMoKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBDb2x1bW5DaG9vc2VyQ29tcG9uZW50LFxuICAgICAgICAgICAgQ29sdW1uTWVudUZpbHRlckNvbXBvbmVudCxcbiAgICAgICAgICAgIENvbHVtbk1lbnVJdGVtQ29tcG9uZW50LFxuICAgICAgICAgICAgQ29sdW1uTWVudUl0ZW1Db250ZW50VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgICAgICBDb2x1bW5NZW51U29ydENvbXBvbmVudCxcbiAgICAgICAgICAgIENvbHVtbk1lbnVMb2NrQ29tcG9uZW50LFxuICAgICAgICAgICAgQ29sdW1uTWVudVN0aWNrQ29tcG9uZW50LFxuICAgICAgICAgICAgQ29sdW1uTWVudVBvc2l0aW9uQ29tcG9uZW50LFxuICAgICAgICAgICAgQ29sdW1uTWVudUNob29zZXJDb21wb25lbnQsXG4gICAgICAgICAgICBDb2x1bW5NZW51VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgICAgICBDb2x1bW5NZW51Q29udGFpbmVyQ29tcG9uZW50LFxuICAgICAgICAgICAgQ29sdW1uTWVudUl0ZW1EaXJlY3RpdmUsXG4gICAgICAgICAgICBDb2x1bW5NZW51Q29tcG9uZW50XG4gICAgICAgIF07XG4gICAgfVxufTtcbkNvbHVtbk1lbnVNb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICBOZ01vZHVsZSh7XG4gICAgICAgIGRlY2xhcmF0aW9uczogW0NPTVBPTkVOVFMkMV0sXG4gICAgICAgIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIEZpbHRlck1lbnVNb2R1bGVdLFxuICAgICAgICBleHBvcnRzOiBbQ09NUE9ORU5UUyQxXVxuICAgIH0pXG5dLCBDb2x1bW5NZW51TW9kdWxlKTtcblxuY29uc3QgZXhwb3J0ZWRNb2R1bGVzJDIgPSBbXG4gICAgSGVhZGVyQ29tcG9uZW50LFxuICAgIEhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIENvbHVtbkhhbmRsZURpcmVjdGl2ZSxcbiAgICBTZWxlY3RBbGxDaGVja2JveERpcmVjdGl2ZVxuXTtcbmNvbnN0IGltcG9ydGVkTW9kdWxlcyQyID0gW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBHcm91cE1vZHVsZSxcbiAgICBSb3dGaWx0ZXJNb2R1bGUsXG4gICAgRmlsdGVyTWVudU1vZHVsZSxcbiAgICBTaGFyZWRNb2R1bGUsXG4gICAgRHJhZ0FuZERyb3BNb2R1bGUsXG4gICAgQ29sdW1uTWVudU1vZHVsZVxuXTtcbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgSGVhZGVyTW9kdWxlID0gY2xhc3MgSGVhZGVyTW9kdWxlIHtcbiAgICBzdGF0aWMgZXhwb3J0cygpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIEhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICAgICAgU2VsZWN0QWxsQ2hlY2tib3hEaXJlY3RpdmVcbiAgICAgICAgXTtcbiAgICB9XG59O1xuSGVhZGVyTW9kdWxlID0gX19kZWNvcmF0ZShbXG4gICAgTmdNb2R1bGUoe1xuICAgICAgICBkZWNsYXJhdGlvbnM6IFtleHBvcnRlZE1vZHVsZXMkMl0sXG4gICAgICAgIGV4cG9ydHM6IFtleHBvcnRlZE1vZHVsZXMkMl0sXG4gICAgICAgIGltcG9ydHM6IFsuLi5pbXBvcnRlZE1vZHVsZXMkMl1cbiAgICB9KVxuXSwgSGVhZGVyTW9kdWxlKTtcblxudmFyIENvbW1hbmRDb2x1bW5Db21wb25lbnRfMTtcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgY29tbWFuZCBjb2x1bW5zIG9mIHRoZSBHcmlkLiBZb3UgaGF2ZSB0byBkZWZpbmUgdGhlIGNvbnRlbnQgb2YgdGhlXG4gKiBjb2x1bW4gaW5zaWRlIGFuIGA8bmctdGVtcGxhdGU+YCB0YWcuIFRoZSB0ZW1wbGF0ZSBjb250ZXh0IGlzIHNldCB0byB0aGUgY3VycmVudFxuICogZGF0YSBpdGVtLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBhbmQgZXhhbXBsZXMgb24gdXNpbmcgdGhlIHBhc3NlZCBmaWVsZHNcbiAqIGFuZCB0aGUgY29tbWFuZCBkaXJlY3RpdmVzLCByZWZlciB0byB0aGUgYXJ0aWNsZSBvblxuICogW2VkaXRpbmcgdGhlIEdyaWQgaW4gQW5ndWxhciBSZWFjdGl2ZSBGb3Jtc10oeyUgc2x1ZyBlZGl0aW5nX3JlYWN0aXZlX2Zvcm1zX2dyaWQgJX0pLlxuICpcbiAqIFRoZSBmb2xsb3dpbmcgYWRkaXRpb25hbCBmaWVsZHMgYXJlIHBhc3NlZDpcbiAqIC0gYGNvbHVtbkluZGV4YCZtZGFzaDtUaGUgY3VycmVudCBjb2x1bW4gaW5kZXguXG4gKiAtIGByb3dJbmRleGAmbWRhc2g7VGhlIGN1cnJlbnQgZGF0YSByb3cgaW5kZXguIElmIGluc2lkZSBhIG5ldyBpdGVtIHJvdywgYHJvd0luZGV4YGlzIGAtMWAuXG4gKiAtIGBkYXRhSXRlbWAmbWRhc2g7VGhlIGN1cnJlbnQgZGF0YSBpdGVtLlxuICogLSBgY29sdW1uYCZtZGFzaDtUaGUgY3VycmVudCBjb2x1bW4gaW5zdGFuY2UuXG4gKiAtIGBpc05ld2AmbWRhc2g7VGhlIHN0YXRlIG9mIHRoZSBjdXJyZW50IGl0ZW0uXG4gKlxuICogVXN1YWxseSwgdGhlIHRlbXBsYXRlIGNvbnRhaW5zIENSVUQgY29tbWFuZCBkaXJlY3RpdmVzIHN1Y2ggYXM6XG4gKiAtIFtFZGl0Q29tbWFuZERpcmVjdGl2ZV0oeyUgc2x1ZyBhcGlfZ3JpZF9lZGl0Y29tbWFuZGRpcmVjdGl2ZSAlfSlcbiAqIC0gW1JlbW92ZUNvbW1hbmREaXJlY3RpdmVdKHslIHNsdWcgYXBpX2dyaWRfcmVtb3ZlY29tbWFuZGRpcmVjdGl2ZSAlfSlcbiAqIC0gW0NhbmNlbENvbW1hbmREaXJlY3RpdmVdKHslIHNsdWcgYXBpX2dyaWRfY2FuY2VsY29tbWFuZGRpcmVjdGl2ZSAlfSlcbiAqIC0gW1NhdmVDb21tYW5kRGlyZWN0aXZlXSh7JSBzbHVnIGFwaV9ncmlkX3NhdmVjb21tYW5kZGlyZWN0aXZlICV9KVxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0cy1wcmV2aWV3XG4gKlxuICogX0BDb21wb25lbnQoe1xuICogICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgdGVtcGxhdGU6IGBcbiAqICAgICAgICA8a2VuZG8tZ3JpZCBbZGF0YV09XCJncmlkRGF0YVwiPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdElEXCIgdGl0bGU9XCJQcm9kdWN0IElEXCIgd2lkdGg9XCIxMjBcIj5cbiAqICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJQcm9kdWN0TmFtZVwiIHRpdGxlPVwiUHJvZHVjdCBOYW1lXCI+XG4gKiAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiVW5pdFByaWNlXCIgdGl0bGU9XCJVbml0IFByaWNlXCIgd2lkdGg9XCIyMzBcIj5cbiAqICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgICA8a2VuZG8tZ3JpZC1jb21tYW5kLWNvbHVtbiB0aXRsZT1cImNvbW1hbmRcIiB3aWR0aD1cIjIyMFwiPlxuICogICAgICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkQ2VsbFRlbXBsYXRlPlxuICogICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBrZW5kb0dyaWRFZGl0Q29tbWFuZCBjbGFzcz1cImstcHJpbWFyeVwiPkVkaXQ8L2J1dHRvbj5cbiAqICAgICAgICAgICAgICAgICAgIDxidXR0b24ga2VuZG9HcmlkUmVtb3ZlQ29tbWFuZD5SZW1vdmU8L2J1dHRvbj5cbiAqICAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29tbWFuZC1jb2x1bW4+XG4gKiAgICAgICAgPC9rZW5kby1ncmlkPlxuICogICAgYFxuICogfSlcbiAqXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICAgcHVibGljIGdyaWREYXRhOiBhbnlbXTtcbiAqXG4gKiAgICBjb25zdHJ1Y3RvcigpIHtcbiAqICAgICAgICB0aGlzLmdyaWREYXRhID0gcHJvZHVjdHM7XG4gKiAgICB9XG4gKiB9XG4gKlxuICogY29uc3QgcHJvZHVjdHMgPSBbe1xuICogICAgXCJQcm9kdWN0SURcIjogMSxcbiAqICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFpXCIsXG4gKiAgICBcIlVuaXRQcmljZVwiOiAxOC4wMDAwLFxuICogICAgXCJEaXNjb250aW51ZWRcIjogdHJ1ZVxuICogIH0sIHtcbiAqICAgIFwiUHJvZHVjdElEXCI6IDIsXG4gKiAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhbmdcIixcbiAqICAgIFwiVW5pdFByaWNlXCI6IDE5LjAwMDAsXG4gKiAgICBcIkRpc2NvbnRpbnVlZFwiOiBmYWxzZVxuICogIH1cbiAqIF07XG4gKlxuICogYGBgXG4gKi9cbmxldCBDb21tYW5kQ29sdW1uQ29tcG9uZW50ID0gQ29tbWFuZENvbHVtbkNvbXBvbmVudF8xID0gY2xhc3MgQ29tbWFuZENvbHVtbkNvbXBvbmVudCBleHRlbmRzIENvbHVtbkJhc2UkMSB7XG4gICAgY29uc3RydWN0b3IocGFyZW50KSB7XG4gICAgICAgIHN1cGVyKHBhcmVudCk7XG4gICAgICAgIHRoaXMucGFyZW50ID0gcGFyZW50O1xuICAgIH1cbiAgICBnZXQgdGVtcGxhdGVSZWYoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRlbXBsYXRlID8gdGhpcy50ZW1wbGF0ZS50ZW1wbGF0ZVJlZiA6IHVuZGVmaW5lZDtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgQ29udGVudENoaWxkKENlbGxUZW1wbGF0ZURpcmVjdGl2ZSwgeyBzdGF0aWM6IGZhbHNlIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBDZWxsVGVtcGxhdGVEaXJlY3RpdmUpXG5dLCBDb21tYW5kQ29sdW1uQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ0ZW1wbGF0ZVwiLCB2b2lkIDApO1xuQ29tbWFuZENvbHVtbkNvbXBvbmVudCA9IENvbW1hbmRDb2x1bW5Db21wb25lbnRfMSA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3ZpZGU6IENvbHVtbkJhc2UkMSxcbiAgICAgICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBDb21tYW5kQ29sdW1uQ29tcG9uZW50XzEpXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZ3JpZC1jb21tYW5kLWNvbHVtbicsXG4gICAgICAgIHRlbXBsYXRlOiBgYFxuICAgIH0pLFxuICAgIF9fcGFyYW0oMCwgU2tpcFNlbGYoKSksIF9fcGFyYW0oMCwgSG9zdCgpKSwgX19wYXJhbSgwLCBPcHRpb25hbCgpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0NvbHVtbkJhc2UkMV0pXG5dLCBDb21tYW5kQ29sdW1uQ29tcG9uZW50KTtcblxudmFyIENoZWNrYm94Q29sdW1uQ29tcG9uZW50XzE7XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGNoZWNrYm94IGZvciBzZWxlY3RpbmcgY29sdW1ucyBpbiB0aGUgR3JpZC4gSWYgdGhlIGNvbHVtbiBpc1xuICogZGVmaW5lZCBhcyBlbXB0eSwgaXQgcmVuZGVycyBhIGRlZmF1bHQgY2hlY2tib3ggZm9yIHJvdyBzZWxlY3Rpb24uXG4gKiBZb3UgY2FuIGFsc28gZGVmaW5lIHRoZSBjb250ZW50IG9mIHRoZSBjb2x1bW4gaW5zaWRlIGFuIGA8bmctdGVtcGxhdGU+YCB0YWcuXG4gKiBUaGUgaW5wdXQgcmVxdWlyZXMgeW91IHRvIGluY2x1ZGUgdGhlIGBTZWxlY3Rpb25DaGVja2JveGAgb3B0aW9uLlxuICpcbiAqIFRoZSB0ZW1wbGF0ZSBjb250ZXh0IGlzIHNldCB0byB0aGUgY3VycmVudCBkYXRhIGl0ZW0gYW5kIHRoZSBmb2xsb3dpbmcgYWRkaXRpb25hbCBmaWVsZHMgYXJlIHBhc3NlZDpcbiAqIC0gYGNvbHVtbkluZGV4YCZtZGFzaDtUaGUgY3VycmVudCBjb2x1bW4gaW5kZXguXG4gKiAtIGByb3dJbmRleGAmbWRhc2g7VGhlIGN1cnJlbnQgZGF0YSByb3cgaW5kZXguIElmIGluc2lkZSBhIG5ldyBpdGVtIHJvdywgaXQgd2lsbCBiZSBgLTFgLlxuICogLSBgZGF0YUl0ZW1gJm1kYXNoO1RoZSBjdXJyZW50IGRhdGEgaXRlbS5cbiAqIC0gYGNvbHVtbmAmbWRhc2g7VGhlIGN1cnJlbnQgY29sdW1uIGluc3RhbmNlLlxuICogLSBgaXNOZXdgJm1kYXNoO1RoZSBzdGF0ZSBvZiB0aGUgY3VycmVudCBpdGVtLlxuICpcbiAqIEZvciBtb3JlIGV4YW1wbGVzLCByZWZlciB0bzpcbiAqIC0gW1NlbGVjdGluZyBvciBkZXNlbGVjdGluZyBhbGwgaXRlbXMgb24gYSBwYWdlXSh7JSBzbHVnIHNlbGVjdGlvbl9ncmlkICV9I3RvYy1zZWxlY3QtYWxsLWZlYXR1cmUpXG4gKiAtIFtQZXJzaXN0aW5nIHRoZSBzZWxlY3Rpb25dKHslIHNsdWcgc2VsZWN0aW9uX2dyaWQgJX0jdG9jLWluLWNvbWJpbmF0aW9uLXdpdGgtdGhlLXNlbGVjdC1hbGwtZmVhdHVyZSlcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHMtcHJldmlld1xuICpcbiAqIF9AQ29tcG9uZW50KHtcbiAqICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgICAgPGtlbmRvLWdyaWQgW2RhdGFdPVwiZ3JpZERhdGFcIiBbc2VsZWN0YWJsZV09XCJ7ZW5hYmxlZDogdHJ1ZSwgY2hlY2tib3hPbmx5OiB0cnVlfVwiPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdElEXCIgdGl0bGU9XCJQcm9kdWN0IElEXCIgd2lkdGg9XCIxMjBcIj5cbiAqICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJQcm9kdWN0TmFtZVwiIHRpdGxlPVwiUHJvZHVjdCBOYW1lXCI+XG4gKiAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY2hlY2tib3gtY29sdW1uIHRpdGxlPVwiRGVmYXVsdCBjaGVja2JveFwiPlxuICogICAgICAgICAgPC9rZW5kby1ncmlkLWNoZWNrYm94LWNvbHVtbj5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNoZWNrYm94LWNvbHVtbiB0aXRsZT1cIkN1c3RvbSBjaGVja2JveFwiPlxuICogICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkQ2VsbFRlbXBsYXRlIGxldC1pZHg9XCJyb3dJbmRleFwiPlxuICogICAgICAgICAgICAgIFNlbGVjdCByb3cgPGlucHV0IFtrZW5kb0dyaWRTZWxlY3Rpb25DaGVja2JveF09XCJpZHhcIiAvPlxuICogICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgICAgPC9rZW5kby1ncmlkLWNoZWNrYm94LWNvbHVtbj5cbiAqICAgICAgICA8L2tlbmRvLWdyaWQ+XG4gKiAgICBgXG4gKiB9KVxuICpcbiAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKiAgICBwdWJsaWMgZ3JpZERhdGE6IGFueVtdO1xuICpcbiAqICAgIGNvbnN0cnVjdG9yKCkge1xuICogICAgICAgIHRoaXMuZ3JpZERhdGEgPSBwcm9kdWN0cztcbiAqICAgIH1cbiAqIH1cbiAqXG4gKiBjb25zdCBwcm9kdWN0cyA9IFt7XG4gKiAgICBcIlByb2R1Y3RJRFwiOiAxLFxuICogICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYWlcIixcbiAqICAgIFwiVW5pdFByaWNlXCI6IDE4LjAwMDAsXG4gKiAgICBcIkRpc2NvbnRpbnVlZFwiOiB0cnVlXG4gKiAgfSwge1xuICogICAgXCJQcm9kdWN0SURcIjogMixcbiAqICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFuZ1wiLFxuICogICAgXCJVbml0UHJpY2VcIjogMTkuMDAwMCxcbiAqICAgIFwiRGlzY29udGludWVkXCI6IGZhbHNlXG4gKiAgfVxuICogXTtcbiAqXG4gKiBgYGBcbiAqL1xubGV0IENoZWNrYm94Q29sdW1uQ29tcG9uZW50ID0gQ2hlY2tib3hDb2x1bW5Db21wb25lbnRfMSA9IGNsYXNzIENoZWNrYm94Q29sdW1uQ29tcG9uZW50IGV4dGVuZHMgQ29sdW1uQmFzZSQxIHtcbiAgICBjb25zdHJ1Y3RvcihwYXJlbnQpIHtcbiAgICAgICAgc3VwZXIocGFyZW50KTtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgICAgIC8qXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuaXNDaGVja2JveENvbHVtbiA9IHRydWU7XG4gICAgfVxuICAgIGdldCB0ZW1wbGF0ZVJlZigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGVtcGxhdGUgPyB0aGlzLnRlbXBsYXRlLnRlbXBsYXRlUmVmIDogdW5kZWZpbmVkO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgQ2hlY2tib3hDb2x1bW5Db21wb25lbnQucHJvdG90eXBlLCBcInNob3dTZWxlY3RBbGxcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZChDZWxsVGVtcGxhdGVEaXJlY3RpdmUsIHsgc3RhdGljOiBmYWxzZSB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQ2VsbFRlbXBsYXRlRGlyZWN0aXZlKVxuXSwgQ2hlY2tib3hDb2x1bW5Db21wb25lbnQucHJvdG90eXBlLCBcInRlbXBsYXRlXCIsIHZvaWQgMCk7XG5DaGVja2JveENvbHVtbkNvbXBvbmVudCA9IENoZWNrYm94Q29sdW1uQ29tcG9uZW50XzEgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBwcm92aWRlOiBDb2x1bW5CYXNlJDEsXG4gICAgICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gQ2hlY2tib3hDb2x1bW5Db21wb25lbnRfMSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLWNoZWNrYm94LWNvbHVtbicsXG4gICAgICAgIHRlbXBsYXRlOiBgYFxuICAgIH0pLFxuICAgIF9fcGFyYW0oMCwgU2tpcFNlbGYoKSksIF9fcGFyYW0oMCwgSG9zdCgpKSwgX19wYXJhbSgwLCBPcHRpb25hbCgpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0NvbHVtbkJhc2UkMV0pXG5dLCBDaGVja2JveENvbHVtbkNvbXBvbmVudCk7XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgcm93LXNlbGVjdGlvbiBjaGVja2JveCBvZiB0aGUgR3JpZC4gVGhlIGRpcmVjdGl2ZSBleHBlY3RzIHRoZVxuICogaW5kZXggb2YgdGhlIGN1cnJlbnQgcm93IGFzIGFuIGlucHV0IHBhcmFtZXRlci4gSW5zaWRlIHRoZVxuICogW0NoZWNrYm94Q29sdW1uQ29tcG9uZW50XSh7JSBzbHVnIGFwaV9ncmlkX2NoZWNrYm94Y29sdW1uY29tcG9uZW50ICV9KSwgYXBwbHkgdGhlXG4gKiBkaXJlY3RpdmUgdG8gYW4gYGlucHV0YCBlbGVtZW50LiBXaGVuIHRoZSB1c2VyIGNsaWNrcyB0aGUgY2hlY2tib3ggdGhhdCBpcyBhc3NvY2lhdGVkXG4gKiB3aXRoIHRoZSBkaXJlY3RpdmUsIGEgW3NlbGVjdGlvbkNoYW5nZV0oeyUgc2x1ZyBhcGlfZ3JpZF9ncmlkY29tcG9uZW50ICV9I3RvYy1zZWxlY3Rpb25DaGFuZ2UpXG4gKiBldmVudCBpcyB0cmlnZ2VyZWQuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgICBzZWxlY3RvcjogJ215LWFwcCcsXG4gKiAgICB0ZW1wbGF0ZTogYFxuICogICAgICAgIDxrZW5kby1ncmlkIFtkYXRhXT1cImdyaWREYXRhXCIgW3NlbGVjdGFibGVdPVwie2VuYWJsZWQ6IHRydWUsIGNoZWNrYm94T25seTogdHJ1ZX1cIj5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNoZWNrYm94LWNvbHVtbiB0aXRsZT1cIkN1c3RvbSBjaGVja2JveFwiPlxuICogICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkQ2VsbFRlbXBsYXRlIGxldC1pZHg9XCJyb3dJbmRleFwiPlxuICogICAgICAgICAgICAgIFNlbGVjdCByb3cgPGlucHV0IFtrZW5kb0dyaWRTZWxlY3Rpb25DaGVja2JveF09XCJpZHhcIiAvPlxuICogICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgICAgPC9rZW5kby1ncmlkLWNoZWNrYm94LWNvbHVtbj5cbiAqICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbiBmaWVsZD1cIlByb2R1Y3RJRFwiIHRpdGxlPVwiUHJvZHVjdCBJRFwiIHdpZHRoPVwiMTIwXCI+XG4gKiAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIiB0aXRsZT1cIlByb2R1Y3QgTmFtZVwiPlxuICogICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgICA8L2tlbmRvLWdyaWQ+XG4gKiAgICBgXG4gKiB9KVxuICpcbiAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKiAgICBwdWJsaWMgZ3JpZERhdGE6IGFueVtdO1xuICpcbiAqICAgIGNvbnN0cnVjdG9yKCkge1xuICogICAgICAgIHRoaXMuZ3JpZERhdGEgPSBwcm9kdWN0cztcbiAqICAgIH1cbiAqIH1cbiAqXG4gKiBjb25zdCBwcm9kdWN0cyA9IFt7XG4gKiAgICBcIlByb2R1Y3RJRFwiOiAxLFxuICogICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYWlcIixcbiAqICAgIFwiVW5pdFByaWNlXCI6IDE4LjAwMDAsXG4gKiAgICBcIkRpc2NvbnRpbnVlZFwiOiB0cnVlXG4gKiAgfSwge1xuICogICAgXCJQcm9kdWN0SURcIjogMixcbiAqICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFuZ1wiLFxuICogICAgXCJVbml0UHJpY2VcIjogMTkuMDAwMCxcbiAqICAgIFwiRGlzY29udGludWVkXCI6IGZhbHNlXG4gKiAgfVxuICogXTtcbiAqXG4gKiBgYGBcbiAqL1xubGV0IFNlbGVjdGlvbkNoZWNrYm94RGlyZWN0aXZlID0gY2xhc3MgU2VsZWN0aW9uQ2hlY2tib3hEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHNlbGVjdGlvblNlcnZpY2UsIGVsLCByZW5kZXJlciwgbmdab25lKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0aW9uU2VydmljZSA9IHNlbGVjdGlvblNlcnZpY2U7XG4gICAgICAgIHRoaXMuZWwgPSBlbDtcbiAgICAgICAgdGhpcy5yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgICAgICB0aGlzLm5nWm9uZSA9IG5nWm9uZTtcbiAgICAgICAgdGhpcy50eXBlID0gXCJjaGVja2JveFwiO1xuICAgICAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmRlc3Ryb3lDbGljayA9IHRoaXMucmVuZGVyZXIubGlzdGVuKHRoaXMuZWwubmF0aXZlRWxlbWVudCwgXCJjbGlja1wiLCB0aGlzLm9uQ2xpY2suYmluZCh0aGlzKSk7XG4gICAgICAgICAgICB0aGlzLmRlc3Ryb3lLZXlEb3duID0gdGhpcy5yZW5kZXJlci5saXN0ZW4odGhpcy5lbC5uYXRpdmVFbGVtZW50LCBcImtleWRvd25cIiwgdGhpcy5vbktleURvd24uYmluZCh0aGlzKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBuZ0FmdGVyQ29udGVudENoZWNrZWQoKSB7XG4gICAgICAgIHRoaXMuc2V0Q2hlY2tlZFN0YXRlKCk7XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5kZXN0cm95Q2xpY2spIHtcbiAgICAgICAgICAgIHRoaXMuZGVzdHJveUNsaWNrKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZGVzdHJveUtleURvd24pIHtcbiAgICAgICAgICAgIHRoaXMuZGVzdHJveUtleURvd24oKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvbkNsaWNrKCkge1xuICAgICAgICBpZiAodGhpcy5zZWxlY3Rpb25TZXJ2aWNlLm9wdGlvbnMuZW5hYmxlZCkge1xuICAgICAgICAgICAgdGhpcy5uZ1pvbmUucnVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBldiA9IHRoaXMuc2VsZWN0aW9uU2VydmljZS50b2dnbGVCeUluZGV4KHRoaXMuaXRlbUluZGV4KTtcbiAgICAgICAgICAgICAgICBldi5jdHJsS2V5ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBldi5zaGlmdEtleSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uU2VydmljZS5jaGFuZ2VzLmVtaXQoZXYpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25LZXlEb3duKGUpIHtcbiAgICAgICAgaWYgKGUua2V5Q29kZSA9PT0gS2V5cy5FbnRlcikge1xuICAgICAgICAgICAgdGhpcy5vbkNsaWNrKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLypcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgc2V0Q2hlY2tlZFN0YXRlKCkge1xuICAgICAgICB0aGlzLnJlbmRlcmVyLnNldFByb3BlcnR5KHRoaXMuZWwubmF0aXZlRWxlbWVudCwgXCJjaGVja2VkXCIsIHRoaXMuc2VsZWN0aW9uU2VydmljZS5pc1NlbGVjdGVkKHRoaXMuaXRlbUluZGV4KSk7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KFwia2VuZG9HcmlkU2VsZWN0aW9uQ2hlY2tib3hcIiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIFNlbGVjdGlvbkNoZWNrYm94RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJpdGVtSW5kZXhcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdhdHRyLnR5cGUnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgU2VsZWN0aW9uQ2hlY2tib3hEaXJlY3RpdmUucHJvdG90eXBlLCBcInR5cGVcIiwgdm9pZCAwKTtcblNlbGVjdGlvbkNoZWNrYm94RGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkU2VsZWN0aW9uQ2hlY2tib3hdJ1xuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbU2VsZWN0aW9uU2VydmljZSxcbiAgICAgICAgRWxlbWVudFJlZixcbiAgICAgICAgUmVuZGVyZXIyLFxuICAgICAgICBOZ1pvbmVdKVxuXSwgU2VsZWN0aW9uQ2hlY2tib3hEaXJlY3RpdmUpO1xuXG5jb25zdCBjb2x1bW5DZWxsSW5kZXggPSAoY2VsbCwgY2VsbHMpID0+IHtcbiAgICBsZXQgY2VsbEluZGV4ID0gMDtcbiAgICBmb3IgKGxldCBpZHggPSAwOyBpZHggPCBjZWxscy5sZW5ndGg7IGlkeCsrKSB7XG4gICAgICAgIGlmIChjZWxsc1tpZHhdID09PSBjZWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gY2VsbEluZGV4O1xuICAgICAgICB9XG4gICAgICAgIGlmICghaGFzQ2xhc3NlcyhjZWxsc1tpZHhdLCAnay1oaWVyYXJjaHktY2VsbCBrLWdyb3VwLWNlbGwnKSkge1xuICAgICAgICAgICAgY2VsbEluZGV4Kys7XG4gICAgICAgIH1cbiAgICB9XG59O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBUYWJsZUJvZHlDb21wb25lbnQgPSBjbGFzcyBUYWJsZUJvZHlDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGRldGFpbHNTZXJ2aWNlLCBncm91cHNTZXJ2aWNlLCBjaGFuZ2VOb3RpZmljYXRpb24sIGVkaXRTZXJ2aWNlLCBsb2NhbGl6YXRpb24sIG5nWm9uZSwgcmVuZGVyZXIsIGVsZW1lbnQsIGRvbUV2ZW50cywgc2VsZWN0aW9uU2VydmljZSwgY2VsbFNlbGVjdGlvblNlcnZpY2UsIGNvbHVtbkluZm9TZXJ2aWNlLCBuYXZpZ2F0aW9uU2VydmljZSkge1xuICAgICAgICB0aGlzLmRldGFpbHNTZXJ2aWNlID0gZGV0YWlsc1NlcnZpY2U7XG4gICAgICAgIHRoaXMuZ3JvdXBzU2VydmljZSA9IGdyb3Vwc1NlcnZpY2U7XG4gICAgICAgIHRoaXMuY2hhbmdlTm90aWZpY2F0aW9uID0gY2hhbmdlTm90aWZpY2F0aW9uO1xuICAgICAgICB0aGlzLmVkaXRTZXJ2aWNlID0gZWRpdFNlcnZpY2U7XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uID0gbG9jYWxpemF0aW9uO1xuICAgICAgICB0aGlzLm5nWm9uZSA9IG5nWm9uZTtcbiAgICAgICAgdGhpcy5yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgICB0aGlzLmRvbUV2ZW50cyA9IGRvbUV2ZW50cztcbiAgICAgICAgdGhpcy5zZWxlY3Rpb25TZXJ2aWNlID0gc2VsZWN0aW9uU2VydmljZTtcbiAgICAgICAgdGhpcy5jZWxsU2VsZWN0aW9uU2VydmljZSA9IGNlbGxTZWxlY3Rpb25TZXJ2aWNlO1xuICAgICAgICB0aGlzLmNvbHVtbkluZm9TZXJ2aWNlID0gY29sdW1uSW5mb1NlcnZpY2U7XG4gICAgICAgIHRoaXMubmF2aWdhdGlvblNlcnZpY2UgPSBuYXZpZ2F0aW9uU2VydmljZTtcbiAgICAgICAgdGhpcy5jb2x1bW5zID0gW107XG4gICAgICAgIHRoaXMuZ3JvdXBzID0gW107XG4gICAgICAgIHRoaXMuc2tpcCA9IDA7XG4gICAgICAgIHRoaXMubm9SZWNvcmRzVGV4dCA9IHRoaXMubG9jYWxpemF0aW9uLmdldCgnbm9SZWNvcmRzJyk7XG4gICAgICAgIHRoaXMuaXNMb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5za2lwR3JvdXBEZWNvcmF0aW9uID0gZmFsc2U7XG4gICAgICAgIHRoaXMuc2hvd0dyb3VwRm9vdGVycyA9IGZhbHNlO1xuICAgICAgICB0aGlzLmxvY2tlZENvbHVtbnNDb3VudCA9IDA7XG4gICAgICAgIHRoaXMudG90YWxDb2x1bW5zQ291bnQgPSAwO1xuICAgICAgICB0aGlzLnRyYWNrQnkgPSBkZWZhdWx0VHJhY2tCeTtcbiAgICAgICAgdGhpcy5yb3dDbGFzcyA9ICgpID0+IG51bGw7XG4gICAgICAgIHRoaXMuY2VsbEtleWRvd25TdWJzY3JpcHRpb24gPSB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmNlbGxLZXlkb3duLnN1YnNjcmliZSgoYXJncykgPT4gdGhpcy5jZWxsS2V5ZG93bkhhbmRsZXIoYXJncykpO1xuICAgICAgICB0aGlzLnRyYWNrQnlXcmFwcGVyID0gdGhpcy50cmFja0J5V3JhcHBlci5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnRyYWNrQnlDb2x1bW5zID0gdGhpcy50cmFja0J5Q29sdW1ucy5iaW5kKHRoaXMpO1xuICAgIH1cbiAgICBnZXQgbmV3RGF0YUl0ZW0oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVkaXRTZXJ2aWNlLm5ld0RhdGFJdGVtO1xuICAgIH1cbiAgICAvLyBOdW1iZXIgb2YgdW5sb2NrZWQgY29sdW1ucyBpbiB0aGUgbmV4dCB0YWJsZSwgaWYgYW55XG4gICAgZ2V0IHVubG9ja2VkQ29sdW1uc0NvdW50KCkge1xuICAgICAgICByZXR1cm4gdGhpcy50b3RhbENvbHVtbnNDb3VudCAtIHRoaXMubG9ja2VkQ29sdW1uc0NvdW50IC0gKHRoaXMuYWxsQ29sdW1ucyB8fCB0aGlzLmNvbHVtbnMpLmxlbmd0aDtcbiAgICB9XG4gICAgaXNBcmlhU2VsZWN0ZWQoaXRlbSwgY29sdW1uKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNlbGxTZWxlY3Rpb25TZXJ2aWNlLmlzQ2VsbFNlbGVjdGVkKGl0ZW0sIGNvbHVtbikgfHxcbiAgICAgICAgICAgIHRoaXMuaXNSb3dTZWxlY3RlZChpdGVtKSA/ICd0cnVlJyA6ICdmYWxzZSc7XG4gICAgfVxuICAgIHRvZ2dsZVJvdyhpbmRleCwgZGF0YUl0ZW0pIHtcbiAgICAgICAgdGhpcy5kZXRhaWxzU2VydmljZS50b2dnbGVSb3coaW5kZXgsIGRhdGFJdGVtKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpc0V4cGFuZGVkKHZpZXdJdGVtKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRldGFpbHNTZXJ2aWNlLmlzRXhwYW5kZWQodmlld0l0ZW0uaW5kZXgsIHZpZXdJdGVtLmRhdGEpO1xuICAgIH1cbiAgICBkZXRhaWxCdXR0b25TdHlsZXModmlld0l0ZW0pIHtcbiAgICAgICAgY29uc3QgZXhwYW5kZWQgPSB0aGlzLmlzRXhwYW5kZWQodmlld0l0ZW0pO1xuICAgICAgICByZXR1cm4gZXhwYW5kZWQgPyAnay1pLW1pbnVzJyA6ICdrLWktcGx1cyc7XG4gICAgfVxuICAgIGRldGFpbEJ1dHRvblRpdGxlKHZpZXdJdGVtKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2VLZXkgPSB0aGlzLmlzRXhwYW5kZWQodmlld0l0ZW0pID8gJ2RldGFpbENvbGxhcHNlJyA6ICdkZXRhaWxFeHBhbmQnO1xuICAgICAgICByZXR1cm4gdGhpcy5sb2NhbGl6YXRpb24uZ2V0KG1lc3NhZ2VLZXkpO1xuICAgIH1cbiAgICBpc0dyb3VwKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0udHlwZSA9PT0gJ2dyb3VwJztcbiAgICB9XG4gICAgaXNEYXRhSXRlbShpdGVtKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5pc0dyb3VwKGl0ZW0pICYmICF0aGlzLmlzRm9vdGVyKGl0ZW0pO1xuICAgIH1cbiAgICBpc0Zvb3RlcihpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtLnR5cGUgPT09ICdmb290ZXInO1xuICAgIH1cbiAgICBpc0Zvb3Rlckl0ZW1JbkV4cGFuZGVkR3JvdXAoaXRlbSkge1xuICAgICAgICBjb25zdCBmb290ZXJJdGVtID0geyBkYXRhOiBpdGVtLmRhdGEsIGluZGV4OiBpdGVtLmdyb3VwSW5kZXgsIHBhcmVudEdyb3VwOiBpdGVtLmdyb3VwLnBhcmVudEdyb3VwIH07XG4gICAgICAgIHJldHVybiB0aGlzLmlzSW5FeHBhbmRlZEdyb3VwKGZvb3Rlckl0ZW0pO1xuICAgIH1cbiAgICBpc0RhdGFJdGVtSW5FeHBhbmRlZEdyb3VwKGl0ZW0pIHtcbiAgICAgICAgY29uc3QgZGF0YUl0ZW0gPSB7IGRhdGE6IGl0ZW0uZ3JvdXAuZGF0YSwgaW5kZXg6IGl0ZW0uZ3JvdXBJbmRleCwgcGFyZW50R3JvdXA6IGl0ZW0uZ3JvdXAucGFyZW50R3JvdXAgfTtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNJbkV4cGFuZGVkR3JvdXAoZGF0YUl0ZW0pO1xuICAgIH1cbiAgICBpc0luRXhwYW5kZWRHcm91cChpdGVtKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyb3Vwc1NlcnZpY2UuaXNJbkV4cGFuZGVkR3JvdXAoaXRlbSk7XG4gICAgfVxuICAgIGlzUGFyZW50R3JvdXBFeHBhbmRlZChpdGVtKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyb3Vwc1NlcnZpY2UuaXNJbkV4cGFuZGVkR3JvdXAoaXRlbS5wYXJlbnRHcm91cCk7XG4gICAgfVxuICAgIGlzT2RkKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0uaW5kZXggJSAyICE9PSAwO1xuICAgIH1cbiAgICBpc1NlbGVjdGFibGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlbGVjdGFibGUgJiYgdGhpcy5zZWxlY3RhYmxlLmVuYWJsZWQgIT09IGZhbHNlO1xuICAgIH1cbiAgICBpc1Jvd1NlbGVjdGVkKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0aW9uU2VydmljZS5pc1NlbGVjdGVkKGl0ZW0uaW5kZXgpO1xuICAgIH1cbiAgICB0cmFja0J5V3JhcHBlcihpbmRleCwgaXRlbSkge1xuICAgICAgICBpZiAoaXRlbS50eXBlID09PSAnZGF0YScpIHtcbiAgICAgICAgICAgIGl0ZW0uaXNFZGl0aW5nID0gdGhpcy5lZGl0U2VydmljZS5oYXNFZGl0ZWQoaXRlbS5pbmRleCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMudHJhY2tCeShpbmRleCwgaXRlbSk7XG4gICAgfVxuICAgIHRyYWNrQnlDb2x1bW5zKGluZGV4LCBpdGVtKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZpcnR1YWxDb2x1bW5zID8gaW5kZXggOiBpdGVtO1xuICAgIH1cbiAgICBuZ0RvQ2hlY2soKSB7XG4gICAgICAgIGlmICh0aGlzLmhhc0dyb3VwSGVhZGVyQ29sdW1uKSB7XG4gICAgICAgICAgICB0aGlzLmdyb3VwSGVhZGVyQ29sdW1ucyA9IGNvbHVtbnNUb1JlbmRlcih0aGlzLnNraXBHcm91cERlY29yYXRpb24gPyB0aGlzLmNvbHVtbnMgOiB0aGlzLmNvbHVtbnMudG9BcnJheSgpLnNsaWNlKDEpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZ3JvdXBIZWFkZXJDb2x1bW5zID0gW107XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuaXNMb2NrZWQpIHtcbiAgICAgICAgICAgIHRoaXMuZ3JvdXBIZWFkZXJTbGF2ZUNlbGxzQ291bnQgPVxuICAgICAgICAgICAgICAgIHRoaXMuaGFzR3JvdXBIZWFkZXJDb2x1bW4gPyB0aGlzLmNvbHVtbnNDb250YWluZXIubm9uTG9ja2VkQ29sdW1uc1RvUmVuZGVyLmxlbmd0aCA6IDE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmdyb3VwSGVhZGVyU2xhdmVDZWxsc0NvdW50ID0gMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBuZ0FmdGVyVmlld0NoZWNrZWQoKSB7XG4gICAgICAgIGlmICh0aGlzLnJvd1N0aWNreSkge1xuICAgICAgICAgICAgdGhpcy5hcHBseVN0aWNreVJvd3NTdHlsaW5nKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlcykge1xuICAgICAgICBpZiAoaXNDaGFuZ2VkKCdjb2x1bW5zJywgY2hhbmdlcywgZmFsc2UpKSB7XG4gICAgICAgICAgICB0aGlzLmNoYW5nZU5vdGlmaWNhdGlvbi5ub3RpZnkoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBsb2dpY2FsUm93SW5kZXgocm93SW5kZXgpIHtcbiAgICAgICAgbGV0IHBvcyA9IHRoaXMuc2tpcCArIHJvd0luZGV4O1xuICAgICAgICBpZiAodGhpcy5oYXNEZXRhaWxUZW1wbGF0ZSkge1xuICAgICAgICAgICAgcG9zICo9IDI7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYWJzb2x1dGVSb3dJbmRleCA9IDEgKyBwb3M7XG4gICAgICAgIGNvbnN0IGFkZFJvd09mZnNldCA9IHRoaXMuZWRpdFNlcnZpY2UuaGFzTmV3SXRlbSA/IDEgOiAwO1xuICAgICAgICBjb25zdCBmaWx0ZXJSb3dPZmZzZXQgPSBoYXNGaWx0ZXJSb3codGhpcy5maWx0ZXJhYmxlKSA/IDEgOiAwO1xuICAgICAgICBjb25zdCBoZWFkZXJSb3dDb3VudCA9IHRoaXMuY29sdW1uSW5mb1NlcnZpY2UudG90YWxMZXZlbHMgKyBmaWx0ZXJSb3dPZmZzZXQgKyBhZGRSb3dPZmZzZXQ7XG4gICAgICAgIHJldHVybiBhYnNvbHV0ZVJvd0luZGV4ICsgaGVhZGVyUm93Q291bnQ7XG4gICAgfVxuICAgIGFkZFJvd0xvZ2ljYWxJbmRleCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uSW5mb1NlcnZpY2UudG90YWxMZXZlbHMgKyAxICtcbiAgICAgICAgICAgIChoYXNGaWx0ZXJSb3codGhpcy5maWx0ZXJhYmxlKSA/IDEgOiAwKTtcbiAgICB9XG4gICAgbG9naWNhbENvbEluZGV4KGNvbHVtbikge1xuICAgICAgICBpZiAoIWlzUHJlc2VudChjb2x1bW4ubGVhZkluZGV4KSkge1xuICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb2x1bW4ubGVhZkluZGV4ICsgKHRoaXMuaGFzRGV0YWlsVGVtcGxhdGUgPyAxIDogMCk7XG4gICAgfVxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjbGlja0hhbmRsZXIgPSB0aGlzLmNsaWNrSGFuZGxlci5iaW5kKHRoaXMpO1xuICAgICAgICAgICAgY29uc3QgbW91c2Vkb3duU3Vic2NyaXB0aW9uID0gdGhpcy5yZW5kZXJlci5saXN0ZW4odGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsICdtb3VzZWRvd24nLCBjbGlja0hhbmRsZXIpO1xuICAgICAgICAgICAgY29uc3QgbW91c2V1cFN1YnNjcmlwdGlvbiA9IHRoaXMucmVuZGVyZXIubGlzdGVuKHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LCAnbW91c2V1cCcsIGNsaWNrSGFuZGxlcik7XG4gICAgICAgICAgICBjb25zdCBjbGlja1N1YnNjcmlwdGlvbiA9IHRoaXMucmVuZGVyZXIubGlzdGVuKHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LCAnY2xpY2snLCBjbGlja0hhbmRsZXIpO1xuICAgICAgICAgICAgY29uc3QgY29udGV4dG1lbnVTdWJzY3JpcHRpb24gPSB0aGlzLnJlbmRlcmVyLmxpc3Rlbih0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ2NvbnRleHRtZW51JywgY2xpY2tIYW5kbGVyKTtcbiAgICAgICAgICAgIGNvbnN0IHRvdWNoc3RhcnRTdWJzY3JpcHRpb24gPSB0aGlzLnJlbmRlcmVyLmxpc3Rlbih0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ3RvdWNoc3RhcnQnLCBjbGlja0hhbmRsZXIpO1xuICAgICAgICAgICAgY29uc3QgdG91Y2hlbmRTdWJzY3JpcHRpb24gPSB0aGlzLnJlbmRlcmVyLmxpc3Rlbih0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ3RvdWNoZW5kJywgY2xpY2tIYW5kbGVyKTtcbiAgICAgICAgICAgIHRoaXMuY2xpY2tTdWJzY3JpcHRpb24gPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgbW91c2Vkb3duU3Vic2NyaXB0aW9uKCk7XG4gICAgICAgICAgICAgICAgbW91c2V1cFN1YnNjcmlwdGlvbigpO1xuICAgICAgICAgICAgICAgIGNsaWNrU3Vic2NyaXB0aW9uKCk7XG4gICAgICAgICAgICAgICAgY29udGV4dG1lbnVTdWJzY3JpcHRpb24oKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLnRvdWNoU3Vic2NyaXB0aW9uID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRvdWNoc3RhcnRTdWJzY3JpcHRpb24oKTtcbiAgICAgICAgICAgICAgICB0b3VjaGVuZFN1YnNjcmlwdGlvbigpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICAgIGxldCBvcmlnaW5hbE5vUmVjb3JkVGV4dCA9IHRoaXMubG9jYWxpemF0aW9uLmdldCgnbm9SZWNvcmRzJyk7XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uLmNoYW5nZXMuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLm5vUmVjb3Jkc1RleHQgPT09IG9yaWdpbmFsTm9SZWNvcmRUZXh0KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ub1JlY29yZHNUZXh0ID0gdGhpcy5sb2NhbGl6YXRpb24uZ2V0KCdub1JlY29yZHMnKTtcbiAgICAgICAgICAgICAgICBvcmlnaW5hbE5vUmVjb3JkVGV4dCA9IHRoaXMubm9SZWNvcmRzVGV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5jbGlja1N1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgdGhpcy5jbGlja1N1YnNjcmlwdGlvbigpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnRvdWNoU3Vic2NyaXB0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnRvdWNoU3Vic2NyaXB0aW9uKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jZWxsS2V5ZG93blN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5jbGlja1RpbWVvdXQpO1xuICAgIH1cbiAgICBpc0VkaXRpbmdDZWxsKGluZGV4LCBjb2x1bW4pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWRpdFNlcnZpY2UuaXNFZGl0aW5nKCkgJiYgdGhpcy5lZGl0U2VydmljZS5pc0VkaXRlZENvbHVtbihpbmRleCwgY29sdW1uKTtcbiAgICB9XG4gICAgaXNFZGl0aW5nUm93KGluZGV4KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVkaXRTZXJ2aWNlLmlzRWRpdGluZygpICYmIHRoaXMuZWRpdFNlcnZpY2UuaGFzRWRpdGVkKGluZGV4KTtcbiAgICB9XG4gICAgZ2V0IGhhc0dyb3VwSGVhZGVyQ29sdW1uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW5zQ29udGFpbmVyLmhhc0dyb3VwSGVhZGVyQ29sdW1uO1xuICAgIH1cbiAgICBnZXQgY29sdW1uc0NvbnRhaW5lcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sdW1uSW5mb1NlcnZpY2UuY29sdW1uc0NvbnRhaW5lcjtcbiAgICB9XG4gICAgZ2V0IGNvbHVtbnNTcGFuKCkge1xuICAgICAgICByZXR1cm4gY29sdW1uc1NwYW4odGhpcy5jb2x1bW5zKTtcbiAgICB9XG4gICAgZ2V0IGFsbENvbHVtbnNTcGFuKCkge1xuICAgICAgICByZXR1cm4gY29sdW1uc1NwYW4odGhpcy5hbGxDb2x1bW5zIHx8IHRoaXMuY29sdW1ucyk7XG4gICAgfVxuICAgIGdldCBjb2xTcGFuKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW5zU3BhbiArIHRoaXMuZ3JvdXBzLmxlbmd0aCArICh0aGlzLmhhc0RldGFpbFRlbXBsYXRlID8gMSA6IDApO1xuICAgIH1cbiAgICBnZXQgZm9vdGVyQ29sdW1ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNMb2NrZWQgPyB0aGlzLmNvbHVtbnNDb250YWluZXIubG9ja2VkQ29sdW1uc1RvUmVuZGVyIDogdGhpcy5jb2x1bW5zQ29udGFpbmVyLm5vbkxvY2tlZENvbHVtbnNUb1JlbmRlcjtcbiAgICB9XG4gICAgc2hvd0dyb3VwSGVhZGVyKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuICFpdGVtLmRhdGEuc2tpcEhlYWRlcjtcbiAgICB9XG4gICAgYWRkU3RpY2t5Q29sdW1uU3R5bGVzKGNvbHVtbikge1xuICAgICAgICBjb25zdCBzdGlja3lTdHlsZXMgPSB0aGlzLmNvbHVtbkluZm9TZXJ2aWNlLnN0aWNreUNvbHVtbnNTdHlsZXMoY29sdW1uKTtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGNvbHVtbi5zdHlsZSwgc3RpY2t5U3R5bGVzKTtcbiAgICB9XG4gICAgcmVzaXplSGFuZGxlcigpIHtcbiAgICAgICAgdGhpcy5hcHBseVN0aWNreVJvd3NTdHlsaW5nKCk7XG4gICAgfVxuICAgIGdldCBoYXNEZXRhaWxUZW1wbGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIGlzUHJlc2VudCh0aGlzLmRldGFpbFRlbXBsYXRlKTtcbiAgICB9XG4gICAgY2xpY2tIYW5kbGVyKGV2ZW50QXJnKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudDtcbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gdGhpcy5ldmVudFRhcmdldChldmVudEFyZyk7XG4gICAgICAgIGxldCBjZWxsLCByb3csIGJvZHksIGdyaWRFbGVtZW50O1xuICAgICAgICBsZXQgY3VycmVudFRhcmdldCA9IHRhcmdldDtcbiAgICAgICAgZG8ge1xuICAgICAgICAgICAgY2VsbCA9IGNsb3Nlc3QoY3VycmVudFRhcmdldCwgbWF0Y2hlc05vZGVOYW1lKCd0ZCcpKTtcbiAgICAgICAgICAgIHJvdyA9IGNsb3Nlc3QoY2VsbCwgbWF0Y2hlc05vZGVOYW1lKCd0cicpKTtcbiAgICAgICAgICAgIGJvZHkgPSBjbG9zZXN0KHJvdywgbWF0Y2hlc05vZGVOYW1lKCd0Ym9keScpKTtcbiAgICAgICAgICAgIGN1cnJlbnRUYXJnZXQgPSBib2R5O1xuICAgICAgICAgICAgZ3JpZEVsZW1lbnQgPSBjbG9zZXN0SW5TY29wZShjdXJyZW50VGFyZ2V0LCBtYXRjaGVzQ2xhc3Nlcygnay1ncmlkJyksIGVsZW1lbnQpO1xuICAgICAgICB9IHdoaWxlIChib2R5ICYmIGJvZHkgIT09IGVsZW1lbnQgJiYgIWdyaWRFbGVtZW50KTtcbiAgICAgICAgaWYgKGNlbGwgJiYgIWhhc0NsYXNzZXMoY2VsbCwgTk9OX0RBVEFfQ0VMTF9DTEFTU0VTKSAmJlxuICAgICAgICAgICAgIWhhc0NsYXNzZXMocm93LCBOT05fREFUQV9ST1dfQ0xBU1NFUykgJiZcbiAgICAgICAgICAgIGJvZHkgPT09IGVsZW1lbnQgJiYgIWdyaWRFbGVtZW50KSB7XG4gICAgICAgICAgICB0aGlzLmVkaXRTZXJ2aWNlLnByZXZlbnRDZWxsQ2xvc2UoKTtcbiAgICAgICAgICAgIGNvbnN0IGZvY3VzYWJsZSA9IHRhcmdldCAhPT0gY2VsbCAmJiBpc0ZvY3VzYWJsZVdpdGhUYWJLZXkodGFyZ2V0LCBmYWxzZSk7XG4gICAgICAgICAgICBpZiAoIWZvY3VzYWJsZSAmJiAhbWF0Y2hlc05vZGVOYW1lKCdsYWJlbCcpKHRhcmdldCkgJiYgIWhhc0NsYXNzZXModGFyZ2V0LCBJR05PUkVfVEFSR0VUX0NMQVNTU0VTKSAmJlxuICAgICAgICAgICAgICAgICFjbG9zZXN0SW5TY29wZSh0YXJnZXQsIG1hdGNoZXNDbGFzc2VzKElHTk9SRV9DT05UQUlORVJfQ0xBU1NFUyksIGNlbGwpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYXJncyA9IHRoaXMuY2VsbENsaWNrQXJncyhjZWxsLCByb3csIGV2ZW50QXJnKTtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnRBcmcudHlwZSA9PT0gJ21vdXNlZG93bicgfHwgZXZlbnRBcmcudHlwZSA9PT0gJ3RvdWNoc3RhcnQnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZG9tRXZlbnRzLmNlbGxNb3VzZWRvd24uZW1pdChhcmdzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoZXZlbnRBcmcudHlwZSA9PT0gJ21vdXNldXAnIHx8IGV2ZW50QXJnLnR5cGUgPT09ICd0b3VjaGVuZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kb21FdmVudHMuY2VsbE1vdXNldXAuZW1pdChhcmdzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChhcmdzLmlzRWRpdGVkQ29sdW1uIHx8ICF0aGlzLmVkaXRTZXJ2aWNlLmNsb3NlQ2VsbChldmVudEFyZykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChldmVudEFyZy50eXBlID09PSAnY2xpY2snKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGlja1RpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5lbWl0Q2VsbENsaWNrKGFyZ3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5lbWl0Q2VsbENsaWNrKGFyZ3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVtaXRDZWxsQ2xpY2soYXJncykge1xuICAgICAgICB0aGlzLmRvbUV2ZW50cy5jZWxsQ2xpY2suZW1pdChPYmplY3QuYXNzaWduKGFyZ3MsIHtcbiAgICAgICAgICAgIGlzRWRpdGVkOiBhcmdzLmlzRWRpdGVkUm93IHx8IGFyZ3MuaXNFZGl0ZWRDb2x1bW5cbiAgICAgICAgfSkpO1xuICAgIH1cbiAgICBjZWxsS2V5ZG93bkhhbmRsZXIoYXJncykge1xuICAgICAgICBpZiAoYXJncy5rZXlDb2RlID09PSBLZXlzLkVudGVyKSB7XG4gICAgICAgICAgICB0aGlzLmNsaWNrSGFuZGxlcihhcmdzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjZWxsQ2xpY2tBcmdzKGNlbGwsIHJvdywgZXZlbnRBcmcpIHtcbiAgICAgICAgY29uc3QgaW5kZXggPSBjb2x1bW5DZWxsSW5kZXgoY2VsbCwgcm93LmNlbGxzKTtcbiAgICAgICAgY29uc3QgY29sdW1uID0gdGhpcy5jb2x1bW5zLnRvQXJyYXkoKVtpbmRleF07XG4gICAgICAgIGNvbnN0IGNvbHVtbkluZGV4ID0gdGhpcy5sb2NrZWRDb2x1bW5zQ291bnQgKyBpbmRleDtcbiAgICAgICAgbGV0IHJvd0luZGV4ID0gcm93LmdldEF0dHJpYnV0ZSgnZGF0YS1rZW5kby1ncmlkLWl0ZW0taW5kZXgnKTtcbiAgICAgICAgcm93SW5kZXggPSByb3dJbmRleCA/IHBhcnNlSW50KHJvd0luZGV4LCAxMCkgOiAtMTtcbiAgICAgICAgY29uc3QgZGF0YUl0ZW0gPSByb3dJbmRleCA9PT0gLTEgPyB0aGlzLmVkaXRTZXJ2aWNlLm5ld0RhdGFJdGVtIDogdGhpcy5kYXRhLmF0KHJvd0luZGV4IC0gdGhpcy5za2lwKTtcbiAgICAgICAgY29uc3QgaXNFZGl0ZWRDb2x1bW4gPSB0aGlzLmVkaXRTZXJ2aWNlLmlzRWRpdGVkQ29sdW1uKHJvd0luZGV4LCBjb2x1bW4pO1xuICAgICAgICBjb25zdCBpc0VkaXRlZFJvdyA9IHRoaXMuZWRpdFNlcnZpY2UuaXNFZGl0ZWQocm93SW5kZXgpO1xuICAgICAgICBjb25zdCB0eXBlID0gZXZlbnRBcmcudHlwZSA9PT0gJ2tleWRvd24nID8gJ2NsaWNrJyA6IGV2ZW50QXJnLnR5cGU7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb2x1bW46IGNvbHVtbixcbiAgICAgICAgICAgIGNvbHVtbkluZGV4OiBjb2x1bW5JbmRleCxcbiAgICAgICAgICAgIGRhdGFJdGVtOiBkYXRhSXRlbSxcbiAgICAgICAgICAgIGlzRWRpdGVkQ29sdW1uOiBpc0VkaXRlZENvbHVtbixcbiAgICAgICAgICAgIGlzRWRpdGVkUm93OiBpc0VkaXRlZFJvdyxcbiAgICAgICAgICAgIG9yaWdpbmFsRXZlbnQ6IGV2ZW50QXJnLFxuICAgICAgICAgICAgcm93SW5kZXg6IHJvd0luZGV4LFxuICAgICAgICAgICAgdHlwZTogdHlwZVxuICAgICAgICB9O1xuICAgIH1cbiAgICBldmVudFRhcmdldChhcmdzKSB7XG4gICAgICAgIGlmIChhcmdzLnR5cGUgPT09ICd0b3VjaGVuZCcpIHtcbiAgICAgICAgICAgIGNvbnN0IHRvdWNoID0gYXJncy5jaGFuZ2VkVG91Y2hlc1swXTtcbiAgICAgICAgICAgIHJldHVybiBkb2N1bWVudC5lbGVtZW50RnJvbVBvaW50KHRvdWNoLmNsaWVudFgsIHRvdWNoLmNsaWVudFkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhcmdzLnRhcmdldDtcbiAgICB9XG4gICAgYXBwbHlTdGlja3lSb3dzU3R5bGluZygpIHtcbiAgICAgICAgY29uc3Qgc3RpY2t5Um93cyA9IG5vZGVzVG9BcnJheSh0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuay1ncmlkLXJvdy1zdGlja3knKSk7XG4gICAgICAgIGNvbnN0IGxlbmd0aCA9IHN0aWNreVJvd3MubGVuZ3RoO1xuICAgICAgICBpZiAobGVuZ3RoKSB7XG4gICAgICAgICAgICBsZXQgYWNjdW11bGF0ZWRIZWlnaHQgPSAwO1xuICAgICAgICAgICAgY29uc3Qgc3RpY2t5Um93c09mZnNldHMgPSBbXTtcbiAgICAgICAgICAgIHN0aWNreVJvd3MuZm9yRWFjaChyb3cgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJvd0hlaWdodCA9IHJvdy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7XG4gICAgICAgICAgICAgICAgc3RpY2t5Um93c09mZnNldHMucHVzaCh7IGFjY3VtdWxhdGVkSGVpZ2h0LCByb3dIZWlnaHQgfSk7XG4gICAgICAgICAgICAgICAgYWNjdW11bGF0ZWRIZWlnaHQgKz0gcm93SGVpZ2h0O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBzdGlja3lSb3dzLmZvckVhY2goKHJvdywgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKHJvdywgJ3RvcCcsIGAke3N0aWNreVJvd3NPZmZzZXRzW2luZGV4XS5hY2N1bXVsYXRlZEhlaWdodH1weGApO1xuICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUocm93LCAnYm90dG9tJywgYCR7YWNjdW11bGF0ZWRIZWlnaHQgLSBzdGlja3lSb3dzT2Zmc2V0c1tpbmRleF0uYWNjdW11bGF0ZWRIZWlnaHQgLSBzdGlja3lSb3dzT2Zmc2V0c1tpbmRleF0ucm93SGVpZ2h0fXB4YCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBBcnJheSlcbl0sIFRhYmxlQm9keUNvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQXJyYXkpXG5dLCBUYWJsZUJvZHlDb21wb25lbnQucHJvdG90eXBlLCBcImFsbENvbHVtbnNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KVxuXSwgVGFibGVCb2R5Q29tcG9uZW50LnByb3RvdHlwZSwgXCJncm91cHNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIERldGFpbFRlbXBsYXRlRGlyZWN0aXZlKVxuXSwgVGFibGVCb2R5Q29tcG9uZW50LnByb3RvdHlwZSwgXCJkZXRhaWxUZW1wbGF0ZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTm9SZWNvcmRzVGVtcGxhdGVEaXJlY3RpdmUpXG5dLCBUYWJsZUJvZHlDb21wb25lbnQucHJvdG90eXBlLCBcIm5vUmVjb3Jkc1RlbXBsYXRlXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBBcnJheSlcbl0sIFRhYmxlQm9keUNvbXBvbmVudC5wcm90b3R5cGUsIFwiZGF0YVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgVGFibGVCb2R5Q29tcG9uZW50LnByb3RvdHlwZSwgXCJza2lwXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBPYmplY3QpXG5dLCBUYWJsZUJvZHlDb21wb25lbnQucHJvdG90eXBlLCBcInNlbGVjdGFibGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIFRhYmxlQm9keUNvbXBvbmVudC5wcm90b3R5cGUsIFwiZmlsdGVyYWJsZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgVGFibGVCb2R5Q29tcG9uZW50LnByb3RvdHlwZSwgXCJub1JlY29yZHNUZXh0XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgVGFibGVCb2R5Q29tcG9uZW50LnByb3RvdHlwZSwgXCJpc0xvY2tlZFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIFRhYmxlQm9keUNvbXBvbmVudC5wcm90b3R5cGUsIFwiaXNMb2FkaW5nXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgVGFibGVCb2R5Q29tcG9uZW50LnByb3RvdHlwZSwgXCJpc1ZpcnR1YWxcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFRlbXBsYXRlUmVmKVxuXSwgVGFibGVCb2R5Q29tcG9uZW50LnByb3RvdHlwZSwgXCJsb2FkaW5nVGVtcGxhdGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBUYWJsZUJvZHlDb21wb25lbnQucHJvdG90eXBlLCBcInNraXBHcm91cERlY29yYXRpb25cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBUYWJsZUJvZHlDb21wb25lbnQucHJvdG90eXBlLCBcInNob3dHcm91cEZvb3RlcnNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIFRhYmxlQm9keUNvbXBvbmVudC5wcm90b3R5cGUsIFwibG9ja2VkQ29sdW1uc0NvdW50XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG5dLCBUYWJsZUJvZHlDb21wb25lbnQucHJvdG90eXBlLCBcInRvdGFsQ29sdW1uc0NvdW50XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgVGFibGVCb2R5Q29tcG9uZW50LnByb3RvdHlwZSwgXCJ2aXJ0dWFsQ29sdW1uc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pXG5dLCBUYWJsZUJvZHlDb21wb25lbnQucHJvdG90eXBlLCBcInRyYWNrQnlcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZ1bmN0aW9uKVxuXSwgVGFibGVCb2R5Q29tcG9uZW50LnByb3RvdHlwZSwgXCJyb3dTdGlja3lcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZ1bmN0aW9uKVxuXSwgVGFibGVCb2R5Q29tcG9uZW50LnByb3RvdHlwZSwgXCJyb3dDbGFzc1wiLCB2b2lkIDApO1xuVGFibGVCb2R5Q29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkVGFibGVCb2R5XScsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgPG5nLXRlbXBsYXRlIFtuZ0lmXT1cImVkaXRTZXJ2aWNlLmhhc05ld0l0ZW1cIj5cbiAgICAgICAgPHRyIGNsYXNzPVwiay1ncmlkLWFkZC1yb3cgay1ncmlkLWVkaXQtcm93XCJcbiAgICAgICAgICAgIGtlbmRvR3JpZExvZ2ljYWxSb3dcbiAgICAgICAgICAgICAgICBbbG9naWNhbFJvd0luZGV4XT1cImFkZFJvd0xvZ2ljYWxJbmRleCgpXCJcbiAgICAgICAgICAgICAgICBbbG9naWNhbFNsYXZlUm93XT1cImxvY2tlZENvbHVtbnNDb3VudCA+IDBcIlxuICAgICAgICAgICAgICAgIFtsb2dpY2FsQ2VsbHNDb3VudF09XCJjb2x1bW5zLmxlbmd0aFwiXG4gICAgICAgICAgICAgICAgW2xvZ2ljYWxTbGF2ZUNlbGxzQ291bnRdPVwidW5sb2NrZWRDb2x1bW5zQ291bnRcIj5cbiAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSBbbmdJZl09XCIhc2tpcEdyb3VwRGVjb3JhdGlvblwiPlxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cImstZ3JvdXAtY2VsbFwiICpuZ0Zvcj1cImxldCBnIG9mIGdyb3Vwc1wiIHJvbGU9XCJwcmVzZW50YXRpb25cIj48L3RkPlxuICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICAgIDx0ZCBjbGFzcz1cImstaGllcmFyY2h5LWNlbGxcIlxuICAgICAgICAgICAgICAgICpuZ0lmPVwiZGV0YWlsVGVtcGxhdGU/LnRlbXBsYXRlUmVmXCJcbiAgICAgICAgICAgICAgICBrZW5kb0dyaWRMb2dpY2FsQ2VsbFxuICAgICAgICAgICAgICAgICAgICBbbG9naWNhbFJvd0luZGV4XT1cImFkZFJvd0xvZ2ljYWxJbmRleCgpXCJcbiAgICAgICAgICAgICAgICAgICAgW2xvZ2ljYWxDb2xJbmRleF09XCIwXCJcbiAgICAgICAgICAgICAgICAgICAgYXJpYS1zZWxlY3RlZD1cImZhbHNlXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRkICpuZ0Zvcj1cImxldCBjb2x1bW4gb2YgY29sdW1uczsgbGV0IGNvbHVtbkluZGV4ID0gaW5kZXg7IHRyYWNrQnk6IHRyYWNrQnlDb2x1bW5zO1wiXG4gICAgICAgICAgICAgICAga2VuZG9HcmlkQ2VsbFxuICAgICAgICAgICAgICAgICAgICBbcm93SW5kZXhdPVwiLTFcIlxuICAgICAgICAgICAgICAgICAgICBbY29sdW1uSW5kZXhdPVwibG9ja2VkQ29sdW1uc0NvdW50ICsgY29sdW1uSW5kZXhcIlxuICAgICAgICAgICAgICAgICAgICBbaXNOZXddPVwidHJ1ZVwiXG4gICAgICAgICAgICAgICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAgICAgICAgICAgICAgICAgICAgW2RhdGFJdGVtXT1cIm5ld0RhdGFJdGVtXCJcbiAgICAgICAgICAgICAgICBbY2xhc3Muay1ncmlkLWNvbnRlbnQtc3RpY2t5XT1cImNvbHVtbi5zdGlja3lcIlxuICAgICAgICAgICAgICAgIFtuZ0NsYXNzXT1cImNvbHVtbi5jc3NDbGFzc1wiXG4gICAgICAgICAgICAgICAgW3N0eWxlLmxlZnRdPVwiY29sdW1uLnN0aWNreSA/ICcwJyA6IHVuZGVmaW5lZFwiXG4gICAgICAgICAgICAgICAgW25nU3R5bGVdPVwiY29sdW1uLnN0aWNreSA/IGFkZFN0aWNreUNvbHVtblN0eWxlcyhjb2x1bW4pIDogY29sdW1uLnN0eWxlXCJcbiAgICAgICAgICAgICAgICBbYXR0ci5jb2xzcGFuXT1cImNvbHVtbi5jb2xzcGFuXCJcbiAgICAgICAgICAgICAgICBrZW5kb0dyaWRMb2dpY2FsQ2VsbFxuICAgICAgICAgICAgICAgICAgICBbbG9naWNhbFJvd0luZGV4XT1cImFkZFJvd0xvZ2ljYWxJbmRleCgpXCJcbiAgICAgICAgICAgICAgICAgICAgW2xvZ2ljYWxDb2xJbmRleF09XCJsb2dpY2FsQ29sSW5kZXgoY29sdW1uKVwiXG4gICAgICAgICAgICAgICAgICAgIFtjb2xTcGFuXT1cImNvbHVtbi5jb2xzcGFuXCJcbiAgICAgICAgICAgICAgICByb2xlPVwiZ3JpZGNlbGxcIj5cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgIDwvdHI+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgICA8dHIgKm5nSWY9XCJkYXRhPy5sZW5ndGggPT09IDAgfHwgZGF0YSA9PSBudWxsXCIgY2xhc3M9XCJrLWdyaWQtbm9yZWNvcmRzXCI+XG4gICAgICAgIDx0ZCBbYXR0ci5jb2xzcGFuXT1cImNvbFNwYW5cIj5cbiAgICAgICAgICAgIDxuZy10ZW1wbGF0ZVxuICAgICAgICAgICAgICAgIFtuZ0lmXT1cIm5vUmVjb3Jkc1RlbXBsYXRlPy50ZW1wbGF0ZVJlZlwiXG4gICAgICAgICAgICAgICAgW3RlbXBsYXRlQ29udGV4dF09XCJ7XG4gICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlUmVmOiBub1JlY29yZHNUZW1wbGF0ZT8udGVtcGxhdGVSZWZcbiAgICAgICAgICAgICAgICAgfVwiPlxuICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCIhbm9SZWNvcmRzVGVtcGxhdGU/LnRlbXBsYXRlUmVmXCI+XG4gICAgICAgICAgICAgICAge3tub1JlY29yZHNUZXh0fX1cbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICA8L3RkPlxuICAgIDwvdHI+XG4gICAgPG5nLXRlbXBsYXRlIG5nRm9yXG4gICAgICAgIFtuZ0Zvck9mXT1cImRhdGFcIlxuICAgICAgICBbbmdGb3JUcmFja0J5XT1cInRyYWNrQnlXcmFwcGVyXCJcbiAgICAgICAgbGV0LWl0ZW1cbiAgICAgICAgbGV0LXJvd0luZGV4PVwiaW5kZXhcIj5cbiAgICAgICAgPHRyICpuZ0lmPVwiaXNHcm91cChpdGVtKSAmJiBpc1BhcmVudEdyb3VwRXhwYW5kZWQoaXRlbSkgJiYgc2hvd0dyb3VwSGVhZGVyKGl0ZW0pXCJcbiAgICAgICAgICAgIGtlbmRvR3JpZEdyb3VwSGVhZGVyXG4gICAgICAgICAgICAgICAgW2NvbHVtbnNdPVwiY29sdW1uc1wiXG4gICAgICAgICAgICAgICAgW2dyb3Vwc109XCJncm91cHNcIlxuICAgICAgICAgICAgICAgIFtpdGVtXT1cIml0ZW1cIlxuICAgICAgICAgICAgICAgIFtoYXNEZXRhaWxzXT1cImRldGFpbFRlbXBsYXRlPy50ZW1wbGF0ZVJlZlwiXG4gICAgICAgICAgICAgICAgW3NraXBHcm91cERlY29yYXRpb25dPVwic2tpcEdyb3VwRGVjb3JhdGlvblwiXG4gICAgICAgICAgICAgICAgW2hhc0dyb3VwSGVhZGVyQ29sdW1uXT1cImhhc0dyb3VwSGVhZGVyQ29sdW1uXCJcbiAgICAgICAgICAgICAgICBbZ3JvdXBIZWFkZXJDb2x1bW5zXT1cImdyb3VwSGVhZGVyQ29sdW1uc1wiXG4gICAgICAgICAgICAgICAgW3Jvd0luZGV4XT1cInJvd0luZGV4ICsgMVwiXG4gICAgICAgICAgICAgICAgW3RvdGFsQ29sdW1uc0NvdW50XT1cInRvdGFsQ29sdW1uc0NvdW50XCJcbiAgICAgICAgICAgIGtlbmRvR3JpZExvZ2ljYWxSb3dcbiAgICAgICAgICAgICAgICBbbG9naWNhbFJvd0luZGV4XT1cImxvZ2ljYWxSb3dJbmRleChyb3dJbmRleClcIlxuICAgICAgICAgICAgICAgIFtsb2dpY2FsU2xhdmVSb3ddPVwibG9ja2VkQ29sdW1uc0NvdW50ID4gMFwiXG4gICAgICAgICAgICAgICAgW2xvZ2ljYWxDZWxsc0NvdW50XT1cImNvbHVtbnMubGVuZ3RoXCJcbiAgICAgICAgICAgICAgICBbbG9naWNhbFNsYXZlQ2VsbHNDb3VudF09XCJncm91cEhlYWRlclNsYXZlQ2VsbHNDb3VudFwiPlxuICAgICAgICA8L3RyPlxuICAgICAgICA8dHJcbiAgICAgICAgICAgICpuZ0lmPVwiaXNEYXRhSXRlbShpdGVtKSAmJiAoIWl0ZW0uZ3JvdXAgfHwgaXNEYXRhSXRlbUluRXhwYW5kZWRHcm91cChpdGVtKSlcIlxuICAgICAgICAgICAga2VuZG9HcmlkTG9naWNhbFJvd1xuICAgICAgICAgICAgICAgIFtkYXRhUm93SW5kZXhdPVwiaXRlbS5pbmRleFwiXG4gICAgICAgICAgICAgICAgW2RhdGFJdGVtXT1cIml0ZW0uZGF0YVwiXG4gICAgICAgICAgICAgICAgW2xvZ2ljYWxSb3dJbmRleF09XCJsb2dpY2FsUm93SW5kZXgocm93SW5kZXgpXCJcbiAgICAgICAgICAgICAgICBbbG9naWNhbFNsYXZlUm93XT1cImxvY2tlZENvbHVtbnNDb3VudCA+IDBcIlxuICAgICAgICAgICAgICAgIFtsb2dpY2FsQ2VsbHNDb3VudF09XCJjb2x1bW5zLmxlbmd0aFwiXG4gICAgICAgICAgICAgICAgW2xvZ2ljYWxTbGF2ZUNlbGxzQ291bnRdPVwidW5sb2NrZWRDb2x1bW5zQ291bnRcIlxuICAgICAgICAgICAgW2NsYXNzLmstZ3JpZC1yb3ctc3RpY2t5XT1cInJvd1N0aWNreSA/IHJvd1N0aWNreSh7IGRhdGFJdGVtOiBpdGVtLmRhdGEsIGluZGV4OiBpdGVtLmluZGV4IH0pIDogZmFsc2VcIlxuICAgICAgICAgICAgW25nQ2xhc3NdPVwicm93Q2xhc3MoeyBkYXRhSXRlbTogaXRlbS5kYXRhLCBpbmRleDogaXRlbS5pbmRleCB9KVwiXG4gICAgICAgICAgICBbY2xhc3Muay1hbHRdPVwiaXNPZGQoaXRlbSlcIlxuICAgICAgICAgICAgW2NsYXNzLmstbWFzdGVyLXJvd109XCJkZXRhaWxUZW1wbGF0ZT8udGVtcGxhdGVSZWZcIlxuICAgICAgICAgICAgW2NsYXNzLmstZ3JpZC1lZGl0LXJvd109XCJpc0VkaXRpbmdSb3coaXRlbS5pbmRleClcIlxuICAgICAgICAgICAgW2F0dHIuZGF0YS1rZW5kby1ncmlkLWl0ZW0taW5kZXhdPVwiaXRlbS5pbmRleFwiXG4gICAgICAgICAgICBbY2xhc3Muay1zdGF0ZS1zZWxlY3RlZF09XCJpc1NlbGVjdGFibGUoKSAmJiBpc1Jvd1NlbGVjdGVkKGl0ZW0pXCI+XG4gICAgICAgICAgICA8bmctdGVtcGxhdGUgW25nSWZdPVwiIXNraXBHcm91cERlY29yYXRpb25cIj5cbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJrLWdyb3VwLWNlbGxcIiAqbmdGb3I9XCJsZXQgZyBvZiBncm91cHNcIiByb2xlPVwicHJlc2VudGF0aW9uXCI+PC90ZD5cbiAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICAgICAgICA8dGQgY2xhc3M9XCJrLWhpZXJhcmNoeS1jZWxsXCJcbiAgICAgICAgICAgICAgICAqbmdJZj1cImRldGFpbFRlbXBsYXRlPy50ZW1wbGF0ZVJlZlwiXG4gICAgICAgICAgICAgICAga2VuZG9HcmlkTG9naWNhbENlbGxcbiAgICAgICAgICAgICAgICAgICAgW2xvZ2ljYWxSb3dJbmRleF09XCJsb2dpY2FsUm93SW5kZXgocm93SW5kZXgpXCJcbiAgICAgICAgICAgICAgICAgICAgW2xvZ2ljYWxDb2xJbmRleF09XCIwXCJcbiAgICAgICAgICAgICAgICAgICAgW2RhdGFSb3dJbmRleF09XCJpdGVtLmluZGV4XCJcbiAgICAgICAgICAgICAgICAgICAgW2RhdGFJdGVtXT1cIml0ZW0uZGF0YVwiXG4gICAgICAgICAgICAgICAgICAgIFtkZXRhaWxFeHBhbmRDZWxsXT1cInRydWVcIlxuICAgICAgICAgICAgICAgICAgICBhcmlhLXNlbGVjdGVkPVwiZmFsc2VcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImstaWNvblwiXG4gICAgICAgICAgICAgICAgICAgICpuZ0lmPVwiZGV0YWlsVGVtcGxhdGUuc2hvd0lmKGl0ZW0uZGF0YSwgaXRlbS5pbmRleClcIlxuICAgICAgICAgICAgICAgICAgICBbbmdDbGFzc109XCJkZXRhaWxCdXR0b25TdHlsZXMoaXRlbSlcIlxuICAgICAgICAgICAgICAgICAgICBbYXR0ci50aXRsZV09XCJkZXRhaWxCdXR0b25UaXRsZShpdGVtKVwiXG4gICAgICAgICAgICAgICAgICAgIGhyZWY9XCIjXCIgdGFiaW5kZXg9XCItMVwiIChjbGljayk9XCJ0b2dnbGVSb3coaXRlbS5pbmRleCwgaXRlbS5kYXRhKVwiPjwvYT5cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICA8dGRcbiAgICAgICAgICAgICAgICBrZW5kb0dyaWRDZWxsXG4gICAgICAgICAgICAgICAgICAgIFtyb3dJbmRleF09XCJpdGVtLmluZGV4XCJcbiAgICAgICAgICAgICAgICAgICAgW2NvbHVtbkluZGV4XT1cImxvY2tlZENvbHVtbnNDb3VudCArIGNvbHVtbkluZGV4XCJcbiAgICAgICAgICAgICAgICAgICAgW2F0dHIuZGF0YS1rZW5kby1ncmlkLWNvbHVtbi1pbmRleF09XCJsb2NrZWRDb2x1bW5zQ291bnQgKyBjb2x1bW5JbmRleFwiXG4gICAgICAgICAgICAgICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAgICAgICAgICAgICAgICAgICAgW2RhdGFJdGVtXT1cIml0ZW0uZGF0YVwiXG4gICAgICAgICAgICAgICAgICAgIFtpc0xvYWRpbmddPVwiaXNMb2FkaW5nXCJcbiAgICAgICAgICAgICAgICAgICAgW2lzVmlydHVhbF09XCJpc1ZpcnR1YWxcIlxuICAgICAgICAgICAgICAgICAgICBbbG9hZGluZ1RlbXBsYXRlXT1cImxvYWRpbmdUZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAga2VuZG9HcmlkTG9naWNhbENlbGxcbiAgICAgICAgICAgICAgICAgICAgW2xvZ2ljYWxSb3dJbmRleF09XCJsb2dpY2FsUm93SW5kZXgocm93SW5kZXgpXCJcbiAgICAgICAgICAgICAgICAgICAgW2xvZ2ljYWxDb2xJbmRleF09XCJsb2dpY2FsQ29sSW5kZXgoY29sdW1uKVwiXG4gICAgICAgICAgICAgICAgICAgIFtkYXRhUm93SW5kZXhdPVwiaXRlbS5pbmRleFwiXG4gICAgICAgICAgICAgICAgICAgIFtkYXRhSXRlbV09XCJpdGVtLmRhdGFcIlxuICAgICAgICAgICAgICAgICAgICBbY29sSW5kZXhdPVwiY29sdW1uSW5kZXhcIlxuICAgICAgICAgICAgICAgICAgICBbY29sU3Bhbl09XCJjb2x1bW4uY29sc3BhblwiXG4gICAgICAgICAgICAgICAgICAgIHJvbGU9XCJncmlkY2VsbFwiXG4gICAgICAgICAgICAgICAgICAgIFthdHRyLmFyaWEtc2VsZWN0ZWRdPVwiaXNTZWxlY3RhYmxlKCkgPyBpc0FyaWFTZWxlY3RlZChpdGVtLCBjb2x1bW4pIDogdW5kZWZpbmVkXCJcbiAgICAgICAgICAgICAgICAgICAgW2NsYXNzLmstZ3JpZC1jb250ZW50LXN0aWNreV09XCJjb2x1bW4uc3RpY2t5XCJcbiAgICAgICAgICAgICAgICAgICAgW2NsYXNzLmstdG91Y2gtYWN0aW9uLW5vbmVdPVwiaXNTZWxlY3RhYmxlKCkgJiYgJGFueShzZWxlY3RhYmxlKS5kcmFnXCJcbiAgICAgICAgICAgICAgICAgICAgW2NsYXNzLmstdG91Y2gtYWN0aW9uLWF1dG9dPVwiIShpc1NlbGVjdGFibGUoKSAmJiAkYW55KHNlbGVjdGFibGUpLmRyYWcpXCJcbiAgICAgICAgICAgICAgICBbbmdDbGFzc109XCJjb2x1bW4uY3NzQ2xhc3NcIlxuICAgICAgICAgICAgICAgIFtjbGFzcy5rLWdyaWQtZWRpdC1jZWxsXT1cImlzRWRpdGluZ0NlbGwoaXRlbS5pbmRleCwgY29sdW1uKVwiXG4gICAgICAgICAgICAgICAgW25nU3R5bGVdPVwiY29sdW1uLnN0aWNreSA/IGFkZFN0aWNreUNvbHVtblN0eWxlcyhjb2x1bW4pIDogY29sdW1uLnN0eWxlXCJcbiAgICAgICAgICAgICAgICBbYXR0ci5jb2xzcGFuXT1cImNvbHVtbi5jb2xzcGFuXCJcbiAgICAgICAgICAgICAgICBbY2xhc3Muay1zdGF0ZS1zZWxlY3RlZF09XCJpc1NlbGVjdGFibGUgJiYgY2VsbFNlbGVjdGlvblNlcnZpY2UuaXNDZWxsU2VsZWN0ZWQoaXRlbSwgY29sdW1uKVwiXG4gICAgICAgICAgICAgICAgKm5nRm9yPVwibGV0IGNvbHVtbiBvZiBjb2x1bW5zOyBsZXQgY29sdW1uSW5kZXggPSBpbmRleDsgdHJhY2tCeTogdHJhY2tCeUNvbHVtbnM7XCI+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICA8L3RyPlxuICAgICAgICA8dHIgKm5nSWY9XCJpc0RhdGFJdGVtKGl0ZW0pICYmXG4gICAgICAgICAgICAgICAgKCFpdGVtLmdyb3VwIHx8IGlzRGF0YUl0ZW1JbkV4cGFuZGVkR3JvdXAoaXRlbSkpICYmXG4gICAgICAgICAgICAgICAgZGV0YWlsVGVtcGxhdGU/LnRlbXBsYXRlUmVmICYmXG4gICAgICAgICAgICAgICAgZGV0YWlsVGVtcGxhdGUuc2hvd0lmKGl0ZW0uZGF0YSwgaXRlbS5pbmRleCkgJiZcbiAgICAgICAgICAgICAgICBpc0V4cGFuZGVkKGl0ZW0pXCJcbiAgICAgICAgICAgIGNsYXNzPVwiay1kZXRhaWwtcm93XCJcbiAgICAgICAgICAgIFtjbGFzcy5rLWFsdF09XCJpc09kZChpdGVtKVwiXG4gICAgICAgICAgICBrZW5kb0dyaWRMb2dpY2FsUm93XG4gICAgICAgICAgICAgICAgW2RhdGFSb3dJbmRleF09XCJpdGVtLmluZGV4XCJcbiAgICAgICAgICAgICAgICBbZGF0YUl0ZW1dPVwiaXRlbS5kYXRhXCJcbiAgICAgICAgICAgICAgICBbbG9naWNhbFJvd0luZGV4XT1cImxvZ2ljYWxSb3dJbmRleChyb3dJbmRleCkgKyAxXCJcbiAgICAgICAgICAgICAgICBbbG9naWNhbFNsYXZlUm93XT1cImZhbHNlXCJcbiAgICAgICAgICAgICAgICBbbG9naWNhbENlbGxzQ291bnRdPVwiMVwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICA8dGQgY2xhc3M9XCJrLWdyb3VwLWNlbGxcIiAqbmdGb3I9XCJsZXQgZyBvZiBncm91cHNcIj48L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzPVwiay1oaWVyYXJjaHktY2VsbFwiPjwvdGQ+XG4gICAgICAgICAgICA8dGQgY2xhc3M9XCJrLWRldGFpbC1jZWxsXCJcbiAgICAgICAgICAgICAgICBbYXR0ci5jb2xzcGFuXT1cImNvbHVtbnNTcGFuXCJcbiAgICAgICAgICAgICAgICBrZW5kb0dyaWRMb2dpY2FsQ2VsbFxuICAgICAgICAgICAgICAgICAgICBbbG9naWNhbFJvd0luZGV4XT1cImxvZ2ljYWxSb3dJbmRleChyb3dJbmRleCkgKyAxXCJcbiAgICAgICAgICAgICAgICAgICAgW2xvZ2ljYWxDb2xJbmRleF09XCIwXCJcbiAgICAgICAgICAgICAgICAgICAgW2RhdGFSb3dJbmRleF09XCJpdGVtLmluZGV4XCJcbiAgICAgICAgICAgICAgICAgICAgW2RhdGFJdGVtXT1cIml0ZW0uZGF0YVwiXG4gICAgICAgICAgICAgICAgICAgIFtjb2xJbmRleF09XCIwXCJcbiAgICAgICAgICAgICAgICAgICAgW2NvbFNwYW5dPVwiYWxsQ29sdW1uc1NwYW4gKyAxXCJcbiAgICAgICAgICAgICAgICAgICAgcm9sZT1cImdyaWRjZWxsXCIgYXJpYS1zZWxlY3RlZD1cImZhbHNlXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlXG4gICAgICAgICAgICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cImRldGFpbFRlbXBsYXRlLnRlbXBsYXRlUmVmXCJcbiAgICAgICAgICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIntcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFJdGVtOiBpdGVtLmRhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICByb3dJbmRleDogaXRlbS5pbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgICRpbXBsaWNpdDogaXRlbS5kYXRhXG4gICAgICAgICAgICAgICAgICAgIH1cIj5cbiAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgPC90cj5cbiAgICAgICAgPHRyICpuZ0lmPVwiaXNGb290ZXIoaXRlbSkgJiZcbiAgICAgICAgICAgICAgICBpdGVtLmdyb3VwICYmXG4gICAgICAgICAgICAgICAgKGlzRm9vdGVySXRlbUluRXhwYW5kZWRHcm91cChpdGVtKSB8fCAoc2hvd0dyb3VwRm9vdGVycyAmJiBpc1BhcmVudEdyb3VwRXhwYW5kZWQoaXRlbS5ncm91cCkpKSAmJlxuICAgICAgICAgICAgICAgICFpdGVtLmRhdGEuaGlkZUZvb3RlclwiXG4gICAgICAgICAgICBjbGFzcz1cImstZ3JvdXAtZm9vdGVyXCJcbiAgICAgICAgICAgIGtlbmRvR3JpZExvZ2ljYWxSb3dcbiAgICAgICAgICAgICAgICBbbG9naWNhbFJvd0luZGV4XT1cImxvZ2ljYWxSb3dJbmRleChyb3dJbmRleClcIlxuICAgICAgICAgICAgICAgIFtsb2dpY2FsU2xhdmVSb3ddPVwibG9ja2VkQ29sdW1uc0NvdW50ID4gMFwiXG4gICAgICAgICAgICAgICAgW2xvZ2ljYWxDZWxsc0NvdW50XT1cImNvbHVtbnMubGVuZ3RoXCJcbiAgICAgICAgICAgICAgICBbbG9naWNhbFNsYXZlQ2VsbHNDb3VudF09XCJ1bmxvY2tlZENvbHVtbnNDb3VudFwiPlxuICAgICAgICAgICAgPG5nLXRlbXBsYXRlIFtuZ0lmXT1cIiFza2lwR3JvdXBEZWNvcmF0aW9uXCI+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwiay1ncm91cC1jZWxsXCIgKm5nRm9yPVwibGV0IGcgb2YgZ3JvdXBzXCI+PC90ZD5cbiAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICAgICAgICA8dGQgY2xhc3M9XCJrLWhpZXJhcmNoeS1jZWxsXCJcbiAgICAgICAgICAgICAgICAqbmdJZj1cImRldGFpbFRlbXBsYXRlPy50ZW1wbGF0ZVJlZlwiXG4gICAgICAgICAgICAgICAga2VuZG9HcmlkTG9naWNhbENlbGxcbiAgICAgICAgICAgICAgICAgICAgW2xvZ2ljYWxSb3dJbmRleF09XCJsb2dpY2FsUm93SW5kZXgocm93SW5kZXgpXCJcbiAgICAgICAgICAgICAgICAgICAgW2xvZ2ljYWxDb2xJbmRleF09XCIwXCJcbiAgICAgICAgICAgICAgICAgICAgYXJpYS1zZWxlY3RlZD1cImZhbHNlXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRkIGtlbmRvR3JpZExvZ2ljYWxDZWxsXG4gICAgICAgICAgICAgICAgICAgIFtsb2dpY2FsUm93SW5kZXhdPVwibG9naWNhbFJvd0luZGV4KHJvd0luZGV4KVwiXG4gICAgICAgICAgICAgICAgICAgIFtsb2dpY2FsQ29sSW5kZXhdPVwibG9naWNhbENvbEluZGV4KGNvbHVtbilcIlxuICAgICAgICAgICAgICAgIFthdHRyLmRhdGEtc2tpcF09XCJza2lwR3JvdXBEZWNvcmF0aW9uXCJcbiAgICAgICAgICAgICAgICAqbmdGb3I9XCJsZXQgY29sdW1uIG9mIGZvb3RlckNvbHVtbnM7IGxldCBjb2x1bW5JbmRleCA9IGluZGV4OyB0cmFja0J5OiB0cmFja0J5Q29sdW1ucztcIj5cbiAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGVcbiAgICAgICAgICAgICAgICAgICAgW3RlbXBsYXRlQ29udGV4dF09XCJ7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVJlZjogY29sdW1uLmdyb3VwRm9vdGVyVGVtcGxhdGVSZWYsXG4gICAgICAgICAgICAgICAgICAgICAgICBncm91cDogaXRlbS5kYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQ6IGNvbHVtbi5maWVsZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbHVtbjogY29sdW1uLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWdncmVnYXRlczogaXRlbS5kYXRhPy5hZ2dyZWdhdGVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgJGltcGxpY2l0OiBpdGVtLmRhdGE/LmFnZ3JlZ2F0ZXNcbiAgICAgICAgICAgICAgICAgICAgfVwiPlxuICAgICAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICAgICAgIDwvdGQ+XG4gICAgICAgIDwvdHI+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgICA8a2VuZG8tcmVzaXplLXNlbnNvciAqbmdJZj1cInJvd1N0aWNreVwiIChyZXNpemUpPVwicmVzaXplSGFuZGxlcigpXCI+PC9rZW5kby1yZXNpemUtc2Vuc29yPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0RldGFpbHNTZXJ2aWNlLFxuICAgICAgICBHcm91cHNTZXJ2aWNlLFxuICAgICAgICBDaGFuZ2VOb3RpZmljYXRpb25TZXJ2aWNlLFxuICAgICAgICBFZGl0U2VydmljZSxcbiAgICAgICAgTG9jYWxpemF0aW9uU2VydmljZSxcbiAgICAgICAgTmdab25lLFxuICAgICAgICBSZW5kZXJlcjIsXG4gICAgICAgIEVsZW1lbnRSZWYsXG4gICAgICAgIERvbUV2ZW50c1NlcnZpY2UsXG4gICAgICAgIFNlbGVjdGlvblNlcnZpY2UsXG4gICAgICAgIENlbGxTZWxlY3Rpb25TZXJ2aWNlLFxuICAgICAgICBDb2x1bW5JbmZvU2VydmljZSxcbiAgICAgICAgTmF2aWdhdGlvblNlcnZpY2VdKVxuXSwgVGFibGVCb2R5Q29tcG9uZW50KTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBDZWxsQ29tcG9uZW50ID0gY2xhc3MgQ2VsbENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoZWRpdFNlcnZpY2UsIGlkU2VydmljZSwgbG9jYWxpemF0aW9uU2VydmljZSwgY2VsbENvbnRleHQpIHtcbiAgICAgICAgdGhpcy5lZGl0U2VydmljZSA9IGVkaXRTZXJ2aWNlO1xuICAgICAgICB0aGlzLmlkU2VydmljZSA9IGlkU2VydmljZTtcbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb25TZXJ2aWNlID0gbG9jYWxpemF0aW9uU2VydmljZTtcbiAgICAgICAgdGhpcy5jZWxsQ29udGV4dCA9IGNlbGxDb250ZXh0O1xuICAgICAgICB0aGlzLmlzTmV3ID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaXNWaXJ0dWFsID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX3RlbXBsYXRlQ29udGV4dCA9IHt9O1xuICAgICAgICB0aGlzLl9lZGl0VGVtcGxhdGVDb250ZXh0ID0ge307XG4gICAgfVxuICAgIGdldCBjb21tYW5kQ2VsbENsYXNzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pc0NvbW1hbmQodGhpcy5jb2x1bW4pO1xuICAgIH1cbiAgICBzZXQgcm93SW5kZXgoaW5kZXgpIHtcbiAgICAgICAgdGhpcy5fcm93SW5kZXggPSBpbmRleDtcbiAgICAgICAgdGhpcy51cGRhdGVDZWxsQ29udGV4dCgpO1xuICAgIH1cbiAgICBnZXQgcm93SW5kZXgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yb3dJbmRleDtcbiAgICB9XG4gICAgZ2V0IGlzRWRpdGVkKCkge1xuICAgICAgICBpZiAoISh0aGlzLmVkaXRTZXJ2aWNlLmlzRWRpdGluZygpIHx8IHRoaXMuaXNOZXcpIHx8ICF0aGlzLmlzQ29sdW1uRWRpdGFibGUpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlZGl0Q29udGV4dCA9IHRoaXMuZWRpdFNlcnZpY2UuY29sdW1uQ29udGV4dCh0aGlzLnJvd0luZGV4LCB0aGlzLmNvbHVtbik7XG4gICAgICAgIHJldHVybiB0aGlzLmlzRmllbGRFZGl0YWJsZShlZGl0Q29udGV4dCwgdGhpcy5jb2x1bW4pO1xuICAgIH1cbiAgICBnZXQgc2hvd0xvYWRpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzVmlydHVhbCAmJiB0aGlzLmlzTG9hZGluZztcbiAgICB9XG4gICAgZ2V0IGZvcm1Hcm91cCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWRpdFNlcnZpY2UuY29udGV4dCh0aGlzLnJvd0luZGV4KS5ncm91cDtcbiAgICB9XG4gICAgZ2V0IHRlbXBsYXRlQ29udGV4dCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RlbXBsYXRlQ29udGV4dDtcbiAgICB9XG4gICAgZ2V0IGVkaXRUZW1wbGF0ZUNvbnRleHQoKSB7XG4gICAgICAgIHRoaXMuX2VkaXRUZW1wbGF0ZUNvbnRleHQuJGltcGxpY2l0ID0gdGhpcy5mb3JtR3JvdXA7XG4gICAgICAgIHRoaXMuX2VkaXRUZW1wbGF0ZUNvbnRleHQuaXNOZXcgPSB0aGlzLmlzTmV3O1xuICAgICAgICB0aGlzLl9lZGl0VGVtcGxhdGVDb250ZXh0LmNvbHVtbiA9IHRoaXMuY29sdW1uO1xuICAgICAgICB0aGlzLl9lZGl0VGVtcGxhdGVDb250ZXh0LmRhdGFJdGVtID0gdGhpcy5kYXRhSXRlbTtcbiAgICAgICAgdGhpcy5fZWRpdFRlbXBsYXRlQ29udGV4dC5mb3JtR3JvdXAgPSB0aGlzLmZvcm1Hcm91cDtcbiAgICAgICAgdGhpcy5fZWRpdFRlbXBsYXRlQ29udGV4dC5yb3dJbmRleCA9IHRoaXMucm93SW5kZXg7XG4gICAgICAgIHJldHVybiB0aGlzLl9lZGl0VGVtcGxhdGVDb250ZXh0O1xuICAgIH1cbiAgICBnZXQgZm9ybWF0KCkge1xuICAgICAgICBpZiAoaXNDb2x1bW5Db21wb25lbnQodGhpcy5jb2x1bW4pICYmICFpc051bGxPckVtcHR5U3RyaW5nKHRoaXMuY29sdW1uLmZvcm1hdCkpIHtcbiAgICAgICAgICAgIHJldHVybiBleHRyYWN0Rm9ybWF0KHRoaXMuY29sdW1uLmZvcm1hdCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZ2V0IGlzQm91bmRDb2x1bW4oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbHVtbi5maWVsZCAmJiAhdGhpcy5jb2x1bW4udGVtcGxhdGVSZWY7XG4gICAgfVxuICAgIGdldCBpc0NoZWNrYm94Q29sdW1uKCkge1xuICAgICAgICByZXR1cm4gaXNDaGVja2JveENvbHVtbih0aGlzLmNvbHVtbikgJiYgIXRoaXMuY29sdW1uLnRlbXBsYXRlUmVmO1xuICAgIH1cbiAgICBnZXQgc2VsZWN0aW9uQ2hlY2tib3hJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWRTZXJ2aWNlLnNlbGVjdGlvbkNoZWNrYm94SWQodGhpcy5yb3dJbmRleCk7XG4gICAgfVxuICAgIGdldCBzZWxlY3Rpb25DaGVja2JveExhYmVsKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2NhbGl6YXRpb25TZXJ2aWNlLmdldCgnc2VsZWN0aW9uQ2hlY2tib3hMYWJlbCcpO1xuICAgIH1cbiAgICBnZXQgaXNTcGFuQ29sdW1uKCkge1xuICAgICAgICByZXR1cm4gaXNTcGFuQ29sdW1uKHRoaXMuY29sdW1uKSAmJiAhdGhpcy5jb2x1bW4udGVtcGxhdGVSZWY7XG4gICAgfVxuICAgIGdldCBjaGlsZENvbHVtbnMoKSB7XG4gICAgICAgIHJldHVybiBjb2x1bW5zVG9SZW5kZXIoW3RoaXMuY29sdW1uXSk7XG4gICAgfVxuICAgIGdldCBpc0NvbHVtbkVkaXRhYmxlKCkge1xuICAgICAgICBpZiAoIXRoaXMuY29sdW1uIHx8IHRoaXMuaXNDb21tYW5kKHRoaXMuY29sdW1uKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmNvbHVtbi5lZGl0YWJsZSAhPT0gZmFsc2U7XG4gICAgfVxuICAgIG5nRG9DaGVjaygpIHtcbiAgICAgICAgdGhpcy51cGRhdGVDZWxsQ29udGV4dCgpO1xuICAgIH1cbiAgICBuZ09uQ2hhbmdlcyhfY2hhbmdlcykge1xuICAgICAgICB0aGlzLnVwZGF0ZVRlbXBsYXRlQ29udGV4dCgpO1xuICAgIH1cbiAgICBuZ0FmdGVyQ29udGVudENoZWNrZWQoKSB7XG4gICAgICAgIHRoaXMudXBkYXRlVGVtcGxhdGVDb250ZXh0KCk7XG4gICAgfVxuICAgIGlzQ29tbWFuZChjb2x1bW4pIHtcbiAgICAgICAgcmV0dXJuIGNvbHVtbiBpbnN0YW5jZW9mIENvbW1hbmRDb2x1bW5Db21wb25lbnQ7XG4gICAgfVxuICAgIGlzRmllbGRFZGl0YWJsZShlZGl0Q29udGV4dCwgY29sdW1uKSB7XG4gICAgICAgIGlmICghaXNQcmVzZW50KGVkaXRDb250ZXh0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1ByZXNlbnQoY29sdW1uLmVkaXRUZW1wbGF0ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpc1ByZXNlbnQoZWRpdENvbnRleHQuZ3JvdXApICYmIGlzUHJlc2VudChlZGl0Q29udGV4dC5ncm91cC5nZXQoY29sdW1uLmZpZWxkKSk7XG4gICAgfVxuICAgIHVwZGF0ZUNlbGxDb250ZXh0KCkge1xuICAgICAgICBpZiAodGhpcy5jZWxsQ29udGV4dCkge1xuICAgICAgICAgICAgdGhpcy5jZWxsQ29udGV4dC5yb3dJbmRleCA9IHRoaXMuX3Jvd0luZGV4O1xuICAgICAgICB9XG4gICAgfVxuICAgIHVwZGF0ZVRlbXBsYXRlQ29udGV4dCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmNvbHVtbi50ZW1wbGF0ZVJlZikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvbnRleHQgPSB0aGlzLl90ZW1wbGF0ZUNvbnRleHQ7XG4gICAgICAgIGNvbnRleHQuaXNOZXcgPSB0aGlzLmlzTmV3O1xuICAgICAgICBjb250ZXh0LmNvbHVtbiA9IHRoaXMuY29sdW1uO1xuICAgICAgICBjb250ZXh0LmRhdGFJdGVtID0gdGhpcy5kYXRhSXRlbTtcbiAgICAgICAgY29udGV4dC5yb3dJbmRleCA9IHRoaXMucm93SW5kZXg7XG4gICAgICAgIGNvbnRleHQuY29sdW1uSW5kZXggPSB0aGlzLmNvbHVtbkluZGV4O1xuICAgICAgICBjb250ZXh0LiRpbXBsaWNpdCA9IHRoaXMuZGF0YUl0ZW07XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLWNvbW1hbmQtY2VsbCcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBDZWxsQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjb21tYW5kQ2VsbENsYXNzXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KVxuXSwgQ2VsbENvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG5dLCBDZWxsQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjb2x1bW5JbmRleFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIENlbGxDb21wb25lbnQucHJvdG90eXBlLCBcImlzTmV3XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgQ2VsbENvbXBvbmVudC5wcm90b3R5cGUsIFwiaXNMb2FkaW5nXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgQ2VsbENvbXBvbmVudC5wcm90b3R5cGUsIFwiaXNWaXJ0dWFsXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBUZW1wbGF0ZVJlZilcbl0sIENlbGxDb21wb25lbnQucHJvdG90eXBlLCBcImxvYWRpbmdUZW1wbGF0ZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW051bWJlcl0pXG5dLCBDZWxsQ29tcG9uZW50LnByb3RvdHlwZSwgXCJyb3dJbmRleFwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIENlbGxDb21wb25lbnQucHJvdG90eXBlLCBcImRhdGFJdGVtXCIsIHZvaWQgMCk7XG5DZWxsQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkQ2VsbF0nLFxuICAgICAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8bmctY29udGFpbmVyIFtuZ1N3aXRjaF09XCJpc0VkaXRlZFwiPlxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdTd2l0Y2hDYXNlPVwiZmFsc2VcIj5cbiAgICAgICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiIXNob3dMb2FkaW5nOyBlbHNlIGxvYWRpbmdcIj5cbiAgICAgICAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlIFtuZ0lmXT1cImNvbHVtbi50ZW1wbGF0ZVJlZlwiXG4gICAgICAgICAgICAgICAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldF09XCJjb2x1bW4udGVtcGxhdGVSZWZcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cInRlbXBsYXRlQ29udGV4dFwiPlxuICAgICAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGUgW25nSWZdPVwiaXNTcGFuQ29sdW1uXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGUgbmdGb3IgbGV0LWNoaWxkQ29sdW1uIFtuZ0Zvck9mXT1cImNoaWxkQ29sdW1uc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGRhdGFJdGVtIHwgdmFsdWVPZjogY2hpbGRDb2x1bW4uZmllbGQ6IGNoaWxkQ29sdW1uLmZvcm1hdH19XG4gICAgICAgICAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGUgW25nSWZdPVwiaXNCb3VuZENvbHVtblwiPnt7IGRhdGFJdGVtIHwgdmFsdWVPZjogY29sdW1uLmZpZWxkOiBjb2x1bW4uZm9ybWF0fX08L25nLXRlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGUgW25nSWZdPVwiaXNDaGVja2JveENvbHVtbiAmJiAhaXNOZXdcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiay1jaGVja2JveFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2tlbmRvR3JpZFNlbGVjdGlvbkNoZWNrYm94XT1cInJvd0luZGV4XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbYXR0ci5pZF09XCJzZWxlY3Rpb25DaGVja2JveElkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cInNlbGVjdGlvbkNoZWNrYm94TGFiZWxcIiAvPlxuICAgICAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSAjbG9hZGluZz5cbiAgICAgICAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAqbmdJZj1cImxvYWRpbmdUZW1wbGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldF09XCJsb2FkaW5nVGVtcGxhdGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cInskaW1wbGljaXQ6IGNvbHVtbn1cIj5cbiAgICAgICAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiAqbmdJZj1cIiFsb2FkaW5nVGVtcGxhdGVcIiBjbGFzcz1cImstc2tlbGV0b24tdGV4dCBrLXNrZWxldG9uXCI+PC9kaXY+XG4gICAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdTd2l0Y2hDYXNlPVwidHJ1ZVwiPlxuICAgICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZVxuICAgICAgICAgICAgICAgICAgICAqbmdJZj1cImNvbHVtbi5lZGl0VGVtcGxhdGVSZWZcIlxuICAgICAgICAgICAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldF09XCJjb2x1bW4uZWRpdFRlbXBsYXRlUmVmXCJcbiAgICAgICAgICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cImVkaXRUZW1wbGF0ZUNvbnRleHRcIj5cbiAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICAgICAgICAgIDxuZy1jb250YWluZXIgW25nU3dpdGNoXT1cImNvbHVtbi5lZGl0b3JcIiAqbmdJZj1cIiFjb2x1bW4uZWRpdFRlbXBsYXRlUmVmXCI+XG4gICAgICAgICAgICAgICAgICAgIDxrZW5kby1udW1lcmljdGV4dGJveFxuICAgICAgICAgICAgICAgICAgICAgICAgKm5nU3dpdGNoQ2FzZT1cIidudW1lcmljJ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICBbZm9ybWF0XT1cImZvcm1hdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBbZm9ybUNvbnRyb2xdPVwiZm9ybUdyb3VwLmdldChjb2x1bW4uZmllbGQpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGtlbmRvR3JpZEZvY3VzYWJsZVxuICAgICAgICAgICAgICAgICAgICA+PC9rZW5kby1udW1lcmljdGV4dGJveD5cblxuICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZGF0ZXBpY2tlclxuICAgICAgICAgICAgICAgICAgICAgICAgKm5nU3dpdGNoQ2FzZT1cIidkYXRlJ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICBbZm9ybWF0XT1cImZvcm1hdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBbZm9ybUNvbnRyb2xdPVwiZm9ybUdyb3VwLmdldChjb2x1bW4uZmllbGQpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGtlbmRvR3JpZEZvY3VzYWJsZVxuICAgICAgICAgICAgICAgICAgICA+PC9rZW5kby1kYXRlcGlja2VyPlxuXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgKm5nU3dpdGNoQ2FzZT1cIidib29sZWFuJ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJrLWNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIFtmb3JtQ29udHJvbF09XCJmb3JtR3JvdXAuZ2V0KGNvbHVtbi5maWVsZClcIlxuICAgICAgICAgICAgICAgICAgICAgICAga2VuZG9HcmlkRm9jdXNhYmxlXG4gICAgICAgICAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAqbmdTd2l0Y2hEZWZhdWx0XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImstdGV4dGJveFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBbZm9ybUNvbnRyb2xdPVwiZm9ybUdyb3VwLmdldChjb2x1bW4uZmllbGQpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGtlbmRvR3JpZEZvY3VzYWJsZVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX3BhcmFtKDMsIE9wdGlvbmFsKCkpLCBfX3BhcmFtKDMsIEluamVjdChDRUxMX0NPTlRFWFQpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0VkaXRTZXJ2aWNlLFxuICAgICAgICBJZFNlcnZpY2UsXG4gICAgICAgIExvY2FsaXphdGlvblNlcnZpY2UsIE9iamVjdF0pXG5dLCBDZWxsQ29tcG9uZW50KTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBgZWRpdGAgY29tbWFuZCBvZiB0aGUgR3JpZC4gWW91IGNhbiBhcHBseSB0aGlzIGRpcmVjdGl2ZSB0byBhbnkgYGJ1dHRvbmBcbiAqIGVsZW1lbnQgaW5zaWRlIGEgW0NvbW1hbmRDb2x1bW5Db21wb25lbnRdKHslIHNsdWcgYXBpX2dyaWRfY29tbWFuZGNvbHVtbmNvbXBvbmVudCAlfSkuXG4gKiBXaGVuIGFuIGFzc29jaWF0ZWQgYnV0dG9uIHdpdGggdGhlIGRpcmVjdGl2ZSBpcyBjbGlja2VkLCB0aGVcbiAqIFtlZGl0XSh7JSBzbHVnIGFwaV9ncmlkX2dyaWRjb21wb25lbnQgJX0jdG9jLWVkaXQpIGV2ZW50XG4gKiBpcyB0cmlnZ2VyZWQgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBlZGl0aW5nX2dyaWQgJX0pKS5cbiAqXG4gKiA+IFdoZW4gdGhlIHJvdyBpcyBpbiB0aGUgZWRpdCBtb2RlLCB0aGUgYnV0dG9uIHdpdGggYGtlbmRvR3JpZEVkaXRDb21tYW5kYCBpcyBhdXRvbWF0aWNhbGx5IGhpZGRlbi5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgaHRtbC1uby1ydW5cbiAqIDxrZW5kby1ncmlkPlxuICogICA8a2VuZG8tZ3JpZC1jb21tYW5kLWNvbHVtbiB0aXRsZT1cImNvbW1hbmRcIj5cbiAqICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkQ2VsbFRlbXBsYXRlPlxuICogICAgICAgPGJ1dHRvbiBrZW5kb0dyaWRFZGl0Q29tbWFuZCBjbGFzcz1cImstcHJpbWFyeVwiPkVkaXQ8L2J1dHRvbj5cbiAqICAgICA8L25nLXRlbXBsYXRlPlxuICogICA8L2tlbmRvLWdyaWQtY29tbWFuZC1jb2x1bW4+XG4gKiA8L2tlbmRvLWdyaWQ+XG4gKiBgYGBcbiAqXG4gKi9cbmxldCBFZGl0Q29tbWFuZERpcmVjdGl2ZSA9IGNsYXNzIEVkaXRDb21tYW5kRGlyZWN0aXZlIGV4dGVuZHMgQnV0dG9uIHtcbiAgICBjb25zdHJ1Y3RvcihlZGl0U2VydmljZSwgY2VsbENvbnRleHQsIGVsZW1lbnQsIHJlbmRlcmVyLCBsb2NhbGl6YXRpb24sIG5nWm9uZSkge1xuICAgICAgICBzdXBlcihlbGVtZW50LCByZW5kZXJlciwgbnVsbCwgbG9jYWxpemF0aW9uLCBuZ1pvbmUpO1xuICAgICAgICB0aGlzLmVkaXRTZXJ2aWNlID0gZWRpdFNlcnZpY2U7XG4gICAgICAgIHRoaXMuY2VsbENvbnRleHQgPSBjZWxsQ29udGV4dDtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuY29tbWFuZENsYXNzID0gdHJ1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCB2aXNpYmxlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pc0VkaXRlZCA/ICdub25lJyA6ICcnO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgb25DbGljayhlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdGhpcy5lZGl0U2VydmljZS5iZWdpbkVkaXQodGhpcy5yb3dJbmRleCk7XG4gICAgfVxuICAgIG5nRG9DaGVjaygpIHtcbiAgICAgICAgaWYgKHRoaXMuY2VsbENvbnRleHQpIHtcbiAgICAgICAgICAgIHRoaXMucm93SW5kZXggPSB0aGlzLmNlbGxDb250ZXh0LnJvd0luZGV4O1xuICAgICAgICAgICAgdGhpcy5pc0VkaXRlZCA9IHRoaXMuZWRpdFNlcnZpY2UuaXNFZGl0ZWQodGhpcy5yb3dJbmRleCk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ3N0eWxlLmRpc3BsYXknKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBFZGl0Q29tbWFuZERpcmVjdGl2ZS5wcm90b3R5cGUsIFwidmlzaWJsZVwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLWdyaWQtZWRpdC1jb21tYW5kJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBFZGl0Q29tbWFuZERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiY29tbWFuZENsYXNzXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0TGlzdGVuZXIoJ2NsaWNrJywgWyckZXZlbnQnXSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZ1bmN0aW9uKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cmV0dXJudHlwZVwiLCB2b2lkIDApXG5dLCBFZGl0Q29tbWFuZERpcmVjdGl2ZS5wcm90b3R5cGUsIFwib25DbGlja1wiLCBudWxsKTtcbkVkaXRDb21tYW5kRGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkRWRpdENvbW1hbmRdJ1xuICAgIH0pLFxuICAgIF9fcGFyYW0oMSwgSW5qZWN0KENFTExfQ09OVEVYVCkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRWRpdFNlcnZpY2UsIE9iamVjdCwgRWxlbWVudFJlZixcbiAgICAgICAgUmVuZGVyZXIyLFxuICAgICAgICBMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBOZ1pvbmVdKVxuXSwgRWRpdENvbW1hbmREaXJlY3RpdmUpO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGBjYW5jZWxgIGNvbW1hbmQgb2YgdGhlIEdyaWQuIFlvdSBjYW4gYXBwbHkgdGhpcyBkaXJlY3RpdmUgdG8gYW55IGBidXR0b25gXG4gKiBlbGVtZW50IGluc2lkZSBhIFtDb21tYW5kQ29sdW1uQ29tcG9uZW50XSh7JSBzbHVnIGFwaV9ncmlkX2NvbW1hbmRjb2x1bW5jb21wb25lbnQgJX0pLlxuICogV2hlbiBhbiBhc3NvY2lhdGVkIGJ1dHRvbiB3aXRoIHRoZSBkaXJlY3RpdmUgaXMgY2xpY2tlZCwgdGhlXG4gKiBbY2FuY2VsXSh7JSBzbHVnIGFwaV9ncmlkX2dyaWRjb21wb25lbnQgJX0jdG9jLWNhbmNlbCkgZXZlbnRcbiAqIGlzIHRyaWdnZXJlZCAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGVkaXRpbmdfZ3JpZCAlfSkpLlxuICpcbiAqID4gV2hlbiB0aGUgcm93IGlzIG5vdCBpbiB0aGUgZWRpdCBtb2RlLCB0aGUgYnV0dG9uIHdpdGggdGhlIGBrZW5kb0dyaWRDYW5jZWxDb21tYW5kYCBpcyBhdXRvbWF0aWNhbGx5IGhpZGRlbi5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgaHRtbC1uby1ydW5cbiAqIDxrZW5kby1ncmlkPlxuICogICA8a2VuZG8tZ3JpZC1jb21tYW5kLWNvbHVtbiB0aXRsZT1cImNvbW1hbmRcIj5cbiAqICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkQ2VsbFRlbXBsYXRlPlxuICogICAgICAgPGJ1dHRvbiBrZW5kb0dyaWRDYW5jZWxDb21tYW5kPkNhbmNlbCBjaGFuZ2VzPC9idXR0b24+XG4gKiAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgPC9rZW5kby1ncmlkLWNvbW1hbmQtY29sdW1uPlxuICogPC9rZW5kby1ncmlkPlxuICogYGBgXG4gKlxuICogWW91IGNhbiBjb250cm9sIHRoZSBjb250ZW50IG9mIHRoZSBidXR0b24gYmFzZWQgb24gdGhlIHN0YXRlIG9mIHRoZSByb3cuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWwtbm8tcnVuXG4gKiA8a2VuZG8tZ3JpZD5cbiAqICAgPGtlbmRvLWdyaWQtY29tbWFuZC1jb2x1bW4gdGl0bGU9XCJjb21tYW5kXCI+XG4gKiAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZENlbGxUZW1wbGF0ZSBsZXQtaXNOZXc9XCJpc05ld1wiPlxuICogICAgICAgPGJ1dHRvbiBrZW5kb0dyaWRDYW5jZWxDb21tYW5kPnt7aXNOZXcgPyAnRGlzY2FyZCcgOiAnQ2FuY2VsIGNoYW5nZXMnfX08L2J1dHRvbj5cbiAqICAgICA8L25nLXRlbXBsYXRlPlxuICogICA8L2tlbmRvLWdyaWQtY29tbWFuZC1jb2x1bW4+XG4gKiA8L2tlbmRvLWdyaWQ+XG4gKiBgYGBcbiAqL1xubGV0IENhbmNlbENvbW1hbmREaXJlY3RpdmUgPSBjbGFzcyBDYW5jZWxDb21tYW5kRGlyZWN0aXZlIGV4dGVuZHMgQnV0dG9uIHtcbiAgICBjb25zdHJ1Y3RvcihlZGl0U2VydmljZSwgY2VsbENvbnRleHQsIGVsZW1lbnQsIHJlbmRlcmVyLCBsb2NhbGl6YXRpb24sIG5nWm9uZSkge1xuICAgICAgICBzdXBlcihlbGVtZW50LCByZW5kZXJlciwgbnVsbCwgbG9jYWxpemF0aW9uLCBuZ1pvbmUpO1xuICAgICAgICB0aGlzLmVkaXRTZXJ2aWNlID0gZWRpdFNlcnZpY2U7XG4gICAgICAgIHRoaXMuY2VsbENvbnRleHQgPSBjZWxsQ29udGV4dDtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuY29tbWFuZENsYXNzID0gdHJ1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCB2aXNpYmxlKCkge1xuICAgICAgICByZXR1cm4gIXRoaXMuaXNFZGl0ZWQgPyAnbm9uZScgOiAnJztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uQ2xpY2soZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGlmICh0aGlzLmlzRWRpdGVkKSB7XG4gICAgICAgICAgICB0aGlzLmVkaXRTZXJ2aWNlLmVuZEVkaXQodGhpcy5yb3dJbmRleCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmdEb0NoZWNrKCkge1xuICAgICAgICBpZiAodGhpcy5jZWxsQ29udGV4dCkge1xuICAgICAgICAgICAgdGhpcy5yb3dJbmRleCA9IHRoaXMuY2VsbENvbnRleHQucm93SW5kZXg7XG4gICAgICAgICAgICB0aGlzLmlzRWRpdGVkID0gdGhpcy5lZGl0U2VydmljZS5pc0VkaXRlZCh0aGlzLnJvd0luZGV4KTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnc3R5bGUuZGlzcGxheScpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIENhbmNlbENvbW1hbmREaXJlY3RpdmUucHJvdG90eXBlLCBcInZpc2libGVcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnY2xhc3Muay1ncmlkLWNhbmNlbC1jb21tYW5kJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBDYW5jZWxDb21tYW5kRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJjb21tYW5kQ2xhc3NcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RMaXN0ZW5lcignY2xpY2snLCBbJyRldmVudCddKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpyZXR1cm50eXBlXCIsIHZvaWQgMClcbl0sIENhbmNlbENvbW1hbmREaXJlY3RpdmUucHJvdG90eXBlLCBcIm9uQ2xpY2tcIiwgbnVsbCk7XG5DYW5jZWxDb21tYW5kRGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkQ2FuY2VsQ29tbWFuZF0nXG4gICAgfSksXG4gICAgX19wYXJhbSgxLCBJbmplY3QoQ0VMTF9DT05URVhUKSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtFZGl0U2VydmljZSwgT2JqZWN0LCBFbGVtZW50UmVmLFxuICAgICAgICBSZW5kZXJlcjIsXG4gICAgICAgIExvY2FsaXphdGlvblNlcnZpY2UsXG4gICAgICAgIE5nWm9uZV0pXG5dLCBDYW5jZWxDb21tYW5kRGlyZWN0aXZlKTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBgc2F2ZWAgY29tbWFuZCBvZiB0aGUgR3JpZC4gWW91IGNhbiBhcHBseSB0aGlzIGRpcmVjdGl2ZSB0byBhbnkgYGJ1dHRvbmBcbiAqIGVsZW1lbnQgaW5zaWRlIGEgW0NvbW1hbmRDb2x1bW5Db21wb25lbnRdKHslIHNsdWcgYXBpX2dyaWRfY29tbWFuZGNvbHVtbmNvbXBvbmVudCAlfSkuXG4gKiBXaGVuIGFuIGFzc29jaWF0ZWQgYnV0dG9uIHdpdGggdGhlIGRpcmVjdGl2ZSBpcyBjbGlja2VkLCB0aGVcbiAqIFtzYXZlXSh7JSBzbHVnIGFwaV9ncmlkX2dyaWRjb21wb25lbnQgJX0jdG9jLXNhdmUpIGV2ZW50XG4gKiBpcyB0cmlnZ2VyZWQgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBlZGl0aW5nX2dyaWQgJX0pKS5cbiAqXG4gKiA+IFdoZW4gdGhlIHJvdyBpcyBub3QgaW4gdGhlIGVkaXQgbW9kZSwgdGhlIGJ1dHRvbiB3aXRoIGBrZW5kb0dyaWRTYXZlQ29tbWFuZGAgaXMgYXV0b21hdGljYWxseSBoaWRkZW4uXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWwtbm8tcnVuXG4gKiA8a2VuZG8tZ3JpZD5cbiAqICAgPGtlbmRvLWdyaWQtY29tbWFuZC1jb2x1bW4gdGl0bGU9XCJjb21tYW5kXCI+XG4gKiAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZENlbGxUZW1wbGF0ZT5cbiAqICAgICAgIDxidXR0b24ga2VuZG9HcmlkU2F2ZUNvbW1hbmQ+U2F2ZSBjaGFuZ2VzPC9idXR0b24+XG4gKiAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgPC9rZW5kby1ncmlkLWNvbW1hbmQtY29sdW1uPlxuICogPC9rZW5kby1ncmlkPlxuICogYGBgXG4gKlxuICogWW91IGNhbiBjb250cm9sIHRoZSBjb250ZW50IG9mIHRoZSBidXR0b24gYmFzZWQgb24gdGhlIHN0YXRlIG9mIHRoZSByb3cuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWwtbm8tcnVuXG4gKiA8a2VuZG8tZ3JpZD5cbiAqICAgPGtlbmRvLWdyaWQtY29tbWFuZC1jb2x1bW4gdGl0bGU9XCJjb21tYW5kXCI+XG4gKiAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZENlbGxUZW1wbGF0ZSBsZXQtaXNOZXc9XCJpc05ld1wiPlxuICogICAgICAgPGJ1dHRvbiBrZW5kb0dyaWRTYXZlQ29tbWFuZD57e2lzTmV3ID8gJ0FkZCcgOiAnVXBkYXRlJ319PC9idXR0b24+XG4gKiAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgPC9rZW5kby1ncmlkLWNvbW1hbmQtY29sdW1uPlxuICogPC9rZW5kby1ncmlkPlxuICogYGBgXG4gKi9cbmxldCBTYXZlQ29tbWFuZERpcmVjdGl2ZSA9IGNsYXNzIFNhdmVDb21tYW5kRGlyZWN0aXZlIGV4dGVuZHMgQnV0dG9uIHtcbiAgICBjb25zdHJ1Y3RvcihlZGl0U2VydmljZSwgY2VsbENvbnRleHQsIGVsZW1lbnQsIHJlbmRlcmVyLCBsb2NhbGl6YXRpb24sIG5nWm9uZSkge1xuICAgICAgICBzdXBlcihlbGVtZW50LCByZW5kZXJlciwgbnVsbCwgbG9jYWxpemF0aW9uLCBuZ1pvbmUpO1xuICAgICAgICB0aGlzLmVkaXRTZXJ2aWNlID0gZWRpdFNlcnZpY2U7XG4gICAgICAgIHRoaXMuY2VsbENvbnRleHQgPSBjZWxsQ29udGV4dDtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBoaWRkZW5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuY29tbWFuZENsYXNzID0gdHJ1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCB2aXNpYmxlKCkge1xuICAgICAgICByZXR1cm4gIXRoaXMuaXNFZGl0ZWQgPyAnbm9uZScgOiAnJztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uQ2xpY2soZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGlmICh0aGlzLmlzRWRpdGVkKSB7XG4gICAgICAgICAgICB0aGlzLmVkaXRTZXJ2aWNlLnNhdmUodGhpcy5yb3dJbmRleCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmdEb0NoZWNrKCkge1xuICAgICAgICBpZiAodGhpcy5jZWxsQ29udGV4dCkge1xuICAgICAgICAgICAgdGhpcy5yb3dJbmRleCA9IHRoaXMuY2VsbENvbnRleHQucm93SW5kZXg7XG4gICAgICAgICAgICB0aGlzLmlzRWRpdGVkID0gdGhpcy5lZGl0U2VydmljZS5pc0VkaXRlZCh0aGlzLnJvd0luZGV4KTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnc3R5bGUuZGlzcGxheScpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIFNhdmVDb21tYW5kRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJ2aXNpYmxlXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ2NsYXNzLmstZ3JpZC1zYXZlLWNvbW1hbmQnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIFNhdmVDb21tYW5kRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJjb21tYW5kQ2xhc3NcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RMaXN0ZW5lcignY2xpY2snLCBbJyRldmVudCddKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpyZXR1cm50eXBlXCIsIHZvaWQgMClcbl0sIFNhdmVDb21tYW5kRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJvbkNsaWNrXCIsIG51bGwpO1xuU2F2ZUNvbW1hbmREaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0dyaWRTYXZlQ29tbWFuZF0nXG4gICAgfSksXG4gICAgX19wYXJhbSgxLCBJbmplY3QoQ0VMTF9DT05URVhUKSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtFZGl0U2VydmljZSwgT2JqZWN0LCBFbGVtZW50UmVmLFxuICAgICAgICBSZW5kZXJlcjIsXG4gICAgICAgIExvY2FsaXphdGlvblNlcnZpY2UsXG4gICAgICAgIE5nWm9uZV0pXG5dLCBTYXZlQ29tbWFuZERpcmVjdGl2ZSk7XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgYHJlbW92ZWAgY29tbWFuZCBvZiB0aGUgR3JpZC4gWW91IGNhbiBhcHBseSB0aGlzIGRpcmVjdGl2ZSB0byBhbnkgYGJ1dHRvbmAgZWxlbWVudFxuICogaW5zaWRlIGEgW0NvbW1hbmRDb2x1bW5Db21wb25lbnRdKHslIHNsdWcgYXBpX2dyaWRfY29tbWFuZGNvbHVtbmNvbXBvbmVudCAlfSkuXG4gKiBXaGVuIGFuIGFzc29jaWF0ZWQgYnV0dG9uIHdpdGggdGhlIGRpcmVjdGl2ZSBpcyBjbGlja2VkLCB0aGVcbiAqIFtyZW1vdmUgZXZlbnRdKHslIHNsdWcgYXBpX2dyaWRfZ3JpZGNvbXBvbmVudCAlfSN0b2MtcmVtb3ZlKVxuICogaXMgdHJpZ2dlcmVkIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgZWRpdGluZ19yZWFjdGl2ZV9mb3Jtc19ncmlkICV9KSkuXG4gKlxuICogPiBXaGVuIHRoZSByb3cgaXMgaW4gdGhlIGVkaXQgbW9kZSwgdGhlIGJ1dHRvbiB3aXRoIHRoZSBga2VuZG9HcmlkUmVtb3ZlQ29tbWFuZGAgaXMgYXV0b21hdGljYWxseSBoaWRkZW4uXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWwtbm8tcnVuXG4gKiA8a2VuZG8tZ3JpZD5cbiAqICAgPGtlbmRvLWdyaWQtY29tbWFuZC1jb2x1bW4gdGl0bGU9XCJjb21tYW5kXCI+XG4gKiAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZENlbGxUZW1wbGF0ZT5cbiAqICAgICAgIDxidXR0b24ga2VuZG9HcmlkUmVtb3ZlQ29tbWFuZD5SZW1vdmUgcm93PC9idXR0b24+XG4gKiAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgPC9rZW5kby1ncmlkLWNvbW1hbmQtY29sdW1uPlxuICogPC9rZW5kby1ncmlkPlxuICogYGBgXG4gKi9cbmxldCBSZW1vdmVDb21tYW5kRGlyZWN0aXZlID0gY2xhc3MgUmVtb3ZlQ29tbWFuZERpcmVjdGl2ZSBleHRlbmRzIEJ1dHRvbiB7XG4gICAgY29uc3RydWN0b3IoZWRpdFNlcnZpY2UsIGNlbGxDb250ZXh0LCBlbGVtZW50LCByZW5kZXJlciwgbG9jYWxpemF0aW9uLCBuZ1pvbmUpIHtcbiAgICAgICAgc3VwZXIoZWxlbWVudCwgcmVuZGVyZXIsIG51bGwsIGxvY2FsaXphdGlvbiwgbmdab25lKTtcbiAgICAgICAgdGhpcy5lZGl0U2VydmljZSA9IGVkaXRTZXJ2aWNlO1xuICAgICAgICB0aGlzLmNlbGxDb250ZXh0ID0gY2VsbENvbnRleHQ7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAaGlkZGVuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNvbW1hbmRDbGFzcyA9IHRydWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgdmlzaWJsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNFZGl0ZWQgPyAnbm9uZScgOiAnJztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uQ2xpY2soZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuZWRpdFNlcnZpY2UucmVtb3ZlKHRoaXMucm93SW5kZXgpO1xuICAgIH1cbiAgICBuZ0RvQ2hlY2soKSB7XG4gICAgICAgIGlmICh0aGlzLmNlbGxDb250ZXh0KSB7XG4gICAgICAgICAgICB0aGlzLnJvd0luZGV4ID0gdGhpcy5jZWxsQ29udGV4dC5yb3dJbmRleDtcbiAgICAgICAgICAgIHRoaXMuaXNFZGl0ZWQgPSB0aGlzLmVkaXRTZXJ2aWNlLmlzRWRpdGVkKHRoaXMucm93SW5kZXgpO1xuICAgICAgICB9XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdzdHlsZS5kaXNwbGF5JyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgUmVtb3ZlQ29tbWFuZERpcmVjdGl2ZS5wcm90b3R5cGUsIFwidmlzaWJsZVwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLWdyaWQtcmVtb3ZlLWNvbW1hbmQnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIFJlbW92ZUNvbW1hbmREaXJlY3RpdmUucHJvdG90eXBlLCBcImNvbW1hbmRDbGFzc1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBGdW5jdGlvbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnJldHVybnR5cGVcIiwgdm9pZCAwKVxuXSwgUmVtb3ZlQ29tbWFuZERpcmVjdGl2ZS5wcm90b3R5cGUsIFwib25DbGlja1wiLCBudWxsKTtcblJlbW92ZUNvbW1hbmREaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0dyaWRSZW1vdmVDb21tYW5kXSdcbiAgICB9KSxcbiAgICBfX3BhcmFtKDEsIEluamVjdChDRUxMX0NPTlRFWFQpKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0VkaXRTZXJ2aWNlLCBPYmplY3QsIEVsZW1lbnRSZWYsXG4gICAgICAgIFJlbmRlcmVyMixcbiAgICAgICAgTG9jYWxpemF0aW9uU2VydmljZSxcbiAgICAgICAgTmdab25lXSlcbl0sIFJlbW92ZUNvbW1hbmREaXJlY3RpdmUpO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGNvbW1hbmQgZm9yIGFkZGluZyBhIG5ldyBpdGVtIHRvIHRoZSBHcmlkLiBZb3UgY2FuIGFwcGx5IHRoaXMgZGlyZWN0aXZlIHRvIGFueVxuICogYGJ1dHRvbmAgZWxlbWVudCBpbnNpZGUgYSBbVG9vbGJhclRlbXBsYXRlXSh7JSBzbHVnIGFwaV9ncmlkX2NvbW1hbmRjb2x1bW5jb21wb25lbnQgJX0pLlxuICogV2hlbiBhbiBhc3NvY2lhdGVkIGJ1dHRvbiB3aXRoIHRoZSBkaXJlY3RpdmUgaXMgY2xpY2tlZCwgdGhlXG4gKiBbYWRkXSh7JSBzbHVnIGFwaV9ncmlkX2dyaWRjb21wb25lbnQgJX0jdG9jLWFkZCkgZXZlbnQgaXMgdHJpZ2dlcmVkXG4gKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGVkaXRpbmdfZ3JpZCAlfSkpLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBodG1sLW5vLXJ1blxuICogPGtlbmRvLWdyaWQ+XG4gKiAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkVG9vbGJhclRlbXBsYXRlPlxuICogICAgICAgPGJ1dHRvbiBrZW5kb0dyaWRBZGRDb21tYW5kPkFkZCBuZXc8L2J1dHRvbj5cbiAqICAgIDwvbmctdGVtcGxhdGU+XG4gKiA8L2tlbmRvLWdyaWQ+XG4gKiBgYGBcbiAqL1xubGV0IEFkZENvbW1hbmREaXJlY3RpdmUgPSBjbGFzcyBBZGRDb21tYW5kRGlyZWN0aXZlIGV4dGVuZHMgQnV0dG9uIHtcbiAgICBjb25zdHJ1Y3RvcihlZGl0U2VydmljZSwgZWxlbWVudCwgcmVuZGVyZXIsIGxvY2FsaXphdGlvbiwgbmdab25lKSB7XG4gICAgICAgIHN1cGVyKGVsZW1lbnQsIHJlbmRlcmVyLCBudWxsLCBsb2NhbGl6YXRpb24sIG5nWm9uZSk7XG4gICAgICAgIHRoaXMuZWRpdFNlcnZpY2UgPSBlZGl0U2VydmljZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uQ2xpY2soZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuZWRpdFNlcnZpY2UuYmVnaW5BZGQoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldCBjb21tYW5kQ2xhc3MoKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0TGlzdGVuZXIoJ2NsaWNrJywgWyckZXZlbnQnXSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZ1bmN0aW9uKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cmV0dXJudHlwZVwiLCB2b2lkIDApXG5dLCBBZGRDb21tYW5kRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJvbkNsaWNrXCIsIG51bGwpO1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdEJpbmRpbmcoJ2NsYXNzLmstZ3JpZC1hZGQtY29tbWFuZCcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBBZGRDb21tYW5kRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJjb21tYW5kQ2xhc3NcIiwgbnVsbCk7XG5BZGRDb21tYW5kRGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkQWRkQ29tbWFuZF0nXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtFZGl0U2VydmljZSxcbiAgICAgICAgRWxlbWVudFJlZixcbiAgICAgICAgUmVuZGVyZXIyLFxuICAgICAgICBMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBOZ1pvbmVdKVxuXSwgQWRkQ29tbWFuZERpcmVjdGl2ZSk7XG5cbmNvbnN0IGV4cG9ydGVkJDEgPSBbXG4gICAgQ29tbWFuZENvbHVtbkNvbXBvbmVudCxcbiAgICBDaGVja2JveENvbHVtbkNvbXBvbmVudCxcbiAgICBTZWxlY3Rpb25DaGVja2JveERpcmVjdGl2ZSxcbiAgICBDZWxsVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgRWRpdFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIFRhYmxlQm9keUNvbXBvbmVudCxcbiAgICBOb1JlY29yZHNUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBDZWxsQ29tcG9uZW50LFxuICAgIEVkaXRDb21tYW5kRGlyZWN0aXZlLFxuICAgIENhbmNlbENvbW1hbmREaXJlY3RpdmUsXG4gICAgU2F2ZUNvbW1hbmREaXJlY3RpdmUsXG4gICAgUmVtb3ZlQ29tbWFuZERpcmVjdGl2ZSxcbiAgICBBZGRDb21tYW5kRGlyZWN0aXZlLFxuICAgIENlbGxMb2FkaW5nVGVtcGxhdGVEaXJlY3RpdmVcbl07XG5jb25zdCBpbXBvcnRlZE1vZHVsZXMkMyA9IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBTaGFyZWRNb2R1bGUsXG4gICAgR3JvdXBNb2R1bGUsXG4gICAgTnVtZXJpY1RleHRCb3hNb2R1bGUsXG4gICAgRGF0ZVBpY2tlck1vZHVsZSxcbiAgICBSZXNpemVTZW5zb3JNb2R1bGVcbl07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IEJvZHlNb2R1bGUgPSBjbGFzcyBCb2R5TW9kdWxlIHtcbiAgICBzdGF0aWMgZXhwb3J0cygpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIENvbW1hbmRDb2x1bW5Db21wb25lbnQsXG4gICAgICAgICAgICBDaGVja2JveENvbHVtbkNvbXBvbmVudCxcbiAgICAgICAgICAgIFNlbGVjdGlvbkNoZWNrYm94RGlyZWN0aXZlLFxuICAgICAgICAgICAgQ2VsbFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICAgICAgTm9SZWNvcmRzVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgICAgICBFZGl0VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgICAgICBFZGl0Q29tbWFuZERpcmVjdGl2ZSxcbiAgICAgICAgICAgIENhbmNlbENvbW1hbmREaXJlY3RpdmUsXG4gICAgICAgICAgICBTYXZlQ29tbWFuZERpcmVjdGl2ZSxcbiAgICAgICAgICAgIFJlbW92ZUNvbW1hbmREaXJlY3RpdmUsXG4gICAgICAgICAgICBBZGRDb21tYW5kRGlyZWN0aXZlLFxuICAgICAgICAgICAgQ2VsbExvYWRpbmdUZW1wbGF0ZURpcmVjdGl2ZVxuICAgICAgICBdO1xuICAgIH1cbn07XG5Cb2R5TW9kdWxlID0gX19kZWNvcmF0ZShbXG4gICAgTmdNb2R1bGUoe1xuICAgICAgICBkZWNsYXJhdGlvbnM6IFtleHBvcnRlZCQxXSxcbiAgICAgICAgZXhwb3J0czogW2V4cG9ydGVkJDFdLFxuICAgICAgICBpbXBvcnRzOiBbLi4uaW1wb3J0ZWRNb2R1bGVzJDNdXG4gICAgfSlcbl0sIEJvZHlNb2R1bGUpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xubGV0IEZvb3RlckNvbXBvbmVudCA9IGNsYXNzIEZvb3RlckNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoY29sdW1uSW5mb1NlcnZpY2UpIHtcbiAgICAgICAgdGhpcy5jb2x1bW5JbmZvU2VydmljZSA9IGNvbHVtbkluZm9TZXJ2aWNlO1xuICAgICAgICB0aGlzLmNvbHVtbnMgPSBbXTtcbiAgICAgICAgdGhpcy5ncm91cHMgPSBbXTtcbiAgICAgICAgdGhpcy5sb2NrZWRDb2x1bW5zQ291bnQgPSAwO1xuICAgICAgICB0aGlzLmxvZ2ljYWxSb3dJbmRleCA9IDA7XG4gICAgfVxuICAgIGdldCBmb290ZXJDbGFzcygpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLnNjcm9sbGFibGU7XG4gICAgfVxuICAgIGdldCBjb2x1bW5zVG9SZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiBjb2x1bW5zVG9SZW5kZXIodGhpcy5jb2x1bW5zIHx8IFtdKTtcbiAgICB9XG4gICAgbG9naWNhbENvbHVtbkluZGV4KGNvbHVtbikge1xuICAgICAgICBjb25zdCBpbmRleCA9IGNvbHVtbi5sZWFmSW5kZXg7XG4gICAgICAgIGlmIChpc1ByZXNlbnQoaW5kZXgpKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5kZXggKyAoaXNQcmVzZW50KHRoaXMuZGV0YWlsVGVtcGxhdGUpID8gMSA6IDApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAtMTtcbiAgICB9XG4gICAgYWRkU3RpY2t5U3R5bGVzKGNvbHVtbikge1xuICAgICAgICBjb25zdCBzdGlja3lTdHlsZXMgPSB0aGlzLmNvbHVtbkluZm9TZXJ2aWNlLnN0aWNreUNvbHVtbnNTdHlsZXMoY29sdW1uKTtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGNvbHVtbi5zdHlsZSwgc3RpY2t5U3R5bGVzKTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQXJyYXkpXG5dLCBGb290ZXJDb21wb25lbnQucHJvdG90eXBlLCBcImNvbHVtbnNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KVxuXSwgRm9vdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJncm91cHNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIERldGFpbFRlbXBsYXRlRGlyZWN0aXZlKVxuXSwgRm9vdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJkZXRhaWxUZW1wbGF0ZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbl0sIEZvb3RlckNvbXBvbmVudC5wcm90b3R5cGUsIFwic2Nyb2xsYWJsZVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgTnVtYmVyKVxuXSwgRm9vdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJsb2NrZWRDb2x1bW5zQ291bnRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE51bWJlcilcbl0sIEZvb3RlckNvbXBvbmVudC5wcm90b3R5cGUsIFwibG9naWNhbFJvd0luZGV4XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBIb3N0QmluZGluZygnY2xhc3Muay1ncmlkLWZvb3RlcicpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW10pXG5dLCBGb290ZXJDb21wb25lbnQucHJvdG90eXBlLCBcImZvb3RlckNsYXNzXCIsIG51bGwpO1xuRm9vdGVyQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkRm9vdGVyXScsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgPG5nLXRlbXBsYXRlIFtuZ0lmXT1cInRydWVcIj5cbiAgICAgICAgPHRyXG4gICAgICAgICAgICBbY2xhc3Muay1mb290ZXItdGVtcGxhdGVdPVwidHJ1ZVwiXG4gICAgICAgICAgICBrZW5kb0dyaWRMb2dpY2FsUm93XG4gICAgICAgICAgICAgICAgW2xvZ2ljYWxSb3dJbmRleF09XCJsb2dpY2FsUm93SW5kZXhcIlxuICAgICAgICAgICAgICAgIFtsb2dpY2FsU2xhdmVSb3ddPVwibG9ja2VkQ29sdW1uc0NvdW50ID4gMFwiXG4gICAgICAgICAgICAgICAgW2xvZ2ljYWxDZWxsc0NvdW50XT1cImNvbHVtbnMubGVuZ3RoXCJcbiAgICAgICAgICAgICAgICBbbG9naWNhbFNsYXZlQ2VsbHNDb3VudF09XCJjb2x1bW5zLmxlbmd0aCAtIGxvY2tlZENvbHVtbnNDb3VudFwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICA8dGRcbiAgICAgICAgICAgICAgICBbY2xhc3Muay1ncm91cC1jZWxsXT1cInRydWVcIlxuICAgICAgICAgICAgICAgIHJvbGU9XCJwcmVzZW50YXRpb25cIlxuICAgICAgICAgICAgICAgICpuZ0Zvcj1cImxldCBnIG9mIGdyb3Vwc1wiPlxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgIDx0ZFxuICAgICAgICAgICAgICAgIFtjbGFzcy5rLWhpZXJhcmNoeS1jZWxsXT1cInRydWVcIlxuICAgICAgICAgICAgICAgIHJvbGU9XCJwcmVzZW50YXRpb25cIlxuICAgICAgICAgICAgICAgICpuZ0lmPVwiZGV0YWlsVGVtcGxhdGU/LnRlbXBsYXRlUmVmXCI+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRkXG4gICAgICAgICAgICAgICAgKm5nRm9yPVwibGV0IGNvbHVtbiBvZiBjb2x1bW5zVG9SZW5kZXI7IGxldCBjb2x1bW5JbmRleCA9IGluZGV4XCJcbiAgICAgICAgICAgICAgICBrZW5kb0dyaWRMb2dpY2FsQ2VsbFxuICAgICAgICAgICAgICAgICAgICBbbG9naWNhbFJvd0luZGV4XT1cImxvZ2ljYWxSb3dJbmRleFwiXG4gICAgICAgICAgICAgICAgICAgIFtsb2dpY2FsQ29sSW5kZXhdPVwibG9naWNhbENvbHVtbkluZGV4KGNvbHVtbilcIlxuICAgICAgICAgICAgICAgICAgICByb2xlPVwiY29sdW1uZm9vdGVyXCJcbiAgICAgICAgICAgICAgICAgICAgYXJpYS1zZWxlY3RlZD1cImZhbHNlXCJcbiAgICAgICAgICAgICAgICBbY2xhc3Muay1ncmlkLWZvb3Rlci1zdGlja3ldPVwiY29sdW1uLnN0aWNreVwiXG4gICAgICAgICAgICAgICAgW25nQ2xhc3NdPVwiY29sdW1uLmZvb3RlckNsYXNzXCJcbiAgICAgICAgICAgICAgICBbbmdTdHlsZV09XCJjb2x1bW4uc3RpY2t5ID8gYWRkU3RpY2t5U3R5bGVzKGNvbHVtbikgOiBjb2x1bW4uZm9vdGVyU3R5bGVcIj5cbiAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGVcbiAgICAgICAgICAgICAgICAgICAgW3RlbXBsYXRlQ29udGV4dF09XCJ7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVJlZjogY29sdW1uLmZvb3RlclRlbXBsYXRlUmVmLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sdW1uSW5kZXg6IGxvY2tlZENvbHVtbnNDb3VudCArIGNvbHVtbkluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sdW1uOiBjb2x1bW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAkaW1wbGljaXQ6IGNvbHVtblxuICAgICAgICAgICAgICAgICAgICB9XCI+XG4gICAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgIDwvdHI+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgICBgXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtDb2x1bW5JbmZvU2VydmljZV0pXG5dLCBGb290ZXJDb21wb25lbnQpO1xuXG5jb25zdCBleHBvcnRlZE1vZHVsZXMkMyA9IFtcbiAgICBGb290ZXJDb21wb25lbnRcbl07XG5jb25zdCBpbXBvcnRlZE1vZHVsZXMkNCA9IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgU2hhcmVkTW9kdWxlXG5dO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmxldCBGb290ZXJNb2R1bGUgPSBjbGFzcyBGb290ZXJNb2R1bGUge1xuICAgIHN0YXRpYyBleHBvcnRzKCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxufTtcbkZvb3Rlck1vZHVsZSA9IF9fZGVjb3JhdGUoW1xuICAgIE5nTW9kdWxlKHtcbiAgICAgICAgZGVjbGFyYXRpb25zOiBbZXhwb3J0ZWRNb2R1bGVzJDNdLFxuICAgICAgICBleHBvcnRzOiBbZXhwb3J0ZWRNb2R1bGVzJDNdLFxuICAgICAgICBpbXBvcnRzOiBbLi4uaW1wb3J0ZWRNb2R1bGVzJDRdXG4gICAgfSlcbl0sIEZvb3Rlck1vZHVsZSk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5sZXQgVG9vbGJhckNvbXBvbmVudCA9IGNsYXNzIFRvb2xiYXJDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGdyaWQpIHtcbiAgICAgICAgdGhpcy5ncmlkID0gZ3JpZDtcbiAgICAgICAgdGhpcy5jb250ZXh0ID0ge307XG4gICAgfVxuICAgIHNldCBwb3NpdGlvbih2YWx1ZSkge1xuICAgICAgICB0aGlzLmNvbnRleHQucG9zaXRpb24gPSB2YWx1ZTtcbiAgICB9XG4gICAgZ2V0IHRvb2xiYXJUZW1wbGF0ZVJlZigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3JpZC50b29sYmFyVGVtcGxhdGUgPyB0aGlzLmdyaWQudG9vbGJhclRlbXBsYXRlLnRlbXBsYXRlUmVmIDogdW5kZWZpbmVkO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbU3RyaW5nXSlcbl0sIFRvb2xiYXJDb21wb25lbnQucHJvdG90eXBlLCBcInBvc2l0aW9uXCIsIG51bGwpO1xuVG9vbGJhckNvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgIENvbXBvbmVudCh7XG4gICAgICAgIHNlbGVjdG9yOiAna2VuZG8tZ3JpZC10b29sYmFyJyxcbiAgICAgICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPG5nLXRlbXBsYXRlXG4gICAgICAgICAgICAqbmdJZj1cInRvb2xiYXJUZW1wbGF0ZVJlZlwiXG4gICAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldF09XCJ0b29sYmFyVGVtcGxhdGVSZWZcIlxuICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cImNvbnRleHRcIlxuICAgICAgICAgICAgPlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgIGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0dyaWRDb21wb25lbnRdKVxuXSwgVG9vbGJhckNvbXBvbmVudCk7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBMb2NhbEVkaXRTZXJ2aWNlIHtcbiAgICBjb25zdHJ1Y3RvcihncmlkLCBsb2NhbERhdGFDaGFuZ2VzU2VydmljZSkge1xuICAgICAgICB0aGlzLmdyaWQgPSBncmlkO1xuICAgICAgICB0aGlzLmxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlID0gbG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2U7XG4gICAgfVxuICAgIGNyZWF0ZShpdGVtKSB7XG4gICAgICAgIGlmICh0aGlzLmhhc0xvY2FsRGF0YSAmJiB0aGlzLmdyaWQuc2tpcCkge1xuICAgICAgICAgICAgdGhpcy5sb2NhbERhdGFDaGFuZ2VzU2VydmljZS5kYXRhLnNwbGljZSh0aGlzLmdyaWQuc2tpcCwgMCwgaXRlbSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmRhdGEudW5zaGlmdChpdGVtKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmRhdGFDaGFuZ2VkKCk7XG4gICAgfVxuICAgIHVwZGF0ZShfaXRlbSkgeyB9IC8vIHRzbGludDpkaXNhYmxlLWxpbmU6bm8tZW1wdHlcbiAgICByZW1vdmUoaXRlbSkge1xuICAgICAgICBjb25zdCBkYXRhID0gdGhpcy5kYXRhO1xuICAgICAgICBmb3IgKGxldCBpZHggPSAwOyBpZHggPCBkYXRhLmxlbmd0aDsgaWR4KyspIHtcbiAgICAgICAgICAgIGlmIChpdGVtID09PSBkYXRhW2lkeF0pIHtcbiAgICAgICAgICAgICAgICBkYXRhLnNwbGljZShpZHgsIDEpO1xuICAgICAgICAgICAgICAgIHRoaXMuZGF0YUNoYW5nZWQoeyBhY3Rpb246ICdyZW1vdmUnLCBpdGVtOiBpdGVtIH0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGFzc2lnblZhbHVlcyh0YXJnZXQsIHNvdXJjZSkge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRhcmdldCwgc291cmNlKTtcbiAgICB9XG4gICAgZGF0YUNoYW5nZWQoYXJncyA9IHt9KSB7XG4gICAgICAgIGlmICh0aGlzLmhhc0xvY2FsRGF0YSkge1xuICAgICAgICAgICAgdGhpcy5sb2NhbERhdGFDaGFuZ2VzU2VydmljZS5jaGFuZ2VzLmVtaXQoYXJncyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IGhhc0xvY2FsRGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodGhpcy5sb2NhbERhdGFDaGFuZ2VzU2VydmljZS5kYXRhKTtcbiAgICB9XG4gICAgZ2V0IGRhdGEoKSB7XG4gICAgICAgIGlmICh0aGlzLmhhc0xvY2FsRGF0YSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2UuZGF0YTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkYXRhID0gdGhpcy5ncmlkLmRhdGE7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGEpKSB7XG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNEZXZNb2RlKCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIGRlZmF1bHQgZWRpdCBzZXJ2aWNlIG9mIHRoZSBlZGl0aW5nIGRpcmVjdGl2ZXMgd29ya3Mgb25seSB3aGVuIGJpbmRpbmcgdG8gcGxhaW4gYXJyYXkuJyArXG4gICAgICAgICAgICAgICAgJ1BsZWFzZSBwcm92aWRlIGFuIGVkaXRTZXJ2aWNlLicpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG59XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBFZGl0aW5nRGlyZWN0aXZlQmFzZSB7XG4gICAgY29uc3RydWN0b3IoZ3JpZCwgbG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2UpIHtcbiAgICAgICAgdGhpcy5ncmlkID0gZ3JpZDtcbiAgICAgICAgdGhpcy5sb2NhbERhdGFDaGFuZ2VzU2VydmljZSA9IGxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlO1xuICAgICAgICB0aGlzLmRlZmF1bHRFZGl0U2VydmljZSA9IHRoaXMuY3JlYXRlRGVmYXVsdFNlcnZpY2UoKTtcbiAgICB9XG4gICAgLy8gQ29uc2lkZXIgYWRkaW5nIHN1cHBvcnQgZm9yIHRoZSBkZXBlbmRlbmN5IGluamVjdGlvbiBvZiB0aGUgc2VydmljZSB0byBhbGxvdyBmb3Igc3BlY2lmeWluZyBhIGdlbmVyaWMgc2VydmljZSB3aXRob3V0IGNvZGUuXG4gICAgLy8gVGhlIElucHV0IHNob3VsZCBzdGlsbCBiZSBrZXB0LlxuICAgIC8qKlxuICAgICAqIFRoZSBlZGl0IHNlcnZpY2UgdGhhdCB3aWxsIGhhbmRsZSB0aGUgb3BlcmF0aW9ucy5cbiAgICAgKi9cbiAgICBzZXQgZWRpdFNlcnZpY2UodmFsdWUpIHtcbiAgICAgICAgdGhpcy51c2VyRWRpdFNlcnZpY2UgPSB2YWx1ZTtcbiAgICB9XG4gICAgZ2V0IGVkaXRTZXJ2aWNlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51c2VyRWRpdFNlcnZpY2UgfHwgdGhpcy5kZWZhdWx0RWRpdFNlcnZpY2U7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gdGhpcy5ncmlkLmFkZC5zdWJzY3JpYmUodGhpcy5hZGRIYW5kbGVyLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuYWRkKHRoaXMuZ3JpZC5yZW1vdmUuc3Vic2NyaWJlKHRoaXMucmVtb3ZlSGFuZGxlci5iaW5kKHRoaXMpKSk7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQodGhpcy5ncmlkLmNhbmNlbC5zdWJzY3JpYmUodGhpcy5jYW5jZWxIYW5kbGVyLmJpbmQodGhpcykpKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZCh0aGlzLmdyaWQuc2F2ZS5zdWJzY3JpYmUodGhpcy5zYXZlSGFuZGxlci5iaW5kKHRoaXMpKSk7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQodGhpcy5ncmlkLmRhdGFTdGF0ZUNoYW5nZS5zdWJzY3JpYmUodGhpcy5vblN0YXRlQ2hhbmdlLmJpbmQodGhpcykpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMudW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gICAgY3JlYXRlRGVmYXVsdFNlcnZpY2UoKSB7XG4gICAgICAgIHJldHVybiBuZXcgTG9jYWxFZGl0U2VydmljZSh0aGlzLmdyaWQsIHRoaXMubG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2UpO1xuICAgIH1cbiAgICBhZGRIYW5kbGVyKCkge1xuICAgICAgICB0aGlzLmdyaWQuYWRkUm93KHRoaXMuY3JlYXRlTW9kZWwoeyBpc05ldzogdHJ1ZSB9KSk7XG4gICAgfVxuICAgIHNhdmVIYW5kbGVyKGFyZ3MpIHtcbiAgICAgICAgY29uc3QgaXRlbSA9IHRoaXMuc2F2ZU1vZGVsKGFyZ3MpO1xuICAgICAgICBpZiAoaXRlbSkge1xuICAgICAgICAgICAgaWYgKGFyZ3MuaXNOZXcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmVkaXRTZXJ2aWNlLmNyZWF0ZShpdGVtKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuZWRpdFNlcnZpY2UudXBkYXRlKGl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuZ3JpZC5jbG9zZVJvdyhhcmdzLnJvd0luZGV4KTtcbiAgICB9XG4gICAgY2FuY2VsSGFuZGxlcih7IHJvd0luZGV4IH0pIHtcbiAgICAgICAgdGhpcy5jbG9zZUVkaXRvcihyb3dJbmRleCk7XG4gICAgfVxuICAgIHJlbW92ZUhhbmRsZXIoeyBkYXRhSXRlbSB9KSB7XG4gICAgICAgIGNvbnN0IHJlbW92ZUl0ZW0gPSAoc2hvdWxkUmVtb3ZlKSA9PiB7XG4gICAgICAgICAgICBpZiAoc2hvdWxkUmVtb3ZlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lZGl0U2VydmljZS5yZW1vdmUoZGF0YUl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBpZiAodGhpcy5yZW1vdmVDb25maXJtYXRpb24pIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMucmVtb3ZlQ29uZmlybWF0aW9uKGRhdGFJdGVtKTtcbiAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnRoZW4ocmVtb3ZlSXRlbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBPYnNlcnZhYmxlKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnBpcGUodGFrZSgxKSkuc3Vic2NyaWJlKHJlbW92ZUl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVtb3ZlSXRlbShyZXN1bHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmVtb3ZlSXRlbSh0cnVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvblN0YXRlQ2hhbmdlKCkge1xuICAgICAgICB0aGlzLmNsb3NlRWRpdG9yKCk7XG4gICAgfVxuICAgIGNsb3NlRWRpdG9yKHJvd0luZGV4KSB7XG4gICAgICAgIHRoaXMuZ3JpZC5jbG9zZVJvdyhyb3dJbmRleCk7XG4gICAgfVxufVxuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgT2JqZWN0KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pXG5dLCBFZGl0aW5nRGlyZWN0aXZlQmFzZS5wcm90b3R5cGUsIFwiZWRpdFNlcnZpY2VcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBGdW5jdGlvbilcbl0sIEVkaXRpbmdEaXJlY3RpdmVCYXNlLnByb3RvdHlwZSwgXCJyZW1vdmVDb25maXJtYXRpb25cIiwgdm9pZCAwKTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNsYXNzIExvY2FsUm93RWRpdFNlcnZpY2UgZXh0ZW5kcyBMb2NhbEVkaXRTZXJ2aWNlIHtcbiAgICB1cGRhdGUoX2l0ZW0pIHtcbiAgICAgICAgdGhpcy5kYXRhQ2hhbmdlZCgpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNsYXNzIFJvd0VkaXRpbmdEaXJlY3RpdmVCYXNlIGV4dGVuZHMgRWRpdGluZ0RpcmVjdGl2ZUJhc2Uge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgc3VwZXIubmdPbkluaXQoKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zXG4gICAgICAgICAgICAuYWRkKHRoaXMuZ3JpZC5lZGl0LnN1YnNjcmliZSh0aGlzLmVkaXRIYW5kbGVyLmJpbmQodGhpcykpKTtcbiAgICB9XG4gICAgY3JlYXRlRGVmYXVsdFNlcnZpY2UoKSB7XG4gICAgICAgIHJldHVybiBuZXcgTG9jYWxSb3dFZGl0U2VydmljZSh0aGlzLmdyaWQsIHRoaXMubG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2UpO1xuICAgIH1cbiAgICBhZGRIYW5kbGVyKCkge1xuICAgICAgICB0aGlzLmNsb3NlRWRpdG9yKCk7XG4gICAgICAgIHN1cGVyLmFkZEhhbmRsZXIoKTtcbiAgICB9XG4gICAgZWRpdEhhbmRsZXIoYXJncykge1xuICAgICAgICB0aGlzLmNsb3NlRWRpdG9yKCk7XG4gICAgICAgIHRoaXMucm93SW5kZXggPSBhcmdzLnJvd0luZGV4O1xuICAgICAgICB0aGlzLmdyaWQuZWRpdFJvdyhhcmdzLnJvd0luZGV4LCB0aGlzLmNyZWF0ZU1vZGVsKGFyZ3MpKTtcbiAgICB9XG4gICAgc2F2ZUhhbmRsZXIoYXJncykge1xuICAgICAgICBzdXBlci5zYXZlSGFuZGxlcihhcmdzKTtcbiAgICAgICAgdGhpcy5jbGVhbigpO1xuICAgIH1cbiAgICBjbG9zZUVkaXRvcihyb3dJbmRleCA9IHRoaXMucm93SW5kZXgpIHtcbiAgICAgICAgc3VwZXIuY2xvc2VFZGl0b3Iocm93SW5kZXgpO1xuICAgICAgICB0aGlzLmNsZWFuKCk7XG4gICAgfVxuICAgIGNsZWFuKCkge1xuICAgICAgICBkZWxldGUgdGhpcy5yb3dJbmRleDtcbiAgICB9XG59XG5cbi8qKlxuICogQSBkaXJlY3RpdmUgd2hpY2ggZW5jYXBzdWxhdGVzIHRoZSBlZGl0aW5nIG9wZXJhdGlvbnMgb2YgdGhlIEdyaWQgd2hlbiB1c2luZ1xuICogdGhlIFRlbXBsYXRlLURyaXZlbiBBbmd1bGFyIEZvcm1zIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgZWRpdGluZ19kaXJlY3RpdmVzX2dyaWQgJX0jdG9jLXRoZS10ZW1wbGF0ZS1kaXJlY3RpdmUpKS5cbiAqL1xubGV0IFRlbXBsYXRlRWRpdGluZ0RpcmVjdGl2ZSA9IGNsYXNzIFRlbXBsYXRlRWRpdGluZ0RpcmVjdGl2ZSBleHRlbmRzIFJvd0VkaXRpbmdEaXJlY3RpdmVCYXNlIHtcbiAgICBjb25zdHJ1Y3RvcihncmlkLCBsb2NhbERhdGFDaGFuZ2VzU2VydmljZSkge1xuICAgICAgICBzdXBlcihncmlkLCBsb2NhbERhdGFDaGFuZ2VzU2VydmljZSk7XG4gICAgICAgIHRoaXMuZ3JpZCA9IGdyaWQ7XG4gICAgICAgIHRoaXMubG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2UgPSBsb2NhbERhdGFDaGFuZ2VzU2VydmljZTtcbiAgICB9XG4gICAgZWRpdEhhbmRsZXIoYXJncykge1xuICAgICAgICBzdXBlci5lZGl0SGFuZGxlcihhcmdzKTtcbiAgICAgICAgdGhpcy5kYXRhSXRlbSA9IGFyZ3MuZGF0YUl0ZW07XG4gICAgICAgIHRoaXMub3JpZ2luYWxWYWx1ZXMgPSB7fTtcbiAgICAgICAgdGhpcy5lZGl0U2VydmljZS5hc3NpZ25WYWx1ZXModGhpcy5vcmlnaW5hbFZhbHVlcywgdGhpcy5kYXRhSXRlbSk7XG4gICAgfVxuICAgIGNsb3NlRWRpdG9yKHJvd0luZGV4KSB7XG4gICAgICAgIGlmICh0aGlzLmRhdGFJdGVtKSB7XG4gICAgICAgICAgICB0aGlzLmVkaXRTZXJ2aWNlLmFzc2lnblZhbHVlcyh0aGlzLmRhdGFJdGVtLCB0aGlzLm9yaWdpbmFsVmFsdWVzKTtcbiAgICAgICAgfVxuICAgICAgICBzdXBlci5jbG9zZUVkaXRvcihyb3dJbmRleCk7XG4gICAgfVxuICAgIGNyZWF0ZU1vZGVsKGFyZ3MpIHtcbiAgICAgICAgaWYgKGFyZ3MuaXNOZXcpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZU5ld0l0ZW0oKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzYXZlTW9kZWwoYXJncykge1xuICAgICAgICByZXR1cm4gYXJncy5kYXRhSXRlbTtcbiAgICB9XG4gICAgY2xlYW4oKSB7XG4gICAgICAgIHN1cGVyLmNsZWFuKCk7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmRhdGFJdGVtO1xuICAgIH1cbn07XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgna2VuZG9HcmlkVGVtcGxhdGVFZGl0aW5nJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZ1bmN0aW9uKVxuXSwgVGVtcGxhdGVFZGl0aW5nRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJjcmVhdGVOZXdJdGVtXCIsIHZvaWQgMCk7XG5UZW1wbGF0ZUVkaXRpbmdEaXJlY3RpdmUgPSBfX2RlY29yYXRlKFtcbiAgICBEaXJlY3RpdmUoe1xuICAgICAgICBzZWxlY3RvcjogJ1trZW5kb0dyaWRUZW1wbGF0ZUVkaXRpbmddJ1xuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbR3JpZENvbXBvbmVudCwgTG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2VdKVxuXSwgVGVtcGxhdGVFZGl0aW5nRGlyZWN0aXZlKTtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IG1hcmtBbGxBc1RvdWNoZWQgPSAoY29udHJvbCkgPT4ge1xuICAgIGNvbnRyb2wubWFya0FzVG91Y2hlZCgpO1xuICAgIGlmIChjb250cm9sLmhhc093blByb3BlcnR5KCdjb250cm9scycpKSB7XG4gICAgICAgIGxldCBjb250cm9scyA9IGNvbnRyb2wuY29udHJvbHM7XG4gICAgICAgIGZvciAobGV0IGlubmVyIGluIGNvbnRyb2xzKSB7XG4gICAgICAgICAgICBpZiAoY29udHJvbHMuaGFzT3duUHJvcGVydHkoaW5uZXIpKSB7XG4gICAgICAgICAgICAgICAgbWFya0FsbEFzVG91Y2hlZChjb250cm9sc1tpbm5lcl0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufTtcblxuLyoqXG4gKiBBIGRpcmVjdGl2ZSB3aGljaCBlbmNhcHN1bGF0ZXMgdGhlIGVkaXRpbmcgb3BlcmF0aW9ucyBvZiB0aGUgR3JpZCB3aGVuIHVzaW5nIHRoZVxuICogUmVhY3RpdmUgRm9ybXMgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBlZGl0aW5nX2RpcmVjdGl2ZXNfZ3JpZCAlfSN0b2MtdGhlLXJlYWN0aXZlLWRpcmVjdGl2ZSkpLlxuICovXG5sZXQgUmVhY3RpdmVFZGl0aW5nRGlyZWN0aXZlID0gY2xhc3MgUmVhY3RpdmVFZGl0aW5nRGlyZWN0aXZlIGV4dGVuZHMgUm93RWRpdGluZ0RpcmVjdGl2ZUJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKGdyaWQsIGxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlKSB7XG4gICAgICAgIHN1cGVyKGdyaWQsIGxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlKTtcbiAgICAgICAgdGhpcy5ncmlkID0gZ3JpZDtcbiAgICAgICAgdGhpcy5sb2NhbERhdGFDaGFuZ2VzU2VydmljZSA9IGxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlO1xuICAgIH1cbiAgICBjcmVhdGVNb2RlbChhcmdzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZUZvcm1Hcm91cChhcmdzKTtcbiAgICB9XG4gICAgc2F2ZU1vZGVsKHsgZGF0YUl0ZW0sIGZvcm1Hcm91cCwgaXNOZXcgfSkge1xuICAgICAgICBpZiAoIWZvcm1Hcm91cC5kaXJ0eSAmJiAhaXNOZXcpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZm9ybUdyb3VwLnZhbGlkKSB7XG4gICAgICAgICAgICB0aGlzLmVkaXRTZXJ2aWNlLmFzc2lnblZhbHVlcyhkYXRhSXRlbSwgZm9ybUdyb3VwLnZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybiBkYXRhSXRlbTtcbiAgICAgICAgfVxuICAgICAgICBtYXJrQWxsQXNUb3VjaGVkKGZvcm1Hcm91cCk7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCdrZW5kb0dyaWRSZWFjdGl2ZUVkaXRpbmcnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pXG5dLCBSZWFjdGl2ZUVkaXRpbmdEaXJlY3RpdmUucHJvdG90eXBlLCBcImNyZWF0ZUZvcm1Hcm91cFwiLCB2b2lkIDApO1xuUmVhY3RpdmVFZGl0aW5nRGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkUmVhY3RpdmVFZGl0aW5nXSdcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0dyaWRDb21wb25lbnQsIExvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlXSlcbl0sIFJlYWN0aXZlRWRpdGluZ0RpcmVjdGl2ZSk7XG5cbi8qKlxuICogQSBkaXJlY3RpdmUgd2hpY2ggZW5jYXBzdWxhdGVzIHRoZSBlZGl0aW5nIG9wZXJhdGlvbnMgb2YgdGhlIEdyaWQgd2hlbiB1c2luZyB0aGUgaW4tY2VsbFxuICogZWRpdGluZyB3aXRoIFJlYWN0aXZlIEZvcm1zIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgZWRpdGluZ19kaXJlY3RpdmVzX2dyaWQgJX0jdG9jLXRoZS1pbmNlbGwtZGlyZWN0aXZlKSkuXG4gKi9cbmxldCBJbkNlbGxFZGl0aW5nRGlyZWN0aXZlID0gY2xhc3MgSW5DZWxsRWRpdGluZ0RpcmVjdGl2ZSBleHRlbmRzIEVkaXRpbmdEaXJlY3RpdmVCYXNlIHtcbiAgICBjb25zdHJ1Y3RvcihncmlkLCBsb2NhbERhdGFDaGFuZ2VzU2VydmljZSwgY2RyKSB7XG4gICAgICAgIHN1cGVyKGdyaWQsIGxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlKTtcbiAgICAgICAgdGhpcy5ncmlkID0gZ3JpZDtcbiAgICAgICAgdGhpcy5sb2NhbERhdGFDaGFuZ2VzU2VydmljZSA9IGxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlO1xuICAgICAgICB0aGlzLmNkciA9IGNkcjtcbiAgICB9XG4gICAgLy8gTmVlZCBtaXhpblxuICAgIGNyZWF0ZU1vZGVsKGFyZ3MpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlRm9ybUdyb3VwKGFyZ3MpO1xuICAgIH1cbiAgICBzYXZlTW9kZWwoeyBkYXRhSXRlbSwgZm9ybUdyb3VwLCBpc05ldyB9KSB7XG4gICAgICAgIGlmICghZm9ybUdyb3VwLmRpcnR5ICYmICFpc05ldykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmb3JtR3JvdXAudmFsaWQpIHtcbiAgICAgICAgICAgIHRoaXMuZWRpdFNlcnZpY2UuYXNzaWduVmFsdWVzKGRhdGFJdGVtLCBmb3JtR3JvdXAudmFsdWUpO1xuICAgICAgICAgICAgcmV0dXJuIGRhdGFJdGVtO1xuICAgICAgICB9XG4gICAgICAgIG1hcmtBbGxBc1RvdWNoZWQoZm9ybUdyb3VwKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG5nT25Jbml0KCkge1xuICAgICAgICBzdXBlci5uZ09uSW5pdCgpO1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuYWRkKHRoaXMuZ3JpZC5jZWxsQ2xpY2suc3Vic2NyaWJlKHRoaXMuY2VsbENsaWNrSGFuZGxlci5iaW5kKHRoaXMpKSk7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQodGhpcy5ncmlkLmNlbGxDbG9zZS5zdWJzY3JpYmUodGhpcy5jZWxsQ2xvc2VIYW5kbGVyLmJpbmQodGhpcykpKTtcbiAgICB9XG4gICAgcmVtb3ZlSGFuZGxlcihhcmdzKSB7XG4gICAgICAgIHN1cGVyLnJlbW92ZUhhbmRsZXIoYXJncyk7XG4gICAgICAgIHRoaXMuZ3JpZC5jYW5jZWxDZWxsKCk7XG4gICAgfVxuICAgIGNlbGxDbGlja0hhbmRsZXIoYXJncykge1xuICAgICAgICBpZiAoIWFyZ3MuaXNFZGl0ZWQgJiYgYXJncy50eXBlICE9PSAnY29udGV4dG1lbnUnKSB7XG4gICAgICAgICAgICB0aGlzLmdyaWQuZWRpdENlbGwoYXJncy5yb3dJbmRleCwgYXJncy5jb2x1bW5JbmRleCwgdGhpcy5jcmVhdGVGb3JtR3JvdXAoYXJncykpO1xuICAgICAgICAgICAgdGhpcy5jZHIubWFya0ZvckNoZWNrKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2VsbENsb3NlSGFuZGxlcihhcmdzKSB7XG4gICAgICAgIGNvbnN0IHsgZm9ybUdyb3VwLCBkYXRhSXRlbSB9ID0gYXJncztcbiAgICAgICAgaWYgKCFmb3JtR3JvdXAudmFsaWQpIHtcbiAgICAgICAgICAgIGFyZ3MucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChmb3JtR3JvdXAuZGlydHkpIHtcbiAgICAgICAgICAgIHRoaXMuZWRpdFNlcnZpY2UuYXNzaWduVmFsdWVzKGRhdGFJdGVtLCBmb3JtR3JvdXAudmFsdWUpO1xuICAgICAgICAgICAgdGhpcy5lZGl0U2VydmljZS51cGRhdGUoZGF0YUl0ZW0pO1xuICAgICAgICB9XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCdrZW5kb0dyaWRJbkNlbGxFZGl0aW5nJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEZ1bmN0aW9uKVxuXSwgSW5DZWxsRWRpdGluZ0RpcmVjdGl2ZS5wcm90b3R5cGUsIFwiY3JlYXRlRm9ybUdyb3VwXCIsIHZvaWQgMCk7XG5JbkNlbGxFZGl0aW5nRGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkSW5DZWxsRWRpdGluZ10nXG4gICAgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtHcmlkQ29tcG9uZW50LFxuICAgICAgICBMb2NhbERhdGFDaGFuZ2VzU2VydmljZSxcbiAgICAgICAgQ2hhbmdlRGV0ZWN0b3JSZWZdKVxuXSwgSW5DZWxsRWRpdGluZ0RpcmVjdGl2ZSk7XG5cbmNvbnN0IGhhc0dyb3VwcyA9IChpdGVtcykgPT4gaXRlbXMgJiYgaXRlbXMubGVuZ3RoICYmIGl0ZW1zWzBdLmZpZWxkICYmIGl0ZW1zWzBdLml0ZW1zO1xuY29uc3QgZ3JvdXBEZXNjcmlwdG9yc1ByZXNlbnQgPSAoZGVzY3JpcHRvcnMpID0+IGlzUHJlc2VudChkZXNjcmlwdG9ycykgJiYgZGVzY3JpcHRvcnMubGVuZ3RoID4gMDtcbmNvbnN0IHByb2Nlc3NHcm91cHMgPSAoZGF0YSwgc3RhdGUkJDEpID0+IHByb2Nlc3MoZGF0YSwgc3RhdGUkJDEpLmRhdGE7XG5jb25zdCByZW1vdmVQYXJlbnREZXNjcmlwdG9ycyA9IChwYXJlbnRzLCBvd25lcikgPT4gZyA9PiBnLmZpZWxkICE9PSBvd25lci5maWVsZCAmJiAhcGFyZW50cy5zb21lKHkgPT4geS5maWVsZCA9PT0gZy5maWVsZCk7XG5jb25zdCBmaW5kR3JvdXAgPSAoZ3JvdXBJbmRleCwgZ3JvdXBzKSA9PiB7XG4gICAgY29uc3QgcGFyZW50cyA9IFtdO1xuICAgIHJldHVybiB7XG4gICAgICAgIGdyb3VwOiBncm91cEluZGV4LnNwbGl0KFwiX1wiKS5yZWR1Y2UoKGFjYywgeCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaWR4ID0gcGFyc2VJbnQoeCwgMTApO1xuICAgICAgICAgICAgaWYgKGFjYy5pdGVtcykge1xuICAgICAgICAgICAgICAgIHBhcmVudHMucHVzaChhY2MpO1xuICAgICAgICAgICAgICAgIHJldHVybiBhY2MuaXRlbXNbaWR4XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBpc0FycmF5KGFjYykgPyBhY2NbaWR4XSA6IGFjYztcbiAgICAgICAgfSwgZ3JvdXBzKSxcbiAgICAgICAgcGFyZW50c1xuICAgIH07XG59O1xuY29uc3QgZmluZENoaWxkcmVuID0gKGRhdGEsIHBhcmVudHMpID0+IHtcbiAgICBjb25zdCBmaWx0ZXJzID0gcGFyZW50cy5tYXAocCA9PiAoeyBmaWVsZDogcC5maWVsZCwgb3BlcmF0b3I6IFwiZXFcIiwgdmFsdWU6IHAudmFsdWUgfSkpO1xuICAgIHJldHVybiBmaWx0ZXJCeShkYXRhLCB7XG4gICAgICAgIGZpbHRlcnM6IGZpbHRlcnMsXG4gICAgICAgIGxvZ2ljOiBcImFuZFwiXG4gICAgfSk7XG59O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IGNvdW50ID0gKGdyb3VwcywgaW5jbHVkZUZvb3RlcnMgPSBmYWxzZSkgPT4gKGdyb3Vwcy5yZWR1Y2UoKGFjYywgZ3JvdXApID0+IHtcbiAgICBpZiAoIWdyb3VwLnNraXBIZWFkZXIpIHtcbiAgICAgICAgYWNjKys7XG4gICAgfVxuICAgIGlmIChncm91cC5pdGVtcykge1xuICAgICAgICBjb25zdCBjaGlsZHJlbiA9IGNvdW50KGdyb3VwLml0ZW1zLCBpbmNsdWRlRm9vdGVycyk7XG4gICAgICAgIGlmIChpbmNsdWRlRm9vdGVycyAmJiBjaGlsZHJlbiAmJiAhZ3JvdXAuaGlkZUZvb3Rlcikge1xuICAgICAgICAgICAgYWNjKys7XG4gICAgICAgIH1cbiAgICAgICAgYWNjICs9IGNoaWxkcmVuO1xuICAgIH1cbiAgICByZXR1cm4gYWNjO1xufSwgMCkgLy8gdHNsaW50OmRpc2FibGUtbGluZTphbGlnblxuKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBzbGljZSA9IChncm91cHMsIHNraXAsIHRha2UkJDEsIGluY2x1ZGVGb290ZXJzID0gZmFsc2UpID0+IHtcbiAgICBpZiAoIWlzUHJlc2VudCh0YWtlJCQxKSkge1xuICAgICAgICByZXR1cm4gZ3JvdXBzO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICBmb3IgKGxldCBpZHggPSAwLCBsZW5ndGggPSBncm91cHMubGVuZ3RoOyBpZHggPCBsZW5ndGg7IGlkeCsrKSB7XG4gICAgICAgIGlmICh0YWtlJCQxIDw9IDApIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGdyb3VwID0gZ3JvdXBzW2lkeF07XG4gICAgICAgIGNvbnN0IGdyb3VwSXRlbXMgPSBncm91cC5pdGVtcztcbiAgICAgICAgbGV0IGl0ZW1Db3VudCA9IGNvdW50KGdyb3VwSXRlbXMsIGluY2x1ZGVGb290ZXJzKTtcbiAgICAgICAgaWYgKGluY2x1ZGVGb290ZXJzICYmIGdyb3VwSXRlbXMubGVuZ3RoKSB7XG4gICAgICAgICAgICBpdGVtQ291bnQrKztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBza2lwSGVhZGVyID0gc2tpcCA+IDA7XG4gICAgICAgIGlmIChza2lwKSB7XG4gICAgICAgICAgICBza2lwLS07XG4gICAgICAgICAgICBpZiAoaXRlbUNvdW50ICYmIHNraXAgPj0gaXRlbUNvdW50KSB7XG4gICAgICAgICAgICAgICAgc2tpcCAtPSBpdGVtQ291bnQ7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFza2lwSGVhZGVyIHx8IGl0ZW1Db3VudCkge1xuICAgICAgICAgICAgY29uc3QgaXRlbXMgPSBbXTtcbiAgICAgICAgICAgIGxldCBoaWRlRm9vdGVyID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmICghc2tpcEhlYWRlcikge1xuICAgICAgICAgICAgICAgIHRha2UkJDEtLTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0YWtlJCQxKSB7XG4gICAgICAgICAgICAgICAgaWYgKGhhc0dyb3Vwcyhncm91cEl0ZW1zKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjaGlsZHJlbiA9IHNsaWNlKGdyb3VwSXRlbXMsIHNraXAsIHRha2UkJDEsIGluY2x1ZGVGb290ZXJzKTtcbiAgICAgICAgICAgICAgICAgICAgaXRlbXMucHVzaCguLi5jaGlsZHJlbik7XG4gICAgICAgICAgICAgICAgICAgIHRha2UkJDEgLT0gY291bnQoY2hpbGRyZW4sIGluY2x1ZGVGb290ZXJzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW1zLnB1c2goLi4uZ3JvdXBJdGVtcy5zbGljZShza2lwLCBNYXRoLm1pbihza2lwICsgdGFrZSQkMSwgZ3JvdXBJdGVtcy5sZW5ndGgpKSk7XG4gICAgICAgICAgICAgICAgICAgIHRha2UkJDEgLT0gaXRlbXMubGVuZ3RoO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodGFrZSQkMSAmJiBpbmNsdWRlRm9vdGVycykge1xuICAgICAgICAgICAgICAgICAgICBoaWRlRm9vdGVyID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIHRha2UkJDEtLTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2tpcCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXN1bHQucHVzaCh7XG4gICAgICAgICAgICAgICAgYWdncmVnYXRlczogZ3JvdXAuYWdncmVnYXRlcyxcbiAgICAgICAgICAgICAgICBmaWVsZDogZ3JvdXAuZmllbGQsXG4gICAgICAgICAgICAgICAgaGlkZUZvb3RlcixcbiAgICAgICAgICAgICAgICBpdGVtcyxcbiAgICAgICAgICAgICAgICBvZmZzZXQ6IGlkeCxcbiAgICAgICAgICAgICAgICBza2lwSGVhZGVyLFxuICAgICAgICAgICAgICAgIHZhbHVlOiBncm91cC52YWx1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5jb25zdCBza2lwcGVkSGVhZGVycyA9IChncm91cEl0ZW0pID0+IHtcbiAgICBsZXQgdG90YWwgPSAwO1xuICAgIHdoaWxlIChncm91cEl0ZW0pIHtcbiAgICAgICAgaWYgKGdyb3VwSXRlbS5za2lwSGVhZGVyKSB7XG4gICAgICAgICAgICB0b3RhbCsrO1xuICAgICAgICB9XG4gICAgICAgIGdyb3VwSXRlbSA9IGdyb3VwSXRlbS5pdGVtcyAmJiBncm91cEl0ZW0uaXRlbXNbMF0gfHwgbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHRvdGFsO1xufTtcbi8qKlxuICogQSBkaXJlY3RpdmUgd2hpY2ggZW5jYXBzdWxhdGVzIHRoZSBpbi1tZW1vcnkgaGFuZGxpbmcgb2YgZ3JvdXBpbmcgd2l0aCB2aXJ0dWFsIHNjcm9sbGluZy5cbiAqL1xubGV0IEdyb3VwQmluZGluZ0RpcmVjdGl2ZSA9IGNsYXNzIEdyb3VwQmluZGluZ0RpcmVjdGl2ZSBleHRlbmRzIERhdGFCaW5kaW5nRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3RvcihncmlkLCBjaGFuZ2VEZXRlY3RvciwgbG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2UpIHtcbiAgICAgICAgc3VwZXIoZ3JpZCwgY2hhbmdlRGV0ZWN0b3IsIGxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIGFycmF5IG9mIGRhdGEgd2hpY2ggd2lsbCBiZSB1c2VkIHRvIHBvcHVsYXRlIHRoZSBHcmlkLlxuICAgICAqL1xuICAgIHNldCBrZW5kb0dyaWRHcm91cEJpbmRpbmcodmFsdWUpIHtcbiAgICAgICAgdGhpcy5ncm91cHMgPSBudWxsO1xuICAgICAgICB0aGlzLmdyaWQucmVzZXRHcm91cHNTdGF0ZSgpO1xuICAgICAgICB0aGlzLmRhdGEgPSB2YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHNldCBkYXRhKHZhbHVlKSB7XG4gICAgICAgIHRoaXMub3JpZ2luYWxEYXRhID0gdmFsdWUgfHwgW107XG4gICAgICAgIHRoaXMuZGF0YUNoYW5nZWQgPSB0cnVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIHRoZSBkZXNjcmlwdG9ycyBieSB3aGljaCB0aGUgZGF0YSB3aWxsIGJlIHNvcnRlZC5cbiAgICAgKi9cbiAgICBzZXQgc29ydCh2YWx1ZSkge1xuICAgICAgICBjb25zdCBjbGVhciA9IHRoaXMuc3RhdGUuc29ydCAhPT0gdmFsdWU7XG4gICAgICAgIHRoaXMuZ3JpZC5zb3J0ID0gdGhpcy5zdGF0ZS5zb3J0ID0gdmFsdWU7XG4gICAgICAgIGlmIChjbGVhcikge1xuICAgICAgICAgICAgdGhpcy5ncm91cHMgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5ncmlkLnJlc2V0R3JvdXBzU3RhdGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIHRoZSBkZXNjcmlwdG9yIGJ5IHdoaWNoIHRoZSBkYXRhIHdpbGwgYmUgZmlsdGVyZWQuXG4gICAgICovXG4gICAgc2V0IGZpbHRlcih2YWx1ZSkge1xuICAgICAgICBjb25zdCBjbGVhciA9IGRpZmZGaWx0ZXJzKHRoaXMuc3RhdGUuZmlsdGVyLCB2YWx1ZSk7XG4gICAgICAgIGlmIChjbGVhcikge1xuICAgICAgICAgICAgdGhpcy5zdGF0ZS5maWx0ZXIgPSB2YWx1ZTtcbiAgICAgICAgICAgIHRoaXMuZ3JpZC5maWx0ZXIgPSBjbG9uZUZpbHRlcnModmFsdWUpO1xuICAgICAgICAgICAgdGhpcy5ncm91cHMgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5ncmlkLnJlc2V0R3JvdXBzU3RhdGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIHRoZSBkZXNjcmlwdG9ycyBieSB3aGljaCB0aGUgZGF0YSB3aWxsIGJlIGdyb3VwZWQuXG4gICAgICovXG4gICAgc2V0IGdyb3VwKHZhbHVlKSB7XG4gICAgICAgIC8vIGRvbid0IGNsZWFyIGlmIG5vIGdyb3VwcyBhcmUgcHJlc2VudCBpbiBwcmV2aW91cyBhbmQgY3VycmVudCB2YWx1ZVxuICAgICAgICBjb25zdCBncm91cHNQcmVzZW50ID0gZ3JvdXBEZXNjcmlwdG9yc1ByZXNlbnQodGhpcy5zdGF0ZS5ncm91cCkgfHwgZ3JvdXBEZXNjcmlwdG9yc1ByZXNlbnQodmFsdWUpO1xuICAgICAgICBjb25zdCBjbGVhciA9IHRoaXMuc3RhdGUuZ3JvdXAgIT09IHZhbHVlICYmIGdyb3Vwc1ByZXNlbnQ7XG4gICAgICAgIHRoaXMuZ3JpZC5ncm91cCA9IHRoaXMuc3RhdGUuZ3JvdXAgPSB2YWx1ZTtcbiAgICAgICAgaWYgKGNsZWFyKSB7XG4gICAgICAgICAgICB0aGlzLmdyb3VwcyA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmdyaWQucmVzZXRHcm91cHNTdGF0ZSgpO1xuICAgICAgICAgICAgdGhpcy5za2lwID0gMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHN1cGVyLm5nT25Jbml0KCk7XG4gICAgICAgIHRoaXMuZ3JpZC5ncm91cEV4cGFuZC5zdWJzY3JpYmUodGhpcy5ncm91cEV4cGFuZC5iaW5kKHRoaXMpKTtcbiAgICAgICAgdGhpcy5ncmlkLmdyb3VwQ29sbGFwc2Uuc3Vic2NyaWJlKHRoaXMuZ3JvdXBDb2xsYXBzZS5iaW5kKHRoaXMpKTtcbiAgICB9XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xuICAgICAgICBpZiAoaXNEZXZNb2RlKCkgJiYgdGhpcy5ncmlkLmlzR3JvdXBFeHBhbmRlZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVc2luZyB0aGUgYGtlbmRvR3JpZEdyb3VwQmluZGluZ2AgZGlyZWN0aXZlIGluIGNvbWJpbmF0aW9uIHdpdGggdGhlIGBrZW5kb0dyaWRFeHBhbmRHcm91cEJ5YCBkaXJlY3RpdmUgJyArXG4gICAgICAgICAgICAgICAgJ29yIHRoZSBgaXNHcm91cEV4cGFuZGVkYCBjYWxsYmFjayBpcyBub3Qgc3VwcG9ydGVkLiBUbyB1c2UgZ3JvdXBpbmcgd2l0aCB0aGUgYGtlbmRvR3JpZEdyb3VwQmluZGluZ2AgZGlyZWN0aXZlLCAnICtcbiAgICAgICAgICAgICAgICAnc2V0IHRoZSBHcmlkIGBncm91cGFibGVgIHByb3BlcnR5IHRvIGB0cnVlYC4nKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBncm91cEV4cGFuZCh7IGdyb3VwSW5kZXggfSkge1xuICAgICAgICB0aGlzLmdyaWQuZXhwYW5kR3JvdXBDaGlsZHJlbihncm91cEluZGV4KTtcbiAgICAgICAgY29uc3QgeyBncm91cCwgcGFyZW50cyB9ID0gZmluZEdyb3VwKGdyb3VwSW5kZXgsIHRoaXMuZ3JvdXBzKTtcbiAgICAgICAgaWYgKCFncm91cC5pdGVtcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNvbnN0IGRlc2NyaXB0b3JzID0gdGhpcy5zdGF0ZS5ncm91cC5maWx0ZXIocmVtb3ZlUGFyZW50RGVzY3JpcHRvcnMocGFyZW50cywgZ3JvdXApKTtcbiAgICAgICAgICAgIGNvbnN0IGNoaWxkcmVuID0gZmluZENoaWxkcmVuKHRoaXMub3JpZ2luYWxEYXRhLCBwYXJlbnRzLmNvbmNhdChncm91cCkpO1xuICAgICAgICAgICAgZ3JvdXAuaXRlbXMgPSBwcm9jZXNzR3JvdXBzKGNoaWxkcmVuLCB7XG4gICAgICAgICAgICAgICAgZmlsdGVyOiB0aGlzLnN0YXRlLmZpbHRlcixcbiAgICAgICAgICAgICAgICBncm91cDogZGVzY3JpcHRvcnMsXG4gICAgICAgICAgICAgICAgc29ydDogdGhpcy5zdGF0ZS5zb3J0XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmdyaWQuZGF0YSA9IHRoaXMuZGF0YVJlc3VsdCh0aGlzLnN0YXRlLnNraXAsIHRoaXMuc3RhdGUudGFrZSk7XG4gICAgfVxuICAgIGdyb3VwQ29sbGFwc2UoeyBncm91cEluZGV4IH0pIHtcbiAgICAgICAgY29uc3QgeyBncm91cCB9ID0gZmluZEdyb3VwKGdyb3VwSW5kZXgsIHRoaXMuZ3JvdXBzKTtcbiAgICAgICAgaWYgKGdyb3VwKSB7XG4gICAgICAgICAgICBncm91cC5pdGVtcyA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZ3JpZC5kYXRhID0gdGhpcy5kYXRhUmVzdWx0KHRoaXMuc3RhdGUuc2tpcCwgdGhpcy5zdGF0ZS50YWtlKTtcbiAgICB9XG4gICAgcHJvY2VzcyhzdGF0ZSQkMSkge1xuICAgICAgICBpZiAoc3RhdGUkJDEuZ3JvdXAgJiYgc3RhdGUkJDEuZ3JvdXAubGVuZ3RoKSB7XG4gICAgICAgICAgICBjb25zdCBncm91cHMgPSB0aGlzLnByb2Nlc3NHcm91cHMoc3RhdGUkJDEpO1xuICAgICAgICAgICAgdGhpcy5ncmlkLnNraXAgLT0gc2tpcHBlZEhlYWRlcnMoZ3JvdXBzLmRhdGFbMF0pO1xuICAgICAgICAgICAgcmV0dXJuIGdyb3VwcztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZ3JvdXBzID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3VwZXIucHJvY2VzcyhzdGF0ZSQkMSk7XG4gICAgfVxuICAgIHByb2Nlc3NHcm91cHMoc3RhdGUkJDEpIHtcbiAgICAgICAgaWYgKCF0aGlzLmdyb3VwcyB8fCAhdGhpcy5ncm91cHMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLmdyb3VwcyA9IHByb2Nlc3NHcm91cHModGhpcy5vcmlnaW5hbERhdGEsIHtcbiAgICAgICAgICAgICAgICBmaWx0ZXI6IHN0YXRlJCQxLmZpbHRlcixcbiAgICAgICAgICAgICAgICBncm91cDogc3RhdGUkJDEuZ3JvdXAsXG4gICAgICAgICAgICAgICAgc29ydDogc3RhdGUkJDEuc29ydFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVJlc3VsdChzdGF0ZSQkMS5za2lwLCBzdGF0ZSQkMS50YWtlKTtcbiAgICB9XG4gICAgZGF0YVJlc3VsdChza2lwLCB0YWtlJCQxKSB7XG4gICAgICAgIGNvbnN0IGluY2x1ZGVGb290ZXJzID0gdGhpcy5ncmlkLnNob3dHcm91cEZvb3RlcnM7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkYXRhOiBzbGljZSh0aGlzLmdyb3Vwcywgc2tpcCwgdGFrZSQkMSwgaW5jbHVkZUZvb3RlcnMpLFxuICAgICAgICAgICAgdG90YWw6IGNvdW50KHRoaXMuZ3JvdXBzLCBpbmNsdWRlRm9vdGVycylcbiAgICAgICAgfTtcbiAgICB9XG4gICAgYXBwbHlTdGF0ZSh7IHNraXAsIHRha2U6IHRha2UkJDEsIHNvcnQsIGdyb3VwLCBmaWx0ZXI6IGZpbHRlciQkMSB9KSB7XG4gICAgICAgIHRoaXMuc2tpcCA9IHNraXA7XG4gICAgICAgIHRoaXMuc3RhdGUudGFrZSA9IHRha2UkJDE7XG4gICAgICAgIC8vIHRoaXMucGFnZVNpemUgPSB0YWtlOyAvLyBkbyBuZWVkIHRvIHVwZGF0ZSB0YWtlIGFzIHRoZSBwcm9jZXNzIHdpdGggc2xpY2UgY29ycmVjdGx5XG4gICAgICAgIHRoaXMuc29ydCA9IHNvcnQ7XG4gICAgICAgIHRoaXMuZ3JvdXAgPSBncm91cDtcbiAgICAgICAgdGhpcy5maWx0ZXIgPSBmaWx0ZXIkJDE7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KFwia2VuZG9HcmlkR3JvdXBCaW5kaW5nXCIpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBBcnJheSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtBcnJheV0pXG5dLCBHcm91cEJpbmRpbmdEaXJlY3RpdmUucHJvdG90eXBlLCBcImtlbmRvR3JpZEdyb3VwQmluZGluZ1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEFycmF5KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0FycmF5XSlcbl0sIEdyb3VwQmluZGluZ0RpcmVjdGl2ZS5wcm90b3R5cGUsIFwic29ydFwiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKVxuXSwgR3JvdXBCaW5kaW5nRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJmaWx0ZXJcIiwgbnVsbCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBBcnJheSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtBcnJheV0pXG5dLCBHcm91cEJpbmRpbmdEaXJlY3RpdmUucHJvdG90eXBlLCBcImdyb3VwXCIsIG51bGwpO1xuR3JvdXBCaW5kaW5nRGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdba2VuZG9HcmlkR3JvdXBCaW5kaW5nXScgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtHcmlkQ29tcG9uZW50LCBDaGFuZ2VEZXRlY3RvclJlZiwgTG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2VdKVxuXSwgR3JvdXBCaW5kaW5nRGlyZWN0aXZlKTtcblxuY29uc3QgZXhwb3J0ZWRNb2R1bGVzJDQgPSBbXG4gICAgR3JpZENvbXBvbmVudCxcbiAgICBUb29sYmFyVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgVG9vbGJhckNvbXBvbmVudCxcbiAgICBHcmlkU3BhY2VyQ29tcG9uZW50LFxuICAgIERhdGFCaW5kaW5nRGlyZWN0aXZlLFxuICAgIFNlbGVjdGlvbkRpcmVjdGl2ZSxcbiAgICBDdXN0b21NZXNzYWdlc0NvbXBvbmVudCxcbiAgICBHcm91cEJpbmRpbmdEaXJlY3RpdmUsXG4gICAgVGVtcGxhdGVFZGl0aW5nRGlyZWN0aXZlLFxuICAgIFJlYWN0aXZlRWRpdGluZ0RpcmVjdGl2ZSxcbiAgICBJbkNlbGxFZGl0aW5nRGlyZWN0aXZlLFxuICAgIEV4cGFuZERldGFpbHNEaXJlY3RpdmUsXG4gICAgRXhwYW5kR3JvdXBEaXJlY3RpdmUsXG4gICAgLi4uR3JvdXBNb2R1bGUuZXhwb3J0cygpLFxuICAgIC4uLlNoYXJlZE1vZHVsZS5leHBvcnRzKCksXG4gICAgLi4uQm9keU1vZHVsZS5leHBvcnRzKCksXG4gICAgLi4uSGVhZGVyTW9kdWxlLmV4cG9ydHMoKSxcbiAgICAuLi5Gb290ZXJNb2R1bGUuZXhwb3J0cygpLFxuICAgIC4uLlBhZ2VyTW9kdWxlLmV4cG9ydHMoKSxcbiAgICAuLi5Sb3dGaWx0ZXJNb2R1bGUuZXhwb3J0cygpLFxuICAgIC4uLkZpbHRlck1lbnVNb2R1bGUuZXhwb3J0cygpLFxuICAgIC4uLkNvbHVtbk1lbnVNb2R1bGUuZXhwb3J0cygpXG5dO1xuY29uc3QgZGVjbGFyYXRpb25zID0gW1xuICAgIEdyaWRDb21wb25lbnQsXG4gICAgTGlzdENvbXBvbmVudCxcbiAgICBUb29sYmFyQ29tcG9uZW50LFxuICAgIExvY2FsaXplZE1lc3NhZ2VzRGlyZWN0aXZlLFxuICAgIEN1c3RvbU1lc3NhZ2VzQ29tcG9uZW50LFxuICAgIERhdGFCaW5kaW5nRGlyZWN0aXZlLFxuICAgIFRvb2xiYXJUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBTZWxlY3Rpb25EaXJlY3RpdmUsXG4gICAgVGVtcGxhdGVFZGl0aW5nRGlyZWN0aXZlLFxuICAgIFJlYWN0aXZlRWRpdGluZ0RpcmVjdGl2ZSxcbiAgICBJbkNlbGxFZGl0aW5nRGlyZWN0aXZlLFxuICAgIEV4cGFuZERldGFpbHNEaXJlY3RpdmUsXG4gICAgRXhwYW5kR3JvdXBEaXJlY3RpdmUsXG4gICAgR3JvdXBCaW5kaW5nRGlyZWN0aXZlLFxuICAgIEdyaWRNYXJxdWVlRGlyZWN0aXZlLFxuICAgIEdyaWRTcGFjZXJDb21wb25lbnRcbl07XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIFtOZ01vZHVsZV0oe3sgc2l0ZS5kYXRhLnVybHMuYW5ndWxhclsnbmdtb2R1bGVhcGknXSB9fSlcbiAqIGRlZmluaXRpb24gZm9yIHRoZSBHcmlkIGNvbXBvbmVudC5cbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIGBgYHRzLW5vLXJ1blxuICogLy8gSW1wb3J0IHRoZSBHcmlkIG1vZHVsZVxuICogaW1wb3J0IHsgR3JpZE1vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWdyaWQnO1xuICpcbiAqIC8vIFRoZSBicm93c2VyIHBsYXRmb3JtIHdpdGggYSBjb21waWxlclxuICogaW1wb3J0IHsgcGxhdGZvcm1Ccm93c2VyRHluYW1pYyB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXItZHluYW1pYyc7XG4gKlxuICogaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbiAqXG4gKiAvLyBJbXBvcnQgdGhlIGFwcCBjb21wb25lbnRcbiAqIGltcG9ydCB7IEFwcENvbXBvbmVudCB9IGZyb20gJy4vYXBwLmNvbXBvbmVudCc7XG4gKlxuICogLy8gRGVmaW5lIHRoZSBhcHAgbW9kdWxlXG4gKiBfQE5nTW9kdWxlKHtcbiAqICAgICBkZWNsYXJhdGlvbnM6IFtBcHBDb21wb25lbnRdLCAvLyBkZWNsYXJlIGFwcCBjb21wb25lbnRcbiAqICAgICBpbXBvcnRzOiAgICAgIFtCcm93c2VyTW9kdWxlLCBHcmlkTW9kdWxlXSwgLy8gaW1wb3J0IEdyaWQgbW9kdWxlXG4gKiAgICAgYm9vdHN0cmFwOiAgICBbQXBwQ29tcG9uZW50XVxuICogfSlcbiAqIGV4cG9ydCBjbGFzcyBBcHBNb2R1bGUge31cbiAqXG4gKiAvLyBDb21waWxlIGFuZCBsYXVuY2ggdGhlIG1vZHVsZVxuICogcGxhdGZvcm1Ccm93c2VyRHluYW1pYygpLmJvb3RzdHJhcE1vZHVsZShBcHBNb2R1bGUpO1xuICpcbiAqIGBgYFxuICovXG5sZXQgR3JpZE1vZHVsZSA9IGNsYXNzIEdyaWRNb2R1bGUge1xufTtcbkdyaWRNb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICBOZ01vZHVsZSh7XG4gICAgICAgIGRlY2xhcmF0aW9uczogW2RlY2xhcmF0aW9uc10sXG4gICAgICAgIGV4cG9ydHM6IFtleHBvcnRlZE1vZHVsZXMkNF0sXG4gICAgICAgIGltcG9ydHM6IFtcbiAgICAgICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgICAgIEdyb3VwTW9kdWxlLFxuICAgICAgICAgICAgU2hhcmVkTW9kdWxlLFxuICAgICAgICAgICAgQm9keU1vZHVsZSxcbiAgICAgICAgICAgIEhlYWRlck1vZHVsZSxcbiAgICAgICAgICAgIEZvb3Rlck1vZHVsZSxcbiAgICAgICAgICAgIFBhZ2VyTW9kdWxlLFxuICAgICAgICAgICAgUm93RmlsdGVyTW9kdWxlLFxuICAgICAgICAgICAgRmlsdGVyTWVudU1vZHVsZSxcbiAgICAgICAgICAgIFJlc2l6ZVNlbnNvck1vZHVsZSxcbiAgICAgICAgICAgIENvbHVtbk1lbnVNb2R1bGVcbiAgICAgICAgXVxuICAgIH0pXG5dLCBHcmlkTW9kdWxlKTtcblxubGV0IFBERk1hcmdpbkNvbXBvbmVudCA9IGNsYXNzIFBERk1hcmdpbkNvbXBvbmVudCBleHRlbmRzIFBERkV4cG9ydE1hcmdpbkNvbXBvbmVudCB7XG59O1xuUERGTWFyZ2luQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLXBkZi1tYXJnaW4nLFxuICAgICAgICB0ZW1wbGF0ZTogJydcbiAgICB9KVxuXSwgUERGTWFyZ2luQ29tcG9uZW50KTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBQREYgcGFnZSB0ZW1wbGF0ZSBvZiB0aGUgR3JpZCB0aGF0IGhlbHBzIHRvIGN1c3RvbWl6ZSB0aGUgUERGIHBhZ2VzLiBUbyBkZWZpbmUgYSBwYWdlIHRlbXBsYXRlLFxuICogbmVzdCBhbiBgPG5nLXRlbXBsYXRlPmAgdGFnIHdpdGggdGhlIGBrZW5kb0dyaWRQREZUZW1wbGF0ZWAgZGlyZWN0aXZlIGluc2lkZSBgPGtlbmRvLWdyaWQtcGRmPmAuXG4gKlxuICogVGhlIHRlbXBsYXRlIGNvbnRleHQgcHJvdmlkZXMgdGhlIGZvbGxvd2luZyBmaWVsZHM6XG4gKiAtIGBwYWdlTnVtYmVyYCZtZGFzaDtEZWZpbmVzIFBERiBwYWdlIG51bWJlci5cbiAqIC0gYHRvdGFsUGFnZXNgJm1kYXNoO0RlZmluZXMgdGhlIHRvdGFsIG51bWJlciBvZiBQREYgcGFnZXMuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgICAgIDxrZW5kby1ncmlkIFtkYXRhXT1cImdyaWREYXRhXCI+XG4gKiAgICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9HcmlkVG9vbGJhclRlbXBsYXRlPlxuICogICAgICAgICAgICAgICAgIDxidXR0b24ga2VuZG9HcmlkUERGQ29tbWFuZCBpY29uPVwiZmlsZS1wZGZcIj5FeHBvcnQgdG8gUERGPC9idXR0b24+XG4gKiAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIj5cbiAqICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiVW5pdFByaWNlXCI+XG4gKiAgICAgICAgICAgICA8L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgICAgPGtlbmRvLWdyaWQtcGRmIGZpbGVOYW1lPVwiUHJvZHVjdHMucGRmXCIgcGFwZXJTaXplPVwiQTRcIiBbbWFyZ2luXT1cInsgdG9wOiAnMWNtJywgbGVmdDogJzFjbScsIHJpZ2h0OiAnMWNtJywgYm90dG9tOiAnMWNtJyB9XCI+XG4gKiAgICAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZFBERlRlbXBsYXRlIGxldC1wYWdlTnVtPVwicGFnZU51bVwiIGxldC10b3RhbFBhZ2VzPVwidG90YWxQYWdlc1wiPlxuICogICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwicG9zaXRpb246IGFic29sdXRlO3RvcDogNXB4OyBsZWZ0OiA1cHg7XCI+XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICBQYWdlIHt7IHBhZ2VOdW0gfX0gb2Yge3sgdG90YWxQYWdlcyB9fVxuICogICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAqICAgICAgICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgICAgICAgPC9rZW5kby1ncmlkLXBkZj5cbiAqICAgICAgICAgPC9rZW5kby1ncmlkPlxuICogICAgIGBcbiAqIH0pXG4gKlxuICogY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAqICAgICBwdWJsaWMgZ3JpZERhdGEgPSBbe1xuICogICAgICAgICBcIlByb2R1Y3RJRFwiOiAxLFxuICogICAgICAgICBcIlByb2R1Y3ROYW1lXCI6IFwiQ2hhaVwiLFxuICogICAgICAgICBcIlVuaXRQcmljZVwiOiAxOC4wMDAwXG4gKiAgICAgICB9LCB7XG4gKiAgICAgICAgIFwiUHJvZHVjdElEXCI6IDIsXG4gKiAgICAgICAgIFwiUHJvZHVjdE5hbWVcIjogXCJDaGFuZ1wiLFxuICogICAgICAgICBcIlVuaXRQcmljZVwiOiAxOS4wMDAwXG4gKiAgICAgICB9XG4gKiAgICAgXTtcbiAqIH1cbiAqXG4gKiBgYGBcbiAqL1xubGV0IFBERlRlbXBsYXRlRGlyZWN0aXZlID0gY2xhc3MgUERGVGVtcGxhdGVEaXJlY3RpdmUgZXh0ZW5kcyBQREZFeHBvcnRUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgY29uc3RydWN0b3IodGVtcGxhdGVSZWYpIHtcbiAgICAgICAgc3VwZXIodGVtcGxhdGVSZWYpO1xuICAgIH1cbn07XG5QREZUZW1wbGF0ZURpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZFBERlRlbXBsYXRlXSdcbiAgICB9KSxcbiAgICBfX3BhcmFtKDAsIE9wdGlvbmFsKCkpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbVGVtcGxhdGVSZWZdKVxuXSwgUERGVGVtcGxhdGVEaXJlY3RpdmUpO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuY29uc3QgSEVBREVSX0NMQVNTID0gJ2stZ3JpZC1oZWFkZXInO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNvbnN0IEZPT1RFUl9DTEFTUyA9ICdrLWdyaWQtZm9vdGVyJztcbmNvbnN0IEdSSURfTElTVCA9ICdLRU5ETy1HUklELUxJU1QnO1xuY29uc3QgVEFCTEUgPSAnVEFCTEUnO1xuY29uc3QgbWF0Y2hlc0xpc3QgPSBtYXRjaGVzTm9kZU5hbWUoR1JJRF9MSVNUKTtcbmNvbnN0IG1hdGNoZXNUYWJsZSA9IG1hdGNoZXNOb2RlTmFtZShUQUJMRSk7XG5jb25zdCBzdWZmaXggPSAobG9ja2VkKSA9PiBsb2NrZWQgPyAnbG9ja2VkJyA6ICd3cmFwJztcbi8qKlxuICogQGhpZGRlblxuICovXG5jbGFzcyBHcmlkUXVlcnkge1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgICAgdGhpcy5saXN0ID0gZmluZEVsZW1lbnQoZWxlbWVudCwgbWF0Y2hlc0xpc3QpO1xuICAgIH1cbiAgICBjb250ZW50KGxvY2tlZCkge1xuICAgICAgICByZXR1cm4gZmluZEVsZW1lbnQodGhpcy5saXN0LCBtYXRjaGVzQ2xhc3Nlcyhgay1ncmlkLWNvbnRlbnQke2xvY2tlZCA/ICctbG9ja2VkJyA6ICcnfWApKTtcbiAgICB9XG4gICAgaGVhZGVyKGxvY2tlZCkge1xuICAgICAgICB0aGlzLmhlYWRlcldyYXAgPSB0aGlzLmhlYWRlcldyYXAgfHwgZmluZEVsZW1lbnQodGhpcy5lbGVtZW50LCBtYXRjaGVzQ2xhc3NlcyhIRUFERVJfQ0xBU1MpKTtcbiAgICAgICAgcmV0dXJuIGZpbmRFbGVtZW50KHRoaXMuaGVhZGVyV3JhcCwgbWF0Y2hlc0NsYXNzZXMoYCR7SEVBREVSX0NMQVNTfS0ke3N1ZmZpeChsb2NrZWQpfWApKTtcbiAgICB9XG4gICAgZm9vdGVyKGxvY2tlZCkge1xuICAgICAgICB0aGlzLmZvb3RlcldyYXAgPSB0aGlzLmZvb3RlcldyYXAgfHwgZmluZEVsZW1lbnQodGhpcy5lbGVtZW50LCBtYXRjaGVzQ2xhc3NlcyhGT09URVJfQ0xBU1MpKTtcbiAgICAgICAgcmV0dXJuIGZpbmRFbGVtZW50KHRoaXMuZm9vdGVyV3JhcCwgbWF0Y2hlc0NsYXNzZXMoYCR7Rk9PVEVSX0NMQVNTfS0ke3N1ZmZpeChsb2NrZWQpfWApKTtcbiAgICB9XG4gICAgdGFibGUoKSB7XG4gICAgICAgIHJldHVybiBmaW5kRWxlbWVudCh0aGlzLmVsZW1lbnQsIG1hdGNoZXNUYWJsZSk7XG4gICAgfVxufVxuXG5jb25zdCBGSVJTVF9DTEFTUyA9ICdrLWZpcnN0JztcbmNvbnN0IElOUFVUUyA9IFsnaW5wdXQnLCAnc2VsZWN0JywgJ3RleHRhcmVhJywgJ29wdGlvbiddO1xuLyoqIEBoaWRkZW4gKi9cbmNvbnN0IGNsb25lTm9kZSA9IChub2RlKSA9PiB7XG4gICAgY29uc3QgY2xvbmUgPSBub2RlLmNsb25lTm9kZShmYWxzZSk7XG4gICAgaWYgKG5vZGUuX2tlbmRvRXhwb3J0VmlzdWFsKSB7XG4gICAgICAgIGNsb25lLl9rZW5kb0V4cG9ydFZpc3VhbCA9IG5vZGUuX2tlbmRvRXhwb3J0VmlzdWFsO1xuICAgIH1cbiAgICBpZiAoSU5QVVRTLmluZGV4T2YoU3RyaW5nKG5vZGUubm9kZU5hbWUpLnRvTG93ZXJDYXNlKCkpID49IDApIHtcbiAgICAgICAgY2xvbmUucmVtb3ZlQXR0cmlidXRlKFwiaWRcIik7XG4gICAgICAgIGNsb25lLnJlbW92ZUF0dHJpYnV0ZShcIm5hbWVcIik7XG4gICAgICAgIGNsb25lLnZhbHVlID0gbm9kZS52YWx1ZTtcbiAgICAgICAgY2xvbmUuY2hlY2tlZCA9IG5vZGUuY2hlY2tlZDtcbiAgICAgICAgY2xvbmUuc2VsZWN0ZWQgPSBub2RlLnNlbGVjdGVkO1xuICAgIH1cbiAgICBsZXQgY2hpbGQgPSBub2RlLmZpcnN0Q2hpbGQ7XG4gICAgd2hpbGUgKGNoaWxkKSB7XG4gICAgICAgIGNsb25lLmFwcGVuZENoaWxkKGNsb25lTm9kZShjaGlsZCkpO1xuICAgICAgICBjaGlsZCA9IGNoaWxkLm5leHRTaWJsaW5nO1xuICAgIH1cbiAgICByZXR1cm4gY2xvbmU7XG59O1xuY29uc3QgYXBwZW5kTm9kZXMgPSAoZWxlbWVudCwgbm9kZXMpID0+IHtcbiAgICBjb25zdCBsZW5ndGggPSBub2Rlcy5sZW5ndGg7XG4gICAgZm9yIChsZXQgaWR4ID0gMDsgaWR4IDwgbGVuZ3RoOyBpZHgrKykge1xuICAgICAgICBlbGVtZW50LmFwcGVuZENoaWxkKGNsb25lTm9kZShub2Rlc1tpZHhdKSk7XG4gICAgfVxufTtcbmNvbnN0IHdyYXBUYWJsZSA9ICh0YWJsZSkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICB3cmFwcGVyLmNsYXNzTmFtZSA9ICdrLXdpZGdldCBrLWdyaWQnO1xuICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQodGFibGUpO1xuICAgIHJldHVybiB3cmFwcGVyO1xufTtcbmNvbnN0IGNyZWF0ZVRhYmxlRWxlbWVudCA9IChzb3VyY2VzKSA9PiB7XG4gICAgY29uc3Qgc291cmNlQ291bnQgPSBzb3VyY2VzLmxlbmd0aDtcbiAgICBjb25zdCBlbGVtZW50ID0gY2xvbmVOb2RlKHNvdXJjZXNbMF0pO1xuICAgIGNvbnN0IHJvd3NDb3VudCA9IGVsZW1lbnQucm93cy5sZW5ndGg7XG4gICAgaWYgKHNvdXJjZUNvdW50ID4gMSkge1xuICAgICAgICBmb3IgKGxldCByb3dJZHggPSAwOyByb3dJZHggPCByb3dzQ291bnQ7IHJvd0lkeCsrKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBzb3VyY2VJZHggPSAxOyBzb3VyY2VJZHggPCBzb3VyY2VDb3VudDsgc291cmNlSWR4KyspIHtcbiAgICAgICAgICAgICAgICBhcHBlbmROb2RlcyhlbGVtZW50LnJvd3Nbcm93SWR4XSwgc291cmNlc1tzb3VyY2VJZHhdLnJvd3Nbcm93SWR4XS5jZWxscyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG59O1xuY29uc3Qgc2V0Rmlyc3RDZWxsQ2xhc3MgPSAoaGVhZGVyLCBoZWFkZXJzKSA9PiB7XG4gICAgaWYgKGhlYWRlcnMubGVuZ3RoID4gMSAmJiBoZWFkZXIucm93cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAobGV0IGlkeCA9IDE7IGlkeCA8IGhlYWRlci5yb3dzLmxlbmd0aDsgaWR4KyspIHtcbiAgICAgICAgICAgIGNvbnN0IGZpcnN0Q2VsbEluZGV4ID0gaGVhZGVyc1swXS5yb3dzW2lkeF0uY2VsbHMubGVuZ3RoO1xuICAgICAgICAgICAgY29uc3QgY2VsbCA9IGhlYWRlci5yb3dzW2lkeF0uY2VsbHNbZmlyc3RDZWxsSW5kZXhdO1xuICAgICAgICAgICAgaWYgKFN0cmluZyhjZWxsLmNsYXNzTmFtZSkuaW5kZXhPZihGSVJTVF9DTEFTUykgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgY2VsbC5jbGFzc05hbWUgKz0gYCAke0ZJUlNUX0NMQVNTfWA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59O1xuY29uc3QgY3JlYXRlVGFibGUgPSAoY29sR3JvdXBzLCBoZWFkZXJzLCBib2RpZXMsIGZvb3RlcnMpID0+IHtcbiAgICBjb25zdCB0YWJsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RhYmxlJyk7XG4gICAgY29uc3QgY29sR3JvdXAgPSBjb2xHcm91cHNbMF0uY2xvbmVOb2RlKHRydWUpO1xuICAgIGZvciAobGV0IGlkeCA9IDE7IGlkeCA8IGNvbEdyb3Vwcy5sZW5ndGg7IGlkeCsrKSB7XG4gICAgICAgIGFwcGVuZE5vZGVzKGNvbEdyb3VwLCBjb2xHcm91cHNbaWR4XS5xdWVyeVNlbGVjdG9yQWxsKCdjb2wnKSk7XG4gICAgfVxuICAgIGNvbnN0IGhlYWRlciA9IGNyZWF0ZVRhYmxlRWxlbWVudChoZWFkZXJzKTtcbiAgICBjb25zdCBib2R5ID0gY3JlYXRlVGFibGVFbGVtZW50KGJvZGllcyk7XG4gICAgaGVhZGVyLmNsYXNzTmFtZSA9IEhFQURFUl9DTEFTUztcbiAgICBzZXRGaXJzdENlbGxDbGFzcyhoZWFkZXIsIGhlYWRlcnMpO1xuICAgIHRhYmxlLmFwcGVuZENoaWxkKGNvbEdyb3VwKTtcbiAgICB0YWJsZS5hcHBlbmRDaGlsZChoZWFkZXIpO1xuICAgIHRhYmxlLmFwcGVuZENoaWxkKGJvZHkpO1xuICAgIGlmIChmb290ZXJzLmxlbmd0aCkge1xuICAgICAgICBjb25zdCBmb290ZXIgPSBjcmVhdGVUYWJsZUVsZW1lbnQoZm9vdGVycyk7XG4gICAgICAgIGZvb3Rlci5jbGFzc05hbWUgPSBGT09URVJfQ0xBU1M7XG4gICAgICAgIHRhYmxlLmFwcGVuZENoaWxkKGZvb3Rlcik7XG4gICAgfVxuICAgIHJldHVybiB3cmFwVGFibGUodGFibGUpO1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5jb25zdCBleHBvcnRFbGVtZW50ID0gKHdyYXBwZXIpID0+IHtcbiAgICBjb25zdCBxdWVyeSA9IG5ldyBHcmlkUXVlcnkod3JhcHBlcik7XG4gICAgY29uc3QgY29udGVudCA9IHF1ZXJ5LmNvbnRlbnQoKTtcbiAgICBsZXQgcmVzdWx0O1xuICAgIGlmIChjb250ZW50KSB7XG4gICAgICAgIGNvbnN0IGNvbEdyb3VwcyA9IFtjb250ZW50LnF1ZXJ5U2VsZWN0b3IoJ2NvbGdyb3VwJyldO1xuICAgICAgICBjb25zdCBoZWFkZXJzID0gW3F1ZXJ5LmhlYWRlcigpLnF1ZXJ5U2VsZWN0b3IoJ3RoZWFkJyldO1xuICAgICAgICBjb25zdCBib2RpZXMgPSBbY29udGVudC5xdWVyeVNlbGVjdG9yKCd0Ym9keScpXTtcbiAgICAgICAgY29uc3QgZm9vdGVyID0gcXVlcnkuZm9vdGVyKCk7XG4gICAgICAgIGNvbnN0IGZvb3RlcnMgPSBbXTtcbiAgICAgICAgaWYgKGZvb3Rlcikge1xuICAgICAgICAgICAgZm9vdGVycy5wdXNoKGZvb3Rlci5xdWVyeVNlbGVjdG9yKCd0Zm9vdCcpKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBsb2NrZWRDb250ZW50ID0gcXVlcnkuY29udGVudCh0cnVlKTtcbiAgICAgICAgaWYgKGxvY2tlZENvbnRlbnQpIHtcbiAgICAgICAgICAgIGNvbEdyb3Vwcy51bnNoaWZ0KGxvY2tlZENvbnRlbnQucXVlcnlTZWxlY3RvcignY29sZ3JvdXAnKSk7XG4gICAgICAgICAgICBoZWFkZXJzLnVuc2hpZnQocXVlcnkuaGVhZGVyKHRydWUpLnF1ZXJ5U2VsZWN0b3IoJ3RoZWFkJykpO1xuICAgICAgICAgICAgYm9kaWVzLnVuc2hpZnQobG9ja2VkQ29udGVudC5xdWVyeVNlbGVjdG9yKCd0Ym9keScpKTtcbiAgICAgICAgICAgIGlmIChmb290ZXIpIHtcbiAgICAgICAgICAgICAgICBmb290ZXJzLnVuc2hpZnQocXVlcnkuZm9vdGVyKHRydWUpLnF1ZXJ5U2VsZWN0b3IoJ3Rmb290JykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJlc3VsdCA9IGNyZWF0ZVRhYmxlKGNvbEdyb3VwcywgaGVhZGVycywgYm9kaWVzLCBmb290ZXJzKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJlc3VsdCA9IHdyYXBUYWJsZShxdWVyeS50YWJsZSgpLmNsb25lTm9kZSh0cnVlKSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuXG5jb25zdCBjcmVhdGVFbGVtZW50JDEgPSAodGFnTmFtZSwgY2xhc3NOYW1lKSA9PiB7XG4gICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnTmFtZSk7XG4gICAgaWYgKGNsYXNzTmFtZSkge1xuICAgICAgICBlbGVtZW50LmNsYXNzTmFtZSA9IGNsYXNzTmFtZTtcbiAgICB9XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG59O1xuY29uc3QgY3JlYXRlRGl2ID0gKGNsYXNzTmFtZSkgPT4ge1xuICAgIHJldHVybiBjcmVhdGVFbGVtZW50JDEoJ2RpdicsIGNsYXNzTmFtZSk7XG59O1xuLyoqXG4gKiBDb25maWd1cmVzIHRoZSBzZXR0aW5ncyBmb3IgdGhlIGV4cG9ydCBvZiBHcmlkIGluIFBERiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIHBkZmV4cG9ydF9ncmlkICV9KSkuXG4gKi9cbmxldCBQREZDb21wb25lbnQgPSBjbGFzcyBQREZDb21wb25lbnQgZXh0ZW5kcyBQREZFeHBvcnRDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHBkZlNlcnZpY2UsIHN1c3BlbmRTZXJ2aWNlLCBuZ1pvbmUsIGVsZW1lbnQpIHtcbiAgICAgICAgc3VwZXIoZWxlbWVudCk7XG4gICAgICAgIHRoaXMucGRmU2VydmljZSA9IHBkZlNlcnZpY2U7XG4gICAgICAgIHRoaXMuc3VzcGVuZFNlcnZpY2UgPSBzdXNwZW5kU2VydmljZTtcbiAgICAgICAgdGhpcy5uZ1pvbmUgPSBuZ1pvbmU7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgZGVsYXkgaW4gbWlsbGlzZWNvbmRzIGJlZm9yZSBleHBvcnRpbmcgdGhlIEdyaWQgY29udGVudC5cbiAgICAgICAgICogVXNlZnVsIGZvciBzY2VuYXJpb3Mgd2hpY2ggaW52b2x2ZSBleHBvcnRpbmcgY29tcGxleCBjb21wb25lbnRzIHVzZWQgaW4gdGhlIEdyaWRcbiAgICAgICAgICogdGVtcGxhdGVzIHN1Y2ggYXMgY2hhcnRzIG9yIGRhdGEtYm91bmQgY29tcG9uZW50cyB3aXRoIGFzeW5jaHJvbm91cyBkYXRhIHJldHJpZXZhbCAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIHBkZmV4cG9ydF9ncmlkICV9I3RvYy1leHBvcnRpbmctYWxsLXBhZ2VzKSkuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBkZWZhdWx0IDBcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZGVsYXkgPSAwO1xuICAgICAgICB0aGlzLmNvbHVtbnMgPSBuZXcgUXVlcnlMaXN0KCk7XG4gICAgICAgIHRoaXMuc2F2ZVN1YnNjcmlwdGlvbiA9IHBkZlNlcnZpY2Uuc2F2ZVBERi5zdWJzY3JpYmUodGhpcy5zYXZlUERGLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmRyYXdTdWJzY3JpcHRpb24gPSBwZGZTZXJ2aWNlLmRyYXdQREYuc3Vic2NyaWJlKHRoaXMuZHJhd1BERi5iaW5kKHRoaXMpKTtcbiAgICAgICAgdGhpcy5yZXNldCA9IHRoaXMucmVzZXQuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5kcmF3ID0gdGhpcy5kcmF3LmJpbmQodGhpcyk7XG4gICAgfVxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLnNhdmVTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgdGhpcy5kcmF3U3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHNhdmVBcyhfKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm90IHN1cHBvcnRlZC4gVXNlIEdyaWRDb21wb25lbnQuc2F2ZUFzUERGJyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBleHBvcnQoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm90IHN1cHBvcnRlZC4gVXNlIEdyaWRDb21wb25lbnQuZHJhd1BERicpO1xuICAgIH1cbiAgICBzYXZlUERGKGNvbXBvbmVudCkge1xuICAgICAgICB0aGlzLmNyZWF0ZVBERihjb21wb25lbnQsIHRoaXMuZHJhdyk7XG4gICAgfVxuICAgIGRyYXdQREYoeyBjb21wb25lbnQsIHByb21pc2UgfSkge1xuICAgICAgICB0aGlzLmNyZWF0ZVBERihjb21wb25lbnQsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlRXhwb3J0R3JvdXAocHJvbWlzZSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjcmVhdGVQREYoY29tcG9uZW50LCBjYWxsYmFjaykge1xuICAgICAgICBjb25zdCBwYWdlU2l6ZSA9IGNvbXBvbmVudC5wYWdlU2l6ZTtcbiAgICAgICAgY29uc3QgdG90YWwgPSBjb21wb25lbnQudmlldy50b3RhbDtcbiAgICAgICAgY29uc3QgY29sdW1ucyA9IHRoaXMuY29sdW1ucy50b0FycmF5KCk7XG4gICAgICAgIGlmIChjb2x1bW5zLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5vcmlnaW5hbENvbHVtbnMgPSBjb21wb25lbnQuY29sdW1ucy50b0FycmF5KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jb21wb25lbnQgPSBjb21wb25lbnQ7XG4gICAgICAgIHRoaXMuc3VzcGVuZFNlcnZpY2Uuc2Nyb2xsID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5wZGZTZXJ2aWNlLmV4cG9ydGluZyA9IHRydWU7XG4gICAgICAgIHRoaXMuaW5pdFByb2dyZXNzKCk7XG4gICAgICAgIHRoaXMucmVuZGVyQWxsUGFnZXMgPSB0aGlzLmFsbFBhZ2VzICYmIHBhZ2VTaXplIDwgdG90YWw7XG4gICAgICAgIGlmICh0aGlzLnJlbmRlckFsbFBhZ2VzKSB7XG4gICAgICAgICAgICB0aGlzLnNraXAgPSBjb21wb25lbnQuc2tpcDtcbiAgICAgICAgICAgIHRoaXMucGFnZVNpemUgPSBwYWdlU2l6ZTtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlUGFnZSgwLCB0b3RhbCwgY2FsbGJhY2ssIGNvbHVtbnMpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNvbHVtbnMubGVuZ3RoIHx8IGNvbXBvbmVudC52aXJ0dWFsQ29sdW1ucykge1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VDb2x1bW5zKGNvbHVtbnMsIGNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaW5pdFByb2dyZXNzKCkge1xuICAgICAgICBjb25zdCB3cmFwcGVyRWxlbWVudCA9IHRoaXMuY29tcG9uZW50LndyYXBwZXIubmF0aXZlRWxlbWVudDtcbiAgICAgICAgY29uc3QgcHJvZ3Jlc3MgPSB0aGlzLnByb2dyZXNzID0gY3JlYXRlRGl2KCdrLWxvYWRpbmctcGRmLW1hc2snKTtcbiAgICAgICAgY29uc3Qgb3ZlcmxheSA9IGNsb25lTm9kZSh3cmFwcGVyRWxlbWVudCk7XG4gICAgICAgIHByb2dyZXNzLmFwcGVuZENoaWxkKG92ZXJsYXkpO1xuICAgICAgICBwcm9ncmVzcy5hcHBlbmRDaGlsZChjcmVhdGVEaXYoJ2stbG9hZGluZy1jb2xvcicpKTtcbiAgICAgICAgcHJvZ3Jlc3MuYXBwZW5kQ2hpbGQoY3JlYXRlRWxlbWVudCQxKCdzcGFuJywgJ2staS1sb2FkaW5nIGstaWNvbicpKTtcbiAgICAgICAgdGhpcy5vcmlnaW5hbEhlaWdodCA9IHdyYXBwZXJFbGVtZW50LnN0eWxlLmhlaWdodDtcbiAgICAgICAgdGhpcy5vcmlnaW5hbE92ZXJmbG93ID0gd3JhcHBlckVsZW1lbnQuc3R5bGUub3ZlcmZsb3c7XG4gICAgICAgIHdyYXBwZXJFbGVtZW50LnN0eWxlLmhlaWdodCA9IHdyYXBwZXJFbGVtZW50Lm9mZnNldEhlaWdodCArICdweCc7XG4gICAgICAgIHdyYXBwZXJFbGVtZW50LnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XG4gICAgICAgIHdyYXBwZXJFbGVtZW50LmFwcGVuZENoaWxkKHByb2dyZXNzKTtcbiAgICAgICAgdGhpcy5hcHBseVNjcm9sbChvdmVybGF5KTtcbiAgICB9XG4gICAgYXBwbHlTY3JvbGwob3ZlcmxheSkge1xuICAgICAgICBjb25zdCBxdWVyeSA9IG5ldyBHcmlkUXVlcnkodGhpcy5jb21wb25lbnQud3JhcHBlci5uYXRpdmVFbGVtZW50KTtcbiAgICAgICAgY29uc3QgY29udGVudCA9IHF1ZXJ5LmNvbnRlbnQoKTtcbiAgICAgICAgaWYgKGNvbnRlbnQpIHtcbiAgICAgICAgICAgIGNvbnN0IG92ZXJsYXlRdWVyeSA9IG5ldyBHcmlkUXVlcnkob3ZlcmxheSk7XG4gICAgICAgICAgICBjb25zdCBvdmVybGF5Q29udGVudCA9IG92ZXJsYXlRdWVyeS5jb250ZW50KCk7XG4gICAgICAgICAgICBvdmVybGF5Q29udGVudC5zY3JvbGxUb3AgPSBjb250ZW50LnNjcm9sbFRvcDtcbiAgICAgICAgICAgIG92ZXJsYXlDb250ZW50LnNjcm9sbExlZnQgPSBjb250ZW50LnNjcm9sbExlZnQ7XG4gICAgICAgICAgICBvdmVybGF5UXVlcnkuaGVhZGVyKCkuc2Nyb2xsTGVmdCA9IHF1ZXJ5LmhlYWRlcigpLnNjcm9sbExlZnQ7XG4gICAgICAgICAgICBjb25zdCBmb290ZXIgPSBxdWVyeS5mb290ZXIoKTtcbiAgICAgICAgICAgIGlmIChmb290ZXIpIHtcbiAgICAgICAgICAgICAgICBvdmVybGF5UXVlcnkuZm9vdGVyKCkuc2Nyb2xsTGVmdCA9IGZvb3Rlci5zY3JvbGxMZWZ0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgbG9ja2VkQ29udGVudCA9IHF1ZXJ5LmNvbnRlbnQodHJ1ZSk7XG4gICAgICAgICAgICBpZiAobG9ja2VkQ29udGVudCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG92ZXJsYXlMb2NrZWRDb250ZW50ID0gb3ZlcmxheVF1ZXJ5LmNvbnRlbnQodHJ1ZSk7XG4gICAgICAgICAgICAgICAgb3ZlcmxheUxvY2tlZENvbnRlbnQuc2Nyb2xsVG9wID0gbG9ja2VkQ29udGVudC5zY3JvbGxUb3A7XG4gICAgICAgICAgICAgICAgb3ZlcmxheUxvY2tlZENvbnRlbnQuc2Nyb2xsTGVmdCA9IGxvY2tlZENvbnRlbnQuc2Nyb2xsTGVmdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBkcmF3KCkge1xuICAgICAgICB0aGlzLmNyZWF0ZUV4cG9ydEVsZW1lbnQoKGVsZW1lbnQpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2F2ZShlbGVtZW50LCB0aGlzLmZpbGVOYW1lKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNyZWF0ZUV4cG9ydEdyb3VwKHByb21pc2UpIHtcbiAgICAgICAgdGhpcy5jcmVhdGVFeHBvcnRFbGVtZW50KChlbGVtZW50KSA9PiB7XG4gICAgICAgICAgICB0aGlzLmV4cG9ydEVsZW1lbnQoZWxlbWVudCkudGhlbihncm91cCA9PiBwcm9taXNlLnJlc29sdmUoZ3JvdXApKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNyZWF0ZUV4cG9ydEVsZW1lbnQoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgY29udGFpbmVyID0gdGhpcy5jb250YWluZXIgPSBjcmVhdGVEaXYoJ2stZ3JpZC1wZGYtZXhwb3J0LWVsZW1lbnQnKTtcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBleHBvcnRFbGVtZW50KHRoaXMuY29tcG9uZW50LndyYXBwZXIubmF0aXZlRWxlbWVudCk7XG4gICAgICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoZWxlbWVudCk7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG4gICAgICAgICAgICBjYWxsYmFjayhlbGVtZW50KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGRyYXdPcHRpb25zKCkge1xuICAgICAgICBjb25zdCBvcHRpb25zID0gc3VwZXIuZHJhd09wdGlvbnMoKTtcbiAgICAgICAgb3B0aW9ucy5fZGVzdHJ1Y3RpdmUgPSB0cnVlO1xuICAgICAgICByZXR1cm4gb3B0aW9ucztcbiAgICB9XG4gICAgY2xlYW51cCgpIHtcbiAgICAgICAgc3VwZXIuY2xlYW51cCgpO1xuICAgICAgICB0aGlzLnBkZlNlcnZpY2UuZXhwb3J0aW5nID0gZmFsc2U7XG4gICAgICAgIGlmICh0aGlzLmNvbXBvbmVudCkge1xuICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxDb2x1bW5zID0gdGhpcy5vcmlnaW5hbENvbHVtbnM7XG4gICAgICAgICAgICBkZWxldGUgdGhpcy5vcmlnaW5hbENvbHVtbnM7XG4gICAgICAgICAgICBpZiAodGhpcy5yZW5kZXJBbGxQYWdlcykge1xuICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlUGFnZSh0aGlzLnNraXAsIHRoaXMucGFnZVNpemUsIHRoaXMucmVzZXQsIG9yaWdpbmFsQ29sdW1ucyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChvcmlnaW5hbENvbHVtbnMgfHwgdGhpcy5jb21wb25lbnQudmlydHVhbENvbHVtbnMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUNvbHVtbnMob3JpZ2luYWxDb2x1bW5zLCB0aGlzLnJlc2V0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJlbW92ZUNvbnRhaW5lcigpO1xuICAgIH1cbiAgICByZW1vdmVDb250YWluZXIoKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbnRhaW5lcikge1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0aGlzLmNvbnRhaW5lcik7XG4gICAgICAgICAgICBkZWxldGUgdGhpcy5jb250YWluZXI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2hhbmdlUGFnZShza2lwLCBfdGFrZSwgY2FsbGJhY2ssIGNvbHVtbnMpIHtcbiAgICAgICAgdGhpcy5uZ1pvbmUucnVuKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMucGRmU2VydmljZS5kYXRhQ2hhbmdlZC5waXBlKHRha2UoMSkpLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKChjb2x1bW5zICYmIGNvbHVtbnMubGVuZ3RoKSB8fCB0aGlzLmNvbXBvbmVudC52aXJ0dWFsQ29sdW1ucykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUNvbHVtbnMoY29sdW1ucywgY2FsbGJhY2spO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vblN0YWJsZShjYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmNvbXBvbmVudC5ub3RpZnlQYWdlQ2hhbmdlKCdwZGYnLCB7IHNraXA6IHNraXAsIHRha2U6IF90YWtlIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgY2hhbmdlQ29sdW1ucyhjb2x1bW5zLCBjYWxsYmFjaykge1xuICAgICAgICB0aGlzLm5nWm9uZS5ydW4oKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5vblN0YWJsZShjYWxsYmFjayk7XG4gICAgICAgICAgICBpZiAoY29sdW1ucyAmJiBjb2x1bW5zLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY29tcG9uZW50LmNvbHVtbnMucmVzZXQoY29sdW1ucyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXNldCgpIHtcbiAgICAgICAgdGhpcy5zdXNwZW5kU2VydmljZS5zY3JvbGwgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5yZW5kZXJBbGxQYWdlcyA9IGZhbHNlO1xuICAgICAgICBpZiAoIXRoaXMuY29tcG9uZW50KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgd3JhcHBlckVsZW1lbnQgPSB0aGlzLmNvbXBvbmVudC53cmFwcGVyLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIHdyYXBwZXJFbGVtZW50LnJlbW92ZUNoaWxkKHRoaXMucHJvZ3Jlc3MpO1xuICAgICAgICB3cmFwcGVyRWxlbWVudC5zdHlsZS5oZWlnaHQgPSB0aGlzLm9yaWdpbmFsSGVpZ2h0O1xuICAgICAgICB3cmFwcGVyRWxlbWVudC5zdHlsZS5vdmVyZmxvdyA9IHRoaXMub3JpZ2luYWxPdmVyZmxvdztcbiAgICAgICAgZGVsZXRlIHRoaXMucHJvZ3Jlc3M7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmNvbXBvbmVudDtcbiAgICB9XG4gICAgb25TdGFibGUoY2FsbGJhY2spIHtcbiAgICAgICAgLy8gbm90IHN1cmUgaWYgaXQgaXMgYW4gYWN0dWFsIHNjZW5hcmlvLiBvY2N1cnMgaW4gdGhlIHRlc3RzLlxuICAgICAgICAvLyBvblN0YWJsZSBpcyB0cmlnZ2VyZWQgaW4gdGhlIHNhbWUgcGFzcyB3aXRob3V0IHRoZSBjaGFuZ2UgZGV0ZWN0aW9uLlxuICAgICAgICAvLyB0aHVzLCB0aGUgY2FsbGJhY2sgaXMgY2FsbGVkIGJlZm9yZSB0aGUgY2hhbmdlcyBhcmUgYXBwbGllZCB3aXRob3V0IHRoZSB0aW1lb3V0LlxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGxldCBvblN0YWJsZSA9IHRoaXMubmdab25lLm9uU3RhYmxlLmFzT2JzZXJ2YWJsZSgpLnBpcGUodGFrZSgxKSk7XG4gICAgICAgICAgICBpZiAodGhpcy5kZWxheSA+IDApIHtcbiAgICAgICAgICAgICAgICBvblN0YWJsZSA9IG9uU3RhYmxlLnBpcGUoZGVsYXkodGhpcy5kZWxheSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb25TdGFibGUuc3Vic2NyaWJlKGNhbGxiYWNrKTtcbiAgICAgICAgfSwgMCk7IC8vIHRzbGludDpkaXNhYmxlLWxpbmU6IGFsaWduXG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBQREZDb21wb25lbnQucHJvdG90eXBlLCBcImFsbFBhZ2VzXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBOdW1iZXIpXG5dLCBQREZDb21wb25lbnQucHJvdG90eXBlLCBcImRlbGF5XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBDb250ZW50Q2hpbGRyZW4oQ29sdW1uQmFzZSQxKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgUXVlcnlMaXN0KVxuXSwgUERGQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjb2x1bW5zXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBDb250ZW50Q2hpbGQoUERGTWFyZ2luQ29tcG9uZW50LCB7IHN0YXRpYzogZmFsc2UgfSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFBERk1hcmdpbkNvbXBvbmVudClcbl0sIFBERkNvbXBvbmVudC5wcm90b3R5cGUsIFwibWFyZ2luQ29tcG9uZW50XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBDb250ZW50Q2hpbGQoUERGVGVtcGxhdGVEaXJlY3RpdmUsIHsgc3RhdGljOiBmYWxzZSB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgUERGVGVtcGxhdGVEaXJlY3RpdmUpXG5dLCBQREZDb21wb25lbnQucHJvdG90eXBlLCBcInBhZ2VUZW1wbGF0ZURpcmVjdGl2ZVwiLCB2b2lkIDApO1xuUERGQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgQ29tcG9uZW50KHtcbiAgICAgICAgc2VsZWN0b3I6ICdrZW5kby1ncmlkLXBkZicsXG4gICAgICAgIHRlbXBsYXRlOiAnJ1xuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbUERGU2VydmljZSxcbiAgICAgICAgU3VzcGVuZFNlcnZpY2UsXG4gICAgICAgIE5nWm9uZSxcbiAgICAgICAgRWxlbWVudFJlZl0pXG5dLCBQREZDb21wb25lbnQpO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGBleHBvcnQtdG8tUERGYCBjb21tYW5kIG9mIHRoZSBHcmlkLlxuICogWW91IGNhbiBhcHBseSB0aGlzIGRpcmVjdGl2ZSB0byBhbnkgYGJ1dHRvbmAgZWxlbWVudCBpbnNpZGUgYVxuICogW1Rvb2xiYXJUZW1wbGF0ZV0oeyUgc2x1ZyBhcGlfZ3JpZF9jb21tYW5kY29sdW1uY29tcG9uZW50ICV9KS5cbiAqIFdoZW4gdGhlIHVzZXIgY2xpY2tzIGEgYnV0dG9uIHRoYXQgaXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBkaXJlY3RpdmUsIHRoZVxuICogW3BkZkV4cG9ydF0oeyUgc2x1ZyBhcGlfZ3JpZF9ncmlkY29tcG9uZW50ICV9I3RvYy1wZGZleHBvcnQpIGV2ZW50XG4gKiBmaXJlcyAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIHBkZmV4cG9ydF9ncmlkICV9KSkuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWwtbm8tcnVuXG4gKiA8a2VuZG8tZ3JpZD5cbiAqICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZFRvb2xiYXJUZW1wbGF0ZT5cbiAqICAgICAgICAgIDxidXR0b24ga2VuZG9HcmlkUERGQ29tbWFuZD5FeHBvcnQgdG8gUERGPC9idXR0b24+XG4gKiAgICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgICAgIDxrZW5kby1ncmlkLXBkZiBmaWxlTmFtZT1cIkdyaWQucGRmXCI+XG4gKiAgICAgIDwva2VuZG8tZ3JpZC1wZGY+XG4gKiA8L2tlbmRvLWdyaWQ+XG4gKiBgYGBcbiAqL1xubGV0IFBERkNvbW1hbmREaXJlY3RpdmUgPSBjbGFzcyBQREZDb21tYW5kRGlyZWN0aXZlIGV4dGVuZHMgQnV0dG9uIHtcbiAgICBjb25zdHJ1Y3RvcihwZGZTZXJ2aWNlLCBlbGVtZW50LCByZW5kZXJlciwgbG9jYWxpemF0aW9uLCBuZ1pvbmUpIHtcbiAgICAgICAgc3VwZXIoZWxlbWVudCwgcmVuZGVyZXIsIG51bGwsIGxvY2FsaXphdGlvbiwgbmdab25lKTtcbiAgICAgICAgdGhpcy5wZGZTZXJ2aWNlID0gcGRmU2VydmljZTtcbiAgICAgICAgdGhpcy5uZ1pvbmUgPSBuZ1pvbmU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvbkNsaWNrKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLnBkZlNlcnZpY2UuZXhwb3J0Q2xpY2suZW1pdCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IHBkZkNsYXNzKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBGdW5jdGlvbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnJldHVybnR5cGVcIiwgdm9pZCAwKVxuXSwgUERGQ29tbWFuZERpcmVjdGl2ZS5wcm90b3R5cGUsIFwib25DbGlja1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLWdyaWQtcGRmJyksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcbl0sIFBERkNvbW1hbmREaXJlY3RpdmUucHJvdG90eXBlLCBcInBkZkNsYXNzXCIsIG51bGwpO1xuUERGQ29tbWFuZERpcmVjdGl2ZSA9IF9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2tlbmRvR3JpZFBERkNvbW1hbmRdJ1xuICAgIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbUERGU2VydmljZSxcbiAgICAgICAgRWxlbWVudFJlZixcbiAgICAgICAgUmVuZGVyZXIyLFxuICAgICAgICBMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBOZ1pvbmVdKVxuXSwgUERGQ29tbWFuZERpcmVjdGl2ZSk7XG5cbmNvbnN0IGV4cG9ydGVkTW9kdWxlcyQ1ID0gW1xuICAgIFBERkNvbXBvbmVudCxcbiAgICBQREZNYXJnaW5Db21wb25lbnQsXG4gICAgUERGQ29tbWFuZERpcmVjdGl2ZSxcbiAgICBQREZUZW1wbGF0ZURpcmVjdGl2ZVxuXTtcbmNvbnN0IGRlY2xhcmF0aW9ucyQxID0gW1xuICAgIFBERkNvbXBvbmVudCxcbiAgICBQREZNYXJnaW5Db21wb25lbnQsXG4gICAgUERGQ29tbWFuZERpcmVjdGl2ZSxcbiAgICBQREZUZW1wbGF0ZURpcmVjdGl2ZVxuXTtcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgW05nTW9kdWxlXSh7eyBzaXRlLmRhdGEudXJscy5hbmd1bGFyWyduZ21vZHVsZWFwaSddIH19KVxuICogZGVmaW5pdGlvbiBmb3IgdGhlIEdyaWQgUERGIGNvbXBvbmVudC5cbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIGBgYHRzLW5vLXJ1blxuICogLy8gSW1wb3J0IHRoZSBHcmlkIGFuZCBQREYgbW9kdWxlc1xuICogaW1wb3J0IHsgR3JpZE1vZHVsZSwgUERGTW9kdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItZ3JpZCc7XG4gKlxuICogLy8gVGhlIGJyb3dzZXIgcGxhdGZvcm0gd2l0aCBhIGNvbXBpbGVyXG4gKiBpbXBvcnQgeyBwbGF0Zm9ybUJyb3dzZXJEeW5hbWljIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlci1keW5hbWljJztcbiAqXG4gKiBpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuICpcbiAqIC8vIEltcG9ydCB0aGUgYXBwIGNvbXBvbmVudFxuICogaW1wb3J0IHsgQXBwQ29tcG9uZW50IH0gZnJvbSAnLi9hcHAuY29tcG9uZW50JztcbiAqXG4gKiAvLyBEZWZpbmUgdGhlIGFwcCBtb2R1bGVcbiAqIF9ATmdNb2R1bGUoe1xuICogICAgIGRlY2xhcmF0aW9uczogW0FwcENvbXBvbmVudF0sIC8vIGRlY2xhcmUgYXBwIGNvbXBvbmVudFxuICogICAgIGltcG9ydHM6ICAgICAgW0Jyb3dzZXJNb2R1bGUsIEdyaWRNb2R1bGUsIFBERk1vZHVsZV0sIC8vIGltcG9ydCBHcmlkIGFuZCBQREYgbW9kdWxlc1xuICogICAgIGJvb3RzdHJhcDogICAgW0FwcENvbXBvbmVudF1cbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwTW9kdWxlIHt9XG4gKlxuICogLy8gQ29tcGlsZSBhbmQgbGF1bmNoIHRoZSBtb2R1bGVcbiAqIHBsYXRmb3JtQnJvd3NlckR5bmFtaWMoKS5ib290c3RyYXBNb2R1bGUoQXBwTW9kdWxlKTtcbiAqXG4gKiBgYGBcbiAqL1xubGV0IFBERk1vZHVsZSA9IGNsYXNzIFBERk1vZHVsZSB7XG59O1xuUERGTW9kdWxlID0gX19kZWNvcmF0ZShbXG4gICAgTmdNb2R1bGUoe1xuICAgICAgICBkZWNsYXJhdGlvbnM6IFtkZWNsYXJhdGlvbnMkMV0sXG4gICAgICAgIGV4cG9ydHM6IFtleHBvcnRlZE1vZHVsZXMkNV1cbiAgICB9KVxuXSwgUERGTW9kdWxlKTtcblxuLyoqXG4gKiBBcmd1bWVudHMgZm9yIHRoZSBgZXhjZWxFeHBvcnRgIGV2ZW50LlxuICovXG5jbGFzcyBFeGNlbEV4cG9ydEV2ZW50IGV4dGVuZHMgUHJldmVudGFibGVFdmVudCB7XG4gICAgY29uc3RydWN0b3Iod29ya2Jvb2spIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy53b3JrYm9vayA9IHdvcmtib29rO1xuICAgIH1cbn1cblxuLyogdHNsaW50OmRpc2FibGUgb2JqZWN0LWxpdGVyYWwtc29ydC1rZXlzICovXG5jb25zdCBmZXRjaENvbXBvbmVudERhdGEgPSAoY29tcG9uZW50KSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZGF0YTogY29tcG9uZW50LnZpZXcubWFwKGl0ZW0gPT4gaXRlbSksXG4gICAgICAgIGdyb3VwOiBjb21wb25lbnQuZ3JvdXBcbiAgICB9O1xufTtcbmNvbnN0IHRvRXhjZWxDb2x1bW4gPSAoY29sdW1uKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdGl0bGU6IGNvbHVtbi50aXRsZSxcbiAgICAgICAgZmllbGQ6IGNvbHVtbi5maWVsZCxcbiAgICAgICAgbG9ja2VkOiBCb29sZWFuKGNvbHVtbi5sb2NrZWQpLFxuICAgICAgICB3aWR0aDogY29sdW1uLndpZHRoLFxuICAgICAgICBsZXZlbDogY29sdW1uLmxldmVsLFxuICAgICAgICBoaWRkZW46ICFjb2x1bW4uaXNWaXNpYmxlLFxuICAgICAgICBncm91cEhlYWRlclRlbXBsYXRlOiBjb2x1bW4uZ3JvdXBIZWFkZXJUZW1wbGF0ZSxcbiAgICAgICAgZ3JvdXBIZWFkZXJDb2x1bW5UZW1wbGF0ZTogY29sdW1uLmdyb3VwSGVhZGVyQ29sdW1uVGVtcGxhdGUsXG4gICAgICAgIGdyb3VwRm9vdGVyVGVtcGxhdGU6IGNvbHVtbi5ncm91cEZvb3RlclRlbXBsYXRlLFxuICAgICAgICBmb290ZXJUZW1wbGF0ZTogY29sdW1uLmZvb3RlclRlbXBsYXRlXG4gICAgfTtcbn07XG5jb25zdCB0b0V4Y2VsQ29sdW1ucyA9IChjb2x1bW5zKSA9PiB7XG4gICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgc29ydENvbHVtbnMoY29sdW1ucylcbiAgICAgICAgLmZvckVhY2goKGNvbHVtbikgPT4ge1xuICAgICAgICBpZiAoY29sdW1uLmlzU3BhbkNvbHVtbikge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goLi4udG9FeGNlbENvbHVtbnMoY29sdW1uLmNoaWxkcmVuQXJyYXkpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGV4Y2VsQ29sdW1uID0gdG9FeGNlbENvbHVtbihjb2x1bW4pO1xuICAgICAgICAgICAgaWYgKGNvbHVtbi5pc0NvbHVtbkdyb3VwKSB7XG4gICAgICAgICAgICAgICAgZXhjZWxDb2x1bW4uY2hpbGRyZW4gPSBbZXhjZWxDb2x1bW5dLmNvbmNhdCh0b0V4Y2VsQ29sdW1ucyhjb2x1bW4uY2hpbGRyZW5BcnJheSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVzdWx0LnB1c2goZXhjZWxDb2x1bW4pO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5jb25zdCBjb21wb25lbnRDb2x1bW5zID0gKGNvbXBvbmVudCkgPT4ge1xuICAgIGNvbnN0IGNvbHVtbnMgPSB0b0V4Y2VsQ29sdW1ucyhjb21wb25lbnQuY29sdW1ucy50b0FycmF5KCkpO1xuICAgIHJldHVybiBvcmRlckJ5KGNvbHVtbnMsIFt7IGZpZWxkOiAnbG9ja2VkJywgZGlyOiAnZGVzYycgfV0pO1xufTtcbi8qKlxuICogQ29uZmlndXJlcyB0aGUgc2V0dGluZ3MgZm9yIHRoZSBleHBvcnQgb2YgR3JpZCBpbiBFeGNlbCAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGV4Y2VsZXhwb3J0X2dyaWQgJX0pKS5cbiAqL1xubGV0IEV4Y2VsQ29tcG9uZW50ID0gY2xhc3MgRXhjZWxDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKGV4Y2VsU2VydmljZSwgbG9jYWxpemF0aW9uLCB6b25lKSB7XG4gICAgICAgIHRoaXMubG9jYWxpemF0aW9uID0gbG9jYWxpemF0aW9uO1xuICAgICAgICB0aGlzLnpvbmUgPSB6b25lO1xuICAgICAgICAvKipcbiAgICAgICAgICogU3BlY2lmaWVzIHRoZSBmaWxlIG5hbWUgb2YgdGhlIGV4cG9ydGVkIEV4Y2VsIGZpbGUuXG4gICAgICAgICAqIEBkZWZhdWx0IFwiRXhwb3J0Lnhsc3hcIlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5maWxlTmFtZSA9ICdFeHBvcnQueGxzeCc7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAaGlkZGVuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmNvbHVtbnMgPSBuZXcgUXVlcnlMaXN0KCk7XG4gICAgICAgIHRoaXMuc2F2ZVN1YnNjcmlwdGlvbiA9IGV4Y2VsU2VydmljZS5zYXZlVG9FeGNlbC5zdWJzY3JpYmUodGhpcy5zYXZlLmJpbmQodGhpcykpO1xuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5zYXZlU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgIGlmICh0aGlzLmRhdGFTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuZGF0YVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHNhdmUoY29tcG9uZW50KSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSAodGhpcy5mZXRjaERhdGEgfHwgZmV0Y2hDb21wb25lbnREYXRhKShjb21wb25lbnQpO1xuICAgICAgICBjb25zdCBleHBvcnREYXRhID0gKHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgZGVsZXRlIHRoaXMuZGF0YVN1YnNjcmlwdGlvbjtcbiAgICAgICAgICAgIHRoaXMuZXhwb3J0RGF0YShjb21wb25lbnQsIHJlc3VsdCk7XG4gICAgICAgIH07XG4gICAgICAgIGlmIChkYXRhIGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgZGF0YS50aGVuKGV4cG9ydERhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGRhdGEgaW5zdGFuY2VvZiBPYnNlcnZhYmxlKSB7XG4gICAgICAgICAgICB0aGlzLmRhdGFTdWJzY3JpcHRpb24gPSBkYXRhLnBpcGUodGFrZSgxKSkuc3Vic2NyaWJlKGV4cG9ydERhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZXhwb3J0RGF0YShkYXRhKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBleHBvcnREYXRhKGNvbXBvbmVudCwgcmVzdWx0KSB7XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSB3b3JrYm9va09wdGlvbnMoe1xuICAgICAgICAgICAgY29sdW1uczogdGhpcy5jb2x1bW5zLmxlbmd0aCA/IHRoaXMuY29sdW1ucyA6IGNvbXBvbmVudENvbHVtbnMoY29tcG9uZW50KSxcbiAgICAgICAgICAgIGRhdGE6IHJlc3VsdC5kYXRhLFxuICAgICAgICAgICAgZ3JvdXA6IHJlc3VsdC5ncm91cCxcbiAgICAgICAgICAgIGZpbHRlcmFibGU6IHRoaXMuZmlsdGVyYWJsZSxcbiAgICAgICAgICAgIGNyZWF0b3I6IHRoaXMuY3JlYXRvcixcbiAgICAgICAgICAgIGRhdGU6IHRoaXMuZGF0ZSxcbiAgICAgICAgICAgIHBhZGRpbmdDZWxsT3B0aW9uczogdGhpcy5wYWRkaW5nQ2VsbE9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJQYWRkaW5nQ2VsbE9wdGlvbnM6IHRoaXMuaGVhZGVyUGFkZGluZ0NlbGxPcHRpb25zLFxuICAgICAgICAgICAgcnRsOiB0aGlzLmxvY2FsaXphdGlvbi5ydGwsXG4gICAgICAgICAgICBjb2xsYXBzaWJsZTogdGhpcy5jb2xsYXBzaWJsZVxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgYXJncyA9IG5ldyBFeGNlbEV4cG9ydEV2ZW50KG9wdGlvbnMpO1xuICAgICAgICBjb21wb25lbnQuZXhjZWxFeHBvcnQuZW1pdChhcmdzKTtcbiAgICAgICAgaWYgKCFhcmdzLmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgICAgICB0aGlzLnpvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4gdGhpcy5zYXZlRmlsZShvcHRpb25zKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2F2ZUZpbGUob3B0aW9ucykge1xuICAgICAgICB0b0RhdGFVUkwob3B0aW9ucykudGhlbigoZGF0YVVSTCkgPT4ge1xuICAgICAgICAgICAgc2F2ZUFzKGRhdGFVUkwsIHRoaXMuZmlsZU5hbWUsIHtcbiAgICAgICAgICAgICAgICBmb3JjZVByb3h5OiB0aGlzLmZvcmNlUHJveHksXG4gICAgICAgICAgICAgICAgcHJveHlVUkw6IHRoaXMucHJveHlVUkxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgRXhjZWxDb21wb25lbnQucHJvdG90eXBlLCBcImZpbGVOYW1lXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuXSwgRXhjZWxDb21wb25lbnQucHJvdG90eXBlLCBcImZpbHRlcmFibGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbl0sIEV4Y2VsQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjcmVhdG9yXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBEYXRlKVxuXSwgRXhjZWxDb21wb25lbnQucHJvdG90eXBlLCBcImRhdGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBFeGNlbENvbXBvbmVudC5wcm90b3R5cGUsIFwiZm9yY2VQcm94eVwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuXSwgRXhjZWxDb21wb25lbnQucHJvdG90eXBlLCBcInByb3h5VVJMXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBJbnB1dCgpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBGdW5jdGlvbilcbl0sIEV4Y2VsQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmZXRjaERhdGFcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIEV4Y2VsQ29tcG9uZW50LnByb3RvdHlwZSwgXCJwYWRkaW5nQ2VsbE9wdGlvbnNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIE9iamVjdClcbl0sIEV4Y2VsQ29tcG9uZW50LnByb3RvdHlwZSwgXCJoZWFkZXJQYWRkaW5nQ2VsbE9wdGlvbnNcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIElucHV0KCksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG5dLCBFeGNlbENvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sbGFwc2libGVcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIENvbnRlbnRDaGlsZHJlbihDb2x1bW5CYXNlLCB7IGRlc2NlbmRhbnRzOiB0cnVlIH0pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBRdWVyeUxpc3QpXG5dLCBFeGNlbENvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sdW1uc1wiLCB2b2lkIDApO1xuRXhjZWxDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ2tlbmRvLWdyaWQtZXhjZWwnLFxuICAgICAgICB0ZW1wbGF0ZTogYGBcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0V4Y2VsU2VydmljZSxcbiAgICAgICAgTG9jYWxpemF0aW9uU2VydmljZSxcbiAgICAgICAgTmdab25lXSlcbl0sIEV4Y2VsQ29tcG9uZW50KTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBgZXhwb3J0LXRvLUV4Y2VsYCBjb21tYW5kIG9mIHRoZSBHcmlkLiBZb3UgY2FuIGFwcGx5IHRoaXNcbiAqIGRpcmVjdGl2ZSB0byBhbnkgYGJ1dHRvbmAgZWxlbWVudCBpbnNpZGUgYVxuICogW1Rvb2xiYXJUZW1wbGF0ZV0oeyUgc2x1ZyBhcGlfZ3JpZF9jb21tYW5kY29sdW1uY29tcG9uZW50ICV9KS5cbiAqIFdoZW4gdGhlIHVzZXIgY2xpY2tzIGEgYnV0dG9uIGFzc29jaWF0ZWQgd2l0aCB0aGUgZGlyZWN0aXZlLCB0aGVcbiAqIFtleGNlbEV4cG9ydF0oeyUgc2x1ZyBhcGlfZ3JpZF9ncmlkY29tcG9uZW50ICV9I3RvYy1leGNlbGV4cG9ydCkgZXZlbnRcbiAqIGZpcmVzIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgZXhjZWxleHBvcnRfZ3JpZCAlfSkpLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBodG1sLW5vLXJ1blxuICogPGtlbmRvLWdyaWQ+XG4gKiAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRUb29sYmFyVGVtcGxhdGU+XG4gKiAgICAgICAgICA8YnV0dG9uIGtlbmRvR3JpZEV4Y2VsQ29tbWFuZD5FeHBvcnQgdG8gUERGPC9idXR0b24+XG4gKiAgICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgICAgIDxrZW5kby1ncmlkLWV4Y2VsIGZpbGVOYW1lPVwiR3JpZC54bHN4XCI+XG4gKiAgICAgIDwva2VuZG8tZ3JpZC1leGNlbD5cbiAqIDwva2VuZG8tZ3JpZD5cbiAqIGBgYFxuICovXG5sZXQgRXhjZWxDb21tYW5kRGlyZWN0aXZlID0gY2xhc3MgRXhjZWxDb21tYW5kRGlyZWN0aXZlIGV4dGVuZHMgQnV0dG9uIHtcbiAgICBjb25zdHJ1Y3RvcihleGNlbFNlcnZpY2UsIGVsZW1lbnQsIHJlbmRlcmVyLCBsb2NhbGl6YXRpb24sIG5nWm9uZSkge1xuICAgICAgICBzdXBlcihlbGVtZW50LCByZW5kZXJlciwgbnVsbCwgbG9jYWxpemF0aW9uLCBuZ1pvbmUpO1xuICAgICAgICB0aGlzLmV4Y2VsU2VydmljZSA9IGV4Y2VsU2VydmljZTtcbiAgICAgICAgdGhpcy5uZ1pvbmUgPSBuZ1pvbmU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvbkNsaWNrKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLmV4Y2VsU2VydmljZS5leHBvcnRDbGljay5lbWl0KCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgZXhjZWxDbGFzcygpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RMaXN0ZW5lcignY2xpY2snLCBbJyRldmVudCddKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgRnVuY3Rpb24pLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpyZXR1cm50eXBlXCIsIHZvaWQgMClcbl0sIEV4Y2VsQ29tbWFuZERpcmVjdGl2ZS5wcm90b3R5cGUsIFwib25DbGlja1wiLCBudWxsKTtcbl9fZGVjb3JhdGUoW1xuICAgIEhvc3RCaW5kaW5nKCdjbGFzcy5rLWdyaWQtZXhjZWwnKSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbiksXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxuXSwgRXhjZWxDb21tYW5kRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJleGNlbENsYXNzXCIsIG51bGwpO1xuRXhjZWxDb21tYW5kRGlyZWN0aXZlID0gX19kZWNvcmF0ZShbXG4gICAgRGlyZWN0aXZlKHtcbiAgICAgICAgc2VsZWN0b3I6ICdba2VuZG9HcmlkRXhjZWxDb21tYW5kXSdcbiAgICB9KSxcbiAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0V4Y2VsU2VydmljZSxcbiAgICAgICAgRWxlbWVudFJlZixcbiAgICAgICAgUmVuZGVyZXIyLFxuICAgICAgICBMb2NhbGl6YXRpb25TZXJ2aWNlLFxuICAgICAgICBOZ1pvbmVdKVxuXSwgRXhjZWxDb21tYW5kRGlyZWN0aXZlKTtcblxuY29uc3QgZGVjbGFyYXRpb25zJDIgPSBbRXhjZWxDb21wb25lbnQsIEV4Y2VsQ29tbWFuZERpcmVjdGl2ZV07XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIFtOZ01vZHVsZV0oe3sgc2l0ZS5kYXRhLnVybHMuYW5ndWxhclsnbmdtb2R1bGVhcGknXSB9fSlcbiAqIGRlZmluaXRpb24gZm9yIHRoZSBFeGNlbCBjb21wb25lbnQgb2YgdGhlIEdyaWQuXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiBgYGB0cy1uby1ydW5cbiAqIC8vIEltcG9ydCB0aGUgR3JpZCBhbmQgRXhjZWwgbW9kdWxlc1xuICogaW1wb3J0IHsgR3JpZE1vZHVsZSwgRXhjZWxNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1ncmlkJztcbiAqXG4gKiAvLyBUaGUgYnJvd3NlciBwbGF0Zm9ybSB3aXRoIGEgY29tcGlsZXJcbiAqIGltcG9ydCB7IHBsYXRmb3JtQnJvd3NlckR5bmFtaWMgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyLWR5bmFtaWMnO1xuICpcbiAqIGltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4gKlxuICogLy8gSW1wb3J0IHRoZSBhcHAgY29tcG9uZW50XG4gKiBpbXBvcnQgeyBBcHBDb21wb25lbnQgfSBmcm9tICcuL2FwcC5jb21wb25lbnQnO1xuICpcbiAqIC8vIERlZmluZSB0aGUgYXBwIG1vZHVsZVxuICogX0BOZ01vZHVsZSh7XG4gKiAgICAgZGVjbGFyYXRpb25zOiBbQXBwQ29tcG9uZW50XSwgLy8gZGVjbGFyZSBhcHAgY29tcG9uZW50XG4gKiAgICAgaW1wb3J0czogICAgICBbQnJvd3Nlck1vZHVsZSwgR3JpZE1vZHVsZSwgRXhjZWxNb2R1bGVdLCAvLyBpbXBvcnQgR3JpZCBhbmQgRXhjZWwgbW9kdWxlc1xuICogICAgIGJvb3RzdHJhcDogICAgW0FwcENvbXBvbmVudF1cbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwTW9kdWxlIHt9XG4gKlxuICogLy8gQ29tcGlsZSBhbmQgbGF1bmNoIHRoZSBtb2R1bGVcbiAqIHBsYXRmb3JtQnJvd3NlckR5bmFtaWMoKS5ib290c3RyYXBNb2R1bGUoQXBwTW9kdWxlKTtcbiAqXG4gKiBgYGBcbiAqL1xubGV0IEV4Y2VsTW9kdWxlID0gY2xhc3MgRXhjZWxNb2R1bGUge1xufTtcbkV4Y2VsTW9kdWxlID0gX19kZWNvcmF0ZShbXG4gICAgTmdNb2R1bGUoe1xuICAgICAgICBkZWNsYXJhdGlvbnM6IFtkZWNsYXJhdGlvbnMkMl0sXG4gICAgICAgIGV4cG9ydHM6IFtkZWNsYXJhdGlvbnMkMiwgRXhjZWxFeHBvcnRNb2R1bGVdXG4gICAgfSlcbl0sIEV4Y2VsTW9kdWxlKTtcblxuLyoqXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cbiAqL1xuXG5leHBvcnQgeyBDb2x1bW5DaG9vc2VyQ29tcG9uZW50LCBDb2x1bW5MaXN0Q29tcG9uZW50LCBDb2x1bW5NZW51Q2hvb3NlckNvbXBvbmVudCwgQ29sdW1uTWVudUNvbnRhaW5lckNvbXBvbmVudCwgQ29sdW1uTWVudUZpbHRlckNvbXBvbmVudCwgQ29sdW1uTWVudUl0ZW1CYXNlLCBDb2x1bW5NZW51SXRlbUNvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZSwgQ29sdW1uTWVudUl0ZW1Db21wb25lbnQsIENvbHVtbk1lbnVJdGVtRGlyZWN0aXZlLCBDb2x1bW5NZW51TG9ja0NvbXBvbmVudCwgQ29sdW1uTWVudVBvc2l0aW9uQ29tcG9uZW50LCBDb2x1bW5NZW51U29ydENvbXBvbmVudCwgQ29sdW1uTWVudVN0aWNrQ29tcG9uZW50LCBDb2x1bW5NZW51VGVtcGxhdGVEaXJlY3RpdmUsIENvbHVtbk1lbnVNb2R1bGUsIENvbHVtbk1lbnVTZXJ2aWNlLCBDb2x1bW5IYW5kbGVEaXJlY3RpdmUsIENvbHVtblJlc2l6aW5nU2VydmljZSwgVGFibGVEaXJlY3RpdmUsIENvbHVtbkluZm9TZXJ2aWNlLCBEb21FdmVudHNTZXJ2aWNlLCBJZFNlcnZpY2UsIFByZXZlbnRhYmxlRXZlbnQsIFNvcnRTZXJ2aWNlLCBDaGFuZ2VOb3RpZmljYXRpb25TZXJ2aWNlLCBDb2x1bW5SZW9yZGVyU2VydmljZSwgRHJhZ0FuZERyb3BNb2R1bGUsIERyYWdBbmREcm9wU2VydmljZSwgRHJhZ0hpbnRTZXJ2aWNlLCBEcmFnZ2FibGVDb2x1bW5EaXJlY3RpdmUsIERyb3BDdWVTZXJ2aWNlLCBEcm9wVGFyZ2V0RGlyZWN0aXZlLCBFZGl0aW5nRGlyZWN0aXZlQmFzZSwgUm93RWRpdGluZ0RpcmVjdGl2ZUJhc2UsIEFkZENvbW1hbmREaXJlY3RpdmUsIENhbmNlbENvbW1hbmREaXJlY3RpdmUsIEVkaXRDb21tYW5kRGlyZWN0aXZlLCBFZGl0U2VydmljZSBhcyBFZGl0U2VydmljZSQxLCBMb2NhbERhdGFDaGFuZ2VzU2VydmljZSwgUmVtb3ZlQ29tbWFuZERpcmVjdGl2ZSwgU2F2ZUNvbW1hbmREaXJlY3RpdmUsIEV4Y2VsQ29tbWFuZERpcmVjdGl2ZSwgQm9vbGVhbkZpbHRlckNvbXBvbmVudCwgQm9vbGVhbkZpbHRlckNlbGxDb21wb25lbnQsIEZpbHRlckNlbGxIb3N0RGlyZWN0aXZlLCBGaWx0ZXJDZWxsT3BlcmF0b3JzQ29tcG9uZW50LCBGaWx0ZXJDZWxsV3JhcHBlckNvbXBvbmVudCwgRGF0ZUZpbHRlckNvbXBvbmVudCwgRmlsdGVySG9zdERpcmVjdGl2ZSwgRmlsdGVySW5wdXRXcmFwcGVyQ29tcG9uZW50LCBGaWx0ZXJJbnB1dERpcmVjdGl2ZSwgRmlsdGVyUm93Q29tcG9uZW50LCBEYXRlRmlsdGVyTWVudUlucHV0Q29tcG9uZW50LCBGaWx0ZXJNZW51Q29udGFpbmVyQ29tcG9uZW50LCBGaWx0ZXJNZW51RHJvcERvd25MaXN0RGlyZWN0aXZlLCBGaWx0ZXJNZW51SG9zdERpcmVjdGl2ZSwgRmlsdGVyTWVudUlucHV0V3JhcHBlckNvbXBvbmVudCwgRmlsdGVyTWVudUNvbXBvbmVudCwgQm9vbGVhbkZpbHRlclJhZGlvQnV0dG9uRGlyZWN0aXZlLCBNZW51VGFiYmluZ1NlcnZpY2UsIE51bWVyaWNGaWx0ZXJNZW51SW5wdXRDb21wb25lbnQsIFN0cmluZ0ZpbHRlck1lbnVJbnB1dENvbXBvbmVudCwgTnVtZXJpY0ZpbHRlckNvbXBvbmVudCwgRmlsdGVyT3BlcmF0b3JCYXNlLCBTaGFyZWRGaWx0ZXJNb2R1bGUsIFN0cmluZ0ZpbHRlckNvbXBvbmVudCwgR3JvdXBIZWFkZXJDb21wb25lbnQsIEdyb3VwSW5kaWNhdG9yQ29tcG9uZW50LCBHcm91cEluZm9TZXJ2aWNlLCBHcm91cFBhbmVsQ29tcG9uZW50LCBHcm91cHNTZXJ2aWNlLCBCcm93c2VyU3VwcG9ydFNlcnZpY2UsIFJlc2l6ZVNlcnZpY2UsIFJlc3BvbnNpdmVTZXJ2aWNlLCBMb2NhbGl6ZWRNZXNzYWdlc0RpcmVjdGl2ZSwgTWVzc2FnZXMsIEZvY3VzR3JvdXAsIEZPQ1VTX1JPT1RfQUNUSVZFLCBGb2N1c1Jvb3QsIExvZ2ljYWxDZWxsRGlyZWN0aXZlLCBMb2dpY2FsUm93RGlyZWN0aXZlLCBOYXZpZ2F0aW9uU2VydmljZSwgUGFnZXJDb250ZXh0U2VydmljZSwgUGFnZXJEcm9wRG93bkxpc3REaXJlY3RpdmUsIFBhZ2VyRWxlbWVudENvbXBvbmVudCwgUGFnZXJJbnB1dERpcmVjdGl2ZSwgUERGQ29tbWFuZERpcmVjdGl2ZSwgUERGVGVtcGxhdGVEaXJlY3RpdmUsIENlbGxDb21wb25lbnQsIENFTExfQ09OVEVYVCwgRU1QVFlfQ0VMTF9DT05URVhULCBGaWVsZEFjY2Vzc29yUGlwZSwgRGV0YWlsc1NlcnZpY2UsIERFRkFVTFRfU0NST0xMRVJfRkFDVE9SWSwgU0NST0xMRVJfRkFDVE9SWV9UT0tFTiwgU2Nyb2xsUmVxdWVzdFNlcnZpY2UsIFNjcm9sbFN5bmNTZXJ2aWNlLCBTY3JvbGxlclNlcnZpY2UsIENlbGxTZWxlY3Rpb25TZXJ2aWNlLCBHcmlkTWFycXVlZURpcmVjdGl2ZSwgU2VsZWN0QWxsQ2hlY2tib3hEaXJlY3RpdmUsIFNlbGVjdGlvbkNoZWNrYm94RGlyZWN0aXZlLCBTZWxlY3Rpb24sIFNlbGVjdGlvblNlcnZpY2UsIEdyaWRNb2R1bGUsIFNoYXJlZE1vZHVsZSwgR3JpZENvbXBvbmVudCwgQ29sdW1uQmFzZSQxIGFzIENvbHVtbkJhc2UsIENvbHVtbkNvbXBvbmVudCwgQ29tbWFuZENvbHVtbkNvbXBvbmVudCwgU3BhbkNvbHVtbkNvbXBvbmVudCwgQ29sdW1uR3JvdXBDb21wb25lbnQsIENoZWNrYm94Q29sdW1uQ29tcG9uZW50LCBUb29sYmFyQ29tcG9uZW50LCBUb29sYmFyVGVtcGxhdGVEaXJlY3RpdmUsIENlbGxUZW1wbGF0ZURpcmVjdGl2ZSwgQ2VsbExvYWRpbmdUZW1wbGF0ZURpcmVjdGl2ZSwgSGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUsIEZvb3RlclRlbXBsYXRlRGlyZWN0aXZlLCBQYWdlclRlbXBsYXRlRGlyZWN0aXZlLCBHcmlkU3BhY2VyQ29tcG9uZW50LCBFeHBhbmREZXRhaWxzRGlyZWN0aXZlLCBFeHBhbmRHcm91cERpcmVjdGl2ZSwgRGV0YWlsVGVtcGxhdGVEaXJlY3RpdmUsIERldGFpbEV4cGFuZEV2ZW50LCBEZXRhaWxDb2xsYXBzZUV2ZW50LCBHcm91cEhlYWRlclRlbXBsYXRlRGlyZWN0aXZlLCBHcm91cEhlYWRlckNvbHVtblRlbXBsYXRlRGlyZWN0aXZlLCBHcm91cEZvb3RlclRlbXBsYXRlRGlyZWN0aXZlLCBSZXNpemFibGVDb250YWluZXJEaXJlY3RpdmUsIFRlbXBsYXRlQ29udGV4dERpcmVjdGl2ZSwgTm9SZWNvcmRzVGVtcGxhdGVEaXJlY3RpdmUsIERhdGFCaW5kaW5nRGlyZWN0aXZlLCBTZWxlY3Rpb25EaXJlY3RpdmUsIEZpbHRlclNlcnZpY2UsIEZpbHRlckNlbGxUZW1wbGF0ZURpcmVjdGl2ZSwgRmlsdGVyQ2VsbENvbXBvbmVudCwgU3RyaW5nRmlsdGVyQ2VsbENvbXBvbmVudCwgRGF0ZUZpbHRlckNlbGxDb21wb25lbnQsIEJhc2VGaWx0ZXJDZWxsQ29tcG9uZW50LCBGaWx0ZXJNZW51VGVtcGxhdGVEaXJlY3RpdmUsIE51bWVyaWNGaWx0ZXJNZW51Q29tcG9uZW50LCBTdHJpbmdGaWx0ZXJNZW51Q29tcG9uZW50LCBEYXRlRmlsdGVyTWVudUNvbXBvbmVudCwgQm9vbGVhbkZpbHRlck1lbnVDb21wb25lbnQsIEJlZm9yZUVxRmlsdGVyT3BlcmF0b3JDb21wb25lbnQsIEJlZm9yZUZpbHRlck9wZXJhdG9yQ29tcG9uZW50LCBBZnRlckVxRmlsdGVyT3BlcmF0b3JDb21wb25lbnQsIEFmdGVyRmlsdGVyT3BlcmF0b3JDb21wb25lbnQsIENvbnRhaW5zRmlsdGVyT3BlcmF0b3JDb21wb25lbnQsIERvZXNOb3RDb250YWluRmlsdGVyT3BlcmF0b3JDb21wb25lbnQsIEVuZHNXaXRoRmlsdGVyT3BlcmF0b3JDb21wb25lbnQsIEVxdWFsRmlsdGVyT3BlcmF0b3JDb21wb25lbnQsIElzRW1wdHlGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCwgSXNOb3RFbXB0eUZpbHRlck9wZXJhdG9yQ29tcG9uZW50LCBJc05vdE51bGxGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCwgSXNOdWxsRmlsdGVyT3BlcmF0b3JDb21wb25lbnQsIE5vdEVxdWFsRmlsdGVyT3BlcmF0b3JDb21wb25lbnQsIFN0YXJ0c1dpdGhGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCwgTnVtZXJpY0ZpbHRlckNlbGxDb21wb25lbnQsIEF1dG9Db21wbGV0ZUZpbHRlckNlbGxDb21wb25lbnQsIEdyZWF0ZXJGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCwgR3JlYXRlck9yRXF1YWxUb0ZpbHRlck9wZXJhdG9yQ29tcG9uZW50LCBMZXNzT3JFcXVhbFRvRmlsdGVyT3BlcmF0b3JDb21wb25lbnQsIExlc3NGaWx0ZXJPcGVyYXRvckNvbXBvbmVudCwgUGFnZXJQcmV2QnV0dG9uc0NvbXBvbmVudCwgUGFnZXJOZXh0QnV0dG9uc0NvbXBvbmVudCwgUGFnZXJOdW1lcmljQnV0dG9uc0NvbXBvbmVudCwgUGFnZXJJbnB1dENvbXBvbmVudCwgUGFnZXJJbmZvQ29tcG9uZW50LCBQYWdlclBhZ2VTaXplc0NvbXBvbmVudCwgUm93RmlsdGVyTW9kdWxlLCBGaWx0ZXJNZW51TW9kdWxlLCBCb2R5TW9kdWxlLCBHcm91cE1vZHVsZSwgSGVhZGVyTW9kdWxlLCBGb290ZXJNb2R1bGUsIFBhZ2VyTW9kdWxlLCBUZW1wbGF0ZUVkaXRpbmdEaXJlY3RpdmUsIFJlYWN0aXZlRWRpdGluZ0RpcmVjdGl2ZSwgSW5DZWxsRWRpdGluZ0RpcmVjdGl2ZSwgRWRpdFRlbXBsYXRlRGlyZWN0aXZlLCBDb2xHcm91cENvbXBvbmVudCwgSGVhZGVyQ29tcG9uZW50LCBMaXN0Q29tcG9uZW50LCBGb290ZXJDb21wb25lbnQsIFRhYmxlQm9keUNvbXBvbmVudCwgUGFnZXJDb21wb25lbnQsIEN1c3RvbU1lc3NhZ2VzQ29tcG9uZW50LCBMb2FkaW5nQ29tcG9uZW50LCBQREZNb2R1bGUsIFBERkNvbXBvbmVudCwgUERGTWFyZ2luQ29tcG9uZW50LCBQREZTZXJ2aWNlLCBFeGNlbE1vZHVsZSwgRXhjZWxDb21wb25lbnQsIEV4Y2VsU2VydmljZSwgRXhjZWxFeHBvcnRFdmVudCwgQ2VsbENsb3NlRXZlbnQsIFN1c3BlbmRTZXJ2aWNlLCBHcm91cEJpbmRpbmdEaXJlY3RpdmUsIHNsaWNlLCBjb3VudCwgU2tpcCwgQ29sdW1uUmVvcmRlckV2ZW50LCBGb2N1c2FibGVEaXJlY3RpdmUsIENvbHVtblZpc2liaWxpdHlDaGFuZ2VFdmVudCwgQ29sdW1uTWVudUNvbXBvbmVudCwgQ29sdW1uTG9ja2VkQ2hhbmdlRXZlbnQsIENvbHVtblN0aWNreUNoYW5nZUV2ZW50LCBTaW5nbGVQb3B1cFNlcnZpY2UsIFBvcHVwQ2xvc2VFdmVudCB9O1xuIl19","map":null,"metadata":{},"sourceType":"module"}