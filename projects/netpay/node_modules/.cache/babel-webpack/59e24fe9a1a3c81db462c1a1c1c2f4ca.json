{"ast":null,"code":"import defaultData from './default-data';\nimport isString from '../common/is-string';\nimport { errors } from '../errors';\n\nfunction availableLocaleInfo(fullName, suffixes) {\n  const parts = fullName.split(\"-\");\n  const language = parts[0];\n  const script = parts[1];\n  const territory = parts[2];\n  return cldr[fullName] || suffixes.indexOf(territory) !== -1 && cldr[language + \"-\" + territory] || suffixes.indexOf(script) !== -1 && cldr[language + \"-\" + script] || cldr[language];\n}\n\nfunction localeFullName(language, suffixes) {\n  const likelySubtags = cldr.supplemental.likelySubtags;\n\n  for (let idx = 0; idx < suffixes.length; idx++) {\n    let name = likelySubtags[language + \"-\" + suffixes[idx]];\n\n    if (name) {\n      return name;\n    }\n  }\n\n  if (likelySubtags[language]) {\n    return likelySubtags[language];\n  }\n}\n\nexport const cldr = defaultData;\nexport function getLocaleInfo(locale) {\n  let info;\n\n  if (isString(locale)) {\n    info = localeInfo(locale);\n  } else {\n    info = locale;\n  }\n\n  return info;\n}\nexport function localeInfo(locale) {\n  if (cldr[locale]) {\n    return cldr[locale];\n  }\n\n  const likelySubtags = cldr.supplemental.likelySubtags;\n\n  if (likelySubtags) {\n    const parts = locale.split(\"-\");\n    const language = parts[0];\n    const suffixes = parts.slice(1);\n    const fullName = localeFullName(language, suffixes);\n    const info = fullName ? availableLocaleInfo(fullName, suffixes) : null;\n\n    if (info) {\n      return info;\n    }\n  }\n\n  throw errors.NoLocale.error(locale);\n}","map":null,"metadata":{},"sourceType":"module"}