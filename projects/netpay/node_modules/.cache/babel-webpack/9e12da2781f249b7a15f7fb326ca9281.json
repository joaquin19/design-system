{"ast":null,"code":"import { defined } from '../util';\n\nfunction optionsAccessor(name) {\n  return function (value) {\n    if (defined(value)) {\n      this.options.set(name, value);\n      return this;\n    }\n\n    return this.options.get(name);\n  };\n}\n\nfunction defineOptionsAccessors(fn, names) {\n  for (let i = 0; i < names.length; i++) {\n    fn[names[i]] = optionsAccessor(names[i]);\n  }\n}\n\nconst withOptions = (TBase, names) => {\n  const result = class extends TBase {};\n  defineOptionsAccessors(result.prototype, names);\n  return result;\n};\n\nexport default withOptions;","map":null,"metadata":{},"sourceType":"module"}