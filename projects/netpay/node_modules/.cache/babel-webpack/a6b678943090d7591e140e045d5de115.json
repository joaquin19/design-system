{"ast":null,"code":"import QuadRoot from './quad-root';\nimport { Rect } from '../geometry';\nimport { append } from '../util';\n\nclass QuadNode extends QuadRoot {\n  constructor(rect) {\n    super();\n    this.children = [];\n    this.rect = rect;\n  }\n\n  inBounds(rect) {\n    const nodeRect = this.rect;\n    const nodeBottomRight = nodeRect.bottomRight();\n    const bottomRight = rect.bottomRight();\n    const inBounds = nodeRect.origin.x <= rect.origin.x && nodeRect.origin.y <= rect.origin.y && bottomRight.x <= nodeBottomRight.x && bottomRight.y <= nodeBottomRight.y;\n    return inBounds;\n  }\n\n  pointShapes(point) {\n    const children = this.children;\n    const length = children.length;\n    const result = super.pointShapes(point);\n\n    for (let idx = 0; idx < length; idx++) {\n      append(result, children[idx].pointShapes(point));\n    }\n\n    return result;\n  }\n\n  insert(shape, bbox) {\n    const children = this.children;\n    let inserted = false;\n\n    if (this.inBounds(bbox)) {\n      if (this.shapes.length < 4) {\n        this._add(shape, bbox);\n      } else {\n        if (!children.length) {\n          this._initChildren();\n        }\n\n        for (let idx = 0; idx < children.length; idx++) {\n          if (children[idx].insert(shape, bbox)) {\n            inserted = true;\n            break;\n          }\n        }\n\n        if (!inserted) {\n          this._add(shape, bbox);\n        }\n      }\n\n      inserted = true;\n    }\n\n    return inserted;\n  }\n\n  _initChildren() {\n    const {\n      rect,\n      children\n    } = this;\n    const center = rect.center();\n    const halfWidth = rect.width() / 2;\n    const halfHeight = rect.height() / 2;\n    children.push(new QuadNode(new Rect([rect.origin.x, rect.origin.y], [halfWidth, halfHeight])), new QuadNode(new Rect([center.x, rect.origin.y], [halfWidth, halfHeight])), new QuadNode(new Rect([rect.origin.x, center.y], [halfWidth, halfHeight])), new QuadNode(new Rect([center.x, center.y], [halfWidth, halfHeight])));\n  }\n\n}\n\nexport default QuadNode;","map":null,"metadata":{},"sourceType":"module"}