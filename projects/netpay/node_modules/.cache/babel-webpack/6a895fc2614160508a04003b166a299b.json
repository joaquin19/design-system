{"ast":null,"code":"import withGeometry from '../mixins/with-geometry';\nimport Element from './element';\nimport paintable from '../mixins/paintable';\nimport measurable from '../mixins/measurable';\nimport GeometryRect from '../geometry/rect';\nimport { defined } from '../util';\n\nclass Rect extends paintable(measurable(withGeometry(Element))) {\n  get nodeType() {\n    return \"Rect\";\n  }\n\n  constructor(geometry = new GeometryRect(), options = {}) {\n    super(options);\n    this.geometry(geometry);\n\n    if (!defined(this.options.stroke)) {\n      this.stroke(\"#000\");\n    }\n  }\n\n  _bbox(matrix) {\n    return this._geometry.bbox(matrix);\n  }\n\n  rawBBox() {\n    return this._geometry.bbox();\n  }\n\n  _containsPoint(point) {\n    return this._geometry.containsPoint(point);\n  }\n\n  _isOnPath(point) {\n    return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n  }\n\n}\n\nexport default Rect;","map":null,"metadata":{},"sourceType":"module"}