{"ast":null,"code":"import OptionsStore from '../core/options-store';\nimport withOptions from '../mixins/with-options';\nimport HasObservers from '../core/has-observers';\nimport { defined } from '../util';\nconst options = [\"offset\", \"color\", \"opacity\"];\n\nclass GradientStop extends withOptions(HasObservers, options) {\n  constructor(offset, color, opacity) {\n    super();\n    this.options = new OptionsStore({\n      offset: offset,\n      color: color,\n      opacity: defined(opacity) ? opacity : 1\n    });\n    this.options.addObserver(this);\n  }\n\n  static create(arg) {\n    if (defined(arg)) {\n      let stop;\n\n      if (arg instanceof GradientStop) {\n        stop = arg;\n      } else if (arg.length > 1) {\n        stop = new GradientStop(arg[0], arg[1], arg[2]);\n      } else {\n        stop = new GradientStop(arg.offset, arg.color, arg.opacity);\n      }\n\n      return stop;\n    }\n  }\n\n}\n\nexport default GradientStop;","map":null,"metadata":{},"sourceType":"module"}