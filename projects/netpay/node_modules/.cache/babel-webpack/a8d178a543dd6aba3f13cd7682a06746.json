{"ast":null,"code":"import { fieldList } from './field-list';\nconst setterCache = {}; // tslint:disable-next-line:no-string-literal\n\nsetterCache['undefined'] = obj => obj;\n\nconst defaultValue = (nextField, options) => options && options.arrays && !isNaN(Number(nextField)) ? [] : {};\n/**\n * @hidden\n */\n\n\nexport function setter(field) {\n  if (setterCache[field]) {\n    return setterCache[field];\n  }\n\n  const fields = fieldList(field);\n\n  setterCache[field] = (obj, value, options) => {\n    let root = obj;\n    const depth = fields.length - 1;\n\n    for (let idx = 0; idx < depth && root; idx++) {\n      root = root[fields[idx]] = root[fields[idx]] || defaultValue(fields[idx + 1], options);\n    }\n\n    root[fields[depth]] = value;\n  };\n\n  return setterCache[field];\n}","map":null,"metadata":{},"sourceType":"module"}