{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { Injectable, EventEmitter, Input, Output, HostBinding, HostListener, Directive, Optional, ElementRef, Renderer2, NgZone, isDevMode, ContentChildren, QueryList, Component, NgModule, TemplateRef, ViewContainerRef, InjectionToken, Inject, ContentChild, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { BehaviorSubject, Subject, fromEvent, merge, Subscription } from 'rxjs';\nimport { Keys, isChanged, isDocumentAvailable, hasObservers, guid, EventsModule } from '@progress/kendo-angular-common';\nimport { LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';\nimport { filter, take } from 'rxjs/operators';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { CommonModule } from '@angular/common';\nimport { PopupService, PopupModule } from '@progress/kendo-angular-popup';\nimport { sequence, query, style, stagger, animate, AnimationBuilder } from '@angular/animations';\n/**\n * @hidden\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@progress/kendo-angular-l10n';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@progress/kendo-angular-popup';\nimport * as ɵngcc4 from '@angular/animations';\nimport * as ɵngcc5 from '@progress/kendo-angular-common';\nconst _c0 = [[[\"\", \"kendoButton\", \"\"]]];\nconst _c1 = [\"[kendoButton]\"];\n\nfunction ListComponent_li_1_1_ng_template_0_Template(rf, ctx) {}\n\nconst _c2 = function (a0, a1) {\n  return {\n    templateRef: a0,\n    $implicit: a1\n  };\n};\n\nfunction ListComponent_li_1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ListComponent_li_1_1_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n  }\n\n  if (rf & 2) {\n    const dataItem_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction2(1, _c2, ctx_r3.itemTemplate == null ? null : ctx_r3.itemTemplate.templateRef, dataItem_r1));\n  }\n}\n\nfunction ListComponent_li_1_ng_template_2_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 8);\n  }\n\n  if (rf & 2) {\n    const dataItem_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r7.getIconClasses(dataItem_r1));\n  }\n}\n\nfunction ListComponent_li_1_ng_template_2_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 9);\n  }\n\n  if (rf & 2) {\n    const dataItem_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵproperty(\"src\", dataItem_r1.imageUrl, ɵngcc0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction ListComponent_li_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ListComponent_li_1_ng_template_2_span_0_Template, 1, 1, \"span\", 6);\n    ɵngcc0.ɵɵtemplate(1, ListComponent_li_1_ng_template_2_img_1_Template, 1, 1, \"img\", 7);\n    ɵngcc0.ɵɵtext(2);\n  }\n\n  if (rf & 2) {\n    const dataItem_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", dataItem_r1.icon || dataItem_r1.iconClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", dataItem_r1.imageUrl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r4.getText(dataItem_r1), \" \");\n  }\n}\n\nconst _c3 = function (a1) {\n  return {\n    \"k-item\": true,\n    \"k-state-disabled\": a1\n  };\n};\n\nfunction ListComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function ListComponent_li_1_Template_li_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r13);\n      const index_r2 = restoredCtx.index;\n      const ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.onClick(index_r2);\n    })(\"blur\", function ListComponent_li_1_Template_li_blur_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      const ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.onBlur();\n    });\n    ɵngcc0.ɵɵtemplate(1, ListComponent_li_1_1_Template, 1, 4, undefined, 3);\n    ɵngcc0.ɵɵtemplate(2, ListComponent_li_1_ng_template_2_Template, 3, 3, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const dataItem_r1 = ctx.$implicit;\n    const index_r2 = ctx.index;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"index\", index_r2)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c3, dataItem_r1.disabled));\n    ɵngcc0.ɵɵattribute(\"aria-disabled\", dataItem_r1.disabled ? true : false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.itemTemplate == null ? null : ctx_r0.itemTemplate.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx_r0.itemTemplate == null ? null : ctx_r0.itemTemplate.templateRef));\n  }\n}\n\nconst _c4 = [\"button\"];\nconst _c5 = [\"arrowButton\"];\nconst _c6 = [\"popupTemplate\"];\nconst _c7 = [\"container\"];\n\nfunction SplitButtonComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-button-list\", 6);\n    ɵngcc0.ɵɵlistener(\"onItemClick\", function SplitButtonComponent_ng_template_6_Template_kendo_button_list_onItemClick_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onItemClick($event);\n    })(\"keydown\", function SplitButtonComponent_ng_template_6_Template_kendo_button_list_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.keyDownHandler($event);\n    })(\"keypress\", function SplitButtonComponent_ng_template_6_Template_kendo_button_list_keypress_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.keyPressHandler($event);\n    })(\"keyup\", function SplitButtonComponent_ng_template_6_Template_kendo_button_list_keyup_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.keyUpHandler($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3.listId)(\"data\", ctx_r3.data)(\"textField\", ctx_r3.textField)(\"itemTemplate\", ctx_r3.itemTemplate);\n    ɵngcc0.ɵɵattribute(\"dir\", ctx_r3.dir);\n  }\n}\n\nconst _c8 = [\"*\"];\nconst _c9 = [\"buttonList\"];\n\nfunction DropDownButtonComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-button-list\", 4, 5);\n    ɵngcc0.ɵɵlistener(\"onItemClick\", function DropDownButtonComponent_ng_template_3_Template_kendo_button_list_onItemClick_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onItemClick($event);\n    })(\"keydown\", function DropDownButtonComponent_ng_template_3_Template_kendo_button_list_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.keyDownHandler($event);\n    })(\"keypress\", function DropDownButtonComponent_ng_template_3_Template_kendo_button_list_keypress_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.keyPressHandler($event);\n    })(\"keyup\", function DropDownButtonComponent_ng_template_3_Template_kendo_button_list_keyup_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.keyUpHandler($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r2.listId)(\"data\", ctx_r2.data)(\"textField\", ctx_r2.textField)(\"itemTemplate\", ctx_r2.itemTemplate);\n    ɵngcc0.ɵɵattribute(\"dir\", ctx_r2.dir);\n  }\n}\n\nfunction ChipComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.selectedIconClasses);\n  }\n}\n\nfunction ChipComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.iconClasses);\n  }\n}\n\nfunction ChipComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r2.label, \" \");\n  }\n}\n\nfunction ChipComponent_ng_content_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngIf\", \"!label\"]);\n  }\n}\n\nfunction ChipComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function ChipComponent_span_6_Template_span_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onRemoveClick($event);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.removeIconClasses);\n  }\n}\n\nfunction FloatingActionButtonComponent_2_ng_template_0_Template(rf, ctx) {}\n\nfunction FloatingActionButtonComponent_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, FloatingActionButtonComponent_2_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.fabTemplate == null ? null : ctx_r1.fabTemplate.templateRef);\n  }\n}\n\nfunction FloatingActionButtonComponent_ng_container_3_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r6.iconClasses);\n  }\n}\n\nfunction FloatingActionButtonComponent_ng_container_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7.text);\n  }\n}\n\nfunction FloatingActionButtonComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FloatingActionButtonComponent_ng_container_3_span_1_Template, 1, 1, \"span\", 5);\n    ɵngcc0.ɵɵtemplate(2, FloatingActionButtonComponent_ng_container_3_span_2_Template, 2, 1, \"span\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.icon || ctx_r2.iconClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.text);\n  }\n}\n\nfunction FloatingActionButtonComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function FloatingActionButtonComponent_ng_template_4_Template_ul_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.onItemClick($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.dialClass)(\"dialItems\", ctx_r4.dialItems)(\"dialItemTemplate\", ctx_r4.dialItemTemplate == null ? null : ctx_r4.dialItemTemplate.templateRef)(\"align\", ctx_r4.align);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r4.id);\n  }\n}\n\nconst _c10 = function (a0, a1) {\n  return {\n    keydown: a0,\n    click: a1\n  };\n};\n\nconst _c11 = [\"kendoDialList\", \"\"];\n\nfunction DialListComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"li\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const idx_r2 = ctx.index;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"item\", ctx_r0.dialItems[idx_r2])(\"index\", idx_r2)(\"dialItemTemplate\", ctx_r0.dialItemTemplate)(\"isFocused\", ctx_r0.isFocused(idx_r2))(\"ngClass\", item_r1.cssClass)(\"ngStyle\", item_r1.cssStyle)(\"align\", ctx_r0.align);\n  }\n}\n\nconst _c12 = [\"kendoDialItem\", \"\"];\n\nfunction DialItemComponent_0_ng_template_0_Template(rf, ctx) {}\n\nconst _c13 = function (a0, a1, a2) {\n  return {\n    $implicit: a0,\n    index: a1,\n    isFocused: a2\n  };\n};\n\nfunction DialItemComponent_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DialItemComponent_0_ng_template_0_Template, 0, 0, \"ng-template\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.dialItemTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(2, _c13, ctx_r0.item, ctx_r0.index, ctx_r0.isFocused));\n  }\n}\n\nfunction DialItemComponent_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.item.label);\n  }\n}\n\nfunction DialItemComponent_ng_container_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.iconClasses);\n  }\n}\n\nfunction DialItemComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, DialItemComponent_ng_container_1_span_1_Template, 2, 1, \"span\", 2);\n    ɵngcc0.ɵɵtemplate(2, DialItemComponent_ng_container_1_span_2_Template, 1, 1, \"span\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.item.label);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.item.icon || ctx_r1.item.iconClass);\n  }\n}\n\nlet KendoButtonService = /*#__PURE__*/(() => {\n  let KendoButtonService = class KendoButtonService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.buttonLookChange = new BehaviorSubject('default');\n      this.buttonClicked = new Subject();\n      this.buttonClicked$ = this.buttonClicked.asObservable();\n    }\n\n    click(button) {\n      this.buttonClicked.next(button);\n    }\n\n    setButtonLook(look) {\n      this.buttonLookChange.next(look);\n    }\n\n  };\n\n  KendoButtonService.ɵfac = function KendoButtonService_Factory(t) {\n    return new (t || KendoButtonService)();\n  };\n\n  KendoButtonService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: KendoButtonService,\n    factory: function (t) {\n      return KendoButtonService.ɵfac(t);\n    }\n  });\n  /**\n   * @hidden\n   */\n\n  return KendoButtonService;\n})();\nconst packageMetadata = {\n  name: '@progress/kendo-angular-buttons',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1632813704,\n  version: '',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n};\nconst SPAN_TAG_NAME = 'SPAN';\n/**\n * Represents the Kendo UI Button component for Angular.\n */\n\nlet ButtonDirective = /*#__PURE__*/(() => {\n  let ButtonDirective = class ButtonDirective {\n    constructor(element, renderer, service, localization, ngZone) {\n      this.service = service;\n      this.ngZone = ngZone;\n      /**\n       * Provides visual styling that indicates if the Button is active.\n       * By default, `toggleable` is set to `false`.\n       */\n\n      this.toggleable = false;\n      /**\n       * Adds visual weight to the Button and makes it primary.\n       */\n\n      this.primary = false;\n      /**\n       * Changes the visual appearance by using alternative styling options\n       * ([more information and examples]({% slug appearance_button %})).\n       *\n       * The available values are:\n       * * [`ButtonLook`]({% slug api_buttons_buttonlook %}) = `flat` | `outline`\n       * * `clear`\n       */\n\n      this.look = 'default';\n      /**\n       * @hidden\n       */\n\n      this.role = 'button';\n      /**\n       * Fires each time the selected state of a toggleable button is changed.\n       *\n       * The event argument is the new selected state (boolean).\n       */\n\n      this.selectedChange = new EventEmitter();\n      /**\n       * Fires each time the user clicks the button.\n       */\n\n      this.click = new EventEmitter();\n      this.isDisabled = false;\n      this.isIcon = false;\n      this.isIconClass = false;\n      this._focused = false;\n      this.domEvents = [];\n      validatePackage(packageMetadata);\n      this.direction = localization.rtl ? 'rtl' : 'ltr';\n      this.localizationChangeSubscription = localization.changes.subscribe(({\n        rtl\n      }) => this.direction = rtl ? 'rtl' : 'ltr');\n      this.element = element.nativeElement;\n      this.renderer = renderer;\n    }\n    /**\n     * Backwards-compatible alias\n     *\n     * @hidden\n     */\n\n\n    get togglable() {\n      return this.toggleable;\n    }\n    /**\n     * @hidden\n     */\n\n\n    set togglable(value) {\n      this.toggleable = value;\n    }\n    /**\n     * Sets the selected state of the Button.\n     */\n\n\n    get selected() {\n      return this._selected || false;\n    }\n\n    set selected(value) {\n      this._selected = value;\n    }\n    /**\n     * @hidden\n     */\n\n\n    set tabIndex(index) {\n      this.element.tabIndex = index;\n    }\n\n    get tabIndex() {\n      return this.element.tabIndex;\n    }\n    /**\n     * Defines the name for an existing icon in a Kendo UI theme.\n     * The icon is rendered inside the Button by a `span.k-icon` element.\n     */\n\n\n    set icon(icon) {\n      if (icon) {\n        this.iconSetter(icon, () => {\n          this.isIcon = true;\n          const classes = 'k-icon k-i-' + icon;\n          this.addIcon(classes);\n        });\n      } else {\n        this.isIcon = false;\n        this.updateIconNode();\n      }\n    }\n    /**\n     * Defines a CSS class&mdash;or multiple classes separated by spaces&mdash;\n     * which are applied to a `span` element inside the Button. Allows the usage of custom icons.\n     */\n\n\n    set iconClass(iconClassName) {\n      if (iconClassName) {\n        this.iconSetter(iconClassName, () => {\n          this.isIconClass = true;\n          this.addIcon(iconClassName);\n        });\n      } else {\n        this.isIconClass = false;\n        this.updateIconNode();\n      }\n    }\n    /**\n     * Defines a URL which is used for an `img` element inside the Button.\n     * The URL can be relative or absolute. If relative, it is evaluated with relation to the web page URL.\n     */\n\n\n    set imageUrl(imageUrl) {\n      if (imageUrl) {\n        this.iconSetter(imageUrl, this.addImgIcon.bind(this));\n      } else {\n        this.removeImageNode();\n      }\n    }\n    /**\n     * If set to `true`, it disables the Button.\n     */\n\n\n    set disabled(disabled) {\n      this.isDisabled = disabled;\n      this.renderer.setProperty(this.element, 'disabled', disabled);\n    }\n\n    get disabled() {\n      return this.isDisabled;\n    }\n\n    set isFocused(isFocused) {\n      this.toggleClass('k-state-focused', isFocused);\n      this._focused = isFocused;\n    }\n\n    get isFocused() {\n      return this._focused;\n    }\n\n    get classButton() {\n      return true;\n    }\n\n    get classPrimary() {\n      return this.primary;\n    }\n\n    get isToggleable() {\n      return this.toggleable;\n    }\n\n    get isFlat() {\n      return this.look === 'flat';\n    }\n\n    get isBare() {\n      return this.look === 'bare';\n    }\n\n    get isOutline() {\n      return this.look === 'outline';\n    }\n\n    get isClear() {\n      return this.look === 'clear';\n    }\n\n    get roleSetter() {\n      return this.role;\n    }\n\n    get classDisabled() {\n      return this.isDisabled;\n    }\n\n    get classActive() {\n      return this.selected;\n    }\n\n    get getDirection() {\n      return this.direction;\n    }\n    /**\n     * @hidden\n     */\n\n\n    onFocus() {\n      this.isFocused = true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    onBlur() {\n      this.isFocused = false;\n    }\n\n    ngOnInit() {\n      const isSpan = this.element.tagName === SPAN_TAG_NAME;\n\n      if (this.service) {\n        this.buttonLookChangeSubscription = this.service.buttonLookChange.pipe(filter(look => look !== 'default')).subscribe(look => this.look = look);\n      }\n\n      if (!this.element.hasAttribute('role') && this.togglable) {\n        this.toggleAriaPressed(this.toggleable);\n      }\n\n      if (this.role) {\n        this.setAttribute('role', this.role);\n      }\n\n      this.ngZone.runOutsideAngular(() => {\n        this.domEvents.push(this.renderer.listen(this.element, 'click', this._onButtonClick.bind(this)));\n        this.domEvents.push(this.renderer.listen(this.element, 'keydown', event => {\n          if (isSpan && (event.keyCode === Keys.Space || event.keyCode === Keys.Enter)) {\n            this.click.emit(event);\n\n            this._onButtonClick();\n          }\n        }));\n      });\n    }\n\n    ngOnChanges(change) {\n      if (isChanged('togglable', change) || isChanged('toggleable', change)) {\n        this.toggleAriaPressed(this.toggleable);\n      }\n    }\n\n    ngAfterViewChecked() {\n      this.setIconTextClasses();\n    }\n\n    ngOnDestroy() {\n      this.imageNode = null;\n      this.iconNode = null;\n      this.renderer = null;\n      this.localizationChangeSubscription.unsubscribe();\n\n      if (this.service && this.buttonLookChangeSubscription) {\n        this.buttonLookChangeSubscription.unsubscribe();\n      }\n\n      clearTimeout(this.deferTimeout);\n      this.domEvents.forEach(unbindHandler => unbindHandler());\n    }\n    /**\n     * Focuses the Button component.\n     */\n\n\n    focus() {\n      if (isDocumentAvailable()) {\n        this.element.focus();\n        this.isFocused = true;\n      }\n    }\n    /**\n     * Blurs the Button component.\n     */\n\n\n    blur() {\n      if (isDocumentAvailable()) {\n        this.element.blur();\n        this.isFocused = false;\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    setAttribute(attribute, value) {\n      this.renderer.setAttribute(this.element, attribute, value);\n    }\n    /**\n     * @hidden\n     */\n\n\n    removeAttribute(attribute) {\n      this.renderer.removeAttribute(this.element, attribute);\n    }\n    /**\n     * @hidden\n     *\n     * Internal setter that triggers selectedChange\n     */\n\n\n    setSelected(value) {\n      const changed = this.selected !== value;\n      this.selected = value;\n      this.setAttribute('aria-pressed', this.selected.toString());\n      this.toggleClass('k-state-selected', this.selected);\n\n      if (changed && hasObservers(this.selectedChange)) {\n        this.ngZone.run(() => {\n          this.selectedChange.emit(value);\n        });\n      }\n    }\n\n    toggleAriaPressed(shouldSet) {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      if (shouldSet) {\n        this.setAttribute('aria-pressed', this.selected.toString());\n      } else {\n        this.removeAttribute('aria-pressed');\n      }\n    }\n\n    hasText() {\n      if (isDocumentAvailable()) {\n        return String(this.element.textContent).trim().length > 0;\n      } else {\n        return false;\n      }\n    }\n\n    addImgIcon(imageUrl) {\n      let renderer = this.renderer;\n\n      if (this.imageNode) {\n        renderer.setProperty(this.imageNode, 'src', imageUrl);\n      } else if (isDocumentAvailable()) {\n        this.imageNode = renderer.createElement('img');\n        renderer.setProperty(this.imageNode, 'src', imageUrl);\n        renderer.setProperty(this.imageNode, 'className', 'k-image');\n        renderer.setAttribute(this.imageNode, 'role', 'presentation');\n        this.prependChild(this.imageNode);\n      }\n    }\n\n    addIcon(classNames) {\n      let renderer = this.renderer;\n\n      if (this.iconNode) {\n        renderer.setProperty(this.iconNode, 'className', classNames);\n      } else if (isDocumentAvailable()) {\n        this.iconNode = renderer.createElement('span');\n        renderer.setProperty(this.iconNode, 'className', classNames);\n        renderer.setAttribute(this.iconNode, 'role', 'presentation');\n        this.prependChild(this.iconNode);\n      }\n    }\n\n    prependChild(node) {\n      this.defer(() => {\n        if (this.renderer && node !== this.element.firstChild) {\n          this.renderer.insertBefore(this.element, node, this.element.firstChild);\n        }\n      });\n    }\n\n    defer(callback) {\n      this.ngZone.runOutsideAngular(() => {\n        this.deferTimeout = setTimeout(callback, 0);\n      });\n    }\n\n    iconSetter(icon, insertIcon) {\n      if (icon) {\n        insertIcon(icon);\n      }\n\n      this.setIconTextClasses();\n    }\n\n    removeImageNode() {\n      if (this.imageNode && this.renderer.parentNode(this.imageNode)) {\n        this.renderer.removeChild(this.element, this.imageNode);\n        this.imageNode = null;\n      }\n    }\n\n    removeIconNode() {\n      if (this.iconNode && this.renderer.parentNode(this.iconNode)) {\n        this.renderer.removeChild(this.element, this.iconNode);\n        this.iconNode = null;\n      }\n    }\n\n    updateIconNode() {\n      if (!this.isIcon && !this.isIconClass) {\n        this.removeIconNode();\n      }\n    }\n\n    setIconTextClasses() {\n      const hasIcon = this.isIcon || this.isIconClass || this.imageNode;\n      const hasText = this.hasText();\n      this.toggleClass('k-button-icon', hasIcon && !hasText);\n      this.toggleClass('k-button-icontext', hasIcon && hasText);\n    }\n\n    toggleClass(className, add) {\n      if (add) {\n        this.renderer.addClass(this.element, className);\n      } else {\n        this.renderer.removeClass(this.element, className);\n      }\n    }\n\n    _onButtonClick() {\n      if (!this.disabled && this.service) {\n        this.ngZone.run(() => {\n          this.service.click(this);\n        });\n      }\n\n      if (this.togglable && !this.service) {\n        this.setSelected(!this.selected);\n      }\n    }\n\n  };\n\n  ButtonDirective.ɵfac = function ButtonDirective_Factory(t) {\n    return new (t || ButtonDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(KendoButtonService, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  ButtonDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ButtonDirective,\n    selectors: [[\"button\", \"kendoButton\", \"\"], [\"span\", \"kendoButton\", \"\"]],\n    hostVars: 21,\n    hostBindings: function ButtonDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function ButtonDirective_focus_HostBindingHandler() {\n          return ctx.onFocus();\n        })(\"blur\", function ButtonDirective_blur_HostBindingHandler() {\n          return ctx.onBlur();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.roleSetter)(\"aria-disabled\", ctx.classDisabled)(\"dir\", ctx.getDirection);\n        ɵngcc0.ɵɵclassProp(\"k-button\", ctx.classButton)(\"k-primary\", ctx.classPrimary)(\"k-toggle-button\", ctx.isToggleable)(\"k-flat\", ctx.isFlat)(\"k-bare\", ctx.isBare)(\"k-outline\", ctx.isOutline)(\"k-button-clear\", ctx.isClear)(\"k-state-disabled\", ctx.classDisabled)(\"k-state-selected\", ctx.classActive);\n      }\n    },\n    inputs: {\n      toggleable: \"toggleable\",\n      primary: \"primary\",\n      look: \"look\",\n      role: \"role\",\n      togglable: \"togglable\",\n      selected: \"selected\",\n      tabIndex: \"tabIndex\",\n      icon: \"icon\",\n      iconClass: \"iconClass\",\n      imageUrl: \"imageUrl\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      selectedChange: \"selectedChange\",\n      click: \"click\"\n    },\n    exportAs: [\"kendoButton\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([LocalizationService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.button'\n    }]), ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ButtonDirective.prototype, \"toggleable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], ButtonDirective.prototype, \"togglable\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ButtonDirective.prototype, \"primary\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ButtonDirective.prototype, \"look\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], ButtonDirective.prototype, \"selected\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], ButtonDirective.prototype, \"tabIndex\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], ButtonDirective.prototype, \"icon\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], ButtonDirective.prototype, \"iconClass\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], ButtonDirective.prototype, \"imageUrl\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], ButtonDirective.prototype, \"disabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ButtonDirective.prototype, \"role\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ButtonDirective.prototype, \"selectedChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ButtonDirective.prototype, \"click\", void 0);\n\n  __decorate([HostBinding('class.k-button'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonDirective.prototype, \"classButton\", null);\n\n  __decorate([HostBinding('class.k-primary'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonDirective.prototype, \"classPrimary\", null);\n\n  __decorate([HostBinding('class.k-toggle-button'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonDirective.prototype, \"isToggleable\", null);\n\n  __decorate([HostBinding('class.k-flat'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonDirective.prototype, \"isFlat\", null);\n\n  __decorate([HostBinding('class.k-bare'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonDirective.prototype, \"isBare\", null);\n\n  __decorate([HostBinding('class.k-outline'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonDirective.prototype, \"isOutline\", null);\n\n  __decorate([HostBinding('class.k-button-clear'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonDirective.prototype, \"isClear\", null);\n\n  __decorate([HostBinding('attr.role'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], ButtonDirective.prototype, \"roleSetter\", null);\n\n  __decorate([HostBinding('attr.aria-disabled'), HostBinding('class.k-state-disabled'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonDirective.prototype, \"classDisabled\", null);\n\n  __decorate([HostBinding('class.k-state-selected'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonDirective.prototype, \"classActive\", null);\n\n  __decorate([HostBinding('attr.dir'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], ButtonDirective.prototype, \"getDirection\", null);\n\n  __decorate([HostListener('focus'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], ButtonDirective.prototype, \"onFocus\", null);\n\n  __decorate([HostListener('blur'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], ButtonDirective.prototype, \"onBlur\", null);\n\n  ButtonDirective = __decorate([__param(2, Optional()), __metadata(\"design:paramtypes\", [ElementRef, Renderer2, KendoButtonService, LocalizationService, NgZone])], ButtonDirective);\n  /* tslint:disable:no-null-keyword */\n\n  /* tslint:disable:no-bitwise */\n\n  return ButtonDirective;\n})();\nconst resolvedPromise = Promise.resolve(null);\n/**\n * @hidden\n */\n\nconst isPresent = value => value !== null && value !== undefined;\n/**\n * @hidden\n */\n\n\nconst tick = f => resolvedPromise.then(f);\n/**\n * @hidden\n */\n\n\nfunction isDocumentNode(container) {\n  return container.nodeType === 9;\n}\n/**\n * @hidden\n */\n\n\nfunction closest(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  const matches = Element.prototype.matches ? (el, sel) => el.matches(sel) : (el, sel) => el.msMatchesSelector(sel);\n  let node = element;\n\n  while (node && !isDocumentNode(node)) {\n    if (matches(node, selector)) {\n      return node;\n    }\n\n    node = node.parentNode;\n  }\n}\n/**\n * @hidden\n */\n\n\nclass PreventableEvent {\n  constructor() {\n    this.prevented = false;\n  }\n  /**\n   * Prevents the default action for a specified event.\n   * In this way, the source component suppresses the built-in behavior that follows the event.\n   */\n\n\n  preventDefault() {\n    this.prevented = true;\n  }\n  /**\n   * If the event is prevented by any of its subscribers, returns `true`.\n   *\n   * @returns `true` if the default action was prevented. Otherwise, returns `false`.\n   */\n\n\n  isDefaultPrevented() {\n    return this.prevented;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst tabindex = 'tabindex';\n/**\n * Represents the Kendo UI ButtonGroup component for Angular.\n */\n\nlet ButtonGroupComponent = /*#__PURE__*/(() => {\n  let ButtonGroupComponent = class ButtonGroupComponent {\n    constructor(service, localization, element) {\n      this.service = service;\n      this.element = element;\n      /**\n       * By default, the selection mode of the ButtonGroup is set to `multiple`.\n       */\n\n      this.selection = 'multiple';\n      /**\n       * Changes the visual appearance by using alternative styling options\n       * ([more information and examples]({% slug styling_buttongroup %})).\n       * The `look` property of the ButtonGroup takes precedence over the `look` property\n       * of the individual buttons that are part of the group.\n       *\n       * The available values are:\n       * * `flat`\n       * * `outline`\n       */\n\n      this.look = 'default';\n      /**\n       * Fires every time keyboard navigation occurs.\n       */\n\n      this.navigate = new EventEmitter();\n      this._tabIndex = 0;\n      this.currentTabIndex = 0;\n      this.localizationChangeSubscription = localization.changes.subscribe(({\n        rtl\n      }) => this.direction = rtl ? 'rtl' : 'ltr');\n    }\n    /**\n     * Specifies the [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n\n\n    set tabIndex(value) {\n      this._tabIndex = value;\n      this.currentTabIndex = value;\n    }\n\n    get tabIndex() {\n      return this._tabIndex;\n    }\n\n    get wrapperClass() {\n      return true;\n    }\n\n    get disabledClass() {\n      return this.disabled;\n    }\n\n    get stretchedClass() {\n      return !!this.width;\n    }\n\n    get isFlat() {\n      return this.look === 'flat';\n    }\n\n    get isBare() {\n      return this.look === 'bare';\n    }\n\n    get isOutline() {\n      return this.look === 'outline';\n    }\n\n    get getRole() {\n      return this.isSelectionSingle() ? 'radiogroup' : 'group';\n    }\n\n    get dir() {\n      return this.direction;\n    }\n\n    get ariaDisabled() {\n      return this.disabled;\n    }\n\n    get wrapperWidth() {\n      return this.width;\n    }\n\n    get wrapperTabIndex() {\n      return this.disabled ? undefined : this.currentTabIndex;\n    }\n    /**\n     * @hidden\n     */\n\n\n    keydown(event) {\n      if (!this.disabled) {\n        this.navigateFocus(event);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    onFocus() {\n      this.currentTabIndex = -1;\n      const focusedIndex = this.buttons.toArray().findIndex(current => current.element.tabIndex !== -1);\n      const index = focusedIndex === -1 ? 0 : focusedIndex;\n      this.focus(this.buttons.filter((_current, i) => {\n        return i === index;\n      }));\n    }\n    /**\n     * @hidden\n     */\n\n\n    focusout(event) {\n      if (event.relatedTarget && event.relatedTarget.parentNode !== this.element.nativeElement) {\n        this.defocus(this.buttons.toArray());\n        this.currentTabIndex = this.tabIndex;\n      }\n    }\n\n    ngOnInit() {\n      this.service.setButtonLook(this.look);\n      this.subscription = this.service.buttonClicked$.subscribe(button => {\n        let newSelectionValue;\n\n        if (this.isSelectionSingle()) {\n          newSelectionValue = true;\n          this.deactivate(this.buttons.filter(current => current !== button));\n        } else {\n          this.defocus(this.buttons.toArray());\n          newSelectionValue = !button.selected;\n        }\n\n        if (button.togglable) {\n          button.setSelected(newSelectionValue);\n        }\n\n        button.setAttribute(tabindex, \"0\");\n      });\n    }\n\n    ngOnChanges(change) {\n      if (isChanged('disabled', change)) {\n        this.buttons.forEach(button => {\n          if (isPresent(this.disabled)) {\n            button.disabled = this.disabled;\n          }\n        });\n      }\n    }\n\n    ngAfterContentInit() {\n      this.buttons.forEach(button => {\n        if (button.selected) {\n          button.setAttribute(tabindex, \"0\");\n        } else {\n          button.setAttribute(tabindex, \"-1\");\n        }\n      });\n    }\n\n    ngAfterViewChecked() {\n      if (this.buttons.length) {\n        this.buttons.first.renderer.addClass(this.buttons.first.element, 'k-group-start');\n        this.buttons.last.renderer.addClass(this.buttons.last.element, 'k-group-end');\n      }\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n      this.localizationChangeSubscription.unsubscribe();\n    }\n\n    ngAfterContentChecked() {\n      this.verifySettings();\n    }\n\n    navigateFocus(event) {\n      let focusedIndex = this.buttons.toArray().findIndex(current => current.element.tabIndex !== -1);\n      const firstIndex = 0;\n      const lastIndex = this.buttons.length - 1;\n      const eventArgs = new PreventableEvent();\n\n      if (event.keyCode === Keys.ArrowRight && focusedIndex < lastIndex) {\n        this.navigate.emit(eventArgs);\n\n        if (!eventArgs.isDefaultPrevented()) {\n          this.defocus(this.buttons.toArray());\n          this.focus(this.buttons.filter((_current, index) => {\n            return index === focusedIndex + 1;\n          }));\n        }\n      }\n\n      if (event.keyCode === Keys.ArrowLeft && focusedIndex > firstIndex) {\n        this.navigate.emit(eventArgs);\n\n        if (!eventArgs.isDefaultPrevented()) {\n          this.defocus(this.buttons.toArray());\n          this.focus(this.buttons.filter((_current, index) => {\n            return index === focusedIndex - 1;\n          }));\n        }\n      }\n    }\n\n    deactivate(buttons) {\n      buttons.forEach(button => {\n        button.setSelected(false);\n        button.setAttribute(tabindex, \"-1\");\n      });\n    }\n\n    activate(buttons) {\n      buttons.forEach(button => {\n        button.setSelected(true);\n        button.setAttribute(tabindex, \"0\");\n        button.focus();\n      });\n    }\n\n    defocus(buttons) {\n      buttons.forEach(button => {\n        button.setAttribute(tabindex, \"-1\");\n      });\n    }\n\n    focus(buttons) {\n      buttons.forEach(button => {\n        button.setAttribute(tabindex, \"0\");\n        button.focus();\n      });\n    }\n\n    verifySettings() {\n      if (isDevMode()) {\n        if (this.isSelectionSingle() && this.buttons.filter(button => button.selected).length > 1) {\n          throw new Error('Having multiple selected buttons with single selection mode is not supported');\n        }\n      }\n    }\n\n    isSelectionSingle() {\n      return this.selection === 'single';\n    }\n\n  };\n\n  ButtonGroupComponent.ɵfac = function ButtonGroupComponent_Factory(t) {\n    return new (t || ButtonGroupComponent)(ɵngcc0.ɵɵdirectiveInject(KendoButtonService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  ButtonGroupComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ButtonGroupComponent,\n    selectors: [[\"kendo-buttongroup\"]],\n    contentQueries: function ButtonGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, ButtonDirective, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.buttons = _t);\n      }\n    },\n    hostVars: 18,\n    hostBindings: function ButtonGroupComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function ButtonGroupComponent_keydown_HostBindingHandler($event) {\n          return ctx.keydown($event);\n        })(\"focus\", function ButtonGroupComponent_focus_HostBindingHandler() {\n          return ctx.onFocus();\n        })(\"focusout\", function ButtonGroupComponent_focusout_HostBindingHandler($event) {\n          return ctx.focusout($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.getRole)(\"dir\", ctx.dir)(\"aria-disabled\", ctx.ariaDisabled)(\"tabindex\", ctx.wrapperTabIndex);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.wrapperWidth);\n        ɵngcc0.ɵɵclassProp(\"k-button-group\", ctx.wrapperClass)(\"k-state-disabled\", ctx.disabledClass)(\"k-button-group-stretched\", ctx.stretchedClass)(\"k-button-group-flat\", ctx.isFlat)(\"k-button-group-bare\", ctx.isBare)(\"k-button-group-outline\", ctx.isOutline);\n      }\n    },\n    inputs: {\n      selection: \"selection\",\n      look: \"look\",\n      tabIndex: \"tabIndex\",\n      disabled: \"disabled\",\n      width: \"width\"\n    },\n    outputs: {\n      navigate: \"navigate\"\n    },\n    exportAs: [\"kendoButtonGroup\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([KendoButtonService, LocalizationService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.buttongroup'\n    }]), ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function ButtonGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Input('disabled'), __metadata(\"design:type\", Boolean)], ButtonGroupComponent.prototype, \"disabled\", void 0);\n\n  __decorate([Input('selection'), __metadata(\"design:type\", String)], ButtonGroupComponent.prototype, \"selection\", void 0);\n\n  __decorate([Input('width'), __metadata(\"design:type\", String)], ButtonGroupComponent.prototype, \"width\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ButtonGroupComponent.prototype, \"look\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], ButtonGroupComponent.prototype, \"tabIndex\", null);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ButtonGroupComponent.prototype, \"navigate\", void 0);\n\n  __decorate([ContentChildren(ButtonDirective), __metadata(\"design:type\", QueryList)], ButtonGroupComponent.prototype, \"buttons\", void 0);\n\n  __decorate([HostBinding('class.k-button-group'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonGroupComponent.prototype, \"wrapperClass\", null);\n\n  __decorate([HostBinding('class.k-state-disabled'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonGroupComponent.prototype, \"disabledClass\", null);\n\n  __decorate([HostBinding('class.k-button-group-stretched'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonGroupComponent.prototype, \"stretchedClass\", null);\n\n  __decorate([HostBinding('class.k-button-group-flat'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonGroupComponent.prototype, \"isFlat\", null);\n\n  __decorate([HostBinding('class.k-button-group-bare'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonGroupComponent.prototype, \"isBare\", null);\n\n  __decorate([HostBinding('class.k-button-group-outline'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonGroupComponent.prototype, \"isOutline\", null);\n\n  __decorate([HostBinding('attr.role'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], ButtonGroupComponent.prototype, \"getRole\", null);\n\n  __decorate([HostBinding('attr.dir'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], ButtonGroupComponent.prototype, \"dir\", null);\n\n  __decorate([HostBinding('attr.aria-disabled'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ButtonGroupComponent.prototype, \"ariaDisabled\", null);\n\n  __decorate([HostBinding('style.width'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], ButtonGroupComponent.prototype, \"wrapperWidth\", null);\n\n  __decorate([HostBinding('attr.tabindex'), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [])], ButtonGroupComponent.prototype, \"wrapperTabIndex\", null);\n\n  __decorate([HostListener('keydown', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], ButtonGroupComponent.prototype, \"keydown\", null);\n\n  __decorate([HostListener('focus'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], ButtonGroupComponent.prototype, \"onFocus\", null);\n\n  __decorate([HostListener('focusout', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], ButtonGroupComponent.prototype, \"focusout\", null);\n\n  ButtonGroupComponent = __decorate([__metadata(\"design:paramtypes\", [KendoButtonService, LocalizationService, ElementRef])], ButtonGroupComponent);\n  /**\n   * Represents the [NgModule]({{ site.data.urls.angular['ngmodules'] }})\n   * definition for the Button directive.\n   *\n   * @example\n   *\n   * ```ts-no-run\n   * // Import the Button module\n   * import { ButtonModule } from '@progress/kendo-angular-buttons';\n   *\n   * // The browser platform with a compiler\n   * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n   *\n   * import { NgModule } from '@angular/core';\n   *\n   * // Import the app component\n   * import { AppComponent } from './app.component';\n   *\n   * // Define the app module\n   * _@NgModule({\n   *     declarations: [AppComponent], // declare app component\n   *     imports:      [BrowserModule, ButtonModule], // import Button module\n   *     bootstrap:    [AppComponent]\n   * })\n   * export class AppModule {}\n   *\n   * // Compile and launch the module\n   * platformBrowserDynamic().bootstrapModule(AppModule);\n   *\n   * ```\n   */\n\n  return ButtonGroupComponent;\n})();\nlet ButtonModule = /*#__PURE__*/(() => {\n  let ButtonModule = class ButtonModule {};\n\n  ButtonModule.ɵfac = function ButtonModule_Factory(t) {\n    return new (t || ButtonModule)();\n  };\n\n  ButtonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ButtonModule\n  });\n  ButtonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  /**\n   * @hidden\n   *\n   * The exported package module.\n   *\n   * The package exports:\n   * - `ButtonGroupComponent`&mdash;The ButtonGroupComponent component class.\n   */\n\n  return ButtonModule;\n})();\nlet ButtonGroupModule = /*#__PURE__*/(() => {\n  let ButtonGroupModule = class ButtonGroupModule {};\n\n  ButtonGroupModule.ɵfac = function ButtonGroupModule_Factory(t) {\n    return new (t || ButtonGroupModule)();\n  };\n\n  ButtonGroupModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ButtonGroupModule\n  });\n  ButtonGroupModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonModule]]\n  });\n  /**\n   * Used for rendering the list item content.\n   *\n   * To define the item template, nest a `<ng-template>` tag with the `kendo<ComponentName>ItemTemplate` directive inside the component tag.\n   *\n   * For the DropDownButton, use the `kendoDropDownButtonItemTemplate` directive.\n   * For the SplitButton, use the `kendoSplitButtonItemTemplate` directive.\n   *\n   * The template context is set to the current component. To get a reference to the current data item, use the `let-dataItem` directive.\n   *\n   * @example\n   * ```ts\n   * _@Component({\n   * selector: 'my-app',\n   * template: `\n   *  <kendo-splitbutton [data]=\"listItems\">\n   *    <ng-template kendoSplitButtonItemTemplate let-dataItem>\n   *      <span>{{dataItem}} option</span>\n   *    </ng-template>\n   *  </kendo-splitbutton>\n   *  <kendo-dropdownbutton [data]=\"listItems\">\n   *    <ng-template kendoDropDownButtonItemTemplate let-dataItem>\n   *      <span>{{dataItem}} option</span>\n   *    </ng-template>\n   *  </kendo-dropdownbutton>\n   * `\n   * })\n   * class AppComponent {\n   *   public listItems: Array<any> = [{\n   *      text: 'item1',\n   *      icon: 'refresh',\n   *      disabled: false,\n   *      click: (dataItem: any) => {\n   *          //action\n   *      }\n   *  }, {\n   *      text: 'item2',\n   *      icon: 'refresh',\n   *      disabled: false,\n   *      click: (dataItem: any) => {\n   *          //action\n   *      }\n   *  }]\n   * }\n   * ```\n   *\n   * For more examples, refer to the article on the [DropDownList templates]({% slug overview_ddl %}#templates).\n   */\n\n  return ButtonGroupModule;\n})();\nlet ButtonItemTemplateDirective = /*#__PURE__*/(() => {\n  let ButtonItemTemplateDirective = class ButtonItemTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  ButtonItemTemplateDirective.ɵfac = function ButtonItemTemplateDirective_Factory(t) {\n    return new (t || ButtonItemTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  ButtonItemTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ButtonItemTemplateDirective,\n    selectors: [[\"\", \"kendoDropDownButtonItemTemplate\", \"\"], [\"\", \"kendoSplitButtonItemTemplate\", \"\"]]\n  });\n  ButtonItemTemplateDirective = __decorate([__metadata(\"design:paramtypes\", [TemplateRef])], ButtonItemTemplateDirective);\n  /**\n   * @hidden\n   */\n\n  return ButtonItemTemplateDirective;\n})();\nlet ListComponent = /*#__PURE__*/(() => {\n  let ListComponent = class ListComponent {\n    constructor() {\n      this.onItemClick = new EventEmitter();\n      this.onItemBlur = new EventEmitter();\n      validatePackage(packageMetadata);\n    }\n\n    getText(dataItem) {\n      if (dataItem) {\n        return this.textField ? dataItem[this.textField] : dataItem.text || dataItem;\n      }\n\n      return undefined;\n    }\n\n    getIconClasses(dataItem) {\n      const icon = dataItem.icon ? 'k-icon k-i-' + dataItem.icon : undefined;\n      const classes = {};\n      classes[icon || dataItem.iconClass] = true;\n      return classes;\n    }\n\n    onClick(index) {\n      this.onItemClick.emit(index);\n    }\n\n    onBlur() {\n      this.onItemBlur.emit();\n    }\n\n  };\n\n  ListComponent.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)();\n  };\n\n  ListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"kendo-button-list\"]],\n    inputs: {\n      data: \"data\",\n      textField: \"textField\",\n      itemTemplate: \"itemTemplate\"\n    },\n    outputs: {\n      onItemClick: \"onItemClick\",\n      onItemBlur: \"onItemBlur\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[\"unselectable\", \"on\", 1, \"k-list\", \"k-reset\"], [\"role\", \"menuitem\", \"unselectable\", \"on\", \"tabindex\", \"-1\", \"kendoButtonFocusable\", \"\", 3, \"index\", \"ngClass\", \"click\", \"blur\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"menuitem\", \"unselectable\", \"on\", \"tabindex\", \"-1\", \"kendoButtonFocusable\", \"\", 3, \"index\", \"ngClass\", \"click\", \"blur\"], [4, \"ngIf\"], [3, \"ngIf\"], [3, \"templateContext\"], [3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"k-image\", \"alt\", \"\", 3, \"src\", 4, \"ngIf\"], [3, \"ngClass\"], [\"alt\", \"\", 1, \"k-image\", 3, \"src\"]],\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵtemplate(1, ListComponent_li_1_Template, 3, 7, \"li\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.data);\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgForOf, FocusableDirective, ɵngcc2.NgClass, ɵngcc2.NgIf, TemplateContextDirective];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], ListComponent.prototype, \"data\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ListComponent.prototype, \"textField\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", ButtonItemTemplateDirective)], ListComponent.prototype, \"itemTemplate\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ListComponent.prototype, \"onItemClick\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ListComponent.prototype, \"onItemBlur\", void 0);\n\n  ListComponent = __decorate([__metadata(\"design:paramtypes\", [])], ListComponent);\n  /**\n   * @hidden\n   */\n\n  return ListComponent;\n})();\nlet FocusService = /*#__PURE__*/(() => {\n  let FocusService = class FocusService {\n    /**\n     * @hidden\n     */\n    constructor() {\n      this.onFocus = new EventEmitter();\n    }\n\n    isFocused(index) {\n      return index === this.focused;\n    }\n\n    focus(index) {\n      if (this.isFocused(index)) {\n        return;\n      }\n\n      this.focused = index;\n      this.onFocus.emit(index);\n    }\n\n    resetFocus() {\n      this.focused = -1;\n    }\n\n    get focused() {\n      return this.focusedIndex;\n    }\n\n    set focused(index) {\n      this.focusedIndex = index;\n      this.onFocus.emit(index);\n    }\n\n  };\n\n  FocusService.ɵfac = function FocusService_Factory(t) {\n    return new (t || FocusService)();\n  };\n\n  FocusService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: FocusService,\n    factory: function (t) {\n      return FocusService.ɵfac(t);\n    }\n  });\n  /**\n   * @hidden\n   */\n\n  return FocusService;\n})();\nlet FocusableDirective = /*#__PURE__*/(() => {\n  let FocusableDirective = class FocusableDirective {\n    constructor(focusService, elementRef, renderer) {\n      this.focusService = focusService;\n      this.renderer = renderer;\n      this.element = elementRef.nativeElement;\n      this.subscribeEvents();\n    }\n\n    ngOnInit() {\n      if (this.index === this.focusService.focused) {\n        this.renderer.addClass(this.element, 'k-state-focused');\n      } else {\n        this.renderer.removeClass(this.element, 'k-state-focused');\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnDestroy() {\n      this.unsubscribeEvents();\n    }\n\n    subscribeEvents() {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      this.focusSubscription = this.focusService.onFocus.subscribe(index => {\n        if (this.index === index) {\n          this.renderer.addClass(this.element, 'k-state-focused');\n          this.element.focus();\n        } else {\n          this.renderer.removeClass(this.element, 'k-state-focused');\n        }\n      });\n    }\n\n    unsubscribeEvents() {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      if (this.focusSubscription) {\n        this.focusSubscription.unsubscribe();\n      }\n    }\n\n  };\n\n  FocusableDirective.ɵfac = function FocusableDirective_Factory(t) {\n    return new (t || FocusableDirective)(ɵngcc0.ɵɵdirectiveInject(FocusService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  FocusableDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FocusableDirective,\n    selectors: [[\"\", \"kendoButtonFocusable\", \"\"]],\n    inputs: {\n      index: \"index\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], FocusableDirective.prototype, \"index\", void 0);\n\n  FocusableDirective = __decorate([__metadata(\"design:paramtypes\", [FocusService, ElementRef, Renderer2])], FocusableDirective);\n  /**\n   * @hidden\n   */\n\n  return FocusableDirective;\n})();\nlet TemplateContextDirective = /*#__PURE__*/(() => {\n  let TemplateContextDirective = class TemplateContextDirective {\n    constructor(viewContainerRef) {\n      this.viewContainerRef = viewContainerRef;\n    }\n\n    set templateContext(context) {\n      if (this.insertedViewRef) {\n        this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.insertedViewRef));\n        this.insertedViewRef = undefined;\n      }\n\n      if (context.templateRef) {\n        this.insertedViewRef = this.viewContainerRef.createEmbeddedView(context.templateRef, context);\n      }\n    }\n\n  };\n\n  TemplateContextDirective.ɵfac = function TemplateContextDirective_Factory(t) {\n    return new (t || TemplateContextDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n  };\n\n  TemplateContextDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TemplateContextDirective,\n    selectors: [[\"\", \"templateContext\", \"\"]],\n    inputs: {\n      templateContext: \"templateContext\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], TemplateContextDirective.prototype, \"templateContext\", null);\n\n  TemplateContextDirective = __decorate([__metadata(\"design:paramtypes\", [ViewContainerRef])], TemplateContextDirective);\n  return TemplateContextDirective;\n})();\nconst EXPORTED_DIRECTIVES = [ListComponent, FocusableDirective, ButtonItemTemplateDirective, TemplateContextDirective];\n/**\n * @hidden\n */\n\nlet ListModule = /*#__PURE__*/(() => {\n  let ListModule = class ListModule {};\n\n  ListModule.ɵfac = function ListModule_Factory(t) {\n    return new (t || ListModule)();\n  };\n\n  ListModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ListModule\n  });\n  ListModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  /**\n   * @hidden\n   */\n\n  return ListModule;\n})();\nvar KeyEvents = /*#__PURE__*/(() => {\n  (function (KeyEvents) {\n    KeyEvents[KeyEvents[\"keydown\"] = 0] = \"keydown\";\n    KeyEvents[KeyEvents[\"keypress\"] = 1] = \"keypress\";\n    KeyEvents[KeyEvents[\"keyup\"] = 2] = \"keyup\";\n  })(KeyEvents || (KeyEvents = {}));\n\n  return KeyEvents;\n})();\n\n/**\n * @hidden\n */\nvar NavigationAction = /*#__PURE__*/(() => {\n  (function (NavigationAction) {\n    NavigationAction[NavigationAction[\"Undefined\"] = 0] = \"Undefined\";\n    NavigationAction[NavigationAction[\"Open\"] = 1] = \"Open\";\n    NavigationAction[NavigationAction[\"Close\"] = 2] = \"Close\";\n    NavigationAction[NavigationAction[\"Enter\"] = 3] = \"Enter\";\n    NavigationAction[NavigationAction[\"EnterPress\"] = 4] = \"EnterPress\";\n    NavigationAction[NavigationAction[\"EnterUp\"] = 5] = \"EnterUp\";\n    NavigationAction[NavigationAction[\"Tab\"] = 6] = \"Tab\";\n    NavigationAction[NavigationAction[\"Esc\"] = 7] = \"Esc\";\n    NavigationAction[NavigationAction[\"Navigate\"] = 8] = \"Navigate\";\n  })(NavigationAction || (NavigationAction = {}));\n\n  return NavigationAction;\n})();\n\n/* tslint:disable:deprecation */\n\n/**\n * @hidden\n */\nlet ListButton = /*#__PURE__*/(() => {\n  class ListButton {\n    constructor(focusService, navigationService, wrapperRef, _zone, localization, cdr) {\n      this.focusService = focusService;\n      this.navigationService = navigationService;\n      this.wrapperRef = wrapperRef;\n      this._zone = _zone;\n      this.cdr = cdr;\n      this._open = false;\n      this._disabled = false;\n      this._active = false;\n      this._popupSettings = {\n        animate: true,\n        popupClass: ''\n      };\n      this.listId = guid();\n      this._isFocused = false;\n      this.focusService = focusService;\n      this.navigationService = navigationService;\n      this.wrapper = wrapperRef.nativeElement;\n      this.localizationChangeSubscription = localization.changes.subscribe(({\n        rtl\n      }) => this.direction = rtl ? 'rtl' : 'ltr');\n      this.subscribeEvents();\n    }\n\n    get popupClasses() {\n      const popupClasses = ['k-list-container', 'k-reset', 'k-group'];\n\n      if (this._popupSettings.popupClass) {\n        popupClasses.push(this._popupSettings.popupClass);\n      }\n\n      return popupClasses.join(' ');\n    }\n\n    get openState() {\n      return this._open;\n    }\n\n    set openState(open) {\n      this._open = open;\n    }\n    /**\n     * @hidden\n     */\n\n\n    togglePopupVisibility() {\n      if (this._disabled) {\n        return;\n      }\n\n      this.openState = !this.openState;\n\n      if (!this.openState) {\n        this.focusService.focus(-1);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    onItemClick(index) {\n      this.emitItemClickHandler(index);\n      setTimeout(() => this.focusWrapper(), 1);\n    }\n\n    ngOnDestroy() {\n      this.openState = false;\n      this.unsubscribeEvents();\n      clearTimeout(this.focusFirstTimeout);\n      clearTimeout(this.blurTimeout);\n\n      if (this.localizationChangeSubscription) {\n        this.localizationChangeSubscription.unsubscribe();\n      }\n    }\n\n    subscribeEvents() {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      this.subscribeListItemFocusEvent();\n      this.subscribeComponentBlurredEvent();\n      this.subscribeNavigationEvents();\n    }\n\n    subscribeListItemFocusEvent() {\n      this.focusSubscription = this.focusService.onFocus.subscribe(() => {\n        this._isFocused = true;\n      });\n    }\n\n    subscribeComponentBlurredEvent() {\n      this._zone.runOutsideAngular(() => {\n        this.tabSubscription = this.navigationService.tab.pipe(filter(() => this._isFocused)).subscribe(this.handleTab.bind(this));\n        this.componentBlurredSubscription = fromEvent(document, 'click').pipe(filter(event => !this.wrapperContains(event.target)), filter(() => this._isFocused)).subscribe(() => this._zone.run(() => this.blurWrapper()));\n      });\n    }\n\n    subscribeNavigationEvents() {\n      this.navigationSubscription = this.navigationService.navigate.subscribe(this.focusService.focus.bind(this.focusService));\n      this.enterUpSubscription = this.navigationService.enterup.subscribe(() => {\n        this.enterHandler();\n        this.focusWrapper();\n      });\n      this.openSubscription = this.navigationService.open.subscribe(() => {\n        if (!this._open) {\n          this.togglePopupVisibility();\n          this.focusFirstItem();\n        } else {\n          this.focusWrapper();\n        }\n      });\n      this.closeSubscription = merge(this.navigationService.close, this.navigationService.esc).subscribe(() => this.focusWrapper());\n    }\n\n    enterHandler() {} // tslint:disable-line\n\n\n    unsubscribeEvents() {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      this.unsubscribe(this.componentBlurredSubscription);\n      this.unsubscribe(this.focusSubscription);\n      this.unsubscribe(this.navigationSubscription);\n      this.unsubscribe(this.enterPressSubscription);\n      this.unsubscribe(this.enterUpSubscription);\n      this.unsubscribe(this.openSubscription);\n      this.unsubscribe(this.closeSubscription);\n      this.unsubscribe(this.tabSubscription);\n    }\n\n    unsubscribe(subscription) {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    keyDownHandler(event) {\n      this.keyHandler(event);\n    }\n    /**\n     * @hidden\n     */\n\n\n    keyPressHandler(event) {\n      this.keyHandler(event, KeyEvents.keypress);\n    }\n    /**\n     * @hidden\n     */\n\n\n    keyUpHandler(event) {\n      this.keyHandler(event, KeyEvents.keyup);\n    }\n    /**\n     * @hidden\n     */\n\n\n    keyHandler(event, keyEvent) {\n      if (this._disabled) {\n        return;\n      }\n\n      let focused = this.focusService.focused || 0;\n      const eventData = event;\n      const action = this.navigationService.process({\n        altKey: eventData.altKey,\n        current: focused,\n        keyCode: eventData.keyCode,\n        keyEvent: keyEvent,\n        max: this._data ? this._data.length - 1 : 0,\n        min: 0\n      });\n\n      if (action !== NavigationAction.Undefined && action !== NavigationAction.Tab && (action !== NavigationAction.Enter || action === NavigationAction.Enter && this._open)) {\n        if (event.keyCode === Keys.Space && action === NavigationAction.EnterUp) {\n          this._open = false;\n        } else {\n          eventData.preventDefault();\n        }\n      }\n    }\n\n    emitItemClickHandler(index) {\n      const dataItem = this._data[index];\n\n      if (this._itemClick) {\n        this._itemClick.emit(dataItem);\n      }\n\n      if (dataItem && dataItem.click && !dataItem.disabled) {\n        dataItem.click(dataItem);\n      }\n    }\n\n    focusFirstItem() {\n      if (this._data && isPresent(this._data[0])) {\n        this.focusFirstTimeout = setTimeout(() => this.focusService.focus(0), 1);\n      }\n    }\n\n    focusWrapper() {\n      if (this._open) {\n        this.togglePopupVisibility();\n        this.focusButton();\n      }\n    }\n\n    wrapperContains(element) {\n      return this.wrapper === element || this.wrapper.contains(element);\n    }\n\n    blurWrapper(emit = true) {\n      if (this._open) {\n        this.togglePopupVisibility();\n      }\n\n      this._isFocused = false;\n\n      if (emit) {\n        this._blur.emit();\n\n        this.cdr.markForCheck();\n      }\n    }\n\n    focusButton() {\n      if (this.button) {\n        this.button.nativeElement.focus();\n      }\n    }\n\n    handleTab() {\n      this.focusButton();\n      this.blurWrapper(false);\n    }\n\n  }\n\n  ListButton.ɵfac = function ListButton_Factory(t) {\n    ɵngcc0.ɵɵinvalidFactory();\n  };\n\n  ListButton.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ListButton\n  });\n  /**\n   * @hidden\n   */\n\n  return ListButton;\n})();\nconst NAVIGATION_CONFIG = new InjectionToken('navigation.config');\n/**\n * @hidden\n */\n\nlet NavigationService = /*#__PURE__*/(() => {\n  let NavigationService = class NavigationService {\n    constructor(config) {\n      this.navigate = new EventEmitter();\n      this.open = new EventEmitter();\n      this.close = new EventEmitter();\n      this.enter = new EventEmitter();\n      this.enterpress = new EventEmitter();\n      this.enterup = new EventEmitter();\n      this.tab = new EventEmitter();\n      this.esc = new EventEmitter();\n      this.useLeftRightArrows = config.useLeftRightArrows;\n    }\n\n    process(args) {\n      const keyCode = args.keyCode;\n      const keyEvent = args.keyEvent;\n      let index;\n      let action = NavigationAction.Undefined;\n\n      if (keyEvent === KeyEvents.keypress) {\n        if (this.isEnter(keyCode)) {\n          action = NavigationAction.EnterPress;\n        }\n      } else if (keyEvent === KeyEvents.keyup) {\n        if (this.isEnter(keyCode)) {\n          action = NavigationAction.EnterUp;\n        }\n      } else {\n        if (args.altKey && keyCode === Keys.ArrowDown) {\n          action = NavigationAction.Open;\n        } else if (args.altKey && keyCode === Keys.ArrowUp) {\n          action = NavigationAction.Close;\n        } else if (this.isEnter(keyCode)) {\n          action = NavigationAction.Enter;\n        } else if (keyCode === Keys.Escape) {\n          action = NavigationAction.Esc;\n        } else if (keyCode === Keys.Tab) {\n          action = NavigationAction.Tab;\n        } else if (keyCode === Keys.ArrowUp || this.useLeftRightArrows && keyCode === Keys.ArrowLeft) {\n          const step = args.flipNavigation ? 1 : -1;\n          const start = args.flipNavigation ? args.min : args.max;\n          const end = args.flipNavigation ? args.max : args.min;\n          index = this.next({\n            current: args.current,\n            start: start,\n            end: end,\n            step: step\n          });\n          action = NavigationAction.Navigate;\n        } else if (keyCode === Keys.ArrowDown || this.useLeftRightArrows && keyCode === Keys.ArrowRight) {\n          const step = args.flipNavigation ? -1 : 1;\n          const start = args.flipNavigation ? args.max : args.min;\n          const end = args.flipNavigation ? args.min : args.max;\n          index = this.next({\n            current: args.current,\n            start: start,\n            end: end,\n            step: step\n          });\n          action = NavigationAction.Navigate;\n        } else if (keyCode === Keys.Home) {\n          index = args.min;\n          action = NavigationAction.Navigate;\n        } else if (keyCode === Keys.End) {\n          index = args.max;\n          action = NavigationAction.Navigate;\n        }\n      }\n\n      if (action !== NavigationAction.Undefined) {\n        this[NavigationAction[action].toLowerCase()].emit(index);\n      }\n\n      return action;\n    }\n\n    isEnter(keyCode) {\n      return keyCode === Keys.Enter || keyCode === Keys.Space;\n    }\n\n    next(args) {\n      if (!isPresent(args.current)) {\n        return args.start;\n      } else {\n        return args.current !== args.end ? args.current + args.step : args.end;\n      }\n    }\n\n  };\n\n  NavigationService.ɵfac = function NavigationService_Factory(t) {\n    return new (t || NavigationService)(ɵngcc0.ɵɵinject(NAVIGATION_CONFIG));\n  };\n\n  NavigationService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NavigationService,\n    factory: function (t) {\n      return NavigationService.ɵfac(t);\n    }\n  });\n  NavigationService = __decorate([__param(0, Inject(NAVIGATION_CONFIG)), __metadata(\"design:paramtypes\", [Object])], NavigationService);\n  return NavigationService;\n})();\nconst NAVIGATION_SETTINGS = {\n  useLeftRightArrows: true\n};\nconst ɵ0 = NAVIGATION_SETTINGS;\nconst NAVIGATION_SETTINGS_PROVIDER = {\n  provide: NAVIGATION_CONFIG,\n  useValue: ɵ0\n};\n/**\n * Represents the Kendo UI SplitButton component for Angular.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-splitbutton [data]=\"data\" icon=\"paste\"\n *      (itemClick)=\"onSplitButtonItemClick($event)\"\n *      (buttonClick)=\"onSplitButtonClick()\">Paste</kendo-splitbutton>\n * `\n * })\n *\n * class AppComponent {\n *   public data: Array<any> = [{\n *       text: 'Keep Text Only',\n *       icon: 'paste-plain-text',\n *       click: () => { console.log('Keep Text Only click handler'); }\n *   }, {\n *       text: 'Paste as HTML',\n *       icon: 'paste-as-html'\n *   }, {\n *       text: 'Paste Markdown',\n *       icon: 'paste-markdown'\n *   }, {\n *       text: 'Set Default Paste'\n *   }];\n *\n *   public onSplitButtonClick(dataItem: any): void {\n *       console.log('Paste');\n *   }\n *\n *   public onSplitButtonItemClick(dataItem: any): void {\n *       if (dataItem) {\n *           console.log(dataItem.text);\n *       }\n *   }\n * }\n * ```\n */\n\nlet SplitButtonComponent = /*#__PURE__*/(() => {\n  let SplitButtonComponent = class SplitButtonComponent extends ListButton {\n    constructor(focusService, navigationService, wrapperRef, zone, popupService, elRef, localization, cdr) {\n      super(focusService, navigationService, wrapperRef, zone, localization, cdr);\n      this.popupService = popupService;\n      this.elRef = elRef;\n      /**\n       * Sets the text of the SplitButton.\n       */\n\n      this.text = '';\n      /**\n       * Defines an icon to be rendered next to the button text\n       * ([see example]({% slug databinding_splitbutton %}#toc-arrays-of-complex-data)).\n       */\n\n      this.icon = '';\n      /**\n       * Defines an icon with a custom CSS class to be rendered next to the button text\n       * ([see example]({% slug databinding_splitbutton %}#toc-arrays-of-complex-data)).\n       */\n\n      this.iconClass = '';\n      /**\n       * Defines the type attribute of the main button\n       */\n\n      this.type = 'button';\n      /**\n       * Defines the location of an image to be displayed next to the button text\n       * ([see example]({% slug databinding_splitbutton %}#toc-arrays-of-complex-data)).\n       */\n\n      this.imageUrl = '';\n      /**\n       * Changes the visual appearance by using alternative styling options.\n       *\n       * The available values are:\n       * * `flat`\n       * * `outline`\n       */\n\n      this.look = 'default';\n      /**\n       * Specifies the [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n       */\n\n      this.tabIndex = 0;\n      /**\n       * Specifies the name of the [font icon]({% slug icons %}#toc-list-of-font-icons) that will\n       * be rendered for the button which opens the popup.\n       */\n\n      this.arrowButtonIcon = 'arrow-s';\n      /**\n       * Fires each time the user clicks the main button.\n       *\n       * @example\n       * ```ts\n       * _@Component({\n       *    selector: 'my-app',\n       *    template: `\n       *        <kendo-splitbutton (buttonClick)=\"onSplitButtonClick()\" [data]=\"data\">\n       *            Reply\n       *        </kendo-splitbutton>\n       *    `\n       * })\n       * class AppComponent {\n       *    public data: Array<any> = ['Reply All', 'Forward', 'Reply & Delete'];\n       *\n       *    public onSplitButtonClick(): void {\n       *      console.log('SplitButton click');\n       *    }\n       * }\n       * ```\n       *\n       */\n\n      this.buttonClick = new EventEmitter();\n      /**\n       * Fires each time the user clicks on the drop-down list. The event data contains the data item bound to the clicked list item.\n       *\n       * @example\n       * ```ts\n       * _@Component({\n       *     selector: 'my-app',\n       *    template: `\n       *        <kendo-splitbutton (itemClick)=\"onSplitButtonItemClick($event)\" [data]=\"data\">\n       *          Reply\n       *      </kendo-splitbutton>\n       *    `\n       * })\n       * class AppComponent {\n       *    public data: Array<any> = ['Reply All', 'Forward', 'Reply & Delete'];\n       *\n       *   public onSplitButtonItemClick(dataItem?: string): void {\n       *        if (dataItem) {\n       *            console.log(dataItem);\n       *       }\n       *    }\n       * }\n       * ```\n       *\n       */\n\n      this.itemClick = new EventEmitter();\n      /**\n       * Fires each time the SplitButton gets focused.\n       */\n\n      this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n      /**\n       * Fires each time the SplitButton gets blurred.\n       */\n\n      this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n      /**\n       * Fires each time the popup is about to open.\n       * This event is preventable. If you cancel the event, the popup will remain closed.\n       */\n\n      this.open = new EventEmitter();\n      /**\n       * Fires each time the popup is about to close.\n       * This event is preventable. If you cancel the event, the popup will remain open.\n       */\n\n      this.close = new EventEmitter();\n      this.listId = guid();\n      /**\n       * @hidden\n       */\n\n      this.activeArrow = false;\n      this.buttonText = '';\n      this.lockFocus = false;\n      this._itemClick = this.itemClick;\n      this._blur = this.onBlur;\n    }\n    /**\n     * When set to `true`, disables a SplitButton item\n     * ([see example]({% slug databinding_splitbutton %}#toc-arrays-of-complex-data)).\n     */\n\n\n    set disabled(value) {\n      if (this.isOpen) {\n        this.toggle(false);\n      }\n\n      this._disabled = value;\n    }\n\n    get disabled() {\n      return this._disabled;\n    }\n    /**\n     * Configures the popup of the SplitButton.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     * - `align: \"left\" | \"center\" | \"right\"`&mdash;Specifies the alignment of the popup.\n     */\n\n\n    set popupSettings(settings) {\n      this._popupSettings = Object.assign({\n        animate: true,\n        popupClass: ''\n      }, settings);\n    }\n\n    get popupSettings() {\n      return this._popupSettings;\n    }\n    /**\n     * Sets the data of the SplitButton.\n     *\n     * > The data has to be provided in an array-like list.\n     */\n\n\n    set data(data) {\n      this._data = data || [];\n    }\n\n    get data() {\n      if (!this._data) {\n        this.data = [];\n      }\n\n      return this._data;\n    }\n    /**\n     * @hidden\n     */\n\n\n    set openState(open) {\n      if (this.disabled) {\n        return;\n      }\n\n      const eventArgs = new PreventableEvent();\n\n      if (open) {\n        this.open.emit(eventArgs);\n      } else {\n        this.close.emit(eventArgs);\n      }\n\n      if (eventArgs.isDefaultPrevented()) {\n        return;\n      }\n\n      this._toggle(open);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get openState() {\n      return this._open;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get active() {\n      return this._active;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get componentTabIndex() {\n      return this.disabled ? -1 : this.tabIndex;\n    }\n\n    set isFocused(value) {\n      this._isFocused = value;\n    }\n\n    get isFocused() {\n      return this._isFocused && !this._disabled;\n    }\n\n    get isFlat() {\n      return this.look === 'flat';\n    }\n\n    get isOutline() {\n      return this.look === 'outline';\n    }\n\n    get widgetClasses() {\n      return true;\n    }\n\n    get dir() {\n      return this.direction;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get ariaLabel() {\n      return `${this.buttonText} splitbutton`;\n    }\n    /**\n     * @hidden\n     */\n\n\n    onButtonFocus() {\n      if (!this.isFocused) {\n        this._isFocused = true;\n        this.onFocus.emit();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    onArrowButtonClick() {\n      this.lockFocus = true;\n      this.togglePopupVisibility();\n    }\n    /**\n     * @hidden\n     */\n\n\n    toggleButtonActiveState(enable) {\n      this._active = enable;\n    }\n    /**\n     * @hidden\n     */\n\n\n    toggleArrowButtonActiveState(enable) {\n      this.activeArrow = enable;\n    }\n    /**\n     * @hidden\n     */\n\n\n    onButtonClick() {\n      this.lockFocus = true;\n      this.buttonClick.emit();\n    }\n    /**\n     * @hidden\n     */\n\n\n    onButtonBlur() {\n      if (!this.isOpen && !this.lockFocus) {\n        this.blurWrapper();\n      }\n\n      this.lockFocus = false;\n    }\n    /**\n     * @hidden\n     */\n\n\n    keydown(event) {\n      this.keyDownHandler(event);\n\n      if (event.keyCode === Keys.Space) {\n        this._active = true;\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    keypress(event) {\n      this.keyPressHandler(event);\n    }\n    /**\n     * @hidden\n     */\n\n\n    keyup(event) {\n      this._active = false;\n\n      if (event.keyCode !== Keys.Space) {\n        this.keyUpHandler(event);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngAfterViewInit() {\n      this.updateButtonText();\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnChanges(changes) {\n      if (changes.hasOwnProperty('text')) {\n        this.updateButtonText();\n      }\n\n      if (isChanged(\"popupSettings\", changes) && isPresent(this.popupRef)) {\n        const popup = this.popupRef.popup.instance;\n        const newSettings = changes.popupSettings.currentValue;\n        popup.popupClass = newSettings.popupClass;\n        popup.animate = newSettings.animate;\n        popup.popupAlign = this.popupAlign;\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    togglePopupVisibility() {\n      super.togglePopupVisibility();\n\n      if (isDocumentAvailable() && this.lockFocus) {\n        this.button.nativeElement.focus();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    wrapperContains(element) {\n      return this.wrapper === element || this.wrapper.contains(element) || this.popupRef && this.popupRef.popupElement.contains(element);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get anchorAlign() {\n      let align = {\n        horizontal: this.popupSettings.align || 'left',\n        vertical: 'bottom'\n      };\n\n      if (this.direction === 'rtl' && !isPresent(this.popupSettings.align)) {\n        align.horizontal = 'right';\n      }\n\n      return align;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get popupAlign() {\n      let align = {\n        horizontal: this.popupSettings.align || 'left',\n        vertical: 'top'\n      };\n\n      if (this.direction === 'rtl' && !isPresent(this.popupSettings.align)) {\n        align.horizontal = 'right';\n      }\n\n      return align;\n    }\n    /**\n     * Focuses the SplitButton component.\n     */\n\n\n    focus() {\n      if (isDocumentAvailable()) {\n        this.button.nativeElement.focus();\n      }\n    }\n    /**\n     * Blurs the SplitButton component.\n     */\n\n\n    blur() {\n      if (isDocumentAvailable()) {\n        this.button.nativeElement.blur();\n        this.blurWrapper();\n      }\n    }\n\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      this.destroyPopup();\n    }\n    /**\n     * Toggles the visibility of the popup.\n     * If the `toggle` method is used to open or close the popup, the `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n\n\n    toggle(open) {\n      if (this.disabled) {\n        return;\n      }\n\n      tick(() => this._toggle(open === undefined ? !this._open : open));\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n\n\n    get isOpen() {\n      return this.openState;\n    }\n\n    enterHandler() {\n      if (this.disabled) {\n        return;\n      }\n\n      if (this.openState) {\n        let focused = this.focusService.focused;\n\n        if (isPresent(focused) && focused !== -1) {\n          this.emitItemClickHandler(focused);\n        }\n      } else {\n        this.buttonClick.emit();\n      }\n    }\n\n    updateButtonText() {\n      if (isDocumentAvailable()) {\n        let innerText = this.wrapper.innerText.split('\\n').join('').trim(); //setTimout is needed because of `Expression has changed after it was checked.` error;\n\n        setTimeout(() => this.buttonText = innerText, 0);\n      }\n    }\n\n    get appendTo() {\n      const {\n        appendTo\n      } = this.popupSettings;\n\n      if (!appendTo || appendTo === 'root') {\n        return undefined;\n      }\n\n      return appendTo === 'component' ? this.containerRef : appendTo;\n    }\n\n    _toggle(open) {\n      this._open = open;\n      this.destroyPopup();\n\n      if (this._open) {\n        this.createPopup();\n      }\n    }\n\n    createPopup() {\n      this.popupRef = this.popupService.open({\n        anchor: this.elRef,\n        anchorAlign: this.anchorAlign,\n        animate: this.popupSettings.animate,\n        appendTo: this.appendTo,\n        content: this.popupTemplate,\n        popupAlign: this.popupAlign,\n        popupClass: this.popupClasses\n      });\n      this.popupRef.popupAnchorViewportLeave.subscribe(() => this.openState = false);\n      this.popupRef.popupOpen.subscribe(this.focusFirstItem.bind(this));\n    }\n\n    destroyPopup() {\n      if (this.popupRef) {\n        this.popupRef.close();\n        this.popupRef = null;\n      }\n    }\n\n  };\n\n  SplitButtonComponent.ɵfac = function SplitButtonComponent_Factory(t) {\n    return new (t || SplitButtonComponent)(ɵngcc0.ɵɵdirectiveInject(FocusService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.PopupService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  SplitButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: SplitButtonComponent,\n    selectors: [[\"kendo-splitbutton\"]],\n    contentQueries: function SplitButtonComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, ButtonItemTemplateDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);\n      }\n    },\n    viewQuery: function SplitButtonComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c4, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7, ElementRef);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 7, ViewContainerRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.button = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.arrowButton = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n      }\n    },\n    hostVars: 11,\n    hostBindings: function SplitButtonComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function SplitButtonComponent_keydown_HostBindingHandler($event) {\n          return ctx.keydown($event);\n        })(\"keypress\", function SplitButtonComponent_keypress_HostBindingHandler($event) {\n          return ctx.keypress($event);\n        })(\"keyup\", function SplitButtonComponent_keyup_HostBindingHandler($event) {\n          return ctx.keyup($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx.dir);\n        ɵngcc0.ɵɵclassProp(\"k-state-focused\", ctx.isFocused)(\"k-flat\", ctx.isFlat)(\"k-outline\", ctx.isOutline)(\"k-split-button\", ctx.widgetClasses)(\"k-button-group\", ctx.widgetClasses);\n      }\n    },\n    inputs: {\n      text: \"text\",\n      icon: \"icon\",\n      iconClass: \"iconClass\",\n      type: \"type\",\n      imageUrl: \"imageUrl\",\n      look: \"look\",\n      tabIndex: \"tabIndex\",\n      arrowButtonIcon: \"arrowButtonIcon\",\n      disabled: \"disabled\",\n      popupSettings: \"popupSettings\",\n      data: \"data\",\n      textField: \"textField\",\n      buttonClass: \"buttonClass\",\n      arrowButtonClass: \"arrowButtonClass\"\n    },\n    outputs: {\n      buttonClick: \"buttonClick\",\n      itemClick: \"itemClick\",\n      onFocus: \"focus\",\n      onBlur: \"blur\",\n      open: \"open\",\n      close: \"close\"\n    },\n    exportAs: [\"kendoSplitButton\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([FocusService, NavigationService, NAVIGATION_SETTINGS_PROVIDER, LocalizationService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.splitbutton'\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c8,\n    decls: 10,\n    vars: 23,\n    consts: [[\"kendoButton\", \"\", \"role\", \"listbox\", 3, \"type\", \"look\", \"tabindex\", \"disabled\", \"icon\", \"iconClass\", \"imageUrl\", \"ngClass\", \"focus\", \"click\", \"blur\", \"mousedown\", \"mouseup\"], [\"button\", \"\"], [\"kendoButton\", \"\", \"type\", \"button\", 3, \"disabled\", \"icon\", \"look\", \"tabindex\", \"ngClass\", \"click\", \"mousedown\", \"mouseup\"], [\"arrowButton\", \"\"], [\"popupTemplate\", \"\"], [\"container\", \"\"], [3, \"id\", \"data\", \"textField\", \"itemTemplate\", \"onItemClick\", \"keydown\", \"keypress\", \"keyup\"]],\n    template: function SplitButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"focus\", function SplitButtonComponent_Template_button_focus_0_listener() {\n          return ctx.onButtonFocus();\n        })(\"click\", function SplitButtonComponent_Template_button_click_0_listener() {\n          return ctx.onButtonClick();\n        })(\"blur\", function SplitButtonComponent_Template_button_blur_0_listener() {\n          return ctx.onButtonBlur();\n        })(\"mousedown\", function SplitButtonComponent_Template_button_mousedown_0_listener() {\n          return ctx.toggleButtonActiveState(true);\n        })(\"mouseup\", function SplitButtonComponent_Template_button_mouseup_0_listener() {\n          return ctx.toggleButtonActiveState(false);\n        });\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"button\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"click\", function SplitButtonComponent_Template_button_click_4_listener() {\n          return ctx.onArrowButtonClick();\n        })(\"mousedown\", function SplitButtonComponent_Template_button_mousedown_4_listener() {\n          return ctx.toggleArrowButtonActiveState(true);\n        })(\"mouseup\", function SplitButtonComponent_Template_button_mouseup_4_listener() {\n          return ctx.toggleArrowButtonActiveState(false);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, SplitButtonComponent_ng_template_6_Template, 1, 5, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelementContainer(8, null, 5);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-state-active\", ctx.active);\n        ɵngcc0.ɵɵproperty(\"type\", ctx.type)(\"look\", ctx.look)(\"tabindex\", ctx.componentTabIndex)(\"disabled\", ctx.disabled)(\"icon\", ctx.icon)(\"iconClass\", ctx.iconClass)(\"imageUrl\", ctx.imageUrl)(\"ngClass\", ctx.buttonClass);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-expanded\", ctx.openState)(\"aria-haspopup\", true)(\"aria-owns\", ctx.listId)(\"aria-label\", ctx.ariaLabel);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.text, \"\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"k-state-active\", ctx.activeArrow);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"icon\", ctx.arrowButtonIcon)(\"look\", ctx.look)(\"tabindex\", -1)(\"ngClass\", ctx.arrowButtonClass);\n      }\n    },\n    directives: [ButtonDirective, ɵngcc2.NgClass, ListComponent],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitButtonComponent.prototype, \"text\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitButtonComponent.prototype, \"icon\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitButtonComponent.prototype, \"iconClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitButtonComponent.prototype, \"type\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitButtonComponent.prototype, \"imageUrl\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitButtonComponent.prototype, \"look\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], SplitButtonComponent.prototype, \"disabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], SplitButtonComponent.prototype, \"popupSettings\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], SplitButtonComponent.prototype, \"tabIndex\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitButtonComponent.prototype, \"textField\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], SplitButtonComponent.prototype, \"data\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], SplitButtonComponent.prototype, \"buttonClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], SplitButtonComponent.prototype, \"arrowButtonClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], SplitButtonComponent.prototype, \"arrowButtonIcon\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], SplitButtonComponent.prototype, \"buttonClick\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], SplitButtonComponent.prototype, \"itemClick\", void 0);\n\n  __decorate([Output('focus'), __metadata(\"design:type\", EventEmitter)], SplitButtonComponent.prototype, \"onFocus\", void 0);\n\n  __decorate([Output('blur'), __metadata(\"design:type\", EventEmitter)], SplitButtonComponent.prototype, \"onBlur\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], SplitButtonComponent.prototype, \"open\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], SplitButtonComponent.prototype, \"close\", void 0);\n\n  __decorate([ContentChild(ButtonItemTemplateDirective, {\n    static: false\n  }), __metadata(\"design:type\", ButtonItemTemplateDirective)], SplitButtonComponent.prototype, \"itemTemplate\", void 0);\n\n  __decorate([ViewChild('button', {\n    static: true\n  }), __metadata(\"design:type\", ElementRef)], SplitButtonComponent.prototype, \"button\", void 0);\n\n  __decorate([ViewChild('arrowButton', {\n    static: true,\n    read: ElementRef\n  }), __metadata(\"design:type\", ElementRef)], SplitButtonComponent.prototype, \"arrowButton\", void 0);\n\n  __decorate([ViewChild('popupTemplate', {\n    static: true\n  }), __metadata(\"design:type\", TemplateRef)], SplitButtonComponent.prototype, \"popupTemplate\", void 0);\n\n  __decorate([ViewChild('container', {\n    read: ViewContainerRef,\n    static: true\n  }), __metadata(\"design:type\", ViewContainerRef)], SplitButtonComponent.prototype, \"containerRef\", void 0);\n\n  __decorate([HostBinding('class.k-state-focused'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], SplitButtonComponent.prototype, \"isFocused\", null);\n\n  __decorate([HostBinding('class.k-flat'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], SplitButtonComponent.prototype, \"isFlat\", null);\n\n  __decorate([HostBinding('class.k-outline'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], SplitButtonComponent.prototype, \"isOutline\", null);\n\n  __decorate([HostBinding('class.k-split-button'), HostBinding('class.k-button-group'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], SplitButtonComponent.prototype, \"widgetClasses\", null);\n\n  __decorate([HostBinding('attr.dir'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], SplitButtonComponent.prototype, \"dir\", null);\n\n  __decorate([HostListener('keydown', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], SplitButtonComponent.prototype, \"keydown\", null);\n\n  __decorate([HostListener('keypress', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], SplitButtonComponent.prototype, \"keypress\", null);\n\n  __decorate([HostListener('keyup', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], SplitButtonComponent.prototype, \"keyup\", null);\n\n  SplitButtonComponent = __decorate([__metadata(\"design:paramtypes\", [FocusService, NavigationService, ElementRef, NgZone, PopupService, ElementRef, LocalizationService, ChangeDetectorRef])], SplitButtonComponent);\n  /**\n   * @hidden\n   *\n   * The exported package module.\n   *\n   * The package exports:\n   * - `SplitButtonComponent`&mdash;The SplitButtonComponent component class.\n   */\n\n  return SplitButtonComponent;\n})();\nlet SplitButtonModule = /*#__PURE__*/(() => {\n  let SplitButtonModule = class SplitButtonModule {};\n\n  SplitButtonModule.ɵfac = function SplitButtonModule_Factory(t) {\n    return new (t || SplitButtonModule)();\n  };\n\n  SplitButtonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: SplitButtonModule\n  });\n  SplitButtonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, PopupModule, ButtonModule, ListModule], ListModule]\n  });\n  return SplitButtonModule;\n})();\nconst NAVIGATION_SETTINGS$1 = {\n  useLeftRightArrows: true\n};\nconst ɵ0$1 = NAVIGATION_SETTINGS$1;\nconst NAVIGATION_SETTINGS_PROVIDER$1 = {\n  provide: NAVIGATION_CONFIG,\n  useValue: ɵ0$1\n};\n/**\n * Represents the Kendo UI DropDownButton component for Angular.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-dropdownbutton [data]=\"data\">\n *    User Settings\n *  </kendo-dropdownbutton>\n * `\n * })\n * class AppComponent {\n *   public data: Array<any> = [{\n *       text: 'My Profile'\n *   }, {\n *       text: 'Friend Requests'\n *   }, {\n *       text: 'Account Settings'\n *   }, {\n *       text: 'Support'\n *   }, {\n *       text: 'Log Out'\n *   }];\n * }\n * ```\n */\n\nlet DropDownButtonComponent = /*#__PURE__*/(() => {\n  let DropDownButtonComponent = class DropDownButtonComponent extends ListButton {\n    constructor(focusService, navigationService, wrapperRef, zone, popupService, elRef, localization, cdr) {\n      super(focusService, navigationService, wrapperRef, zone, localization, cdr);\n      this.popupService = popupService;\n      this.elRef = elRef;\n      /**\n       * Defines the name of an existing icon in a Kendo UI theme.\n       */\n\n      this.icon = '';\n      /**\n       * Defines the list of CSS classes which are used for styling the Button with custom icons.\n       */\n\n      this.iconClass = '';\n      /**\n       * Defines a URL for styling the button with a custom image.\n       */\n\n      this.imageUrl = '';\n      /**\n       * Adds visual weight to the default button and makes it primary.\n       */\n\n      this.primary = false;\n      /**\n       * Changes the visual appearance by using alternative styling options.\n       *\n       * The available values are:\n       * * `flat`\n       * * `outline`\n       */\n\n      this.look = 'default';\n      /**\n       * Specifies the [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n       */\n\n      this.tabIndex = 0;\n      /**\n       * Fires each time the user clicks on a drop-down list item. The event data contains the data item bound to the clicked list item.\n       */\n\n      this.itemClick = new EventEmitter();\n      /**\n       * Fires each time the popup is about to open.\n       * This event is preventable. If you cancel the event, the popup will remain closed.\n       */\n\n      this.open = new EventEmitter();\n      /**\n       * Fires each time the popup is about to close.\n       * This event is preventable. If you cancel the event, the popup will remain open.\n       */\n\n      this.close = new EventEmitter();\n      /**\n       * Fires each time the DropDownButton gets focused.\n       */\n\n      this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n      /**\n       * Fires each time the DropDownButton gets blurred.\n       */\n\n      this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n      this.listId = guid();\n      this._itemClick = this.itemClick;\n      this._blur = this.onBlur;\n    }\n    /**\n     * Configures the popup of the DropDownButton.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     * - `align: \"left\" | \"center\" | \"right\"`&mdash;Specifies the alignment of the popup.\n     */\n\n\n    set popupSettings(settings) {\n      this._popupSettings = Object.assign({\n        animate: true,\n        popupClass: ''\n      }, settings);\n    }\n\n    get popupSettings() {\n      return this._popupSettings;\n    }\n    /**\n     * Sets the disabled state of the DropDownButton.\n     */\n\n\n    set disabled(value) {\n      if (value && this.openState) {\n        this.openState = false;\n      }\n\n      this._disabled = value;\n    }\n\n    get disabled() {\n      return this._disabled;\n    }\n    /**\n     * Sets or gets the data of the DropDownButton.\n     *\n     * > The data has to be provided in an array-like list.\n     */\n\n\n    set data(data) {\n      this._data = data || [];\n    }\n\n    get data() {\n      return this._data;\n    }\n    /**\n     * @hidden\n     */\n\n\n    set openState(open) {\n      if (this.disabled) {\n        return;\n      }\n\n      const eventArgs = new PreventableEvent();\n\n      if (open) {\n        this.open.emit(eventArgs);\n      } else {\n        this.close.emit(eventArgs);\n      }\n\n      if (eventArgs.isDefaultPrevented()) {\n        return;\n      }\n\n      this._toggle(open);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get openState() {\n      return this._open;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get componentTabIndex() {\n      return this.disabled ? -1 : this.tabIndex;\n    }\n\n    get appendTo() {\n      const {\n        appendTo\n      } = this.popupSettings;\n\n      if (!appendTo || appendTo === 'root') {\n        return undefined;\n      }\n\n      return appendTo === 'component' ? this.container : appendTo;\n    }\n\n    get focused() {\n      return this._isFocused && !this._disabled;\n    }\n\n    get isFlat() {\n      return this.look === 'flat';\n    }\n\n    get isOutline() {\n      return this.look === 'outline';\n    }\n\n    get widgetClasses() {\n      return true;\n    }\n\n    get dir() {\n      return this.direction;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get active() {\n      return this._active;\n    }\n    /**\n     * @hidden\n     */\n\n\n    keydown(event) {\n      this.keyDownHandler(event);\n\n      if (event.keyCode === Keys.Space) {\n        this._active = true;\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    keypress(event) {\n      this.keyPressHandler(event);\n    }\n    /**\n     * @hidden\n     */\n\n\n    keyup(event) {\n      this.keyUpHandler(event);\n      this._active = false;\n    }\n    /**\n     * @hidden\n     */\n\n\n    mousedown(event) {\n      if (this._disabled) {\n        event.preventDefault();\n      }\n\n      this._active = true;\n    }\n    /**\n     * @hidden\n     */\n\n\n    mouseup(event) {\n      if (this._disabled) {\n        event.preventDefault();\n      }\n\n      this._active = false;\n    }\n    /**\n     * @hidden\n     */\n\n\n    openPopup() {\n      this.togglePopupVisibility();\n    }\n    /**\n     * @hidden\n     */\n\n\n    onButtonBlur() {\n      if (!this.isOpen) {\n        this.blurWrapper();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    get anchorAlign() {\n      let align = {\n        horizontal: this.popupSettings.align || 'left',\n        vertical: 'bottom'\n      };\n\n      if (this.direction === 'rtl' && !isPresent(this.popupSettings.align)) {\n        align.horizontal = 'right';\n      }\n\n      return align;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get popupAlign() {\n      let align = {\n        horizontal: this.popupSettings.align || 'left',\n        vertical: 'top'\n      };\n\n      if (this.direction === 'rtl' && !isPresent(this.popupSettings.align)) {\n        align.horizontal = 'right';\n      }\n\n      return align;\n    }\n    /**\n     * Focuses the DropDownButton component.\n     */\n\n\n    focus() {\n      if (isDocumentAvailable()) {\n        this.button.nativeElement.focus();\n      }\n    }\n    /**\n     * Blurs the DropDownButton component.\n     */\n\n\n    blur() {\n      if (isDocumentAvailable()) {\n        this.button.nativeElement.blur();\n        this.blurWrapper();\n      }\n    }\n\n    ngOnChanges(changes) {\n      if (isChanged(\"popupSettings\", changes) && isPresent(this.popupRef)) {\n        const popup = this.popupRef.popup.instance;\n        const newSettings = changes.popupSettings.currentValue;\n        popup.popupClass = newSettings.popupClass;\n        popup.animate = newSettings.animate;\n        popup.popupAlign = this.popupAlign;\n      }\n    }\n\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      this.destroyPopup();\n    }\n    /**\n     * Toggles the visibility of the popup.\n     * If the `toggle` method is used to open or close the popup, the `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n\n\n    toggle(open) {\n      if (this.disabled) {\n        return;\n      }\n\n      tick(() => this._toggle(open === undefined ? !this._open : open));\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n\n\n    get isOpen() {\n      return this.openState;\n    }\n    /**\n     * @hidden\n     */\n\n\n    handleFocus() {\n      if (!this._disabled && !this._isFocused) {\n        this._isFocused = true;\n        this.onFocus.emit();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    wrapperContains(element) {\n      return this.wrapper === element || this.wrapper.contains(element) || this.popupRef && this.popupRef.popupElement.contains(element);\n    }\n\n    subscribeNavigationEvents() {\n      this.navigationSubscription = this.navigationService.navigate.subscribe(this.onArrowKeyNavigate.bind(this));\n      this.enterUpSubscription = this.navigationService.enterup.subscribe(this.onNavigationEnterUp.bind(this));\n      this.openSubscription = this.navigationService.open.subscribe(this.onNavigationOpen.bind(this));\n      this.closeSubscription = merge(this.navigationService.close, this.navigationService.esc).subscribe(this.onNavigationClose.bind(this));\n    }\n\n    onNavigationEnterUp() {\n      if (!this._disabled && !this.openState) {\n        this._active = false;\n      }\n\n      if (this.openState) {\n        let focused = this.focusService.focused;\n\n        if (isPresent(focused) && focused !== -1) {\n          this.emitItemClickHandler(focused);\n        }\n      }\n\n      this.togglePopupVisibility();\n\n      if (!this.openState && isDocumentAvailable()) {\n        this.button.nativeElement.focus();\n      }\n    }\n\n    onNavigationOpen() {\n      if (!this._disabled && !this.openState) {\n        this.togglePopupVisibility();\n      }\n    }\n\n    onNavigationClose() {\n      if (this.openState) {\n        this.togglePopupVisibility();\n\n        if (isDocumentAvailable()) {\n          this.button.nativeElement.focus();\n        }\n      }\n    }\n\n    onArrowKeyNavigate(index) {\n      this.focusService.focus(index);\n    }\n\n    _toggle(open) {\n      if (this._open === open) {\n        return;\n      }\n\n      this._open = open;\n      this.destroyPopup();\n\n      if (this._open) {\n        this.createPopup();\n      }\n    }\n\n    createPopup() {\n      this.popupRef = this.popupService.open({\n        anchor: this.elRef,\n        anchorAlign: this.anchorAlign,\n        animate: this.popupSettings.animate,\n        appendTo: this.appendTo,\n        content: this.popupTemplate,\n        popupAlign: this.popupAlign,\n        popupClass: this.popupClasses\n      });\n      this.popupRef.popupAnchorViewportLeave.subscribe(() => this.openState = false);\n      this.popupRef.popupOpen.subscribe(this.focusFirstItem.bind(this));\n    }\n\n    destroyPopup() {\n      if (this.popupRef) {\n        this.popupRef.close();\n        this.popupRef = null;\n      }\n    }\n\n  };\n\n  DropDownButtonComponent.ɵfac = function DropDownButtonComponent_Factory(t) {\n    return new (t || DropDownButtonComponent)(ɵngcc0.ɵɵdirectiveInject(FocusService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.PopupService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  DropDownButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DropDownButtonComponent,\n    selectors: [[\"kendo-dropdownbutton\"]],\n    contentQueries: function DropDownButtonComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, ButtonItemTemplateDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);\n      }\n    },\n    viewQuery: function DropDownButtonComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c4, 7);\n        ɵngcc0.ɵɵviewQuery(_c9, 5);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 7, ViewContainerRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.button = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.buttonList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      }\n    },\n    hostVars: 9,\n    hostBindings: function DropDownButtonComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function DropDownButtonComponent_keydown_HostBindingHandler($event) {\n          return ctx.keydown($event);\n        })(\"keypress\", function DropDownButtonComponent_keypress_HostBindingHandler($event) {\n          return ctx.keypress($event);\n        })(\"keyup\", function DropDownButtonComponent_keyup_HostBindingHandler($event) {\n          return ctx.keyup($event);\n        })(\"mousedown\", function DropDownButtonComponent_mousedown_HostBindingHandler($event) {\n          return ctx.mousedown($event);\n        })(\"mouseup\", function DropDownButtonComponent_mouseup_HostBindingHandler($event) {\n          return ctx.mouseup($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx.dir);\n        ɵngcc0.ɵɵclassProp(\"k-state-focused\", ctx.focused)(\"k-flat\", ctx.isFlat)(\"k-outline\", ctx.isOutline)(\"k-dropdown-button\", ctx.widgetClasses);\n      }\n    },\n    inputs: {\n      icon: \"icon\",\n      iconClass: \"iconClass\",\n      imageUrl: \"imageUrl\",\n      primary: \"primary\",\n      look: \"look\",\n      tabIndex: \"tabIndex\",\n      popupSettings: \"popupSettings\",\n      disabled: \"disabled\",\n      data: \"data\",\n      textField: \"textField\",\n      buttonClass: \"buttonClass\"\n    },\n    outputs: {\n      itemClick: \"itemClick\",\n      open: \"open\",\n      close: \"close\",\n      onFocus: \"focus\",\n      onBlur: \"blur\"\n    },\n    exportAs: [\"kendoDropDownButton\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([FocusService, NavigationService, NAVIGATION_SETTINGS_PROVIDER$1, LocalizationService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.dropdownbutton'\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c8,\n    decls: 7,\n    vars: 14,\n    consts: [[\"kendoButton\", \"\", \"role\", \"menu\", \"type\", \"button\", 3, \"tabindex\", \"disabled\", \"icon\", \"iconClass\", \"imageUrl\", \"ngClass\", \"look\", \"primary\", \"click\", \"focus\", \"blur\"], [\"button\", \"\"], [\"popupTemplate\", \"\"], [\"container\", \"\"], [3, \"id\", \"data\", \"textField\", \"itemTemplate\", \"onItemClick\", \"keydown\", \"keypress\", \"keyup\"], [\"buttonList\", \"\"]],\n    template: function DropDownButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function DropDownButtonComponent_Template_button_click_0_listener() {\n          return ctx.openPopup();\n        })(\"focus\", function DropDownButtonComponent_Template_button_focus_0_listener() {\n          return ctx.handleFocus();\n        })(\"blur\", function DropDownButtonComponent_Template_button_blur_0_listener() {\n          return ctx.onButtonBlur();\n        });\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, DropDownButtonComponent_ng_template_3_Template, 2, 5, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelementContainer(5, null, 3);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-state-active\", ctx.active);\n        ɵngcc0.ɵɵproperty(\"tabindex\", ctx.componentTabIndex)(\"disabled\", ctx.disabled)(\"icon\", ctx.icon)(\"iconClass\", ctx.iconClass)(\"imageUrl\", ctx.imageUrl)(\"ngClass\", ctx.buttonClass)(\"look\", ctx.look)(\"primary\", ctx.primary);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-expanded\", ctx.openState)(\"aria-haspopup\", true)(\"aria-owns\", ctx.listId);\n      }\n    },\n    directives: [ButtonDirective, ɵngcc2.NgClass, ListComponent],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DropDownButtonComponent.prototype, \"icon\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DropDownButtonComponent.prototype, \"iconClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DropDownButtonComponent.prototype, \"imageUrl\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DropDownButtonComponent.prototype, \"popupSettings\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DropDownButtonComponent.prototype, \"textField\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DropDownButtonComponent.prototype, \"disabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DropDownButtonComponent.prototype, \"data\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], DropDownButtonComponent.prototype, \"primary\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], DropDownButtonComponent.prototype, \"look\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DropDownButtonComponent.prototype, \"buttonClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], DropDownButtonComponent.prototype, \"tabIndex\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DropDownButtonComponent.prototype, \"itemClick\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DropDownButtonComponent.prototype, \"open\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DropDownButtonComponent.prototype, \"close\", void 0);\n\n  __decorate([Output('focus'), __metadata(\"design:type\", EventEmitter)], DropDownButtonComponent.prototype, \"onFocus\", void 0);\n\n  __decorate([Output('blur'), __metadata(\"design:type\", EventEmitter)], DropDownButtonComponent.prototype, \"onBlur\", void 0);\n\n  __decorate([HostBinding('class.k-state-focused'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], DropDownButtonComponent.prototype, \"focused\", null);\n\n  __decorate([HostBinding('class.k-flat'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], DropDownButtonComponent.prototype, \"isFlat\", null);\n\n  __decorate([HostBinding('class.k-outline'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], DropDownButtonComponent.prototype, \"isOutline\", null);\n\n  __decorate([HostBinding('class.k-dropdown-button'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], DropDownButtonComponent.prototype, \"widgetClasses\", null);\n\n  __decorate([HostBinding('attr.dir'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], DropDownButtonComponent.prototype, \"dir\", null);\n\n  __decorate([ContentChild(ButtonItemTemplateDirective, {\n    static: false\n  }), __metadata(\"design:type\", ButtonItemTemplateDirective)], DropDownButtonComponent.prototype, \"itemTemplate\", void 0);\n\n  __decorate([ViewChild('button', {\n    static: true\n  }), __metadata(\"design:type\", ElementRef)], DropDownButtonComponent.prototype, \"button\", void 0);\n\n  __decorate([ViewChild('buttonList', {\n    static: false\n  }), __metadata(\"design:type\", ListComponent)], DropDownButtonComponent.prototype, \"buttonList\", void 0);\n\n  __decorate([ViewChild('popupTemplate', {\n    static: true\n  }), __metadata(\"design:type\", TemplateRef)], DropDownButtonComponent.prototype, \"popupTemplate\", void 0);\n\n  __decorate([ViewChild('container', {\n    read: ViewContainerRef,\n    static: true\n  }), __metadata(\"design:type\", ViewContainerRef)], DropDownButtonComponent.prototype, \"container\", void 0);\n\n  __decorate([HostListener('keydown', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], DropDownButtonComponent.prototype, \"keydown\", null);\n\n  __decorate([HostListener('keypress', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], DropDownButtonComponent.prototype, \"keypress\", null);\n\n  __decorate([HostListener('keyup', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], DropDownButtonComponent.prototype, \"keyup\", null);\n\n  __decorate([HostListener('mousedown', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], DropDownButtonComponent.prototype, \"mousedown\", null);\n\n  __decorate([HostListener('mouseup', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], DropDownButtonComponent.prototype, \"mouseup\", null);\n\n  DropDownButtonComponent = __decorate([__metadata(\"design:paramtypes\", [FocusService, NavigationService, ElementRef, NgZone, PopupService, ElementRef, LocalizationService, ChangeDetectorRef])], DropDownButtonComponent);\n  /**\n   * @hidden\n   *\n   * The exported package module.\n   *\n   * The package exports:\n   * - `DropDownButtonComponent`&mdash;The DropDownButtonComponent component class.\n   */\n\n  return DropDownButtonComponent;\n})();\nlet DropDownButtonModule = /*#__PURE__*/(() => {\n  let DropDownButtonModule = class DropDownButtonModule {};\n\n  DropDownButtonModule.ɵfac = function DropDownButtonModule_Factory(t) {\n    return new (t || DropDownButtonModule)();\n  };\n\n  DropDownButtonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DropDownButtonModule\n  });\n  DropDownButtonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, PopupModule, ListModule, ButtonModule], ListModule]\n  });\n  /**\n   * Displays a Chip that represents an input, attribute or an action.\n   */\n\n  return DropDownButtonModule;\n})();\nlet ChipComponent = /*#__PURE__*/(() => {\n  let ChipComponent = class ChipComponent {\n    constructor(element, renderer, ngZone, localizationService) {\n      this.element = element;\n      this.renderer = renderer;\n      this.ngZone = ngZone;\n      this.localizationService = localizationService;\n      /**\n       * Changes the visual appearance by using alternative styling options.\n       *\n       * The available values are:\n       * * `filled`\n       * * `outlined`\n       */\n\n      this.look = 'filled';\n      /**\n       * Specifies the selected state of the Chip.\n       */\n\n      this.selected = false;\n      /**\n       * Specifies if the Chip will be removable or not.\n       * If the property is set to `true`, the Chip renders a remove icon.\n       */\n\n      this.removable = false;\n      /**\n       * Specifies the Chip type.\n       *\n       * The possible values are:\n       * - `none` (default)\n       * - `success`\n       * - `error`\n       * - `warning`\n       * - `info`\n       */\n\n      this.type = 'none';\n      /**\n       * If set to `true`, the Chip will be disabled.\n       */\n\n      this.disabled = false;\n      /**\n       * Fires each time the user clicks the remove icon of the Chip.\n       */\n\n      this.remove = new EventEmitter();\n      /**\n       * Fires each time the user clicks the content of the Chip.\n       */\n\n      this.contentClick = new EventEmitter();\n      this.tabIndex = 0;\n      this.hostClass = true;\n      this.focused = false;\n      validatePackage(packageMetadata);\n      this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n    }\n\n    get ariaChecked() {\n      return this.selected;\n    }\n\n    get outlineClass() {\n      return this.look === 'outlined';\n    }\n\n    get filledClass() {\n      return this.look === 'filled';\n    }\n\n    get hasIconClass() {\n      return this.icon || this.iconClass ? true : false;\n    }\n\n    get disabledClass() {\n      return this.disabled;\n    }\n\n    get selectedClass() {\n      return this.selected;\n    }\n\n    get focusedClass() {\n      return this.focused;\n    }\n\n    ngOnInit() {\n      this.dynamicRTLSubscription = this.localizationService.changes.subscribe(({\n        rtl\n      }) => this.direction = rtl ? 'rtl' : 'ltr');\n    }\n\n    ngOnDestroy() {\n      if (this.dynamicRTLSubscription) {\n        this.dynamicRTLSubscription.unsubscribe();\n      }\n\n      if (this.detachDomEvents) {\n        this.detachDomEvents();\n      }\n    }\n\n    ngAfterViewInit() {\n      const chip = this.element.nativeElement;\n      const typeClass = this.typeClass();\n\n      if (this.type !== 'none') {\n        this.renderer.addClass(chip, typeClass);\n      }\n\n      this.attachElementEventHandlers(chip);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get iconClasses() {\n      const classes = [];\n\n      if (this.iconClass) {\n        classes.push(`${this.iconClass}`);\n      }\n\n      if (this.icon) {\n        classes.push(`k-icon k-i-${this.icon}`);\n      }\n\n      return classes;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get selectedIconClasses() {\n      if (this.selectedIcon) {\n        return `${this.selectedIcon}`;\n      }\n\n      return `k-icon k-i-check`;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get removeIconClasses() {\n      if (this.removeIcon) {\n        return `${this.removeIcon}`;\n      }\n\n      return `k-icon k-i-close-circle`;\n    }\n    /**\n     * @hidden\n     */\n\n\n    typeClass() {\n      return {\n        'none': '',\n        'success': 'k-chip-success',\n        'warning': 'k-chip-warning',\n        'error': 'k-chip-error',\n        'info': 'k-chip-info'\n      }[this.type];\n    }\n    /**\n     * Focuses the Chip component.\n     */\n\n\n    focus() {\n      if (isDocumentAvailable()) {\n        this.element.nativeElement.focus();\n      }\n    }\n    /**\n     * Blurs the Chip component.\n     */\n\n\n    blur() {\n      if (isDocumentAvailable()) {\n        this.element.nativeElement.blur();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    onRemoveClick(e) {\n      if (this.removable) {\n        this.remove.emit({\n          sender: this,\n          originalEvent: e\n        });\n      }\n    }\n\n    attachElementEventHandlers(chip) {\n      this.ngZone.runOutsideAngular(() => {\n        const focusListener = this.renderer.listen(chip, 'focus', () => {\n          this.renderer.addClass(chip, 'k-chip-focused');\n        });\n        const blurListener = this.renderer.listen(chip, 'blur', () => {\n          this.renderer.removeClass(chip, 'k-chip-focused');\n        });\n        const contentClickListener = this.renderer.listen(chip, 'click', e => {\n          const isRemoveClicked = closest(e.target, '.k-remove-icon');\n\n          if (!isRemoveClicked) {\n            this.ngZone.run(() => {\n              this.contentClick.emit({\n                sender: this,\n                originalEvent: e\n              });\n            });\n          }\n        });\n\n        this.detachDomEvents = () => {\n          focusListener();\n          blurListener();\n          contentClickListener();\n        };\n      });\n    }\n\n  };\n\n  ChipComponent.ɵfac = function ChipComponent_Factory(t) {\n    return new (t || ChipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  ChipComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ChipComponent,\n    selectors: [[\"kendo-chip\"]],\n    hostVars: 18,\n    hostBindings: function ChipComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.tabIndex)(\"dir\", ctx.direction)(\"aria-checked\", ctx.ariaChecked)(\"aria-disabled\", ctx.disabledClass);\n        ɵngcc0.ɵɵclassProp(\"k-chip\", ctx.hostClass)(\"k-chip-outline\", ctx.outlineClass)(\"k-chip-filled\", ctx.filledClass)(\"k-chip-has-icon\", ctx.hasIconClass)(\"k-chip-disabled\", ctx.disabledClass)(\"k-chip-selected\", ctx.selectedClass)(\"k-chip-focused\", ctx.focusedClass);\n      }\n    },\n    inputs: {\n      look: \"look\",\n      selected: \"selected\",\n      removable: \"removable\",\n      type: \"type\",\n      disabled: \"disabled\",\n      label: \"label\",\n      icon: \"icon\",\n      iconClass: \"iconClass\",\n      selectedIcon: \"selectedIcon\",\n      removeIcon: \"removeIcon\"\n    },\n    outputs: {\n      remove: \"remove\",\n      contentClick: \"contentClick\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([LocalizationService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.chip'\n    }])],\n    ngContentSelectors: _c8,\n    decls: 7,\n    vars: 5,\n    consts: [[1, \"k-selected-icon-wrapper\"], [\"class\", \"k-selected-icon\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"k-chip-icon\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"k-chip-content\"], [\"class\", \"k-chip-label\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"k-remove-icon\", 3, \"click\", 4, \"ngIf\"], [1, \"k-selected-icon\", 3, \"ngClass\"], [1, \"k-chip-icon\", 3, \"ngClass\"], [1, \"k-chip-label\"], [1, \"k-remove-icon\", 3, \"click\"], [3, \"ngClass\"]],\n    template: function ChipComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵtemplate(1, ChipComponent_span_1_Template, 1, 1, \"span\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, ChipComponent_span_2_Template, 1, 1, \"span\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(4, ChipComponent_span_4_Template, 2, 1, \"span\", 4);\n        ɵngcc0.ɵɵtemplate(5, ChipComponent_ng_content_5_Template, 1, 0, \"ng-content\", 5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, ChipComponent_span_6_Template, 2, 1, \"span\", 6);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.icon || ctx.iconClass);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.label);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.label);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.removable);\n      }\n    },\n    directives: [ɵngcc2.NgIf, ɵngcc2.NgClass],\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ChipComponent.prototype, \"look\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ChipComponent.prototype, \"label\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ChipComponent.prototype, \"icon\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ChipComponent.prototype, \"iconClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ChipComponent.prototype, \"selected\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ChipComponent.prototype, \"selectedIcon\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ChipComponent.prototype, \"removable\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ChipComponent.prototype, \"removeIcon\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ChipComponent.prototype, \"type\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], ChipComponent.prototype, \"disabled\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ChipComponent.prototype, \"remove\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ChipComponent.prototype, \"contentClick\", void 0);\n\n  __decorate([HostBinding('attr.tabindex'), __metadata(\"design:type\", Number)], ChipComponent.prototype, \"tabIndex\", void 0);\n\n  __decorate([HostBinding('attr.aria-checked'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ChipComponent.prototype, \"ariaChecked\", null);\n\n  __decorate([HostBinding('class.k-chip'), __metadata(\"design:type\", Boolean)], ChipComponent.prototype, \"hostClass\", void 0);\n\n  __decorate([HostBinding('class.k-chip-outline'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ChipComponent.prototype, \"outlineClass\", null);\n\n  __decorate([HostBinding('class.k-chip-filled'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ChipComponent.prototype, \"filledClass\", null);\n\n  __decorate([HostBinding('class.k-chip-has-icon'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ChipComponent.prototype, \"hasIconClass\", null);\n\n  __decorate([HostBinding('attr.aria-disabled'), HostBinding('class.k-chip-disabled'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ChipComponent.prototype, \"disabledClass\", null);\n\n  __decorate([HostBinding('class.k-chip-selected'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ChipComponent.prototype, \"selectedClass\", null);\n\n  __decorate([HostBinding('class.k-chip-focused'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ChipComponent.prototype, \"focusedClass\", null);\n\n  __decorate([HostBinding('attr.dir'), __metadata(\"design:type\", String)], ChipComponent.prototype, \"direction\", void 0);\n\n  ChipComponent = __decorate([__metadata(\"design:paramtypes\", [ElementRef, Renderer2, NgZone, LocalizationService])], ChipComponent);\n  return ChipComponent;\n})();\nlet ChipListComponent = /*#__PURE__*/(() => {\n  let ChipListComponent = class ChipListComponent {\n    constructor(localizationService, renderer) {\n      this.localizationService = localizationService;\n      this.renderer = renderer;\n      this.hostClass = true;\n      /**\n       * Sets the selection mode of the ChipList.\n       *\n       * The available values are:\n       * * `none` (default)\n       * * `single`\n       * * `multiple`\n       */\n\n      this.selection = 'none';\n      /**\n       * Fires each time when the ChipList selection is changed.\n       */\n\n      this.selectedChange = new EventEmitter();\n      /**\n       * Fires each time the user clicks on the remove icon of the Chip.\n       */\n\n      this.remove = new EventEmitter();\n      this.role = 'listbox';\n      this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n    }\n\n    get single() {\n      return this.selection === 'single';\n    }\n\n    get multiple() {\n      return this.selection === 'multiple';\n    }\n    /**\n     * @hidden\n     */\n\n\n    onClick($event) {\n      const target = $event.target;\n      const isRemoveClicked = closest(target, '.k-remove-icon');\n      const clickedChip = closest(target, '.k-chip');\n      const chip = this.chips.find(chip => clickedChip === chip.element.nativeElement);\n\n      if (isRemoveClicked && clickedChip) {\n        const removeEventArgs = {\n          sender: this,\n          originalEvent: $event,\n          removedChip: chip\n        };\n        this.remove.emit(removeEventArgs);\n      }\n\n      if (this.selection !== 'none' && clickedChip && !isRemoveClicked) {\n        this.setSelection(chip);\n      }\n    }\n\n    ngOnInit() {\n      this.dynamicRTLSubscription = this.localizationService.changes.subscribe(({\n        rtl\n      }) => this.direction = rtl ? 'rtl' : 'ltr');\n    }\n\n    ngAfterContentInit() {\n      this.chips.forEach(chip => {\n        this.renderer.setAttribute(chip.element.nativeElement, 'role', 'option');\n      });\n    }\n\n    ngOnDestroy() {\n      if (this.dynamicRTLSubscription) {\n        this.dynamicRTLSubscription.unsubscribe();\n      }\n    }\n\n    selectedChips() {\n      return this.chips.reduce((acc, cur, idx) => {\n        return cur.selected ? acc.concat(idx) : acc;\n      }, []);\n    }\n    /**\n     * Updates the selection on click of a Chip. Emits events.\n     */\n\n\n    setSelection(chip) {\n      if (this.selection === 'single') {\n        this.clearSelection(chip);\n      }\n\n      chip.selected = !chip.selected;\n      this.selectedChange.emit(this.selectedChips());\n    }\n\n    clearSelection(chip) {\n      this.chips.forEach(c => {\n        if (chip !== c) {\n          c.selected = false;\n        }\n      });\n    }\n\n  };\n\n  ChipListComponent.ɵfac = function ChipListComponent_Factory(t) {\n    return new (t || ChipListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  ChipListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ChipListComponent,\n    selectors: [[\"kendo-chip-list\"], [\"kendo-chiplist\"]],\n    contentQueries: function ChipListComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, ChipComponent, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n      }\n    },\n    hostVars: 8,\n    hostBindings: function ChipListComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ChipListComponent_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"dir\", ctx.direction);\n        ɵngcc0.ɵɵclassProp(\"k-chip-list\", ctx.hostClass)(\"k-selection-single\", ctx.single)(\"k-selection-multiple\", ctx.multiple);\n      }\n    },\n    inputs: {\n      selection: \"selection\"\n    },\n    outputs: {\n      selectedChange: \"selectedChange\",\n      remove: \"remove\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([LocalizationService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.chip-list'\n    }])],\n    ngContentSelectors: _c8,\n    decls: 1,\n    vars: 0,\n    template: function ChipListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-chip-list'), __metadata(\"design:type\", Boolean)], ChipListComponent.prototype, \"hostClass\", void 0);\n\n  __decorate([HostBinding('attr.dir'), __metadata(\"design:type\", String)], ChipListComponent.prototype, \"direction\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ChipListComponent.prototype, \"selection\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ChipListComponent.prototype, \"selectedChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], ChipListComponent.prototype, \"remove\", void 0);\n\n  __decorate([ContentChildren(ChipComponent), __metadata(\"design:type\", QueryList)], ChipListComponent.prototype, \"chips\", void 0);\n\n  __decorate([HostBinding('class.k-selection-single'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ChipListComponent.prototype, \"single\", null);\n\n  __decorate([HostBinding('class.k-selection-multiple'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], ChipListComponent.prototype, \"multiple\", null);\n\n  __decorate([HostBinding('attr.role'), __metadata(\"design:type\", String)], ChipListComponent.prototype, \"role\", void 0);\n\n  __decorate([HostListener('click', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], ChipListComponent.prototype, \"onClick\", null);\n\n  ChipListComponent = __decorate([__metadata(\"design:paramtypes\", [LocalizationService, Renderer2])], ChipListComponent);\n  return ChipListComponent;\n})();\nconst exportedModules = [ChipComponent, ChipListComponent];\nconst declarations = [...exportedModules];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Chip and ChipList components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Chip module\n * import { ChipModule } from '@progress/kendo-angular-buttons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, ChipModule], // import Chip module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * ```\n */\n\nlet ChipModule = /*#__PURE__*/(() => {\n  let ChipModule = class ChipModule {};\n\n  ChipModule.ɵfac = function ChipModule_Factory(t) {\n    return new (t || ChipModule)();\n  };\n\n  ChipModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ChipModule\n  });\n  ChipModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  /**\n   * @hidden\n   */\n\n  return ChipModule;\n})();\n\nfunction getAnchorAlign(fabAlign, rtl) {\n  let align = {\n    horizontal: rtl ? 'right' : 'left',\n    vertical: 'bottom'\n  };\n\n  if (fabAlign.horizontal === 'end') {\n    align.horizontal = rtl ? 'left' : 'right';\n  }\n\n  if (fabAlign.vertical === 'bottom') {\n    align.vertical = 'top';\n  }\n\n  if (fabAlign.vertical === 'bottom' && fabAlign.horizontal === 'end') {\n    align.horizontal = rtl ? 'left' : 'right';\n    align.vertical = 'top';\n  }\n\n  return align;\n}\n/**\n * @hidden\n */\n\n\nfunction getPopupAlign(fabAlign, rtl) {\n  let align = {\n    horizontal: rtl ? 'right' : 'left',\n    vertical: 'top'\n  };\n\n  if (fabAlign.horizontal === 'end') {\n    align.horizontal = rtl ? 'left' : 'right';\n  }\n\n  if (fabAlign.vertical === 'bottom') {\n    align.vertical = 'bottom';\n  }\n\n  if (fabAlign.vertical === 'bottom' && fabAlign.horizontal === 'end') {\n    align.horizontal = rtl ? 'left' : 'right';\n    align.vertical = 'bottom';\n  }\n\n  return align;\n}\n/**\n * @hidden\n */\n\n\nfunction openAnimation(animationSettings) {\n  const isBottom = animationSettings.align.vertical === 'bottom';\n  const duration = animationSettings.duration;\n  const gap = animationSettings.gap;\n  return sequence([query(`.k-fab-item`, [style({\n    opacity: 0,\n    transform: `translateY(${isBottom ? '8px' : '-8px'})`\n  }), stagger(gap, [animate(`${duration}ms ease-in`, style({\n    opacity: '*',\n    transform: 'translateY(0)'\n  }))])], {\n    optional: true\n  })]);\n}\n/**\n * @hidden\n */\n\n\nfunction closeAnimation(animationSettings) {\n  const isBottom = animationSettings.align.vertical === 'bottom';\n  const duration = animationSettings.duration;\n  const gap = animationSettings.gap;\n  return sequence([query(`.k-fab-item`, [style({\n    opacity: '*',\n    transform: 'translateY(0)'\n  }), stagger(-gap, [animate(`${duration}ms ease-in`, style({\n    opacity: 0,\n    transform: `translateY(${isBottom ? '8px' : '-8px'})`\n  }))])], {\n    optional: true\n  })]);\n}\n/**\n * Represents a template that defines the content of the whole dial item.\n * To define the template, nest an `<ng-template>` tag\n * with the `kendoDialItemTemplate` directive inside the `<kendo-floatingactionbutton>` tag\n * ([see example]({% slug templates_floatingactionbutton %}#toc-dial-item-template)).\n */\n\n\nlet DialItemTemplateDirective = /*#__PURE__*/(() => {\n  let DialItemTemplateDirective = class DialItemTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  DialItemTemplateDirective.ɵfac = function DialItemTemplateDirective_Factory(t) {\n    return new (t || DialItemTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  DialItemTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: DialItemTemplateDirective,\n    selectors: [[\"\", \"kendoDialItemTemplate\", \"\"]]\n  });\n  DialItemTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], DialItemTemplateDirective);\n  /**\n   * Represents a template that defines the content of the FloatingActionButton.\n   * To define the template, nest an `<ng-template>` tag\n   * with the `kendoFloatingActionButtonTemplate` directive inside the `<kendo-floatingactionbutton>` tag\n   * ([see example]({% slug templates_floatingactionbutton %}#toc-floatingactionbutton-template)).\n   */\n\n  return DialItemTemplateDirective;\n})();\nlet FloatingActionButtonTemplateDirective = /*#__PURE__*/(() => {\n  let FloatingActionButtonTemplateDirective = class FloatingActionButtonTemplateDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n\n  };\n\n  FloatingActionButtonTemplateDirective.ɵfac = function FloatingActionButtonTemplateDirective_Factory(t) {\n    return new (t || FloatingActionButtonTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8));\n  };\n\n  FloatingActionButtonTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FloatingActionButtonTemplateDirective,\n    selectors: [[\"\", \"kendoFloatingActionButtonTemplate\", \"\"]]\n  });\n  FloatingActionButtonTemplateDirective = __decorate([__param(0, Optional()), __metadata(\"design:paramtypes\", [TemplateRef])], FloatingActionButtonTemplateDirective);\n  return FloatingActionButtonTemplateDirective;\n})();\nconst NAVIGATION_SETTINGS$2 = {\n  useLeftRightArrows: false\n};\nconst ɵ0$2 = NAVIGATION_SETTINGS$2;\nconst NAVIGATION_SETTINGS_PROVIDER$2 = {\n  provide: NAVIGATION_CONFIG,\n  useValue: ɵ0$2\n};\nconst SIZE_CLASSES = {\n  small: 'k-fab-sm',\n  medium: 'k-fab-md',\n  large: 'k-fab-lg'\n};\nconst SHAPE_CLASSES = {\n  pill: 'k-fab-pill',\n  circle: 'k-fab-circle',\n  rectangle: 'k-fab-rectangle',\n  square: 'k-fab-square',\n  rounded: 'k-fab-rounded'\n};\nconst DEFAULT_DURATION = 180;\nconst DEFAULT_ITEM_GAP = 90;\nconst DEFAULT_OFFSET = '16px';\n/**\n *\n * Represents the [Kendo UI FloatingActionButton component for Angular]({% slug overview_floatingactionbutton %}).\n * Used to specify the primary or the most common action in an application.\n *\n */\n\nlet FloatingActionButtonComponent = /*#__PURE__*/(() => {\n  let FloatingActionButtonComponent = class FloatingActionButtonComponent {\n    constructor(renderer, element, focusService, navigationService, ngZone, popupService, builder, localizationService) {\n      this.renderer = renderer;\n      this.element = element;\n      this.focusService = focusService;\n      this.navigationService = navigationService;\n      this.ngZone = ngZone;\n      this.popupService = popupService;\n      this.builder = builder;\n      this.localizationService = localizationService;\n      /**\n       * Specifies the positionMode of the FloatingActionButton\n       * ([see example]({% slug positioning_floatingactionbutton %}#toc-positionMode)).\n       *\n       * * The possible values are:\n       * * `absolute`&mdash;Positions the FloatingActionButton absolutely to its first positioned parent element.\n       * * `fixed` (Default)&mdash;Positions the FloatingActionButton relative to the viewport. It always stays in the same place even if the page is scrolled.\n       */\n\n      this.positionMode = 'fixed';\n      /**\n       * Specifies the animation settings of the FloatingActionButton dial items.\n       * ([see example]({% slug dialitems_floatingactionbutton %}#toc-animation)).\n       *\n       * The possible values are:\n       * * Boolean\n       *    * (Default) `true`&mdash;Applies the default [`DialItemAnimation`]({% slug api_buttons_dialitemanimation %}) settings.\n       *    * `false`\n       * * `DialItemAnimation`\n       *    * `duration`&mdash;Specifies the animation duration in milliseconds for each dial item. Defaults to `180ms`.\n       *    * `gap`&mdash;Specifies the animation duration gap in milliseconds after each dial item is animated. Defaults to `90ms`.\n       */\n\n      this.dialItemAnimation = true;\n      /**\n       * Specifies the [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the FloatingActionButton.\n       */\n\n      this.tabIndex = 0;\n      /**\n       * Specifies the collection of the dial items that will be rendered in the FloatingActionButton popup.\n       */\n\n      this.dialItems = [];\n      /**\n       * Fires each time the FloatingActionButton gets blurred.\n       */\n\n      this.onBlur = new EventEmitter();\n      /**\n       * Fires each time the FloatingActionButton gets focused.\n       */\n\n      this.onFocus = new EventEmitter();\n      /**\n       * Fires each time a dial item is clicked.\n       */\n\n      this.dialItemClick = new EventEmitter();\n      /**\n       * Fires each time the popup is about to open.\n       * This event is preventable. If you cancel the event, the popup will remain closed\n       * ([more information and example]({% slug overview_floatingactionbutton %}#toc-events)).\n       */\n\n      this.open = new EventEmitter();\n      /**\n       * Fires each time the popup is about to close.\n       * This event is preventable. If you cancel the event, the popup will remain open\n       * ([more information and example]({% slug overview_floatingactionbutton %}#toc-events)).\n       */\n\n      this.close = new EventEmitter();\n      /**\n       * @hidden\n       */\n\n      this.id = `k-${guid()}`;\n      this._themeColor = 'primary';\n      this._size = 'medium';\n      this._shape = 'pill';\n      this._disabled = false;\n      this._align = {\n        horizontal: 'end',\n        vertical: 'bottom'\n      };\n      this._offset = {\n        x: DEFAULT_OFFSET,\n        y: DEFAULT_OFFSET\n      };\n      this.subscriptions = new Subscription();\n      this.rtl = false;\n      this.animationEnd = new EventEmitter();\n      validatePackage(packageMetadata);\n      this.subscribeNavigationEvents();\n      this.subscriptions.add(this.localizationService.changes.subscribe(({\n        rtl\n      }) => {\n        this.rtl = rtl;\n        this.direction = this.rtl ? 'rtl' : 'ltr';\n      }));\n    }\n\n    get fixedClass() {\n      return this.positionMode === 'fixed';\n    }\n\n    get absoluteClass() {\n      return this.positionMode === 'absolute';\n    }\n    /**\n     * Specifies the theme color of the FloatingActionButton\n     * ([see example]({% slug appearance_floatingactionbutton %}#toc-themeColor)).\n     * The theme color will be applied as background color of the component.\n     *\n     * The possible values are:\n     * * `primary` (Default)&mdash;Applies coloring based on the `primary` theme color.\n     * * `secondary`&mdash;Applies coloring based on the `secondary` theme color.\n     * * `tertiary`&mdash; Applies coloring based on the `tertiary` theme color.\n     * * `inherit`&mdash; Applies inherited coloring value.\n     * * `info`&mdash;Applies coloring based on the `info` theme color.\n     * * `success`&mdash; Applies coloring based on the `success` theme color.\n     * * `warning`&mdash; Applies coloring based on the `warning` theme color.\n     * * `error`&mdash; Applies coloring based on the `error` theme color.\n     * * `dark`&mdash; Applies coloring based on the `dark` theme color.\n     * * `light`&mdash; Applies coloring based on the `light` theme color.\n     * * `inverse`&mdash; Applies coloring based on the `inverse` theme color.\n     *\n     */\n\n\n    set themeColor(themeColor) {\n      this.handleClasses(themeColor, 'themeColor');\n      this._themeColor = themeColor;\n    }\n\n    get themeColor() {\n      return this._themeColor;\n    }\n    /**\n     * Specifies the size of the FloatingActionButton\n     * ([see example]({% slug appearance_floatingactionbutton %}#toc-size)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (Default)\n     * * `large`\n     *\n     */\n\n\n    set size(size) {\n      this.handleClasses(size, 'size');\n      this._size = size;\n    }\n\n    get size() {\n      return this._size;\n    }\n    /**\n     * Specifies the shape of the FloatingActionButton\n     * ([see example]({% slug appearance_floatingactionbutton %}#toc-shape)).\n     *\n     * The possible values are:\n     * * `pill` (Default)&mdash;Applies border radius equal to half of the height of the FloatingActionButton.\n     * * `circle`&mdash;Applies circle shape on the FloatingActionButton.\n     * * `rectangle`&mdash;Applies rectangular shape on the FloatingActionButton.\n     * * `rounded`&mdash;Applies rounded shape on the FloatingActionButton.\n     * * `square`&mdash;Applies square shape on the FloatingActionButton.\n     *\n     */\n\n\n    set shape(shape) {\n      this.handleClasses(shape, 'shape');\n      this._shape = shape;\n    }\n\n    get shape() {\n      return this._shape;\n    }\n    /**\n     * Specifies whether the FloatingActionButton is disabled.\n     */\n\n\n    set disabled(disabled) {\n      this._disabled = disabled;\n    }\n\n    get disabled() {\n      return this._disabled;\n    }\n    /**\n     * Specifies the horizontal and vertical alignment of the FloatingActionButton\n     * ([see example]({% slug positioning_floatingactionbutton %}#toc-align)).\n     *\n     * The possible values are:\n     * * `{ horizontal: 'start'|'center'|'end', vertical: 'top'|'middle'|'bottom' }`\n     *\n     * The default value is:\n     * * `{ horizontal: 'end', vertical: 'bottom' }`\n     *\n     */\n\n\n    set align(align) {\n      this._align = Object.assign(this._align, align);\n    }\n\n    get align() {\n      return this._align;\n    }\n    /**\n     * Specifies the horizontal and vertical offset position of the FloatingActionButton\n     * ([see example]({% slug positioning_floatingactionbutton %}#toc-offset)).\n     *\n     * * The default value is:\n     * * `{ x: '16px', y: '16px' }`\n     */\n\n\n    set offset(offset) {\n      this._offset = Object.assign(this._offset, offset);\n      this.offsetStyles();\n    }\n\n    get offset() {\n      return this._offset;\n    }\n    /**\n     * @hidden\n     */\n\n\n    get componentTabIndex() {\n      return this.disabled ? -1 : this.tabIndex;\n    }\n\n    ngAfterViewInit() {\n      this.applyClasses();\n      this.offsetStyles();\n    }\n\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n    /**\n     * Indicates whether the FloatingActionButton is currently open.\n     */\n\n\n    get isOpen() {\n      return isPresent(this.popupRef);\n    }\n    /**\n     * Focuses the FloatingActionButton.\n     */\n\n\n    focus() {\n      if (isDocumentAvailable()) {\n        this.button.nativeElement.focus();\n      }\n    }\n    /**\n     * Blurs the FloatingActionButton.\n     */\n\n\n    blur() {\n      if (isDocumentAvailable()) {\n        this.button.nativeElement.blur();\n      }\n    }\n    /**\n     * Toggles the visibility of the FloatingActionButton dial items popup.\n     *\n     * If you use the `toggleDial` method to open or close the dial items,\n     * the `open` and `close` events do not fire ([more information and examples]({% slug openstate_floatingactionbutton %}#toc-events)).\n     *\n     * @param open - The state of dial items popup.\n     */\n\n\n    toggleDial(open) {\n      if (this.disabled || !this.hasDialItems) {\n        return;\n      }\n\n      const shouldOpen = isPresent(open) ? open : !this.isOpen;\n\n      if (this.disabled || shouldOpen === this.isOpen) {\n        return;\n      }\n\n      shouldOpen ? setTimeout(() => this.openDial()) : this.closeDial();\n    }\n    /**\n     * @hidden\n     */\n\n\n    get role() {\n      return this.dialItems && this.dialItems.length ? 'menubutton' : 'button';\n    }\n    /**\n     * @hidden\n     */\n\n\n    get ariaExpanded() {\n      return isPresent(this.isOpen);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get ariaHasPopup() {\n      return isPresent(this.isOpen);\n    }\n    /**\n     * @hidden\n     */\n\n\n    get iconClasses() {\n      const classes = [];\n\n      if (this.iconClass) {\n        classes.push(`${this.iconClass}`);\n      }\n\n      if (this.icon) {\n        classes.push(`k-fab-icon k-icon k-i-${this.icon}`);\n      }\n\n      return classes;\n    }\n    /**\n     * @hidden\n     */\n\n\n    clickHandler() {\n      if (this.disabled || !this.hasDialItems) {\n        return;\n      }\n\n      this.ngZone.run(() => {\n        const shouldOpen = !this.isOpen;\n        this.toggleDialWithEvents(shouldOpen);\n      });\n    }\n    /**\n     * @hidden\n     */\n\n\n    keyDownHandler(event) {\n      this.keyHandler(event);\n    }\n    /**\n     * @hidden\n     */\n\n\n    keyHandler(event, keyEvent) {\n      if (this.disabled) {\n        return;\n      }\n\n      const focused = this.focusService.focused || 0;\n      const keyCode = event.keyCode;\n      const action = this.navigationService.process({\n        altKey: event.altKey,\n        current: focused,\n        keyCode,\n        keyEvent: keyEvent,\n        max: this.dialItems ? this.dialItems.length - 1 : 0,\n        min: 0,\n        flipNavigation: this.align.vertical === 'bottom'\n      });\n\n      if (action !== NavigationAction.Undefined && action !== NavigationAction.Tab) {\n        event.preventDefault();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    onItemClick(event) {\n      const item = closest(event.target, '.k-fab-item');\n\n      if (!item) {\n        return;\n      }\n\n      const index = item.getAttribute('data-fab-item-index');\n      this.emitItemClick(index);\n    }\n    /**\n     * @hidden\n     */\n\n\n    focusHandler() {\n      if (!this.disabled) {\n        this.onFocus.emit();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    blurHandler() {\n      this.onBlur.emit();\n      this.toggleDialWithEvents(false);\n    }\n\n    handleClasses(inputValue, input) {\n      if (isPresent(this.button) && this[input] !== inputValue) {\n        const button = this.button.nativeElement;\n        const classesToRemove = {\n          themeColor: `k-fab-${this.themeColor}`,\n          size: SIZE_CLASSES[this.size],\n          shape: SHAPE_CLASSES[this.shape]\n        };\n        const classesToAdd = {\n          themeColor: `k-fab-${inputValue}`,\n          size: SIZE_CLASSES[inputValue],\n          shape: SHAPE_CLASSES[inputValue]\n        };\n        this.renderer.removeClass(button, classesToRemove[input]);\n        this.renderer.addClass(button, classesToAdd[input]);\n      }\n    }\n\n    onEnterPressed() {\n      const index = this.focusService.focused;\n      this.emitItemClick(index);\n    }\n\n    emitItemClick(index) {\n      const item = this.dialItems[index];\n\n      if (item && !item.disabled) {\n        const clickEventArgs = {\n          item: item,\n          index: index\n        };\n        this.dialItemClick.emit(clickEventArgs);\n        this.toggleDialWithEvents(false);\n      }\n    }\n\n    subscribeNavigationEvents() {\n      this.subscriptions.add(this.navigationService.navigate.subscribe(this.onArrowKeyNavigate.bind(this)));\n      this.subscriptions.add(this.navigationService.enter.subscribe(this.onNavigationEnterPress.bind(this)));\n      this.subscriptions.add(merge(this.navigationService.close, this.navigationService.esc).subscribe(this.onNavigationClose.bind(this)));\n    }\n\n    onArrowKeyNavigate(index) {\n      this.focusService.focus(index);\n    }\n\n    onNavigationEnterPress() {\n      this.ngZone.run(() => {\n        if (this.isOpen) {\n          let focusedIndex = this.focusService.focused;\n          const focusedItem = this.dialItems[focusedIndex];\n\n          if (focusedItem && focusedItem.disabled) {\n            return;\n          }\n\n          if (isPresent(focusedIndex) && focusedIndex !== -1) {\n            this.onEnterPressed();\n            return;\n          }\n        }\n\n        if (!this.isOpen && isDocumentAvailable()) {\n          this.toggleDialWithEvents(true);\n          this.button.nativeElement.focus();\n        }\n      });\n    }\n\n    onNavigationClose() {\n      if (this.isOpen) {\n        this.ngZone.run(() => {\n          this.toggleDialWithEvents(false);\n\n          if (isDocumentAvailable()) {\n            this.button.nativeElement.focus();\n          }\n        });\n      }\n    }\n\n    alignClass() {\n      return `k-pos-${this.align.vertical}-${this.align.horizontal}`;\n    }\n\n    applyClasses() {\n      const hostElement = this.element.nativeElement;\n      const button = this.button.nativeElement;\n      this.renderer.addClass(button, SHAPE_CLASSES[this.shape]);\n      this.renderer.addClass(button, `k-fab-${this.themeColor}`);\n      this.renderer.addClass(button, SIZE_CLASSES[this.size]);\n      this.renderer.addClass(hostElement, this.alignClass());\n    }\n\n    toggleDialWithEvents(open) {\n      if (open === this.isOpen) {\n        return;\n      }\n\n      const event = new PreventableEvent();\n      open ? this.open.emit(event) : this.close.emit(event);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n\n      open ? this.openDial() : this.closeDial();\n    }\n\n    openPopup() {\n      if (this.isOpen) {\n        return;\n      }\n\n      const isIconFab = this.icon && !this.text;\n      const rtl = this.rtl;\n      const align = this.align;\n      this.popupRef = this.popupService.open({\n        anchor: this.element.nativeElement,\n        animate: false,\n        content: this.popupTemplate,\n        anchorAlign: getAnchorAlign(align, rtl),\n        popupAlign: getPopupAlign(align, rtl),\n        popupClass: 'k-fab-popup k-popup-transparent'\n      });\n      const popupElement = this.popupRef.popupElement;\n      this.renderer.setStyle(popupElement, 'box-shadow', 'none');\n\n      if (isIconFab) {\n        this.subscriptions.add(this.popupRef.popupOpen.subscribe(() => this.positionPopup()));\n      }\n\n      this.ngZone.runOutsideAngular(() => {\n        this.popupMouseDownListener = this.renderer.listen(popupElement, 'mousedown', event => {\n          event.preventDefault();\n        });\n      });\n      this.popupRef.popupAnchorViewportLeave.subscribe(() => this.toggleDialWithEvents(false));\n    }\n\n    closePopup() {\n      if (this.isOpen) {\n        if (this.popupMouseDownListener) {\n          this.popupMouseDownListener();\n        }\n\n        this.popupRef.close();\n        this.popupRef = null;\n      }\n    }\n\n    openDial() {\n      this.openPopup();\n      this.focusService.focus(0);\n\n      if (this.dialItemAnimation && this.isValidAnimation()) {\n        this.playAnimation(true);\n      }\n    }\n\n    closeDial() {\n      if (this.dialItemAnimation && this.isValidAnimation()) {\n        this.playAnimation(false);\n        this.animationEnd.pipe(take(1)).subscribe(() => this.closePopup());\n      } else {\n        this.closePopup();\n      }\n    }\n\n    isValidAnimation() {\n      const animation = this.dialItemAnimation;\n\n      if (typeof animation !== 'boolean') {\n        return animation.duration !== 0;\n      }\n\n      return true;\n    }\n\n    positionPopup() {\n      if (this.dialItemTemplate) {\n        return;\n      }\n\n      const fab = this.element.nativeElement;\n      const fabWidth = fab.getBoundingClientRect().width;\n      const popupEl = this.popupRef.popupElement;\n      const icon = popupEl.querySelector('.k-fab-item-icon');\n\n      if (!icon) {\n        return;\n      }\n\n      const iconWidth = icon.getBoundingClientRect().width;\n      const left = fabWidth / 2 - iconWidth / 2;\n      const popupLeft = popupEl.getBoundingClientRect().left;\n      const isEndAlign = this.align.horizontal === 'end';\n      const leftValue = isEndAlign ? popupLeft - left : left + popupLeft;\n      const rtlLeftValue = isEndAlign ? left + popupLeft : popupLeft - left;\n      popupEl.style.left = this.rtl ? `${rtlLeftValue}px` : `${leftValue}px`;\n    }\n\n    offsetStyles() {\n      const hostElement = this.element.nativeElement;\n      this.renderer.setStyle(hostElement, this.horizontalPosition, this.horizontalOffset);\n      this.renderer.setStyle(hostElement, this.verticalPosition, this.verticalOffset);\n    }\n\n    get hasDialItems() {\n      return isPresent(this.dialItems) && this.dialItems.length !== 0;\n    }\n    /**\n     * Gets the CSS prop name of the selected vertical position (`top`/`bottom`);\n     */\n\n\n    get verticalPosition() {\n      return {\n        top: 'top',\n        middle: 'top',\n        bottom: 'bottom'\n      }[this.align.vertical];\n    }\n    /**\n     * Gets the offset according to the selected vertical position.\n     */\n\n\n    get verticalOffset() {\n      if (this.align.vertical === 'middle') {\n        return this.offset.y === DEFAULT_OFFSET ? '50%' : `calc(50% + ${this.offset.y})`;\n      }\n\n      return this.offset.y;\n    }\n    /**\n     * Gets the CSS prop name of the selected horizontal position (`left`/`right`);\n     */\n\n\n    get horizontalPosition() {\n      const {\n        horizontal\n      } = this.align;\n      return {\n        end: this.rtl ? 'left' : 'right',\n        center: 'left',\n        start: this.rtl ? 'right' : 'left'\n      }[horizontal];\n    }\n    /**\n     * Gets the offset according to the selected horizontal position.\n     */\n\n\n    get horizontalOffset() {\n      if (this.align.horizontal === 'center') {\n        return this.offset.x === DEFAULT_OFFSET ? '50%' : `calc(50% + ${this.offset.x})`;\n      }\n\n      return this.offset.x;\n    }\n\n    playerFor(element, animation) {\n      const factory = this.builder.build(animation);\n      return factory.create(element);\n    }\n\n    playAnimation(open) {\n      const durationSettings = this.durationSettings();\n      const animationSettings = {\n        duration: durationSettings.duration,\n        gap: durationSettings.gap,\n        align: this.align\n      };\n      const animation = open ? openAnimation(animationSettings) : closeAnimation(animationSettings);\n      let player = this.playerFor(this.popupRef.popupElement, animation);\n      player.play();\n      player.onDone(() => {\n        if (player) {\n          this.animationEnd.emit();\n          player.destroy();\n          player = null;\n        }\n      });\n    }\n\n    durationSettings() {\n      return {\n        duration: this.animationDuration(),\n        gap: this.animationGap()\n      };\n    }\n\n    animationGap() {\n      const animation = this.dialItemAnimation;\n\n      if (typeof animation !== 'boolean' && isPresent(animation.gap)) {\n        return animation.gap;\n      }\n\n      return DEFAULT_ITEM_GAP;\n    }\n\n    animationDuration() {\n      const animation = this.dialItemAnimation;\n\n      if (typeof animation !== 'boolean' && isPresent(animation.duration)) {\n        return animation.duration;\n      }\n\n      return DEFAULT_DURATION;\n    }\n\n  };\n\n  FloatingActionButtonComponent.ɵfac = function FloatingActionButtonComponent_Factory(t) {\n    return new (t || FloatingActionButtonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.PopupService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AnimationBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  FloatingActionButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FloatingActionButtonComponent,\n    selectors: [[\"kendo-floatingactionbutton\"]],\n    contentQueries: function FloatingActionButtonComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DialItemTemplateDirective, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, FloatingActionButtonTemplateDirective, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dialItemTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fabTemplate = _t.first);\n      }\n    },\n    viewQuery: function FloatingActionButtonComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c4, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.button = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      }\n    },\n    hostVars: 5,\n    hostBindings: function FloatingActionButtonComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx.direction);\n        ɵngcc0.ɵɵclassProp(\"k-pos-fixed\", ctx.fixedClass)(\"k-pos-absolute\", ctx.absoluteClass);\n      }\n    },\n    inputs: {\n      positionMode: \"positionMode\",\n      dialItemAnimation: \"dialItemAnimation\",\n      tabIndex: \"tabIndex\",\n      dialItems: \"dialItems\",\n      themeColor: \"themeColor\",\n      size: \"size\",\n      shape: \"shape\",\n      disabled: \"disabled\",\n      align: \"align\",\n      offset: \"offset\",\n      icon: \"icon\",\n      iconClass: \"iconClass\",\n      buttonClass: \"buttonClass\",\n      dialClass: \"dialClass\",\n      text: \"text\"\n    },\n    outputs: {\n      onBlur: \"blur\",\n      onFocus: \"focus\",\n      dialItemClick: \"dialItemClick\",\n      open: \"open\",\n      close: \"close\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([FocusService, NavigationService, NAVIGATION_SETTINGS_PROVIDER$2, LocalizationService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.floatingactionbutton'\n    }])],\n    decls: 6,\n    vars: 19,\n    consts: [[\"type\", \"button\", 3, \"tabIndex\", \"ngClass\", \"disabled\", \"kendoEventsOutsideAngular\", \"scope\", \"focus\", \"blur\"], [\"button\", \"\"], [4, \"ngIf\"], [\"popupTemplate\", \"\"], [3, \"ngTemplateOutlet\"], [3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"k-fab-text\", 4, \"ngIf\"], [3, \"ngClass\"], [1, \"k-fab-text\"], [\"kendoDialList\", \"\", 3, \"ngClass\", \"dialItems\", \"dialItemTemplate\", \"align\", \"click\"]],\n    template: function FloatingActionButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"focus\", function FloatingActionButtonComponent_Template_button_focus_0_listener() {\n          return ctx.focusHandler();\n        })(\"blur\", function FloatingActionButtonComponent_Template_button_blur_0_listener() {\n          return ctx.blurHandler();\n        });\n        ɵngcc0.ɵɵtemplate(2, FloatingActionButtonComponent_2_Template, 1, 1, undefined, 2);\n        ɵngcc0.ɵɵtemplate(3, FloatingActionButtonComponent_ng_container_3_Template, 3, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, FloatingActionButtonComponent_ng_template_4_Template, 1, 5, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-fab\", true)(\"k-state-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵproperty(\"tabIndex\", ctx.componentTabIndex)(\"ngClass\", ctx.buttonClass)(\"disabled\", ctx.disabled)(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction2(16, _c10, ctx.keyDownHandler, ctx.clickHandler))(\"scope\", ctx);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"role\", ctx.role)(\"aria-disabled\", ctx.disabled)(\"aria-expanded\", ctx.ariaExpanded)(\"aria-haspopup\", ctx.ariaHasPopup);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.fabTemplate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.fabTemplate);\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgClass, ɵngcc5.EventsOutsideAngularDirective, ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, DialListComponent];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-pos-fixed'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], FloatingActionButtonComponent.prototype, \"fixedClass\", null);\n\n  __decorate([HostBinding('class.k-pos-absolute'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], FloatingActionButtonComponent.prototype, \"absoluteClass\", null);\n\n  __decorate([HostBinding('attr.dir'), __metadata(\"design:type\", String)], FloatingActionButtonComponent.prototype, \"direction\", void 0);\n\n  __decorate([ViewChild('button', {\n    static: true\n  }), __metadata(\"design:type\", ElementRef)], FloatingActionButtonComponent.prototype, \"button\", void 0);\n\n  __decorate([ViewChild('popupTemplate', {\n    static: true\n  }), __metadata(\"design:type\", TemplateRef)], FloatingActionButtonComponent.prototype, \"popupTemplate\", void 0);\n\n  __decorate([ContentChild(DialItemTemplateDirective, {\n    static: true\n  }), __metadata(\"design:type\", DialItemTemplateDirective)], FloatingActionButtonComponent.prototype, \"dialItemTemplate\", void 0);\n\n  __decorate([ContentChild(FloatingActionButtonTemplateDirective, {\n    static: true\n  }), __metadata(\"design:type\", FloatingActionButtonTemplateDirective)], FloatingActionButtonComponent.prototype, \"fabTemplate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], FloatingActionButtonComponent.prototype, \"themeColor\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], FloatingActionButtonComponent.prototype, \"size\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], FloatingActionButtonComponent.prototype, \"shape\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], FloatingActionButtonComponent.prototype, \"disabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], FloatingActionButtonComponent.prototype, \"align\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], FloatingActionButtonComponent.prototype, \"offset\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], FloatingActionButtonComponent.prototype, \"positionMode\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], FloatingActionButtonComponent.prototype, \"icon\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], FloatingActionButtonComponent.prototype, \"iconClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], FloatingActionButtonComponent.prototype, \"buttonClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], FloatingActionButtonComponent.prototype, \"dialClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], FloatingActionButtonComponent.prototype, \"text\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], FloatingActionButtonComponent.prototype, \"dialItemAnimation\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], FloatingActionButtonComponent.prototype, \"tabIndex\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], FloatingActionButtonComponent.prototype, \"dialItems\", void 0);\n\n  __decorate([Output('blur'), __metadata(\"design:type\", EventEmitter)], FloatingActionButtonComponent.prototype, \"onBlur\", void 0);\n\n  __decorate([Output('focus'), __metadata(\"design:type\", EventEmitter)], FloatingActionButtonComponent.prototype, \"onFocus\", void 0);\n\n  __decorate([Output('dialItemClick'), __metadata(\"design:type\", EventEmitter)], FloatingActionButtonComponent.prototype, \"dialItemClick\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], FloatingActionButtonComponent.prototype, \"open\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], FloatingActionButtonComponent.prototype, \"close\", void 0);\n\n  FloatingActionButtonComponent = __decorate([__metadata(\"design:paramtypes\", [Renderer2, ElementRef, FocusService, NavigationService, NgZone, PopupService, AnimationBuilder, LocalizationService])], FloatingActionButtonComponent);\n  /**\n   * @hidden\n   */\n\n  return FloatingActionButtonComponent;\n})();\nlet DialListComponent = /*#__PURE__*/(() => {\n  let DialListComponent = class DialListComponent {\n    constructor(focusService, cdr) {\n      this.focusService = focusService;\n      this.cdr = cdr;\n      this.hostClass = true;\n      this.subscriptions = new Subscription();\n      this.subscriptions.add(this.focusService.onFocus.subscribe(() => this.cdr.detectChanges()));\n    }\n\n    get bottomClass() {\n      return this.align.vertical === 'top' || this.align.vertical === 'middle';\n    }\n\n    get topClass() {\n      return this.align.vertical === 'bottom';\n    }\n\n    isFocused(index) {\n      return this.focusService.isFocused(index);\n    }\n\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n\n  };\n\n  DialListComponent.ɵfac = function DialListComponent_Factory(t) {\n    return new (t || DialListComponent)(ɵngcc0.ɵɵdirectiveInject(FocusService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  DialListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DialListComponent,\n    selectors: [[\"\", \"kendoDialList\", \"\"]],\n    hostVars: 6,\n    hostBindings: function DialListComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-fab-items\", ctx.hostClass)(\"k-fab-items-bottom\", ctx.bottomClass)(\"k-fab-items-top\", ctx.topClass);\n      }\n    },\n    inputs: {\n      dialItems: \"dialItems\",\n      dialItemTemplate: \"dialItemTemplate\",\n      align: \"align\"\n    },\n    attrs: _c11,\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"kendoButtonFocusable\", \"\", \"kendoDialItem\", \"\", 3, \"item\", \"index\", \"dialItemTemplate\", \"isFocused\", \"ngClass\", \"ngStyle\", \"align\"]],\n    template: function DialListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, DialListComponent_ng_container_0_Template, 2, 7, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.dialItems);\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgForOf, FocusableDirective, DialItemComponent, ɵngcc2.NgClass, ɵngcc2.NgStyle];\n    },\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-fab-items'), __metadata(\"design:type\", Boolean)], DialListComponent.prototype, \"hostClass\", void 0);\n\n  __decorate([HostBinding('class.k-fab-items-bottom'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], DialListComponent.prototype, \"bottomClass\", null);\n\n  __decorate([HostBinding('class.k-fab-items-top'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], DialListComponent.prototype, \"topClass\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array)], DialListComponent.prototype, \"dialItems\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", TemplateRef)], DialListComponent.prototype, \"dialItemTemplate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DialListComponent.prototype, \"align\", void 0);\n\n  DialListComponent = __decorate([__metadata(\"design:paramtypes\", [FocusService, ChangeDetectorRef])], DialListComponent);\n  /**\n   * @hidden\n   */\n\n  return DialListComponent;\n})();\nlet DialItemComponent = /*#__PURE__*/(() => {\n  let DialItemComponent = class DialItemComponent {\n    constructor(element, renderer, localisationService) {\n      this.element = element;\n      this.renderer = renderer;\n      this.localisationService = localisationService;\n      this.hostClass = true;\n      this.role = 'menuitem';\n    }\n\n    get disabledClass() {\n      return this.item.disabled;\n    }\n\n    get title() {\n      const label = this.item.label;\n      return label ? label : this.itemTitle;\n    }\n\n    get indexAttr() {\n      return this.index;\n    }\n\n    get iconClasses() {\n      const classes = [];\n\n      if (this.item.iconClass) {\n        classes.push(`${this.item.iconClass}`);\n      }\n\n      if (this.item.icon) {\n        classes.push(`k-fab-item-icon k-icon k-i-${this.item.icon}`);\n      }\n\n      return classes;\n    }\n\n    get itemTitle() {\n      const icon = this.item.icon;\n      const itemTitle = this.item.itemTitle;\n      return icon && itemTitle ? itemTitle : icon;\n    }\n\n    ngAfterViewInit() {\n      const element = this.element.nativeElement;\n      const rtl = this.localisationService.rtl;\n      const hAlign = this.align.horizontal;\n      this.renderer.addClass(element, this.getTextDirectionClass(rtl, hAlign));\n    }\n\n    getTextDirectionClass(rtl, hAlign) {\n      const dir = rtl ? 'rtl' : 'ltr';\n      const align = hAlign === 'end' ? 'end' : 'start';\n      const directions = {\n        rtl: {\n          end: 'k-text-left',\n          start: 'k-text-right'\n        },\n        ltr: {\n          start: 'k-text-left',\n          end: 'k-text-right'\n        }\n      };\n      return directions[dir][align];\n    }\n\n  };\n\n  DialItemComponent.ɵfac = function DialItemComponent_Factory(t) {\n    return new (t || DialItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  DialItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DialItemComponent,\n    selectors: [[\"\", \"kendoDialItem\", \"\"]],\n    hostVars: 9,\n    hostBindings: function DialItemComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"aria-disabled\", ctx.disabledClass)(\"title\", ctx.title)(\"aria-label\", ctx.title)(\"data-fab-item-index\", ctx.indexAttr);\n        ɵngcc0.ɵɵclassProp(\"k-fab-item\", ctx.hostClass)(\"k-state-disabled\", ctx.disabledClass);\n      }\n    },\n    inputs: {\n      cssClass: \"cssClass\",\n      cssStyle: \"cssStyle\",\n      isFocused: \"isFocused\",\n      index: \"index\",\n      item: \"item\",\n      dialItemTemplate: \"dialItemTemplate\",\n      align: \"align\"\n    },\n    attrs: _c12,\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"k-fab-item-text\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngIf\"], [1, \"k-fab-item-text\"], [3, \"ngClass\"]],\n    template: function DialItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, DialItemComponent_0_Template, 1, 6, undefined, 0);\n        ɵngcc0.ɵɵtemplate(1, DialItemComponent_ng_container_1_Template, 3, 2, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dialItemTemplate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.dialItemTemplate);\n      }\n    },\n    directives: [ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgClass],\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-fab-item'), __metadata(\"design:type\", Boolean)], DialItemComponent.prototype, \"hostClass\", void 0);\n\n  __decorate([HostBinding('attr.role'), __metadata(\"design:type\", String)], DialItemComponent.prototype, \"role\", void 0);\n\n  __decorate([HostBinding('attr.aria-disabled'), HostBinding('class.k-state-disabled'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], DialItemComponent.prototype, \"disabledClass\", null);\n\n  __decorate([HostBinding('attr.title'), HostBinding('attr.aria-label'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], DialItemComponent.prototype, \"title\", null);\n\n  __decorate([HostBinding('attr.data-fab-item-index'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], DialItemComponent.prototype, \"indexAttr\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DialItemComponent.prototype, \"cssClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DialItemComponent.prototype, \"cssStyle\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], DialItemComponent.prototype, \"isFocused\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DialItemComponent.prototype, \"index\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DialItemComponent.prototype, \"item\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", TemplateRef)], DialItemComponent.prototype, \"dialItemTemplate\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], DialItemComponent.prototype, \"align\", void 0);\n\n  DialItemComponent = __decorate([__metadata(\"design:paramtypes\", [ElementRef, Renderer2, LocalizationService])], DialItemComponent);\n  return DialItemComponent;\n})();\nconst exportedModules$1 = [FloatingActionButtonComponent, DialItemTemplateDirective, FloatingActionButtonTemplateDirective];\nconst declarations$1 = [...exportedModules$1, DialListComponent, DialItemComponent];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the FloatingActionButton component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the FloatingActionButton module\n * import { FloatingActionButtonModule } from '@progress/kendo-angular-buttons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, FloatingActionButtonModule], // import FloatingActionButton module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * ```\n */\n\nlet FloatingActionButtonModule = /*#__PURE__*/(() => {\n  let FloatingActionButtonModule = class FloatingActionButtonModule {};\n\n  FloatingActionButtonModule.ɵfac = function FloatingActionButtonModule_Factory(t) {\n    return new (t || FloatingActionButtonModule)();\n  };\n\n  FloatingActionButtonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FloatingActionButtonModule\n  });\n  FloatingActionButtonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, PopupModule, ListModule, EventsModule]]\n  });\n  /**\n   * Represents the [NgModule]({{ site.data.urls.angular['ngmodules'] }})\n   * definition for the Buttons components.\n   *\n   * @example\n   *\n   * ```ts-no-run\n   * // Import the Buttons module\n   * import { ButtonsModule } from '@progress/kendo-angular-buttons';\n   *\n   * // The browser platform with a compiler\n   * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n   *\n   * import { NgModule } from '@angular/core';\n   *\n   * // Import the app component\n   * import { AppComponent } from './app.component';\n   *\n   * // Define the app module\n   * _@NgModule({\n   *     declarations: [AppComponent], // declare app component\n   *     imports:      [BrowserModule, ButtonsModule], // import Buttons module\n   *     bootstrap:    [AppComponent]\n   * })\n   * export class AppModule {}\n   *\n   * // Compile and launch the module\n   * platformBrowserDynamic().bootstrapModule(AppModule);\n   *\n   * ```\n   */\n\n  return FloatingActionButtonModule;\n})();\nlet ButtonsModule = /*#__PURE__*/(() => {\n  let ButtonsModule = class ButtonsModule {};\n\n  ButtonsModule.ɵfac = function ButtonsModule_Factory(t) {\n    return new (t || ButtonsModule)();\n  };\n\n  ButtonsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ButtonsModule\n  });\n  ButtonsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [ButtonGroupModule, ButtonModule, SplitButtonModule, DropDownButtonModule, ChipModule, FloatingActionButtonModule]\n  });\n  return ButtonsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ButtonModule, {\n    declarations: [ButtonDirective],\n    exports: [ButtonDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ButtonGroupModule, {\n    declarations: function () {\n      return [ButtonGroupComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonModule];\n    },\n    exports: function () {\n      return [ButtonGroupComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ListModule, {\n    declarations: function () {\n      return [ListComponent, FocusableDirective, ButtonItemTemplateDirective, TemplateContextDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [ListComponent, FocusableDirective, ButtonItemTemplateDirective, TemplateContextDirective];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SplitButtonModule, {\n    declarations: function () {\n      return [SplitButtonComponent];\n    },\n    imports: function () {\n      return [CommonModule, PopupModule, ButtonModule, ListModule];\n    },\n    exports: function () {\n      return [SplitButtonComponent, ListModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DropDownButtonModule, {\n    declarations: function () {\n      return [DropDownButtonComponent];\n    },\n    imports: function () {\n      return [CommonModule, PopupModule, ListModule, ButtonModule];\n    },\n    exports: function () {\n      return [DropDownButtonComponent, ListModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChipModule, {\n    declarations: function () {\n      return [ChipComponent, ChipListComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [ChipComponent, ChipListComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FloatingActionButtonModule, {\n    declarations: function () {\n      return [FloatingActionButtonComponent, DialItemTemplateDirective, FloatingActionButtonTemplateDirective, DialListComponent, DialItemComponent];\n    },\n    imports: function () {\n      return [CommonModule, PopupModule, ListModule, EventsModule];\n    },\n    exports: function () {\n      return [FloatingActionButtonComponent, DialItemTemplateDirective, FloatingActionButtonTemplateDirective];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ButtonsModule, {\n    exports: [ButtonGroupModule, ButtonModule, SplitButtonModule, DropDownButtonModule, ChipModule, FloatingActionButtonModule]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { KendoButtonService, DialItemComponent, DialListComponent, FocusService, FocusableDirective, ButtonItemTemplateDirective, ListButton, ListComponent, ListModule, TemplateContextDirective, NAVIGATION_CONFIG, NavigationService, ButtonDirective, ButtonDirective as Button, ButtonGroupComponent, ButtonGroupComponent as ButtonGroup, ButtonGroupModule, ButtonModule, ButtonsModule, SplitButtonComponent, SplitButtonComponent as SplitButton, SplitButtonModule, DropDownButtonComponent, DropDownButtonComponent as DropDownButton, DropDownButtonModule, ChipComponent, ChipListComponent, ChipModule, FloatingActionButtonModule, FloatingActionButtonComponent, FloatingActionButtonTemplateDirective, DialItemTemplateDirective }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}