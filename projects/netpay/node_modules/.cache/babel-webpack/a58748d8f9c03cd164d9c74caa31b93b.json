{"ast":null,"code":"export function saveAs(data, fileName, options = {}) {\n  let save = postToProxy;\n\n  if (options.forceProxy && !options.proxyURL) {\n    throw new Error('No proxyURL is set, but forceProxy is true');\n  }\n\n  if (!options.forceProxy) {\n    if (canDownload()) {\n      save = saveAsDataURI;\n    }\n\n    if (navigator.msSaveBlob) {\n      save = saveAsBlob;\n    }\n  }\n\n  save(data, fileName, options);\n}\n\nconst anchor = () => document.createElement('a');\n\nconst canDownload = () => 'download' in anchor();\n\nfunction saveAsBlob(data, fileName) {\n  let blob = data; // could be a Blob object\n\n  if (typeof data === 'string') {\n    const parts = data.split(';base64,');\n    const contentType = parts[0];\n    const base64 = atob(parts[1]);\n    const array = new Uint8Array(base64.length);\n\n    for (let idx = 0; idx < base64.length; idx++) {\n      array[idx] = base64.charCodeAt(idx);\n    }\n\n    blob = new Blob([array.buffer], {\n      type: contentType\n    });\n  }\n\n  navigator.msSaveBlob(blob, fileName);\n}\n\nfunction saveAsDataURI(data, fileName) {\n  let dataURI = data;\n\n  if (window.Blob && data instanceof Blob) {\n    dataURI = URL.createObjectURL(data);\n  }\n\n  const fileSaver = anchor();\n  fileSaver.download = fileName;\n  fileSaver.href = dataURI;\n  const e = document.createEvent('MouseEvents');\n  e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n  fileSaver.dispatchEvent(e);\n  setTimeout(() => URL.revokeObjectURL(dataURI));\n}\n\nfunction postToProxy(dataURI, fileName, options) {\n  if (!options.proxyURL) {\n    return;\n  }\n\n  const form = document.createElement('form');\n  form.setAttribute('action', options.proxyURL);\n  form.setAttribute('method', 'POST');\n  form.setAttribute('target', options.proxyTarget || '_self');\n  const formData = options.proxyData || {};\n  formData.fileName = fileName;\n  const parts = dataURI.split(\";base64,\");\n  formData.contentType = parts[0].replace(\"data:\", \"\");\n  formData.base64 = parts[1];\n\n  for (let name in formData) {\n    if (formData.hasOwnProperty(name)) {\n      const input = document.createElement('input');\n      input.setAttribute('type', 'hidden');\n      input.setAttribute('name', name);\n      input.setAttribute('value', formData[name]);\n      form.appendChild(input);\n    }\n  }\n\n  document.body.appendChild(form);\n  form.submit();\n  document.body.removeChild(form);\n}","map":null,"metadata":{},"sourceType":"module"}