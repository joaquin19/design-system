{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { __decorate, __metadata } from 'tslib';\nimport { Input, HostBinding, Directive, ElementRef, Renderer2, NgZone, forwardRef, Component, NgModule, EventEmitter, isDevMode, Output, ContentChild, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { isDocumentAvailable, guid, hasObservers, KendoInput } from '@progress/kendo-angular-common';\nimport { ComponentMessages, LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';\nimport { CommonModule } from '@angular/common';\nimport { NgControl } from '@angular/forms';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { Observable, Subscription } from 'rxjs';\n/**\n * @hidden\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@progress/kendo-angular-l10n';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction FloatingLabelComponent_label_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", ctx_r1.textFor(\"optional\"), \")\");\n  }\n}\n\nfunction FloatingLabelComponent_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵtemplate(2, FloatingLabelComponent_label_2_span_2_Template, 2, 1, \"span\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.labelCssClass)(\"ngStyle\", ctx_r0.labelCssStyle)(\"for\", ctx_r0.id);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r0.labelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.text, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.optional);\n  }\n}\n\nconst _c2 = [\"*\"];\n\nfunction LabelComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", ctx_r0.textFor(\"optional\"), \")\");\n  }\n}\n\nconst isUploadComponent = component => component.wrapper && (component.wrapper.tagName === 'KENDO-UPLOAD' || component.wrapper.tagName === 'KENDO-FILESELECT');\n/**\n * @hidden\n */\n\n\nconst isInputElement = component => component instanceof HTMLElement;\n/**\n * @hidden\n */\n\n\nconst inputElementHasAttr = (element, attribute) => element.hasAttribute(attribute);\n/**\n * @hidden\n */\n\n\nconst getWrappedNativeInput = element => element.querySelector('kendo-label > input, kendo-label > textarea, kendo-label > select');\n/**\n * @hidden\n */\n\n\nconst getRootElement = element => {\n  if (!element) {\n    return null;\n  }\n\n  let rootElement = element;\n\n  while (rootElement.parentElement) {\n    rootElement = rootElement.parentElement;\n  }\n\n  return rootElement;\n};\n/**\n * Represents the [Kendo UI Label directive for Angular]({% slug overview_label %}).\n * The Label associates a focusable Angular component or an HTML element\n * with a `label` tag by using the `[for]` property binding.\n *\n * To associate a component by using the `label` element, either:\n * * Set the `[for]` property binding to a\n * [template reference variable]({{ site.data.urls.angular['templatesyntax'] }}#template-reference-variables--var-), or\n * * Set the `[for]` property binding to an `id` HTML string value.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <div class=\"row example-wrapper\" style=\"min-height: 450px;\">\n *    <div class=\"col-xs-12 col-md-6 example-col\">\n *      <label [for]=\"datepicker\">DatePicker: </label>\n *      <kendo-datepicker #datepicker></kendo-datepicker>\n *    </div>\n *\n *    <div class=\"col-xs-12 col-md-6 example-col\">\n *      <label for=\"input\">Input: </label>\n *      <input id=\"input\" />\n *    </div>\n *  </div>\n * `\n * })\n * class AppComponent { }\n * ```\n */\n\n\nlet LabelDirective = /*#__PURE__*/(() => {\n  let LabelDirective = class LabelDirective {\n    constructor(label, renderer, zone) {\n      this.label = label;\n      this.renderer = renderer;\n      this.zone = zone;\n      this.labelClass = true;\n\n      this.handleClick = () => {\n        const component = this.getFocusableComponent();\n\n        if (!component) {\n          return;\n        }\n\n        if (isUploadComponent(component)) {\n          component.fileSelect.nativeElement.click();\n        }\n\n        if (component.focus) {\n          component.focus();\n        }\n      };\n    }\n\n    get labelFor() {\n      if (typeof this.for === 'string') {\n        return this.for;\n      }\n\n      if (!isDocumentAvailable()) {\n        return null;\n      }\n\n      const component = this.getFocusableComponent() || {};\n\n      if (isInputElement(component) && !inputElementHasAttr(component, 'id')) {\n        this.renderer.setAttribute(component, 'id', `k-${guid()}`);\n      }\n\n      return component.focusableId || component.id || null;\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngAfterViewInit() {\n      this.setAriaLabelledby();\n      this.zone.runOutsideAngular(() => this.clickListener = this.renderer.listen(this.label.nativeElement, 'click', this.handleClick));\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnDestroy() {\n      if (this.clickListener) {\n        this.clickListener();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    setAriaLabelledby() {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      const component = this.getFocusableComponent();\n\n      if (component && component.focusableId) {\n        const rootElement = getRootElement(this.label.nativeElement);\n        const labelTarget = rootElement.querySelector(`#${component.focusableId}`);\n\n        if (!labelTarget) {\n          return;\n        }\n\n        const labelElement = this.label.nativeElement;\n        const id = labelElement.id || `k-${guid()}`;\n\n        if (!labelElement.getAttribute('id')) {\n          this.renderer.setAttribute(labelElement, 'id', id);\n        }\n\n        this.renderer.setAttribute(labelTarget, 'aria-labelledby', id);\n      }\n    }\n\n    getFocusableComponent() {\n      const target = this.for;\n      return target && target.focus !== undefined ? target : null;\n    }\n\n  };\n\n  LabelDirective.ɵfac = function LabelDirective_Factory(t) {\n    return new (t || LabelDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  LabelDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: LabelDirective,\n    selectors: [[\"label\", \"for\", \"\"]],\n    hostVars: 3,\n    hostBindings: function LabelDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"for\", ctx.labelFor);\n        ɵngcc0.ɵɵclassProp(\"k-label\", ctx.labelClass);\n      }\n    },\n    inputs: {\n      for: \"for\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], LabelDirective.prototype, \"for\", void 0);\n\n  __decorate([HostBinding('attr.for'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], LabelDirective.prototype, \"labelFor\", null);\n\n  __decorate([HostBinding('class.k-label'), __metadata(\"design:type\", Boolean)], LabelDirective.prototype, \"labelClass\", void 0);\n\n  LabelDirective = __decorate([__metadata(\"design:paramtypes\", [ElementRef, Renderer2, NgZone])], LabelDirective);\n  /**\n   * @hidden\n   */\n\n  return LabelDirective;\n})();\nlet Messages = /*#__PURE__*/(() => {\n  class Messages extends ComponentMessages {}\n\n  Messages.ɵfac = /*@__PURE__*/function () {\n    let ɵMessages_BaseFactory;\n    return function Messages_Factory(t) {\n      return (ɵMessages_BaseFactory || (ɵMessages_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(Messages)))(t || Messages);\n    };\n  }();\n\n  Messages.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: Messages,\n    inputs: {\n      optional: \"optional\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String)], Messages.prototype, \"optional\", void 0);\n\n  return Messages;\n})();\nvar LocalizedMessagesDirective_1;\n/**\n * @hidden\n */\n\nlet LocalizedMessagesDirective = LocalizedMessagesDirective_1 = class LocalizedMessagesDirective extends Messages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n};\n\nLocalizedMessagesDirective.ɵfac = function LocalizedMessagesDirective_Factory(t) {\n  return new (t || LocalizedMessagesDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nLocalizedMessagesDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: LocalizedMessagesDirective,\n  selectors: [[\"\", \"kendoLabelLocalizedMessages\", \"\"], [\"\", \"kendoFloatingLabelLocalizedMessages\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(() => LocalizedMessagesDirective_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nLocalizedMessagesDirective = LocalizedMessagesDirective_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], LocalizedMessagesDirective);\nvar CustomMessagesComponent_1;\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug label_globalization %}#toc-localization)).\n */\n\nlet CustomMessagesComponent = CustomMessagesComponent_1 = class CustomMessagesComponent extends Messages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n  get override() {\n    return true;\n  }\n\n};\n\nCustomMessagesComponent.ɵfac = function CustomMessagesComponent_Factory(t) {\n  return new (t || CustomMessagesComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n};\n\nCustomMessagesComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CustomMessagesComponent,\n  selectors: [[\"kendo-label-messages\"], [\"kendo-floatinglabel-messages\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(() => CustomMessagesComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function CustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nCustomMessagesComponent = CustomMessagesComponent_1 = __decorate([__metadata(\"design:paramtypes\", [LocalizationService])], CustomMessagesComponent);\nconst SHARED_DIRECTIVES = [LocalizedMessagesDirective, CustomMessagesComponent];\n/**\n * @hidden\n */\n\nlet SharedDirectivesModule = /*#__PURE__*/(() => {\n  let SharedDirectivesModule = class SharedDirectivesModule {};\n\n  SharedDirectivesModule.ɵfac = function SharedDirectivesModule_Factory(t) {\n    return new (t || SharedDirectivesModule)();\n  };\n\n  SharedDirectivesModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: SharedDirectivesModule\n  });\n  SharedDirectivesModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  /**\n   * @hidden\n   */\n\n  return SharedDirectivesModule;\n})();\nconst packageMetadata = {\n  name: '@progress/kendo-angular-label',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1626799912,\n  version: '',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n};\n/**\n * @hidden\n */\n\nclass FloatingLabelInputAdapter {\n  constructor(component, formControl) {\n    this.component = component;\n\n    const isObservableOrEventEmitter = event => event instanceof Observable || event instanceof EventEmitter;\n\n    if (isObservableOrEventEmitter(component.onFocus)) {\n      this.onFocus = component.onFocus;\n    }\n\n    if (isObservableOrEventEmitter(component.autoFillStart)) {\n      this.autoFillStart = component.autoFillStart;\n    }\n\n    if (isObservableOrEventEmitter(component.autoFillEnd)) {\n      this.autoFillEnd = component.autoFillEnd;\n    }\n\n    if (isObservableOrEventEmitter(component.onBlur)) {\n      this.onBlur = component.onBlur;\n    }\n\n    if (formControl) {\n      this.onValueChange = formControl.valueChanges;\n    } else if (component.onValueChange) {\n      this.onValueChange = component.onValueChange;\n    }\n  }\n\n  get focusableId() {\n    const component = this.component;\n\n    if ('focusableId' in component) {\n      return component.focusableId;\n    } else if ('id' in component) {\n      return component.id;\n    }\n\n    return \"\";\n  }\n\n  set focusableId(value) {\n    const component = this.component;\n\n    if ('focusableId' in component) {\n      component.focusableId = value;\n    } else if ('id' in component) {\n      component.id = value;\n    }\n  }\n\n}\n\nconst isFunction = x => Object.prototype.toString.call(x) === '[object Function]';\n/**\n * Represents the [Kendo UI FloatingLabel component for Angular]({% slug overview_floatinglabel %}).\n * Provides floating labels to `input` elements.\n *\n * The FloatingLabel supports both Template and Reactive Forms and\n * [can contain Kendo UI for Angular Input components such as `kendo-combobox` and `kendo-numerictextbox`,\n * or HTML Input elements with the `kendoTextBox` directive applied]({% slug overview_floatinglabel %}#toc-implementing-floating-labels).\n *\n * @example\n * ```ts\n *\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *     <kendo-floatinglabel text=\"First name\">\n *       <input [(ngModel)]=\"name\" kendoTextBox />\n *     </kendo-floatinglabel>\n *   `\n * })\n * class AppComponent {\n *     public name = 'John';\n * }\n *\n * ```\n */\n\n\nlet FloatingLabelComponent = /*#__PURE__*/(() => {\n  let FloatingLabelComponent = class FloatingLabelComponent {\n    constructor(elementRef, renderer, changeDetectorRef, localization) {\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this.changeDetectorRef = changeDetectorRef;\n      this.localization = localization;\n      this.hostClasses = true;\n      /**\n       * Fires after the floating label position is changed.\n       */\n\n      this.positionChange = new EventEmitter();\n      /**\n       * @hidden\n       */\n\n      this.focused = false;\n      /**\n       * @hidden\n       */\n\n      this.empty = true;\n      /**\n       * @hidden\n       */\n\n      this.invalid = false;\n      /**\n       * @hidden\n       */\n\n      this.labelId = `k-${guid()}`;\n      this.autoFillStarted = false;\n      validatePackage(packageMetadata);\n      this.direction = localization.rtl ? 'rtl' : 'ltr';\n      this.renderer.removeAttribute(this.elementRef.nativeElement, \"id\");\n    }\n    /**\n     * Represents the current floating label position.\n     */\n\n\n    get labelPosition() {\n      if (!this.empty) {\n        return 'Out';\n      }\n\n      return this.focused ? 'Out' : 'In';\n    }\n\n    get focusedClass() {\n      return this.focused;\n    }\n\n    get invalidClass() {\n      return this.invalid;\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngAfterContentInit() {\n      this.validateSetup();\n      const control = new FloatingLabelInputAdapter(this.kendoInput || this.formControl.valueAccessor, this.formControl);\n      this.addHandlers(control);\n      this.setLabelFor(control);\n    }\n\n    ngAfterViewInit() {\n      if (this.kendoInput) {\n        this.setAriaLabelledby(this.kendoInput);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    textFor(key) {\n      return this.localization.get(key);\n    }\n\n    subscribe(control, eventName, handler) {\n      if (control[eventName] instanceof EventEmitter) {\n        const subscription = control[eventName].subscribe(handler);\n\n        if (!this.subscription) {\n          this.subscription = subscription;\n        } else {\n          this.subscription.add(subscription);\n        }\n      }\n    }\n\n    updateState() {\n      const empty = value => {\n        // zero is not an empty value (e.g., NumericTextBox)\n        if (value === 0 || value === false) {\n          return false;\n        } // empty arrays are an empty value (e.g., MultiSelect)\n\n\n        if (Array.isArray(value) && !value.length) {\n          return true;\n        }\n\n        return !value;\n      };\n\n      const formControl = this.formControl;\n\n      if (formControl) {\n        const valueAccessor = formControl.valueAccessor;\n\n        if (isFunction(valueAccessor.isEmpty)) {\n          this.empty = valueAccessor.isEmpty();\n        } else {\n          this.empty = empty(formControl.value);\n        }\n\n        this.invalid = formControl.invalid && (formControl.touched || formControl.dirty);\n      } else {\n        this.empty = isFunction(this.kendoInput.isEmpty) ? this.kendoInput.isEmpty() : empty(this.kendoInput.value);\n      }\n\n      if (this.empty) {\n        this.renderer.addClass(this.elementRef.nativeElement, 'k-state-empty');\n      } else {\n        this.renderer.removeClass(this.elementRef.nativeElement, 'k-state-empty');\n      }\n\n      this.changeDetectorRef.markForCheck();\n    }\n\n    setAriaLabelledby(component) {\n      const componentId = component.focusableId || component.id;\n\n      if (componentId) {\n        const focusableElement = this.elementRef.nativeElement.querySelector(`#${componentId}`);\n        this.renderer.setAttribute(focusableElement, 'aria-labelledby', this.labelId);\n      }\n    }\n\n    setLabelFor(control) {\n      const controlId = control.focusableId || control.id;\n\n      if (this.id && controlId) {\n        // input wins\n        this.id = controlId;\n      } else if (this.id) {\n        control.focusableId = this.id;\n      } else if (controlId) {\n        this.id = controlId;\n      } else {\n        const id = `k-${guid()}`;\n        control.focusableId = id;\n        this.id = id;\n      }\n    }\n\n    handleAutofill(control) {\n      this.subscribe(control, 'autoFillStart', () => {\n        this.autoFillStarted = true;\n        this.renderer.removeClass(this.elementRef.nativeElement, 'k-state-empty');\n      });\n      this.subscribe(control, 'autoFillEnd', () => {\n        if (this.autoFillStarted) {\n          this.autoFillStarted = false;\n\n          if (this.empty) {\n            this.renderer.addClass(this.elementRef.nativeElement, 'k-state-empty');\n          }\n        }\n      });\n    }\n\n    addHandlers(control) {\n      const setFocus = isFocused => () => {\n        this.focused = isFocused;\n        this.updateState();\n\n        if (!this.empty) {\n          return;\n        }\n\n        if (hasObservers(this.positionChange)) {\n          this.positionChange.emit(isFocused ? 'Out' : 'In');\n        }\n      };\n\n      this.subscribe(control, 'onFocus', setFocus(true));\n      this.subscribe(control, 'onBlur', setFocus(false));\n      this.handleAutofill(control);\n\n      const updateState = () => this.updateState();\n\n      updateState();\n      this.subscribe(control, 'onValueChange', updateState);\n    }\n\n    validateSetup() {\n      if (!this.formControl && !this.kendoInput) {\n        if (isDevMode()) {\n          throw new Error(\"The FloatingLabelComponent requires a Kendo Input component\" + \" or a forms-bound component to function properly.\");\n        }\n\n        return;\n      }\n    }\n\n  };\n\n  FloatingLabelComponent.ɵfac = function FloatingLabelComponent_Factory(t) {\n    return new (t || FloatingLabelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  FloatingLabelComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FloatingLabelComponent,\n    selectors: [[\"kendo-floatinglabel\"]],\n    contentQueries: function FloatingLabelComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, KendoInput, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgControl, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.kendoInput = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.formControl = _t.first);\n      }\n    },\n    hostVars: 7,\n    hostBindings: function FloatingLabelComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx.direction);\n        ɵngcc0.ɵɵclassProp(\"k-floating-label-container\", ctx.hostClasses)(\"k-state-focused\", ctx.focusedClass)(\"k-state-invalid\", ctx.invalidClass);\n      }\n    },\n    inputs: {\n      id: \"id\",\n      labelCssStyle: \"labelCssStyle\",\n      labelCssClass: \"labelCssClass\",\n      text: \"text\",\n      optional: \"optional\"\n    },\n    outputs: {\n      positionChange: \"positionChange\"\n    },\n    exportAs: [\"kendoFloatingLabel\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([LocalizationService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.floatinglabel'\n    }])],\n    ngContentSelectors: _c2,\n    decls: 3,\n    vars: 1,\n    consts: function () {\n      let i18n_0;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text for the optional segment of a FloatingLabel component\n         * @meaning kendo.floatinglabel.optional\n         */\n        const MSG_EXTERNAL_356911862062553631$$DIST_FESM2015_INDEX_JS_1 = goog.getMsg(\"Optional\");\n        i18n_0 = MSG_EXTERNAL_356911862062553631$$DIST_FESM2015_INDEX_JS_1;\n      } else {\n        i18n_0 = $localize`:kendo.floatinglabel.optional|The text for the optional segment of a FloatingLabel component␟d6b1dd6fb7530bd600b430042425d10b22163d1f␟356911862062553631:Optional`;\n      }\n\n      return [[\"kendoFloatingLabelLocalizedMessages\", \"\", \"optional\", i18n_0], [\"class\", \"k-label\", 3, \"ngClass\", \"ngStyle\", \"for\", 4, \"ngIf\"], [1, \"k-label\", 3, \"ngClass\", \"ngStyle\", \"for\"], [\"class\", \"k-label-optional\", 4, \"ngIf\"], [1, \"k-label-optional\"]];\n    },\n    template: function FloatingLabelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementContainer(0, 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵtemplate(2, FloatingLabelComponent_label_2_Template, 3, 6, \"label\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.text);\n      }\n    },\n    directives: [LocalizedMessagesDirective, ɵngcc2.NgIf, ɵngcc2.NgClass, ɵngcc2.NgStyle],\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('class.k-floating-label-container'), __metadata(\"design:type\", Boolean)], FloatingLabelComponent.prototype, \"hostClasses\", void 0);\n\n  __decorate([HostBinding('class.k-state-focused'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], FloatingLabelComponent.prototype, \"focusedClass\", null);\n\n  __decorate([HostBinding('class.k-state-invalid'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], FloatingLabelComponent.prototype, \"invalidClass\", null);\n\n  __decorate([HostBinding('attr.dir'), __metadata(\"design:type\", String)], FloatingLabelComponent.prototype, \"direction\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], FloatingLabelComponent.prototype, \"labelCssStyle\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], FloatingLabelComponent.prototype, \"labelCssClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], FloatingLabelComponent.prototype, \"id\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], FloatingLabelComponent.prototype, \"text\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], FloatingLabelComponent.prototype, \"optional\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], FloatingLabelComponent.prototype, \"positionChange\", void 0);\n\n  __decorate([ContentChild(KendoInput, {\n    static: false\n  }), __metadata(\"design:type\", Object)], FloatingLabelComponent.prototype, \"kendoInput\", void 0);\n\n  __decorate([ContentChild(NgControl, {\n    static: false\n  }), __metadata(\"design:type\", NgControl)], FloatingLabelComponent.prototype, \"formControl\", void 0);\n\n  FloatingLabelComponent = __decorate([__metadata(\"design:paramtypes\", [ElementRef, Renderer2, ChangeDetectorRef, LocalizationService])], FloatingLabelComponent);\n  return FloatingLabelComponent;\n})();\nconst COMPONENT_DIRECTIVES = [FloatingLabelComponent];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the TextBox directive.\n *\n * @example\n *\n * ```ts-no-run\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, FloatingLabelModule], // import FloatingLabel module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\nlet FloatingLabelModule = /*#__PURE__*/(() => {\n  let FloatingLabelModule = class FloatingLabelModule {};\n\n  FloatingLabelModule.ɵfac = function FloatingLabelModule_Factory(t) {\n    return new (t || FloatingLabelModule)();\n  };\n\n  FloatingLabelModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FloatingLabelModule\n  });\n  FloatingLabelModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, SharedDirectivesModule], SharedDirectivesModule]\n  });\n  /**\n   * Represents the [Kendo UI Label component for Angular]({% slug label_basic %}).\n   *\n   * Associates a label with input elements or components.\n   *\n   * @example\n   * ```ts\n   *\n   * _@Component({\n   *   selector: 'my-app',\n   *   template: `\n   *     <kendo-label [for]=\"input\" text=\"First name\">\n   *       <input [(ngModel)]=\"name\" kendoTextBox #input />\n   *     </kendo-label>\n   *   `\n   * })\n   * class AppComponent {\n   *     public name = 'John';\n   * }\n   *\n   * ```\n   */\n\n  return FloatingLabelModule;\n})();\nlet LabelComponent = /*#__PURE__*/(() => {\n  let LabelComponent = class LabelComponent {\n    constructor(elementRef, renderer, localization) {\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this.localization = localization;\n      this.subscriptions = new Subscription();\n      validatePackage(packageMetadata);\n      this.direction = localization.rtl ? 'rtl' : 'ltr';\n      this.renderer.removeAttribute(this.elementRef.nativeElement, 'id');\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngAfterContentInit() {\n      if (this.for) {\n        this.control = this.for;\n        return;\n      }\n\n      const wrappedNativeInput = getWrappedNativeInput(this.elementRef.nativeElement);\n\n      if (wrappedNativeInput) {\n        if (!wrappedNativeInput.hasAttribute('id')) {\n          this.renderer.setAttribute(wrappedNativeInput, 'id', `k-${guid()}`);\n        }\n\n        this.control = wrappedNativeInput;\n        return;\n      }\n\n      this.control = this.kendoInput;\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnInit() {\n      this.subscriptions.add(this.localization.changes.subscribe(({\n        rtl\n      }) => {\n        this.direction = rtl ? 'rtl' : 'ltr';\n      }));\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngAfterViewInit() {\n      this.labelDirective.setAriaLabelledby();\n    }\n    /**\n     * @hidden\n     */\n\n\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n\n    textFor(key) {\n      return this.localization.get(key);\n    }\n\n  };\n\n  LabelComponent.ɵfac = function LabelComponent_Factory(t) {\n    return new (t || LabelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalizationService));\n  };\n\n  LabelComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LabelComponent,\n    selectors: [[\"kendo-label\"]],\n    contentQueries: function LabelComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, KendoInput, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.kendoInput = _t.first);\n      }\n    },\n    viewQuery: function LabelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(LabelDirective, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.labelDirective = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function LabelComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx.direction);\n      }\n    },\n    inputs: {\n      text: \"text\",\n      for: \"for\",\n      optional: \"optional\"\n    },\n    exportAs: [\"kendoLabel\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([LocalizationService, {\n      provide: L10N_PREFIX,\n      useValue: 'kendo.label'\n    }])],\n    ngContentSelectors: _c2,\n    decls: 5,\n    vars: 5,\n    consts: function () {\n      let i18n_3;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc The text for the optional segment of a Label component\n         * @meaning kendo.label.optional\n         */\n        const MSG_EXTERNAL_3476218486854814180$$DIST_FESM2015_INDEX_JS_4 = goog.getMsg(\"Optional\");\n        i18n_3 = MSG_EXTERNAL_3476218486854814180$$DIST_FESM2015_INDEX_JS_4;\n      } else {\n        i18n_3 = $localize`:kendo.label.optional|The text for the optional segment of a Label component␟a1cd4a8f359a22151d7e73f2887fbb2967cd389a␟3476218486854814180:Optional`;\n      }\n\n      return [[\"kendoLabelLocalizedMessages\", \"\", \"optional\", i18n_3], [3, \"for\"], [\"class\", \"k-label-optional\", 4, \"ngIf\"], [1, \"k-label-optional\"]];\n    },\n    template: function LabelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementContainer(0, 0);\n        ɵngcc0.ɵɵelementStart(1, \"label\", 1);\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵtemplate(3, LabelComponent_span_3_Template, 2, 1, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(4);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"k-label-empty\", !ctx.text);\n        ɵngcc0.ɵɵproperty(\"for\", ctx.control);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.text, \"\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optional);\n      }\n    },\n    directives: [LocalizedMessagesDirective, LabelDirective, ɵngcc2.NgIf],\n    encapsulation: 2\n  });\n\n  __decorate([HostBinding('attr.dir'), __metadata(\"design:type\", String)], LabelComponent.prototype, \"direction\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], LabelComponent.prototype, \"text\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], LabelComponent.prototype, \"for\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], LabelComponent.prototype, \"optional\", void 0);\n\n  __decorate([ViewChild(LabelDirective, {\n    static: true\n  }), __metadata(\"design:type\", LabelDirective)], LabelComponent.prototype, \"labelDirective\", void 0);\n\n  __decorate([ContentChild(KendoInput, {\n    static: true\n  }), __metadata(\"design:type\", Object)], LabelComponent.prototype, \"kendoInput\", void 0);\n\n  LabelComponent = __decorate([__metadata(\"design:paramtypes\", [ElementRef, Renderer2, LocalizationService])], LabelComponent);\n  return LabelComponent;\n})();\nconst COMPONENT_DIRECTIVES$1 = [LabelDirective, LabelComponent];\n/**\n * The exported package module.\n *\n * The package exports:\n * - `LabelDirective`&mdash;The Label directive class.\n * - `LabelComponent`&mdash;The Label component class\n * - `FLoatingLabel`&mdash;The FloatingLabel component class.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Label module\n * import { LabelModule } from '@progress/kendo-angular-label';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, LabelModule], // import Label module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\nlet LabelModule = /*#__PURE__*/(() => {\n  let LabelModule = class LabelModule {};\n\n  LabelModule.ɵfac = function LabelModule_Factory(t) {\n    return new (t || LabelModule)();\n  };\n\n  LabelModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: LabelModule\n  });\n  LabelModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, SharedDirectivesModule], FloatingLabelModule, SharedDirectivesModule]\n  });\n  return LabelModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SharedDirectivesModule, {\n    declarations: [LocalizedMessagesDirective, CustomMessagesComponent],\n    exports: [LocalizedMessagesDirective, CustomMessagesComponent]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FloatingLabelModule, {\n    declarations: function () {\n      return [FloatingLabelComponent];\n    },\n    imports: function () {\n      return [CommonModule, SharedDirectivesModule];\n    },\n    exports: function () {\n      return [FloatingLabelComponent, SharedDirectivesModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LabelModule, {\n    declarations: function () {\n      return [LabelDirective, LabelComponent];\n    },\n    imports: function () {\n      return [CommonModule, SharedDirectivesModule];\n    },\n    exports: function () {\n      return [LabelDirective, LabelComponent, FloatingLabelModule, SharedDirectivesModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { LocalizedMessagesDirective, Messages, SharedDirectivesModule, LabelDirective, LabelModule, FloatingLabelModule, FloatingLabelComponent, LabelComponent, CustomMessagesComponent }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}